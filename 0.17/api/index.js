Index.PACKAGES = {"laika.helium" : [{"name" : "laika.helium.Helium", "shortDescription" : "Configuration API for the Helium theme settings.", "object" : "laika\/helium\/Helium$.html", "members_class" : [{"label" : "build", "tail" : "(): ThemeProvider", "member" : "laika.helium.Helium.build", "link" : "laika\/helium\/Helium.html#build:laika.theme.ThemeProvider", "kind" : "def"}, {"label" : "all", "tail" : "", "member" : "laika.helium.Helium.all", "link" : "laika\/helium\/Helium.html#all", "kind" : "object"}, {"label" : "pdf", "tail" : "", "member" : "laika.helium.Helium.pdf", "link" : "laika\/helium\/Helium.html#pdf", "kind" : "object"}, {"label" : "epub", "tail" : "", "member" : "laika.helium.Helium.epub", "link" : "laika\/helium\/Helium.html#epub", "kind" : "object"}, {"label" : "site", "tail" : "", "member" : "laika.helium.Helium.site", "link" : "laika\/helium\/Helium.html#site", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/helium\/Helium.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/helium\/Helium.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/helium\/Helium.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/helium\/Helium.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/helium\/Helium.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/helium\/Helium.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/helium\/Helium.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/Helium.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/Helium.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/Helium.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/helium\/Helium.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/helium\/Helium.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/helium\/Helium.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/helium\/Helium.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/helium\/Helium.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/helium\/Helium.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/helium\/Helium.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/helium\/Helium.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/helium\/Helium.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "defaults", "tail" : ": Helium", "member" : "laika.helium.Helium.defaults", "link" : "laika\/helium\/Helium$.html#defaults:laika.helium.Helium", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/helium\/Helium$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/helium\/Helium$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/helium\/Helium$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/helium\/Helium$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/helium\/Helium$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/helium\/Helium$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/helium\/Helium$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/Helium$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/Helium$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/Helium$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/helium\/Helium$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/helium\/Helium$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/helium\/Helium$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/helium\/Helium$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/helium\/Helium$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/helium\/Helium$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/helium\/Helium$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/helium\/Helium$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/helium\/Helium$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/helium\/Helium.html", "kind" : "class"}], "laika.io.runtime" : [{"name" : "laika.io.runtime.BatchRuntime", "shortDescription" : "Utility for explicitly producing a batch of operations as an optimization stepover relying solely on the thread pool.", "object" : "laika\/io\/runtime\/BatchRuntime$.html", "members_object" : [{"label" : "createBatches", "tail" : "(ops: Vector[F[A]], parallelism: Int)(arg0: Applicative[F]): Vector[F[Vector[A]]]", "member" : "laika.io.runtime.BatchRuntime.createBatches", "link" : "laika\/io\/runtime\/BatchRuntime$.html#createBatches[F[_],A](ops:Vector[F[A]],parallelism:Int)(implicitevidence$1:cats.Applicative[F]):Vector[F[Vector[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/runtime\/BatchRuntime$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/runtime\/BatchRuntime$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/runtime\/BatchRuntime$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/runtime\/BatchRuntime$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/runtime\/BatchRuntime$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/runtime\/BatchRuntime$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/runtime\/BatchRuntime$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/BatchRuntime$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/BatchRuntime$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/BatchRuntime$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/runtime\/BatchRuntime$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/runtime\/BatchRuntime$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/runtime\/BatchRuntime$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/runtime\/BatchRuntime$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/runtime\/BatchRuntime$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/runtime\/BatchRuntime$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/runtime\/BatchRuntime$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/runtime\/BatchRuntime$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/runtime\/BatchRuntime$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.io.runtime.CopyRuntime", "shortDescription" : "Internal runtime for copying bytes from an InputStream to an OutputStream.", "object" : "laika\/io\/runtime\/CopyRuntime$.html", "members_object" : [{"label" : "copy", "tail" : "(input: Resource[F, InputStream], output: Resource[F, OutputStream])(arg0: Sync[F], arg1: Runtime[F]): F[Unit]", "member" : "laika.io.runtime.CopyRuntime.copy", "link" : "laika\/io\/runtime\/CopyRuntime$.html#copy[F[_]](input:cats.effect.Resource[F,java.io.InputStream],output:cats.effect.Resource[F,java.io.OutputStream])(implicitevidence$3:cats.effect.Sync[F],implicitevidence$4:laika.io.runtime.Runtime[F]):F[Unit]", "kind" : "def"}, {"label" : "copy", "tail" : "(input: InputStream, output: OutputStream)(arg0: Sync[F], arg1: Runtime[F]): F[Unit]", "member" : "laika.io.runtime.CopyRuntime.copy", "link" : "laika\/io\/runtime\/CopyRuntime$.html#copy[F[_]](input:java.io.InputStream,output:java.io.OutputStream)(implicitevidence$1:cats.effect.Sync[F],implicitevidence$2:laika.io.runtime.Runtime[F]):F[Unit]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/runtime\/CopyRuntime$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/runtime\/CopyRuntime$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/runtime\/CopyRuntime$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/runtime\/CopyRuntime$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/runtime\/CopyRuntime$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/runtime\/CopyRuntime$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/runtime\/CopyRuntime$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/CopyRuntime$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/CopyRuntime$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/CopyRuntime$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/runtime\/CopyRuntime$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/runtime\/CopyRuntime$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/runtime\/CopyRuntime$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/runtime\/CopyRuntime$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/runtime\/CopyRuntime$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/runtime\/CopyRuntime$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/runtime\/CopyRuntime$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/runtime\/CopyRuntime$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/runtime\/CopyRuntime$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.io.runtime.DirectoryScanner", "shortDescription" : "Scans a directory in the file system and transforms it into a generic InputCollectionthat can serve as input for parallel parsers or transformers.", "object" : "laika\/io\/runtime\/DirectoryScanner$.html", "members_object" : [{"label" : "JIteratorWrapper", "tail" : "", "member" : "laika.io.runtime.DirectoryScanner.JIteratorWrapper", "link" : "laika\/io\/runtime\/DirectoryScanner$.html#JIteratorWrapper[A]extendsAbstractIterator[A]withIterator[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "scanDirectories", "tail" : "(input: DirectoryInput)(arg0: Sync[F]): F[InputTree[F]]", "member" : "laika.io.runtime.DirectoryScanner.scanDirectories", "link" : "laika\/io\/runtime\/DirectoryScanner$.html#scanDirectories[F[_]](input:laika.io.model.DirectoryInput)(implicitevidence$1:cats.effect.Sync[F]):F[laika.io.model.InputTree[F]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/runtime\/DirectoryScanner$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/runtime\/DirectoryScanner$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/runtime\/DirectoryScanner$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/runtime\/DirectoryScanner$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/runtime\/DirectoryScanner$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/runtime\/DirectoryScanner$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/runtime\/DirectoryScanner$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/DirectoryScanner$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/DirectoryScanner$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/DirectoryScanner$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/runtime\/DirectoryScanner$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/runtime\/DirectoryScanner$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/runtime\/DirectoryScanner$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/runtime\/DirectoryScanner$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/runtime\/DirectoryScanner$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/runtime\/DirectoryScanner$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/runtime\/DirectoryScanner$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/runtime\/DirectoryScanner$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/runtime\/DirectoryScanner$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.io.runtime.InputRuntime", "shortDescription" : "Internal runtime for creating and reading from InputStreams.", "object" : "laika\/io\/runtime\/InputRuntime$.html", "members_object" : [{"label" : "textStreamResource", "tail" : "(inputStream: F[InputStream], codec: Codec, autoClose: Boolean)(arg0: Sync[F]): Resource[F, Reader]", "member" : "laika.io.runtime.InputRuntime.textStreamResource", "link" : "laika\/io\/runtime\/InputRuntime$.html#textStreamResource[F[_]](inputStream:F[java.io.InputStream],codec:scala.io.Codec,autoClose:Boolean)(implicitevidence$7:cats.effect.Sync[F]):cats.effect.Resource[F,java.io.Reader]", "kind" : "def"}, {"label" : "textFileResource", "tail" : "(file: File, codec: Codec)(arg0: Sync[F]): Resource[F, Reader]", "member" : "laika.io.runtime.InputRuntime.textFileResource", "link" : "laika\/io\/runtime\/InputRuntime$.html#textFileResource[F[_]](file:java.io.File,codec:scala.io.Codec)(implicitevidence$6:cats.effect.Sync[F]):cats.effect.Resource[F,java.io.Reader]", "kind" : "def"}, {"label" : "binaryFileResource", "tail" : "(file: File)(arg0: Sync[F]): Resource[F, InputStream]", "member" : "laika.io.runtime.InputRuntime.binaryFileResource", "link" : "laika\/io\/runtime\/InputRuntime$.html#binaryFileResource[F[_]](file:java.io.File)(implicitevidence$5:cats.effect.Sync[F]):cats.effect.Resource[F,java.io.InputStream]", "kind" : "def"}, {"label" : "readAll", "tail" : "(reader: Reader, sizeHint: Int)(arg0: Sync[F], arg1: Runtime[F]): F[String]", "member" : "laika.io.runtime.InputRuntime.readAll", "link" : "laika\/io\/runtime\/InputRuntime$.html#readAll[F[_]](reader:java.io.Reader,sizeHint:Int)(implicitevidence$3:cats.effect.Sync[F],implicitevidence$4:laika.io.runtime.Runtime[F]):F[String]", "kind" : "def"}, {"label" : "readParserInput", "tail" : "(doc: TextInput[F])(arg0: Sync[F], arg1: Runtime[F]): F[DocumentInput]", "member" : "laika.io.runtime.InputRuntime.readParserInput", "link" : "laika\/io\/runtime\/InputRuntime$.html#readParserInput[F[_]](doc:laika.io.model.TextInput[F])(implicitevidence$1:cats.effect.Sync[F],implicitevidence$2:laika.io.runtime.Runtime[F]):F[laika.parse.markup.DocumentParser.DocumentInput]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/runtime\/InputRuntime$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/runtime\/InputRuntime$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/runtime\/InputRuntime$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/runtime\/InputRuntime$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/runtime\/InputRuntime$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/runtime\/InputRuntime$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/runtime\/InputRuntime$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/InputRuntime$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/InputRuntime$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/InputRuntime$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/runtime\/InputRuntime$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/runtime\/InputRuntime$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/runtime\/InputRuntime$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/runtime\/InputRuntime$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/runtime\/InputRuntime$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/runtime\/InputRuntime$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/runtime\/InputRuntime$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/runtime\/InputRuntime$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/runtime\/InputRuntime$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.io.runtime.OutputRuntime", "shortDescription" : "Internal runtime for creating and writing to OutputStreams.", "object" : "laika\/io\/runtime\/OutputRuntime$.html", "members_object" : [{"label" : "binaryStreamResource", "tail" : "(stream: F[OutputStream], autoClose: Boolean)(arg0: Sync[F]): Resource[F, OutputStream]", "member" : "laika.io.runtime.OutputRuntime.binaryStreamResource", "link" : "laika\/io\/runtime\/OutputRuntime$.html#binaryStreamResource[F[_]](stream:F[java.io.OutputStream],autoClose:Boolean)(implicitevidence$7:cats.effect.Sync[F]):cats.effect.Resource[F,java.io.OutputStream]", "kind" : "def"}, {"label" : "binaryFileResource", "tail" : "(file: File)(arg0: Sync[F]): Resource[F, OutputStream]", "member" : "laika.io.runtime.OutputRuntime.binaryFileResource", "link" : "laika\/io\/runtime\/OutputRuntime$.html#binaryFileResource[F[_]](file:java.io.File)(implicitevidence$6:cats.effect.Sync[F]):cats.effect.Resource[F,java.io.OutputStream]", "kind" : "def"}, {"label" : "textStreamResource", "tail" : "(stream: F[OutputStream], codec: Codec, autoClose: Boolean)(arg0: Sync[F]): Resource[F, Writer]", "member" : "laika.io.runtime.OutputRuntime.textStreamResource", "link" : "laika\/io\/runtime\/OutputRuntime$.html#textStreamResource[F[_]](stream:F[java.io.OutputStream],codec:scala.io.Codec,autoClose:Boolean)(implicitevidence$5:cats.effect.Sync[F]):cats.effect.Resource[F,java.io.Writer]", "kind" : "def"}, {"label" : "textFileResource", "tail" : "(file: File, codec: Codec)(arg0: Sync[F]): Resource[F, Writer]", "member" : "laika.io.runtime.OutputRuntime.textFileResource", "link" : "laika\/io\/runtime\/OutputRuntime$.html#textFileResource[F[_]](file:java.io.File,codec:scala.io.Codec)(implicitevidence$4:cats.effect.Sync[F]):cats.effect.Resource[F,java.io.Writer]", "kind" : "def"}, {"label" : "createDirectory", "tail" : "(file: File)(arg0: Sync[F]): F[Unit]", "member" : "laika.io.runtime.OutputRuntime.createDirectory", "link" : "laika\/io\/runtime\/OutputRuntime$.html#createDirectory[F[_]](file:java.io.File)(implicitevidence$3:cats.effect.Sync[F]):F[Unit]", "kind" : "def"}, {"label" : "write", "tail" : "(result: String, output: TextOutput[F])(arg0: Sync[F], arg1: Runtime[F]): F[Unit]", "member" : "laika.io.runtime.OutputRuntime.write", "link" : "laika\/io\/runtime\/OutputRuntime$.html#write[F[_]](result:String,output:laika.io.model.TextOutput[F])(implicitevidence$1:cats.effect.Sync[F],implicitevidence$2:laika.io.runtime.Runtime[F]):F[Unit]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/runtime\/OutputRuntime$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/runtime\/OutputRuntime$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/runtime\/OutputRuntime$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/runtime\/OutputRuntime$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/runtime\/OutputRuntime$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/runtime\/OutputRuntime$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/runtime\/OutputRuntime$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/OutputRuntime$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/OutputRuntime$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/OutputRuntime$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/runtime\/OutputRuntime$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/runtime\/OutputRuntime$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/runtime\/OutputRuntime$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/runtime\/OutputRuntime$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/runtime\/OutputRuntime$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/runtime\/OutputRuntime$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/runtime\/OutputRuntime$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/runtime\/OutputRuntime$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/runtime\/OutputRuntime$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.io.runtime.ParserRuntime", "shortDescription" : "Internal runtime for parser operations, for parallel and sequential execution.", "object" : "laika\/io\/runtime\/ParserRuntime$.html", "members_object" : [{"label" : "ParserErrors", "tail" : "", "member" : "laika.io.runtime.ParserRuntime.ParserErrors", "link" : "laika\/io\/runtime\/ParserRuntime$.html#ParserErrorsextendsRuntimeExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "DuplicatePath", "tail" : "", "member" : "laika.io.runtime.ParserRuntime.DuplicatePath", "link" : "laika\/io\/runtime\/ParserRuntime$.html#DuplicatePathextendsRuntimeExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "NoMatchingParser", "tail" : "", "member" : "laika.io.runtime.ParserRuntime.NoMatchingParser", "link" : "laika\/io\/runtime\/ParserRuntime$.html#NoMatchingParserextendsRuntimeExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "run", "tail" : "(op: Op[F])(arg0: Sync[F], arg1: Runtime[F]): F[ParsedTree[F]]", "member" : "laika.io.runtime.ParserRuntime.run", "link" : "laika\/io\/runtime\/ParserRuntime$.html#run[F[_]](op:laika.io.api.TreeParser.Op[F])(implicitevidence$1:cats.effect.Sync[F],implicitevidence$2:laika.io.runtime.Runtime[F]):F[laika.io.model.ParsedTree[F]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/runtime\/ParserRuntime$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/runtime\/ParserRuntime$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/runtime\/ParserRuntime$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/runtime\/ParserRuntime$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/runtime\/ParserRuntime$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/runtime\/ParserRuntime$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/runtime\/ParserRuntime$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/ParserRuntime$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/ParserRuntime$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/ParserRuntime$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/runtime\/ParserRuntime$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/runtime\/ParserRuntime$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/runtime\/ParserRuntime$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/runtime\/ParserRuntime$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/runtime\/ParserRuntime$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/runtime\/ParserRuntime$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/runtime\/ParserRuntime$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/runtime\/ParserRuntime$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/runtime\/ParserRuntime$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.io.runtime.RendererRuntime", "shortDescription" : "Internal runtime for renderer operations, for text and binary output as wellas parallel and sequential execution.", "object" : "laika\/io\/runtime\/RendererRuntime$.html", "members_object" : [{"label" : "RendererErrors", "tail" : "", "member" : "laika.io.runtime.RendererRuntime.RendererErrors", "link" : "laika\/io\/runtime\/RendererRuntime$.html#RendererErrorsextendsRuntimeExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "DuplicatePath", "tail" : "", "member" : "laika.io.runtime.RendererRuntime.DuplicatePath", "link" : "laika\/io\/runtime\/RendererRuntime$.html#DuplicatePathextendsRuntimeExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "run", "tail" : "(op: Op[F])(arg0: Sync[F], arg1: Runtime[F]): F[Unit]", "member" : "laika.io.runtime.RendererRuntime.run", "link" : "laika\/io\/runtime\/RendererRuntime$.html#run[F[_]](op:laika.io.api.BinaryTreeRenderer.Op[F])(implicitevidence$6:cats.effect.Sync[F],implicitevidence$7:laika.io.runtime.Runtime[F]):F[Unit]", "kind" : "def"}, {"label" : "run", "tail" : "(op: Op[F])(arg0: Sync[F], arg1: Runtime[F]): F[RenderedTreeRoot[F]]", "member" : "laika.io.runtime.RendererRuntime.run", "link" : "laika\/io\/runtime\/RendererRuntime$.html#run[F[_]](op:laika.io.api.TreeRenderer.Op[F])(implicitevidence$1:cats.effect.Sync[F],implicitevidence$2:laika.io.runtime.Runtime[F]):F[laika.io.model.RenderedTreeRoot[F]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/runtime\/RendererRuntime$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/runtime\/RendererRuntime$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/runtime\/RendererRuntime$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/runtime\/RendererRuntime$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/runtime\/RendererRuntime$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/runtime\/RendererRuntime$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/runtime\/RendererRuntime$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/RendererRuntime$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/RendererRuntime$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/RendererRuntime$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/runtime\/RendererRuntime$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/runtime\/RendererRuntime$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/runtime\/RendererRuntime$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/runtime\/RendererRuntime$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/runtime\/RendererRuntime$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/runtime\/RendererRuntime$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/runtime\/RendererRuntime$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/runtime\/RendererRuntime$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/runtime\/RendererRuntime$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.io.runtime.Runtime", "members_trait" : [{"label" : "runParallel", "tail" : "(fas: Vector[F[A]]): F[Vector[A]]", "member" : "laika.io.runtime.Runtime.runParallel", "link" : "laika\/io\/runtime\/Runtime.html#runParallel[A](fas:Vector[F[A]]):F[Vector[A]]", "kind" : "def"}, {"label" : "runBlocking", "tail" : "(fa: F[A]): F[A]", "member" : "laika.io.runtime.Runtime.runBlocking", "link" : "laika\/io\/runtime\/Runtime.html#runBlocking[A](fa:F[A]):F[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/runtime\/Runtime.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/runtime\/Runtime.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/runtime\/Runtime.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/runtime\/Runtime.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/runtime\/Runtime.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/runtime\/Runtime.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/runtime\/Runtime.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/Runtime.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/Runtime.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/Runtime.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/runtime\/Runtime.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/runtime\/Runtime.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/runtime\/Runtime.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/runtime\/Runtime.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/runtime\/Runtime.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/runtime\/Runtime.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/runtime\/Runtime.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/runtime\/Runtime.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/runtime\/Runtime.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "blocker", "tail" : "(): Blocker", "member" : "laika.io.runtime.Runtime.blocker", "link" : "laika\/io\/runtime\/Runtime.html#blocker:cats.effect.Blocker", "kind" : "abstract def"}, {"label" : "contextShift", "tail" : "(): ContextShift[F]", "member" : "laika.io.runtime.Runtime.contextShift", "link" : "laika\/io\/runtime\/Runtime.html#contextShift:cats.effect.ContextShift[F]", "kind" : "implicit abstract def"}, {"label" : "parallelism", "tail" : "(): Int", "member" : "laika.io.runtime.Runtime.parallelism", "link" : "laika\/io\/runtime\/Runtime.html#parallelism:Int", "kind" : "abstract def"}, {"label" : "parallelInstance", "tail" : "(): Option[Parallel[F]]", "member" : "laika.io.runtime.Runtime.parallelInstance", "link" : "laika\/io\/runtime\/Runtime.html#parallelInstance:Option[cats.Parallel[F]]", "kind" : "abstract def"}, {"label" : "F", "tail" : "(): Sync[F]", "member" : "laika.io.runtime.Runtime.F", "link" : "laika\/io\/runtime\/Runtime.html#F:cats.effect.Sync[F]", "kind" : "implicit abstract def"}], "shortDescription" : "Type class for the effect F that encapsulates the mechanismand configuration for running blocking and\/or parallel operations.", "object" : "laika\/io\/runtime\/Runtime$.html", "members_object" : [{"label" : "parallel", "tail" : "(blockerParam: Blocker, parallelismParam: Int)(arg0: Sync[F], arg1: Parallel[F], arg2: ContextShift[F]): Runtime[F]", "member" : "laika.io.runtime.Runtime.parallel", "link" : "laika\/io\/runtime\/Runtime$.html#parallel[F[_]](blockerParam:cats.effect.Blocker,parallelismParam:Int)(implicitevidence$4:cats.effect.Sync[F],implicitevidence$5:cats.Parallel[F],implicitevidence$6:cats.effect.ContextShift[F]):laika.io.runtime.Runtime[F]", "kind" : "def"}, {"label" : "sequential", "tail" : "(blockerParam: Blocker)(arg0: Sync[F], arg1: ContextShift[F]): Runtime[F]", "member" : "laika.io.runtime.Runtime.sequential", "link" : "laika\/io\/runtime\/Runtime$.html#sequential[F[_]](blockerParam:cats.effect.Blocker)(implicitevidence$2:cats.effect.Sync[F],implicitevidence$3:cats.effect.ContextShift[F]):laika.io.runtime.Runtime[F]", "kind" : "def"}, {"label" : "apply", "tail" : "(arg0: Runtime[F]): Runtime[F]", "member" : "laika.io.runtime.Runtime.apply", "link" : "laika\/io\/runtime\/Runtime$.html#apply[F[_]](implicitevidence$1:laika.io.runtime.Runtime[F]):laika.io.runtime.Runtime[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/runtime\/Runtime$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/runtime\/Runtime$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/runtime\/Runtime$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/runtime\/Runtime$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/runtime\/Runtime$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/runtime\/Runtime$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/runtime\/Runtime$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/Runtime$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/Runtime$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/Runtime$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/runtime\/Runtime$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/runtime\/Runtime$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/runtime\/Runtime$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/runtime\/Runtime$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/runtime\/Runtime$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/runtime\/Runtime$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/runtime\/Runtime$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/runtime\/Runtime$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/runtime\/Runtime$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/io\/runtime\/Runtime.html", "kind" : "trait"}, {"name" : "laika.io.runtime.TransformerRuntime", "shortDescription" : "Internal runtime for transform operations, for text and binary output as wellas parallel and sequential execution.", "object" : "laika\/io\/runtime\/TransformerRuntime$.html", "members_object" : [{"label" : "run", "tail" : "(op: Op[F])(arg0: Sync[F], arg1: Runtime[F]): F[Unit]", "member" : "laika.io.runtime.TransformerRuntime.run", "link" : "laika\/io\/runtime\/TransformerRuntime$.html#run[F[_]](op:laika.io.api.BinaryTreeTransformer.Op[F])(implicitevidence$4:cats.effect.Sync[F],implicitevidence$5:laika.io.runtime.Runtime[F]):F[Unit]", "kind" : "def"}, {"label" : "run", "tail" : "(op: Op[F])(arg0: Sync[F], arg1: Runtime[F]): F[RenderedTreeRoot[F]]", "member" : "laika.io.runtime.TransformerRuntime.run", "link" : "laika\/io\/runtime\/TransformerRuntime$.html#run[F[_]](op:laika.io.api.TreeTransformer.Op[F])(implicitevidence$2:cats.effect.Sync[F],implicitevidence$3:laika.io.runtime.Runtime[F]):F[laika.io.model.RenderedTreeRoot[F]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/runtime\/TransformerRuntime$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/runtime\/TransformerRuntime$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/runtime\/TransformerRuntime$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/runtime\/TransformerRuntime$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/runtime\/TransformerRuntime$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/runtime\/TransformerRuntime$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/runtime\/TransformerRuntime$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/TransformerRuntime$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/TransformerRuntime$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/TransformerRuntime$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/runtime\/TransformerRuntime$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/runtime\/TransformerRuntime$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/runtime\/TransformerRuntime$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/runtime\/TransformerRuntime$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/runtime\/TransformerRuntime$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/runtime\/TransformerRuntime$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/runtime\/TransformerRuntime$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/runtime\/TransformerRuntime$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/runtime\/TransformerRuntime$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.io.runtime.TreeResultBuilder", "shortDescription" : "", "object" : "laika\/io\/runtime\/TreeResultBuilder$.html", "members_object" : [{"label" : "buildTree", "tail" : "(results: Seq[ParserResult], baseConfig: Config, includes: IncludeMap): Either[ConfigError, DocumentTreeRoot]", "member" : "laika.io.runtime.TreeResultBuilder.buildTree", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#buildTree(results:Seq[laika.io.runtime.TreeResultBuilder.ParserResult],baseConfig:laika.config.Config,includes:laika.config.Config.IncludeMap):Either[laika.config.ConfigError,laika.ast.DocumentTreeRoot]", "kind" : "def"}, {"label" : "resolveConfig", "tail" : "(result: TreeResult, baseConfig: Config, includes: IncludeMap, titleDocName: Option[String]): Either[ConfigError, DocumentTree]", "member" : "laika.io.runtime.TreeResultBuilder.resolveConfig", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#resolveConfig(result:laika.io.runtime.TreeResultBuilder.TreeResult,baseConfig:laika.config.Config,includes:laika.config.Config.IncludeMap,titleDocName:Option[String]):Either[laika.config.ConfigError,laika.ast.DocumentTree]", "kind" : "def"}, {"label" : "resolveConfig", "tail" : "(doc: Document, baseConfig: Config, includes: IncludeMap): Either[ConfigError, Document]", "member" : "laika.io.runtime.TreeResultBuilder.resolveConfig", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#resolveConfig(doc:laika.ast.Document,baseConfig:laika.config.Config,includes:laika.config.Config.IncludeMap):Either[laika.config.ConfigError,laika.ast.Document]", "kind" : "def"}, {"label" : "resolveConfig", "tail" : "(doc: UnresolvedDocument, baseConfig: Config, includes: IncludeMap): Either[ConfigError, Document]", "member" : "laika.io.runtime.TreeResultBuilder.resolveConfig", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#resolveConfig(doc:laika.ast.UnresolvedDocument,baseConfig:laika.config.Config,includes:laika.config.Config.IncludeMap):Either[laika.config.ConfigError,laika.ast.Document]", "kind" : "def"}, {"label" : "buildNode", "tail" : "(path: Path, content: Seq[ParserResult]): TreeResult", "member" : "laika.io.runtime.TreeResultBuilder.buildNode", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#buildNode(path:laika.ast.Path,content:Seq[laika.io.runtime.TreeResultBuilder.ParserResult]):laika.io.runtime.TreeResultBuilder.TreeResult", "kind" : "def"}, {"label" : "TreeResult", "tail" : "", "member" : "laika.io.runtime.TreeResultBuilder.TreeResult", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#TreeResultextendsTreeResultBuilder.TreeContentResultwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnresolvedContent", "tail" : "", "member" : "laika.io.runtime.TreeResultBuilder.UnresolvedContent", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#UnresolvedContent=Either[laika.ast.UnresolvedDocument,laika.io.runtime.TreeResultBuilder.TreeResult]", "kind" : "type"}, {"label" : "ConfigResult", "tail" : "", "member" : "laika.io.runtime.TreeResultBuilder.ConfigResult", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#ConfigResultextendsTreeResultBuilder.ParserResultwithProductwithSerializable", "kind" : "case class"}, {"label" : "HoconResult", "tail" : "", "member" : "laika.io.runtime.TreeResultBuilder.HoconResult", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#HoconResultextendsTreeResultBuilder.ParserResultwithProductwithSerializable", "kind" : "case class"}, {"label" : "StyleResult", "tail" : "", "member" : "laika.io.runtime.TreeResultBuilder.StyleResult", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#StyleResultextendsTreeResultBuilder.ParserResultwithProductwithSerializable", "kind" : "case class"}, {"label" : "TemplateResult", "tail" : "", "member" : "laika.io.runtime.TreeResultBuilder.TemplateResult", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#TemplateResultextendsTreeResultBuilder.ParserResultwithProductwithSerializable", "kind" : "case class"}, {"label" : "MarkupResult", "tail" : "", "member" : "laika.io.runtime.TreeResultBuilder.MarkupResult", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#MarkupResultextendsTreeResultBuilder.TreeContentResultwithProductwithSerializable", "kind" : "case class"}, {"label" : "DocumentResult", "tail" : "", "member" : "laika.io.runtime.TreeResultBuilder.DocumentResult", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#DocumentResultextendsTreeResultBuilder.TreeContentResultwithProductwithSerializable", "kind" : "case class"}, {"label" : "TreeContentResult", "tail" : "", "member" : "laika.io.runtime.TreeResultBuilder.TreeContentResult", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#TreeContentResultextendsTreeResultBuilder.ParserResult", "kind" : "sealed trait"}, {"label" : "ParserResult", "tail" : "", "member" : "laika.io.runtime.TreeResultBuilder.ParserResult", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#ParserResultextendsNavigatable", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/runtime\/TreeResultBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "laika.parse.code.languages" : [{"name" : "laika.parse.code.languages.AlloySyntax", "shortDescription" : "https:\/\/alloytools.org\/download\/alloy-language-reference.pdf", "object" : "laika\/parse\/code\/languages\/AlloySyntax$.html", "members_object" : [{"label" : "spanParsers", "tail" : "(): Seq[CodeSpanParser]", "member" : "laika.parse.code.languages.AlloySyntax.spanParsers", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html#spanParsers:Seq[laika.parse.code.CodeSpanParser]", "kind" : "def"}, {"label" : "identifiers", "tail" : ": IdParser", "member" : "laika.parse.code.languages.AlloySyntax.identifiers", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html#identifiers:laika.parse.code.common.Identifier.IdParser", "kind" : "val"}, {"label" : "numberLiteral", "tail" : ": NumericParser", "member" : "laika.parse.code.languages.AlloySyntax.numberLiteral", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html#numberLiteral:laika.parse.code.common.NumberLiteral.NumericParser", "kind" : "val"}, {"label" : "keywords", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.AlloySyntax.keywords", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html#keywords:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "comment", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.AlloySyntax.comment", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html#comment:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "language", "tail" : "(): NonEmptyList[String]", "member" : "laika.parse.code.languages.AlloySyntax.language", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html#language:cats.data.NonEmptyList[String]", "kind" : "def"}, {"label" : "rootParser", "tail" : ": Parser[Seq[CodeSpan]]", "member" : "laika.bundle.SyntaxHighlighter.rootParser", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html#rootParser:laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/languages\/AlloySyntax$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.languages.CSSSyntax", "shortDescription" : "", "object" : "laika\/parse\/code\/languages\/CSSSyntax$.html", "members_object" : [{"label" : "spanParsers", "tail" : ": Seq[CodeSpanParser]", "member" : "laika.parse.code.languages.CSSSyntax.spanParsers", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#spanParsers:Seq[laika.parse.code.CodeSpanParser]", "kind" : "val"}, {"label" : "language", "tail" : ": NonEmptyList[String]", "member" : "laika.parse.code.languages.CSSSyntax.language", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#language:cats.data.NonEmptyList[String]", "kind" : "val"}, {"label" : "declaration", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.CSSSyntax.declaration", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#declaration:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "number", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.CSSSyntax.number", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#number:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "string", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.CSSSyntax.string", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#string:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "color", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.CSSSyntax.color", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#color:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "url", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.CSSSyntax.url", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#url:laika.parse.code.CodeSpanParser", "kind" : "lazy val"}, {"label" : "escape", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.CSSSyntax.escape", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#escape:laika.parse.code.CodeSpanParser", "kind" : "lazy val"}, {"label" : "identifier", "tail" : "(category: CodeCategory, allowDigitBeforeStart: Boolean): CodeSpanParser", "member" : "laika.parse.code.languages.CSSSyntax.identifier", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#identifier(category:laika.parse.code.CodeCategory,allowDigitBeforeStart:Boolean):laika.parse.code.CodeSpanParser", "kind" : "def"}, {"label" : "rootParser", "tail" : ": Parser[Seq[CodeSpan]]", "member" : "laika.bundle.SyntaxHighlighter.rootParser", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#rootParser:laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/languages\/CSSSyntax$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.languages.DhallSyntax", "shortDescription" : "https:\/\/github.com\/dhall-lang\/dhall-lang\/blob\/master\/standard\/dhall.abnf", "object" : "laika\/parse\/code\/languages\/DhallSyntax$.html", "members_object" : [{"label" : "spanParsers", "tail" : "(): Seq[CodeSpanParser]", "member" : "laika.parse.code.languages.DhallSyntax.spanParsers", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#spanParsers:Seq[laika.parse.code.CodeSpanParser]", "kind" : "def"}, {"label" : "recordTypeEntry", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.DhallSyntax.recordTypeEntry", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#recordTypeEntry:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "recordEntry", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.DhallSyntax.recordEntry", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#recordEntry:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "attributeName", "tail" : ": IdParser", "member" : "laika.parse.code.languages.DhallSyntax.attributeName", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#attributeName:laika.parse.code.common.Identifier.IdParser", "kind" : "val"}, {"label" : "untypedDeclaration", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.DhallSyntax.untypedDeclaration", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#untypedDeclaration:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "typedDeclaration", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.DhallSyntax.typedDeclaration", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#typedDeclaration:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "identifier", "tail" : ": IdParser", "member" : "laika.parse.code.languages.DhallSyntax.identifier", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#identifier:laika.parse.code.common.Identifier.IdParser", "kind" : "val"}, {"label" : "numberLiteral", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.DhallSyntax.numberLiteral", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#numberLiteral:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "stringLiteral", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.DhallSyntax.stringLiteral", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#stringLiteral:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "substitutions", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.DhallSyntax.substitutions", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#substitutions:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "multiLineEscapes", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.DhallSyntax.multiLineEscapes", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#multiLineEscapes:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "singleLineEscapes", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.DhallSyntax.singleLineEscapes", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#singleLineEscapes:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "bracedUnicodeEscape", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.DhallSyntax.bracedUnicodeEscape", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#bracedUnicodeEscape:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "keywords", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.DhallSyntax.keywords", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#keywords:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "comment", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.DhallSyntax.comment", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#comment:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "language", "tail" : "(): NonEmptyList[String]", "member" : "laika.parse.code.languages.DhallSyntax.language", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#language:cats.data.NonEmptyList[String]", "kind" : "def"}, {"label" : "rootParser", "tail" : ": Parser[Seq[CodeSpan]]", "member" : "laika.bundle.SyntaxHighlighter.rootParser", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#rootParser:laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/languages\/DhallSyntax$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.languages.DottySyntax", "shortDescription" : "", "object" : "laika\/parse\/code\/languages\/DottySyntax$.html", "members_object" : [{"label" : "spanParsers", "tail" : ": Seq[CodeSpanParser]", "member" : "laika.parse.code.languages.DottySyntax.spanParsers", "link" : "laika\/parse\/code\/languages\/DottySyntax$.html#spanParsers:Seq[laika.parse.code.CodeSpanParser]", "kind" : "val"}, {"label" : "softKeywords", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.DottySyntax.softKeywords", "link" : "laika\/parse\/code\/languages\/DottySyntax$.html#softKeywords:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "language", "tail" : ": NonEmptyList[String]", "member" : "laika.parse.code.languages.DottySyntax.language", "link" : "laika\/parse\/code\/languages\/DottySyntax$.html#language:cats.data.NonEmptyList[String]", "kind" : "val"}, {"label" : "rootParser", "tail" : ": Parser[Seq[CodeSpan]]", "member" : "laika.bundle.SyntaxHighlighter.rootParser", "link" : "laika\/parse\/code\/languages\/DottySyntax$.html#rootParser:laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/languages\/DottySyntax$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/languages\/DottySyntax$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/languages\/DottySyntax$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/languages\/DottySyntax$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/languages\/DottySyntax$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/languages\/DottySyntax$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/languages\/DottySyntax$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/DottySyntax$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/DottySyntax$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/DottySyntax$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/languages\/DottySyntax$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/languages\/DottySyntax$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/languages\/DottySyntax$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/languages\/DottySyntax$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/languages\/DottySyntax$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/languages\/DottySyntax$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/languages\/DottySyntax$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/languages\/DottySyntax$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/languages\/DottySyntax$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.languages.EBNFSyntax", "shortDescription" : "This highlighter is very loosely defined with the aim to work for most ofthe dozens of flavors of EBNF that are widely used.", "object" : "laika\/parse\/code\/languages\/EBNFSyntax$.html", "members_object" : [{"label" : "spanParsers", "tail" : ": Seq[CodeSpanParser]", "member" : "laika.parse.code.languages.EBNFSyntax.spanParsers", "link" : "laika\/parse\/code\/languages\/EBNFSyntax$.html#spanParsers:Seq[laika.parse.code.CodeSpanParser]", "kind" : "val"}, {"label" : "declarationName", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.EBNFSyntax.declarationName", "link" : "laika\/parse\/code\/languages\/EBNFSyntax$.html#declarationName:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "language", "tail" : ": NonEmptyList[String]", "member" : "laika.parse.code.languages.EBNFSyntax.language", "link" : "laika\/parse\/code\/languages\/EBNFSyntax$.html#language:cats.data.NonEmptyList[String]", "kind" : "val"}, {"label" : "rootParser", "tail" : ": Parser[Seq[CodeSpan]]", "member" : "laika.bundle.SyntaxHighlighter.rootParser", "link" : "laika\/parse\/code\/languages\/EBNFSyntax$.html#rootParser:laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/languages\/EBNFSyntax$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/languages\/EBNFSyntax$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/languages\/EBNFSyntax$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/languages\/EBNFSyntax$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/languages\/EBNFSyntax$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/languages\/EBNFSyntax$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/languages\/EBNFSyntax$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/EBNFSyntax$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/EBNFSyntax$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/EBNFSyntax$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/languages\/EBNFSyntax$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/languages\/EBNFSyntax$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/languages\/EBNFSyntax$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/languages\/EBNFSyntax$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/languages\/EBNFSyntax$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/languages\/EBNFSyntax$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/languages\/EBNFSyntax$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/languages\/EBNFSyntax$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/languages\/EBNFSyntax$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.languages.HaskellSyntax", "shortDescription" : "", "object" : "laika\/parse\/code\/languages\/HaskellSyntax$.html", "members_object" : [{"label" : "spanParsers", "tail" : "(): Seq[CodeSpanParser]", "member" : "laika.parse.code.languages.HaskellSyntax.spanParsers", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#spanParsers:Seq[laika.parse.code.CodeSpanParser]", "kind" : "def"}, {"label" : "types", "tail" : ": IdParser", "member" : "laika.parse.code.languages.HaskellSyntax.types", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#types:laika.parse.code.common.Identifier.IdParser", "kind" : "val"}, {"label" : "identifiers", "tail" : ": IdParser", "member" : "laika.parse.code.languages.HaskellSyntax.identifiers", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#identifiers:laika.parse.code.common.Identifier.IdParser", "kind" : "val"}, {"label" : "numberLiteral", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.HaskellSyntax.numberLiteral", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#numberLiteral:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "stringLiteral", "tail" : ": StringParser", "member" : "laika.parse.code.languages.HaskellSyntax.stringLiteral", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#stringLiteral:laika.parse.code.common.StringLiteral.StringParser", "kind" : "val"}, {"label" : "keywords", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.HaskellSyntax.keywords", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#keywords:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "comment", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.HaskellSyntax.comment", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#comment:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "language", "tail" : "(): NonEmptyList[String]", "member" : "laika.parse.code.languages.HaskellSyntax.language", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#language:cats.data.NonEmptyList[String]", "kind" : "def"}, {"label" : "rootParser", "tail" : ": Parser[Seq[CodeSpan]]", "member" : "laika.bundle.SyntaxHighlighter.rootParser", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#rootParser:laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/languages\/HaskellSyntax$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.languages.HOCONSyntax", "shortDescription" : "", "object" : "laika\/parse\/code\/languages\/HOCONSyntax$.html", "members_object" : [{"label" : "spanParsers", "tail" : ": Seq[CodeSpanParser]", "member" : "laika.parse.code.languages.HOCONSyntax.spanParsers", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#spanParsers:Seq[laika.parse.code.CodeSpanParser]", "kind" : "val"}, {"label" : "language", "tail" : ": NonEmptyList[String]", "member" : "laika.parse.code.languages.HOCONSyntax.language", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#language:cats.data.NonEmptyList[String]", "kind" : "val"}, {"label" : "includeStatement", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.HOCONSyntax.includeStatement", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#includeStatement:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "functionNames", "tail" : "(names: String*): CodeSpanParser", "member" : "laika.parse.code.languages.HOCONSyntax.functionNames", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#functionNames(names:String*):laika.parse.code.CodeSpanParser", "kind" : "def"}, {"label" : "unquotedStringValue", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.HOCONSyntax.unquotedStringValue", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#unquotedStringValue:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "unquotedAttributeName", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.HOCONSyntax.unquotedAttributeName", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#unquotedAttributeName:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "substitution", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.HOCONSyntax.substitution", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#substitution:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "quotedAttributeName", "tail" : ": StringParser", "member" : "laika.parse.code.languages.HOCONSyntax.quotedAttributeName", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#quotedAttributeName:laika.parse.code.common.StringLiteral.StringParser", "kind" : "val"}, {"label" : "string", "tail" : ": StringParser", "member" : "laika.parse.code.languages.HOCONSyntax.string", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#string:laika.parse.code.common.StringLiteral.StringParser", "kind" : "val"}, {"label" : "rootParser", "tail" : ": Parser[Seq[CodeSpan]]", "member" : "laika.bundle.SyntaxHighlighter.rootParser", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#rootParser:laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/languages\/HOCONSyntax$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.languages.HTMLSyntax", "shortDescription" : "", "object" : "laika\/parse\/code\/languages\/HTMLSyntax$.html", "members_object" : [{"label" : "spanParsers", "tail" : ": Seq[CodeSpanParser]", "member" : "laika.parse.code.languages.HTMLSyntax.spanParsers", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#spanParsers:Seq[laika.parse.code.CodeSpanParser]", "kind" : "val"}, {"label" : "language", "tail" : ": NonEmptyList[String]", "member" : "laika.parse.code.languages.HTMLSyntax.language", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#language:cats.data.NonEmptyList[String]", "kind" : "val"}, {"label" : "styleTag", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.HTMLSyntax.styleTag", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#styleTag:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "scriptTag", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.HTMLSyntax.scriptTag", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#scriptTag:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "docType", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.HTMLSyntax.docType", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#docType:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "rootParser", "tail" : ": Parser[Seq[CodeSpan]]", "member" : "laika.bundle.SyntaxHighlighter.rootParser", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#rootParser:laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "lazy val"}, {"label" : "elementRest", "tail" : "(tagName: String, embedded: Seq[CodeSpanParser], tagNameCategory: CodeCategory): Parser[Seq[CodeSpan]]", "member" : "laika.parse.code.common.TagBasedFormats.elementRest", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#elementRest(tagName:String,embedded:Seq[laika.parse.code.CodeSpanParser],tagNameCategory:laika.parse.code.CodeCategory):laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "def"}, {"label" : "endTag", "tail" : ": TagParser", "member" : "laika.parse.code.common.TagBasedFormats.endTag", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#endTag:laika.parse.code.common.TagParser", "kind" : "val"}, {"label" : "startTag", "tail" : ": TagParser", "member" : "laika.parse.code.common.TagBasedFormats.startTag", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#startTag:laika.parse.code.common.TagParser", "kind" : "val"}, {"label" : "emptyTag", "tail" : ": TagParser", "member" : "laika.parse.code.common.TagBasedFormats.emptyTag", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#emptyTag:laika.parse.code.common.TagParser", "kind" : "val"}, {"label" : "stringWithEntities", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.common.TagBasedFormats.stringWithEntities", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#stringWithEntities:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "string", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.common.TagBasedFormats.string", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#string:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "ref", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.common.TagBasedFormats.ref", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#ref:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "name", "tail" : "(category: CodeCategory): CodeSpanParser", "member" : "laika.parse.code.common.TagBasedFormats.name", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#name(category:laika.parse.code.CodeCategory):laika.parse.code.CodeSpanParser", "kind" : "def"}, {"label" : "comment", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.common.TagBasedFormats.comment", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#comment:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/languages\/HTMLSyntax$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.languages.JavaScriptSyntax", "shortDescription" : "", "object" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html", "members_object" : [{"label" : "JSX", "tail" : "", "member" : "laika.parse.code.languages.JavaScriptSyntax.JSX", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#JSX", "kind" : "object"}, {"label" : "spanParsers", "tail" : ": Seq[CodeSpanParser]", "member" : "laika.parse.code.languages.JavaScriptSyntax.spanParsers", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#spanParsers:Seq[laika.parse.code.CodeSpanParser]", "kind" : "val"}, {"label" : "language", "tail" : ": NonEmptyList[String]", "member" : "laika.parse.code.languages.JavaScriptSyntax.language", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#language:cats.data.NonEmptyList[String]", "kind" : "val"}, {"label" : "keywords", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.JavaScriptSyntax.keywords", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#keywords:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "number", "tail" : "(parser: NumericParser): CodeSpanParser", "member" : "laika.parse.code.languages.JavaScriptSyntax.number", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#number(parser:laika.parse.code.common.NumberLiteral.NumericParser):laika.parse.code.CodeSpanParser", "kind" : "def"}, {"label" : "charEscapes", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.JavaScriptSyntax.charEscapes", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#charEscapes:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "unicodeCodePointEscape", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.JavaScriptSyntax.unicodeCodePointEscape", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#unicodeCodePointEscape:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "rootParser", "tail" : ": Parser[Seq[CodeSpan]]", "member" : "laika.bundle.SyntaxHighlighter.rootParser", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#rootParser:laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/languages\/JavaScriptSyntax$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.languages.JavaSyntax", "shortDescription" : "", "object" : "laika\/parse\/code\/languages\/JavaSyntax$.html", "members_object" : [{"label" : "spanParsers", "tail" : ": Seq[CodeSpanParser]", "member" : "laika.parse.code.languages.JavaSyntax.spanParsers", "link" : "laika\/parse\/code\/languages\/JavaSyntax$.html#spanParsers:Seq[laika.parse.code.CodeSpanParser]", "kind" : "val"}, {"label" : "charEscapes", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.JavaSyntax.charEscapes", "link" : "laika\/parse\/code\/languages\/JavaSyntax$.html#charEscapes:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "annotation", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.JavaSyntax.annotation", "link" : "laika\/parse\/code\/languages\/JavaSyntax$.html#annotation:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "language", "tail" : ": NonEmptyList[String]", "member" : "laika.parse.code.languages.JavaSyntax.language", "link" : "laika\/parse\/code\/languages\/JavaSyntax$.html#language:cats.data.NonEmptyList[String]", "kind" : "val"}, {"label" : "rootParser", "tail" : ": Parser[Seq[CodeSpan]]", "member" : "laika.bundle.SyntaxHighlighter.rootParser", "link" : "laika\/parse\/code\/languages\/JavaSyntax$.html#rootParser:laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/languages\/JavaSyntax$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/languages\/JavaSyntax$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/languages\/JavaSyntax$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/languages\/JavaSyntax$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/languages\/JavaSyntax$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/languages\/JavaSyntax$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/languages\/JavaSyntax$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/JavaSyntax$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/JavaSyntax$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/JavaSyntax$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/languages\/JavaSyntax$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/languages\/JavaSyntax$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/languages\/JavaSyntax$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/languages\/JavaSyntax$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/languages\/JavaSyntax$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/languages\/JavaSyntax$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/languages\/JavaSyntax$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/languages\/JavaSyntax$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/languages\/JavaSyntax$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.languages.JSONSyntax", "shortDescription" : "", "object" : "laika\/parse\/code\/languages\/JSONSyntax$.html", "members_object" : [{"label" : "spanParsers", "tail" : ": Seq[CodeSpanParser]", "member" : "laika.parse.code.languages.JSONSyntax.spanParsers", "link" : "laika\/parse\/code\/languages\/JSONSyntax$.html#spanParsers:Seq[laika.parse.code.CodeSpanParser]", "kind" : "val"}, {"label" : "language", "tail" : ": NonEmptyList[String]", "member" : "laika.parse.code.languages.JSONSyntax.language", "link" : "laika\/parse\/code\/languages\/JSONSyntax$.html#language:cats.data.NonEmptyList[String]", "kind" : "val"}, {"label" : "attributeName", "tail" : ": StringParser", "member" : "laika.parse.code.languages.JSONSyntax.attributeName", "link" : "laika\/parse\/code\/languages\/JSONSyntax$.html#attributeName:laika.parse.code.common.StringLiteral.StringParser", "kind" : "val"}, {"label" : "string", "tail" : ": StringParser", "member" : "laika.parse.code.languages.JSONSyntax.string", "link" : "laika\/parse\/code\/languages\/JSONSyntax$.html#string:laika.parse.code.common.StringLiteral.StringParser", "kind" : "val"}, {"label" : "rootParser", "tail" : ": Parser[Seq[CodeSpan]]", "member" : "laika.bundle.SyntaxHighlighter.rootParser", "link" : "laika\/parse\/code\/languages\/JSONSyntax$.html#rootParser:laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/languages\/JSONSyntax$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/languages\/JSONSyntax$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/languages\/JSONSyntax$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/languages\/JSONSyntax$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/languages\/JSONSyntax$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/languages\/JSONSyntax$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/languages\/JSONSyntax$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/JSONSyntax$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/JSONSyntax$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/JSONSyntax$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/languages\/JSONSyntax$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/languages\/JSONSyntax$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/languages\/JSONSyntax$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/languages\/JSONSyntax$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/languages\/JSONSyntax$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/languages\/JSONSyntax$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/languages\/JSONSyntax$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/languages\/JSONSyntax$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/languages\/JSONSyntax$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.languages.LaikaASTSyntax", "shortDescription" : "", "object" : "laika\/parse\/code\/languages\/LaikaASTSyntax$.html", "members_object" : [{"label" : "spanParsers", "tail" : ": Seq[CodeSpanParser]", "member" : "laika.parse.code.languages.LaikaASTSyntax.spanParsers", "link" : "laika\/parse\/code\/languages\/LaikaASTSyntax$.html#spanParsers:Seq[laika.parse.code.CodeSpanParser]", "kind" : "val"}, {"label" : "upperCaseTypeName", "tail" : ": (String) ⇒ CodeCategory", "member" : "laika.parse.code.languages.LaikaASTSyntax.upperCaseTypeName", "link" : "laika\/parse\/code\/languages\/LaikaASTSyntax$.html#upperCaseTypeName:String=>laika.parse.code.CodeCategory", "kind" : "val"}, {"label" : "indentation", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.LaikaASTSyntax.indentation", "link" : "laika\/parse\/code\/languages\/LaikaASTSyntax$.html#indentation:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "language", "tail" : ": NonEmptyList[String]", "member" : "laika.parse.code.languages.LaikaASTSyntax.language", "link" : "laika\/parse\/code\/languages\/LaikaASTSyntax$.html#language:cats.data.NonEmptyList[String]", "kind" : "val"}, {"label" : "rootParser", "tail" : ": Parser[Seq[CodeSpan]]", "member" : "laika.bundle.SyntaxHighlighter.rootParser", "link" : "laika\/parse\/code\/languages\/LaikaASTSyntax$.html#rootParser:laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/languages\/LaikaASTSyntax$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/languages\/LaikaASTSyntax$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/languages\/LaikaASTSyntax$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/languages\/LaikaASTSyntax$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/languages\/LaikaASTSyntax$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/languages\/LaikaASTSyntax$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/languages\/LaikaASTSyntax$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/LaikaASTSyntax$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/LaikaASTSyntax$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/LaikaASTSyntax$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/languages\/LaikaASTSyntax$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/languages\/LaikaASTSyntax$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/languages\/LaikaASTSyntax$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/languages\/LaikaASTSyntax$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/languages\/LaikaASTSyntax$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/languages\/LaikaASTSyntax$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/languages\/LaikaASTSyntax$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/languages\/LaikaASTSyntax$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/languages\/LaikaASTSyntax$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.languages.LaikaExtensionSyntax", "shortDescription" : "", "object" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html", "members_object" : [{"label" : "forHTML", "tail" : ": SyntaxHighlighter", "member" : "laika.parse.code.languages.LaikaExtensionSyntax.forHTML", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#forHTML:laika.bundle.SyntaxHighlighter", "kind" : "lazy val"}, {"label" : "modifiedHTMLParsers", "tail" : ": Seq[CodeSpanParser]", "member" : "laika.parse.code.languages.LaikaExtensionSyntax.modifiedHTMLParsers", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#modifiedHTMLParsers:Seq[laika.parse.code.CodeSpanParser]", "kind" : "val"}, {"label" : "enhancedStartTag", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.LaikaExtensionSyntax.enhancedStartTag", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#enhancedStartTag:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "forRst", "tail" : ": SyntaxHighlighter", "member" : "laika.parse.code.languages.LaikaExtensionSyntax.forRst", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#forRst:laika.bundle.SyntaxHighlighter", "kind" : "lazy val"}, {"label" : "forMarkdown", "tail" : ": SyntaxHighlighter", "member" : "laika.parse.code.languages.LaikaExtensionSyntax.forMarkdown", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#forMarkdown:laika.bundle.SyntaxHighlighter", "kind" : "lazy val"}, {"label" : "allExtensions", "tail" : ": Seq[CodeSpanParser]", "member" : "laika.parse.code.languages.LaikaExtensionSyntax.allExtensions", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#allExtensions:Seq[laika.parse.code.CodeSpanParser]", "kind" : "val"}, {"label" : "fence", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.LaikaExtensionSyntax.fence", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#fence:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "directive", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.LaikaExtensionSyntax.directive", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#directive:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "embeddedHocon", "tail" : "(start: String, end: String, delimCategory: Set[CodeCategory]): PrefixedParser[Seq[CodeSpan]]", "member" : "laika.parse.code.languages.LaikaExtensionSyntax.embeddedHocon", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#embeddedHocon(start:String,end:String,delimCategory:Set[laika.parse.code.CodeCategory]):laika.parse.text.PrefixedParser[Seq[laika.ast.CodeSpan]]", "kind" : "def"}, {"label" : "hoconBlock", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.LaikaExtensionSyntax.hoconBlock", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#hoconBlock:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "substitution", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.LaikaExtensionSyntax.substitution", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#substitution:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/languages\/LaikaExtensionSyntax$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.languages.MarkdownSyntax", "shortDescription" : "", "object" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html", "members_object" : [{"label" : "spanParsers", "tail" : ": Seq[CodeSpanParser]", "member" : "laika.parse.code.languages.MarkdownSyntax.spanParsers", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#spanParsers:Seq[laika.parse.code.CodeSpanParser]", "kind" : "val"}, {"label" : "language", "tail" : ": NonEmptyList[String]", "member" : "laika.parse.code.languages.MarkdownSyntax.language", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#language:cats.data.NonEmptyList[String]", "kind" : "val"}, {"label" : "mdSpans", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.MarkdownSyntax.mdSpans", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#mdSpans:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "quoteChars", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.MarkdownSyntax.quoteChars", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#quoteChars:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "rules", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.MarkdownSyntax.rules", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#rules:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "codeFence", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.MarkdownSyntax.codeFence", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#codeFence:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "setexHeader", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.MarkdownSyntax.setexHeader", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#setexHeader:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "atxHeader", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.MarkdownSyntax.atxHeader", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#atxHeader:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "linkTarget", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.MarkdownSyntax.linkTarget", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#linkTarget:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "image", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.MarkdownSyntax.image", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#image:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "link", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.MarkdownSyntax.link", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#link:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "singleLine", "tail" : "(category: CodeCategory, start: String, end: Char): CodeSpanParser", "member" : "laika.parse.code.languages.MarkdownSyntax.singleLine", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#singleLine(category:laika.parse.code.CodeCategory,start:String,end:Char):laika.parse.code.CodeSpanParser", "kind" : "def"}, {"label" : "span", "tail" : "(category: CodeCategory, delim: String): CodeSpanParser", "member" : "laika.parse.code.languages.MarkdownSyntax.span", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#span(category:laika.parse.code.CodeCategory,delim:String):laika.parse.code.CodeSpanParser", "kind" : "def"}, {"label" : "rootParser", "tail" : ": Parser[Seq[CodeSpan]]", "member" : "laika.bundle.SyntaxHighlighter.rootParser", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#rootParser:laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/languages\/MarkdownSyntax$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.languages.PythonSyntax", "shortDescription" : "", "object" : "laika\/parse\/code\/languages\/PythonSyntax$.html", "members_object" : [{"label" : "spanParsers", "tail" : ": Seq[CodeSpanParser]", "member" : "laika.parse.code.languages.PythonSyntax.spanParsers", "link" : "laika\/parse\/code\/languages\/PythonSyntax$.html#spanParsers:Seq[laika.parse.code.CodeSpanParser]", "kind" : "val"}, {"label" : "language", "tail" : ": NonEmptyList[String]", "member" : "laika.parse.code.languages.PythonSyntax.language", "link" : "laika\/parse\/code\/languages\/PythonSyntax$.html#language:cats.data.NonEmptyList[String]", "kind" : "val"}, {"label" : "stringLiteral", "tail" : "(embed: (StringParser) ⇒ StringParser)(prefix: String, prefixes: String*): CodeSpanParser", "member" : "laika.parse.code.languages.PythonSyntax.stringLiteral", "link" : "laika\/parse\/code\/languages\/PythonSyntax$.html#stringLiteral(embed:laika.parse.code.common.StringLiteral.StringParser=>laika.parse.code.common.StringLiteral.StringParser)(prefix:String,prefixes:String*):laika.parse.code.CodeSpanParser", "kind" : "def"}, {"label" : "embedSubstitutions", "tail" : "(parser: StringParser): StringParser", "member" : "laika.parse.code.languages.PythonSyntax.embedSubstitutions", "link" : "laika\/parse\/code\/languages\/PythonSyntax$.html#embedSubstitutions(parser:laika.parse.code.common.StringLiteral.StringParser):laika.parse.code.common.StringLiteral.StringParser", "kind" : "def"}, {"label" : "embedEscapes", "tail" : "(parser: StringParser): StringParser", "member" : "laika.parse.code.languages.PythonSyntax.embedEscapes", "link" : "laika\/parse\/code\/languages\/PythonSyntax$.html#embedEscapes(parser:laika.parse.code.common.StringLiteral.StringParser):laika.parse.code.common.StringLiteral.StringParser", "kind" : "def"}, {"label" : "rootParser", "tail" : ": Parser[Seq[CodeSpan]]", "member" : "laika.bundle.SyntaxHighlighter.rootParser", "link" : "laika\/parse\/code\/languages\/PythonSyntax$.html#rootParser:laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/languages\/PythonSyntax$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/languages\/PythonSyntax$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/languages\/PythonSyntax$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/languages\/PythonSyntax$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/languages\/PythonSyntax$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/languages\/PythonSyntax$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/languages\/PythonSyntax$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/PythonSyntax$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/PythonSyntax$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/PythonSyntax$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/languages\/PythonSyntax$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/languages\/PythonSyntax$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/languages\/PythonSyntax$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/languages\/PythonSyntax$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/languages\/PythonSyntax$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/languages\/PythonSyntax$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/languages\/PythonSyntax$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/languages\/PythonSyntax$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/languages\/PythonSyntax$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.languages.ReStructuredTextSyntax", "shortDescription" : "", "object" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html", "members_object" : [{"label" : "spanParsers", "tail" : ": Seq[CodeSpanParser]", "member" : "laika.parse.code.languages.ReStructuredTextSyntax.spanParsers", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#spanParsers:Seq[laika.parse.code.CodeSpanParser]", "kind" : "val"}, {"label" : "language", "tail" : ": NonEmptyList[String]", "member" : "laika.parse.code.languages.ReStructuredTextSyntax.language", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#language:cats.data.NonEmptyList[String]", "kind" : "val"}, {"label" : "fieldDef", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.ReStructuredTextSyntax.fieldDef", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#fieldDef:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "explicitItems", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.ReStructuredTextSyntax.explicitItems", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#explicitItems:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "transition", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.ReStructuredTextSyntax.transition", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#transition:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "underlinedHeader", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.ReStructuredTextSyntax.underlinedHeader", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#underlinedHeader:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "header", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.ReStructuredTextSyntax.header", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#header:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "footnote", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.ReStructuredTextSyntax.footnote", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#footnote:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "internalTarget", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.ReStructuredTextSyntax.internalTarget", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#internalTarget:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "roleName", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.ReStructuredTextSyntax.roleName", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#roleName:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "interpretedText", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.ReStructuredTextSyntax.interpretedText", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#interpretedText:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "subst", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.ReStructuredTextSyntax.subst", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#subst:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "ref", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.ReStructuredTextSyntax.ref", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#ref:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "lit", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.ReStructuredTextSyntax.lit", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#lit:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "em", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.ReStructuredTextSyntax.em", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#em:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "strong", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.ReStructuredTextSyntax.strong", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#strong:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "rawSpan", "tail" : "(end: String, category: CodeCategory): Parser[CodeSpan]", "member" : "laika.parse.code.languages.ReStructuredTextSyntax.rawSpan", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#rawSpan(end:String,category:laika.parse.code.CodeCategory):laika.parse.Parser[laika.ast.CodeSpan]", "kind" : "def"}, {"label" : "rawSpan", "tail" : "(start: String, end: String, category: CodeCategory): Parser[CodeSpan]", "member" : "laika.parse.code.languages.ReStructuredTextSyntax.rawSpan", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#rawSpan(start:String,end:String,category:laika.parse.code.CodeCategory):laika.parse.Parser[laika.ast.CodeSpan]", "kind" : "def"}, {"label" : "rootParser", "tail" : ": Parser[Seq[CodeSpan]]", "member" : "laika.bundle.SyntaxHighlighter.rootParser", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#rootParser:laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/languages\/ReStructuredTextSyntax$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.languages.ScalaSyntax", "shortDescription" : "", "object" : "laika\/parse\/code\/languages\/ScalaSyntax$.html", "members_object" : [{"label" : "spanParsers", "tail" : ": Seq[CodeSpanParser]", "member" : "laika.parse.code.languages.ScalaSyntax.spanParsers", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#spanParsers:Seq[laika.parse.code.CodeSpanParser]", "kind" : "val"}, {"label" : "declaration", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.ScalaSyntax.declaration", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#declaration:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "identifier", "tail" : ": IdParser", "member" : "laika.parse.code.languages.ScalaSyntax.identifier", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#identifier:laika.parse.code.common.Identifier.IdParser", "kind" : "val"}, {"label" : "keywords", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.ScalaSyntax.keywords", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#keywords:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "numberLiteral", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.ScalaSyntax.numberLiteral", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#numberLiteral:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "stringLiteral", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.ScalaSyntax.stringLiteral", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#stringLiteral:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "substitutions", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.ScalaSyntax.substitutions", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#substitutions:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "stringPrefixChar", "tail" : ": PrefixedParser[String]", "member" : "laika.parse.code.languages.ScalaSyntax.stringPrefixChar", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#stringPrefixChar:laika.parse.text.PrefixedParser[String]", "kind" : "val"}, {"label" : "charEscapes", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.ScalaSyntax.charEscapes", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#charEscapes:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "backtickId", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.ScalaSyntax.backtickId", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#backtickId:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "symbol", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.ScalaSyntax.symbol", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#symbol:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "comment", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.ScalaSyntax.comment", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#comment:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "language", "tail" : ": NonEmptyList[String]", "member" : "laika.parse.code.languages.ScalaSyntax.language", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#language:cats.data.NonEmptyList[String]", "kind" : "val"}, {"label" : "rootParser", "tail" : ": Parser[Seq[CodeSpan]]", "member" : "laika.bundle.SyntaxHighlighter.rootParser", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#rootParser:laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/languages\/ScalaSyntax$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.languages.SQLSyntax", "shortDescription" : "", "object" : "laika\/parse\/code\/languages\/SQLSyntax$.html", "members_object" : [{"label" : "spanParsers", "tail" : ": Seq[CodeSpanParser]", "member" : "laika.parse.code.languages.SQLSyntax.spanParsers", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#spanParsers:Seq[laika.parse.code.CodeSpanParser]", "kind" : "val"}, {"label" : "literalValue", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.SQLSyntax.literalValue", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#literalValue:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "boolean", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.SQLSyntax.boolean", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#boolean:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "dataTypes", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.SQLSyntax.dataTypes", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#dataTypes:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "keywords", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.SQLSyntax.keywords", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#keywords:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "doubleQuoteEscape", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.SQLSyntax.doubleQuoteEscape", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#doubleQuoteEscape:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "singleQuoteEscape", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.SQLSyntax.singleQuoteEscape", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#singleQuoteEscape:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "language", "tail" : ": NonEmptyList[String]", "member" : "laika.parse.code.languages.SQLSyntax.language", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#language:cats.data.NonEmptyList[String]", "kind" : "val"}, {"label" : "rootParser", "tail" : ": Parser[Seq[CodeSpan]]", "member" : "laika.bundle.SyntaxHighlighter.rootParser", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#rootParser:laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/languages\/SQLSyntax$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.languages.TypeScriptSyntax", "shortDescription" : "", "object" : "laika\/parse\/code\/languages\/TypeScriptSyntax$.html", "members_object" : [{"label" : "TSX", "tail" : "", "member" : "laika.parse.code.languages.TypeScriptSyntax.TSX", "link" : "laika\/parse\/code\/languages\/TypeScriptSyntax$.html#TSX", "kind" : "object"}, {"label" : "spanParsers", "tail" : ": Seq[CodeSpanParser]", "member" : "laika.parse.code.languages.TypeScriptSyntax.spanParsers", "link" : "laika\/parse\/code\/languages\/TypeScriptSyntax$.html#spanParsers:Seq[laika.parse.code.CodeSpanParser]", "kind" : "val"}, {"label" : "language", "tail" : ": NonEmptyList[String]", "member" : "laika.parse.code.languages.TypeScriptSyntax.language", "link" : "laika\/parse\/code\/languages\/TypeScriptSyntax$.html#language:cats.data.NonEmptyList[String]", "kind" : "val"}, {"label" : "stringEmbeds", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.TypeScriptSyntax.stringEmbeds", "link" : "laika\/parse\/code\/languages\/TypeScriptSyntax$.html#stringEmbeds:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "rootParser", "tail" : ": Parser[Seq[CodeSpan]]", "member" : "laika.bundle.SyntaxHighlighter.rootParser", "link" : "laika\/parse\/code\/languages\/TypeScriptSyntax$.html#rootParser:laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/languages\/TypeScriptSyntax$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/languages\/TypeScriptSyntax$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/languages\/TypeScriptSyntax$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/languages\/TypeScriptSyntax$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/languages\/TypeScriptSyntax$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/languages\/TypeScriptSyntax$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/languages\/TypeScriptSyntax$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/TypeScriptSyntax$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/TypeScriptSyntax$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/TypeScriptSyntax$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/languages\/TypeScriptSyntax$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/languages\/TypeScriptSyntax$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/languages\/TypeScriptSyntax$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/languages\/TypeScriptSyntax$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/languages\/TypeScriptSyntax$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/languages\/TypeScriptSyntax$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/languages\/TypeScriptSyntax$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/languages\/TypeScriptSyntax$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/languages\/TypeScriptSyntax$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.languages.XMLSyntax", "shortDescription" : "", "object" : "laika\/parse\/code\/languages\/XMLSyntax$.html", "members_object" : [{"label" : "spanParsers", "tail" : ": Seq[CodeSpanParser]", "member" : "laika.parse.code.languages.XMLSyntax.spanParsers", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#spanParsers:Seq[laika.parse.code.CodeSpanParser]", "kind" : "val"}, {"label" : "language", "tail" : ": NonEmptyList[String]", "member" : "laika.parse.code.languages.XMLSyntax.language", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#language:cats.data.NonEmptyList[String]", "kind" : "val"}, {"label" : "docType", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.XMLSyntax.docType", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#docType:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "xmlDecl", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.XMLSyntax.xmlDecl", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#xmlDecl:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "DTD", "tail" : "", "member" : "laika.parse.code.languages.XMLSyntax.DTD", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#DTD", "kind" : "object"}, {"label" : "cdata", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.XMLSyntax.cdata", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#cdata:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "pi", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.languages.XMLSyntax.pi", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#pi:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "rootParser", "tail" : ": Parser[Seq[CodeSpan]]", "member" : "laika.bundle.SyntaxHighlighter.rootParser", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#rootParser:laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "lazy val"}, {"label" : "elementRest", "tail" : "(tagName: String, embedded: Seq[CodeSpanParser], tagNameCategory: CodeCategory): Parser[Seq[CodeSpan]]", "member" : "laika.parse.code.common.TagBasedFormats.elementRest", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#elementRest(tagName:String,embedded:Seq[laika.parse.code.CodeSpanParser],tagNameCategory:laika.parse.code.CodeCategory):laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "def"}, {"label" : "endTag", "tail" : ": TagParser", "member" : "laika.parse.code.common.TagBasedFormats.endTag", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#endTag:laika.parse.code.common.TagParser", "kind" : "val"}, {"label" : "startTag", "tail" : ": TagParser", "member" : "laika.parse.code.common.TagBasedFormats.startTag", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#startTag:laika.parse.code.common.TagParser", "kind" : "val"}, {"label" : "emptyTag", "tail" : ": TagParser", "member" : "laika.parse.code.common.TagBasedFormats.emptyTag", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#emptyTag:laika.parse.code.common.TagParser", "kind" : "val"}, {"label" : "stringWithEntities", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.common.TagBasedFormats.stringWithEntities", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#stringWithEntities:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "string", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.common.TagBasedFormats.string", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#string:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "ref", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.common.TagBasedFormats.ref", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#ref:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "name", "tail" : "(category: CodeCategory): CodeSpanParser", "member" : "laika.parse.code.common.TagBasedFormats.name", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#name(category:laika.parse.code.CodeCategory):laika.parse.code.CodeSpanParser", "kind" : "def"}, {"label" : "comment", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.common.TagBasedFormats.comment", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#comment:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/languages\/XMLSyntax$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.languages.YAMLSyntax", "shortDescription" : "", "object" : "laika\/parse\/code\/languages\/YAMLSyntax$.html", "members_object" : [{"label" : "spanParsers", "tail" : "(): Seq[CodeSpanParser]", "member" : "laika.parse.code.languages.YAMLSyntax.spanParsers", "link" : "laika\/parse\/code\/languages\/YAMLSyntax$.html#spanParsers:Seq[laika.parse.code.CodeSpanParser]", "kind" : "def"}, {"label" : "language", "tail" : "(): NonEmptyList[String]", "member" : "laika.parse.code.languages.YAMLSyntax.language", "link" : "laika\/parse\/code\/languages\/YAMLSyntax$.html#language:cats.data.NonEmptyList[String]", "kind" : "def"}, {"label" : "rootParser", "tail" : ": Parser[Seq[CodeSpan]]", "member" : "laika.bundle.SyntaxHighlighter.rootParser", "link" : "laika\/parse\/code\/languages\/YAMLSyntax$.html#rootParser:laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/languages\/YAMLSyntax$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/languages\/YAMLSyntax$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/languages\/YAMLSyntax$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/languages\/YAMLSyntax$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/languages\/YAMLSyntax$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/languages\/YAMLSyntax$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/languages\/YAMLSyntax$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/YAMLSyntax$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/YAMLSyntax$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/languages\/YAMLSyntax$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/languages\/YAMLSyntax$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/languages\/YAMLSyntax$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/languages\/YAMLSyntax$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/languages\/YAMLSyntax$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/languages\/YAMLSyntax$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/languages\/YAMLSyntax$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/languages\/YAMLSyntax$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/languages\/YAMLSyntax$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/languages\/YAMLSyntax$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "laika.parse" : [{"name" : "laika.parse.BlockSource", "shortDescription" : "A block source represents the source for a block level element where each individual line mighthave a different x-offset to the root source.", "object" : "laika\/parse\/BlockSource$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "laika.parse.BlockSource.toString", "link" : "laika\/parse\/BlockSource.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(obj: Any): Boolean", "member" : "laika.parse.BlockSource.equals", "link" : "laika\/parse\/BlockSource.html#equals(obj:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "laika.parse.BlockSource.hashCode", "link" : "laika\/parse\/BlockSource.html#hashCode():Int", "kind" : "def"}, {"label" : "reverse", "tail" : "(): BlockSource", "member" : "laika.parse.BlockSource.reverse", "link" : "laika\/parse\/BlockSource.html#reverse:laika.parse.BlockSource", "kind" : "def"}, {"label" : "nextNestLevel", "tail" : "(): BlockSource", "member" : "laika.parse.BlockSource.nextNestLevel", "link" : "laika\/parse\/BlockSource.html#nextNestLevel:laika.parse.BlockSource", "kind" : "def"}, {"label" : "position", "tail" : ": Position", "member" : "laika.parse.BlockSource.position", "link" : "laika\/parse\/BlockSource.html#position:laika.parse.Position", "kind" : "lazy val"}, {"label" : "root", "tail" : ": RootSource", "member" : "laika.parse.BlockSource.root", "link" : "laika\/parse\/BlockSource.html#root:laika.parse.RootSource", "kind" : "lazy val"}, {"label" : "consume", "tail" : "(numChars: Int): BlockSource", "member" : "laika.parse.BlockSource.consume", "link" : "laika\/parse\/BlockSource.html#consume(numChars:Int):laika.parse.BlockSource", "kind" : "def"}, {"label" : "capture", "tail" : "(numChars: Int): String", "member" : "laika.parse.BlockSource.capture", "link" : "laika\/parse\/BlockSource.html#capture(numChars:Int):String", "kind" : "def"}, {"label" : "remaining", "tail" : "(): Int", "member" : "laika.parse.BlockSource.remaining", "link" : "laika\/parse\/BlockSource.html#remaining:Int", "kind" : "def"}, {"label" : "atEnd", "tail" : "(): Boolean", "member" : "laika.parse.BlockSource.atEnd", "link" : "laika\/parse\/BlockSource.html#atEnd:Boolean", "kind" : "def"}, {"label" : "input", "tail" : ": String", "member" : "laika.parse.BlockSource.input", "link" : "laika\/parse\/BlockSource.html#input:String", "kind" : "lazy val"}, {"label" : "Self", "tail" : "", "member" : "laika.parse.BlockSource.Self", "link" : "laika\/parse\/BlockSource.html#Self=laika.parse.BlockSource", "kind" : "type"}, {"member" : "laika.parse.BlockSource#<init>", "error" : "unsupported entity"}, {"label" : "nestLevel", "tail" : ": Int", "member" : "laika.parse.BlockSource.nestLevel", "link" : "laika\/parse\/BlockSource.html#nestLevel:Int", "kind" : "val"}, {"label" : "offset", "tail" : ": Int", "member" : "laika.parse.BlockSource.offset", "link" : "laika\/parse\/BlockSource.html#offset:Int", "kind" : "val"}, {"label" : "lines", "tail" : ": NonEmptyChain[LineSource]", "member" : "laika.parse.BlockSource.lines", "link" : "laika\/parse\/BlockSource.html#lines:cats.data.NonEmptyChain[laika.parse.LineSource]", "kind" : "val"}, {"label" : "canConsume", "tail" : "(maxChars: Int): Int", "member" : "laika.parse.SourceCursor.canConsume", "link" : "laika\/parse\/BlockSource.html#canConsume(maxChars:Int):Int", "kind" : "def"}, {"label" : "charAt", "tail" : "(relativeOffset: Int): Char", "member" : "laika.parse.SourceCursor.charAt", "link" : "laika\/parse\/BlockSource.html#charAt(relativeOffset:Int):Char", "kind" : "def"}, {"label" : "char", "tail" : "(): Char", "member" : "laika.parse.SourceCursor.char", "link" : "laika\/parse\/BlockSource.html#char:Char", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "laika.parse.SourceCursor.length", "link" : "laika\/parse\/BlockSource.html#length:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/BlockSource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/BlockSource.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/BlockSource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/BlockSource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/BlockSource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/BlockSource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/BlockSource.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/BlockSource.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/BlockSource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/BlockSource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/BlockSource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/BlockSource.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/BlockSource.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/BlockSource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/BlockSource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/BlockSource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(firstLine: LineSource, rest: LineSource*): BlockSource", "member" : "laika.parse.BlockSource.apply", "link" : "laika\/parse\/BlockSource$.html#apply(firstLine:laika.parse.LineSource,rest:laika.parse.LineSource*):laika.parse.BlockSource", "kind" : "def"}, {"label" : "apply", "tail" : "(lines: NonEmptyChain[LineSource]): BlockSource", "member" : "laika.parse.BlockSource.apply", "link" : "laika\/parse\/BlockSource$.html#apply(lines:cats.data.NonEmptyChain[laika.parse.LineSource]):laika.parse.BlockSource", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/BlockSource$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/BlockSource$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/BlockSource$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/BlockSource$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/BlockSource$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/BlockSource$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/BlockSource$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/BlockSource$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/BlockSource$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/BlockSource$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/BlockSource$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/BlockSource$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/BlockSource$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/BlockSource$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/BlockSource$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/BlockSource$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/BlockSource$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/BlockSource$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/BlockSource$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/parse\/BlockSource.html", "kind" : "class"}, {"name" : "laika.parse.builders", "shortDescription" : "Grouping of all parser builders that allows to construct most common parsers with a single import.", "object" : "laika\/parse\/builders$.html", "members_object" : [{"label" : "TryOps", "tail" : "", "member" : "laika.parse.combinator.Parsers.TryOps", "link" : "laika\/parse\/combinator\/Parsers.html#TryOps[A]extendsAnyRef", "kind" : "implicit class"}, {"label" : "ParserException", "tail" : "", "member" : "laika.parse.combinator.Parsers.ParserException", "link" : "laika\/parse\/combinator\/Parsers.html#ParserExceptionextendsRuntimeExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "indentedBlockWithLevel", "tail" : "(minIndent: Int, linePredicate: ⇒ Parser[Any], endsOnBlankLine: Boolean, firstLineIndented: Boolean, maxIndent: Int): Parser[(BlockSource, Int)]", "member" : "laika.parse.markup.BlockParsers.indentedBlockWithLevel", "link" : "laika\/parse\/builders$.html#indentedBlockWithLevel(minIndent:Int,linePredicate:=>laika.parse.Parser[Any],endsOnBlankLine:Boolean,firstLineIndented:Boolean,maxIndent:Int):laika.parse.Parser[(laika.parse.BlockSource,Int)]", "kind" : "def"}, {"label" : "indentedBlock", "tail" : "(minIndent: Int, linePredicate: ⇒ Parser[Any], endsOnBlankLine: Boolean, firstLineIndented: Boolean, maxIndent: Int): Parser[BlockSource]", "member" : "laika.parse.markup.BlockParsers.indentedBlock", "link" : "laika\/parse\/builders$.html#indentedBlock(minIndent:Int,linePredicate:=>laika.parse.Parser[Any],endsOnBlankLine:Boolean,firstLineIndented:Boolean,maxIndent:Int):laika.parse.Parser[laika.parse.BlockSource]", "kind" : "def"}, {"label" : "block", "tail" : "(firstLinePrefix: Parser[Any], linePrefix: ⇒ Parser[Any], nextBlockPrefix: ⇒ Parser[Any]): Parser[BlockSource]", "member" : "laika.parse.markup.BlockParsers.block", "link" : "laika\/parse\/builders$.html#block(firstLinePrefix:laika.parse.Parser[Any],linePrefix:=>laika.parse.Parser[Any],nextBlockPrefix:=>laika.parse.Parser[Any]):laika.parse.Parser[laika.parse.BlockSource]", "kind" : "def"}, {"label" : "block", "tail" : "(firstLinePrefix: Parser[Any], linePrefix: ⇒ Parser[Any]): Parser[BlockSource]", "member" : "laika.parse.markup.BlockParsers.block", "link" : "laika\/parse\/builders$.html#block(firstLinePrefix:laika.parse.Parser[Any],linePrefix:=>laika.parse.Parser[Any]):laika.parse.Parser[laika.parse.BlockSource]", "kind" : "def"}, {"label" : "text", "tail" : "(parser: ⇒ DelimitedText): InlineParser[String, String]", "member" : "laika.parse.markup.InlineParsers.text", "link" : "laika\/parse\/builders$.html#text(parser:=>laika.parse.text.DelimitedText):laika.parse.markup.InlineParser[String,String]", "kind" : "def"}, {"label" : "spans", "tail" : "(parser: ⇒ DelimitedText): InlineParser[Span, List[Span]]", "member" : "laika.parse.markup.InlineParsers.spans", "link" : "laika\/parse\/builders$.html#spans(parser:=>laika.parse.text.DelimitedText):laika.parse.markup.InlineParser[laika.ast.Span,List[laika.ast.Span]]", "kind" : "def"}, {"label" : "delimiter", "tail" : "(parser: PrefixedParser[String]): DelimiterParser", "member" : "laika.parse.text.TextParsers.delimiter", "link" : "laika\/parse\/builders$.html#delimiter(parser:laika.parse.text.PrefixedParser[String]):laika.parse.text.DelimiterParser", "kind" : "def"}, {"label" : "delimiter", "tail" : "(delim: String): DelimiterParser", "member" : "laika.parse.text.TextParsers.delimiter", "link" : "laika\/parse\/builders$.html#delimiter(delim:String):laika.parse.text.DelimiterParser", "kind" : "def"}, {"label" : "delimiter", "tail" : "(char: Char, chars: Char*): DelimiterParser", "member" : "laika.parse.text.TextParsers.delimiter", "link" : "laika\/parse\/builders$.html#delimiter(char:Char,chars:Char*):laika.parse.text.DelimiterParser", "kind" : "def"}, {"label" : "delimitedBy", "tail" : "(delimiter: PrefixedParser[String]): DelimitedText", "member" : "laika.parse.text.TextParsers.delimitedBy", "link" : "laika\/parse\/builders$.html#delimitedBy(delimiter:laika.parse.text.PrefixedParser[String]):laika.parse.text.DelimitedText", "kind" : "def"}, {"label" : "delimitedBy", "tail" : "(str: String): DelimitedText", "member" : "laika.parse.text.TextParsers.delimitedBy", "link" : "laika\/parse\/builders$.html#delimitedBy(str:String):laika.parse.text.DelimitedText", "kind" : "def"}, {"label" : "delimitedBy", "tail" : "(chars: NonEmptySet[Char]): DelimitedText", "member" : "laika.parse.text.TextParsers.delimitedBy", "link" : "laika\/parse\/builders$.html#delimitedBy(chars:cats.data.NonEmptySet[Char]):laika.parse.text.DelimitedText", "kind" : "def"}, {"label" : "delimitedBy", "tail" : "(char: Char, chars: Char*): DelimitedText", "member" : "laika.parse.text.TextParsers.delimitedBy", "link" : "laika\/parse\/builders$.html#delimitedBy(char:Char,chars:Char*):laika.parse.text.DelimitedText", "kind" : "def"}, {"label" : "someWhile", "tail" : "(p: (Char) ⇒ Boolean): Characters[String]", "member" : "laika.parse.text.TextParsers.someWhile", "link" : "laika\/parse\/builders$.html#someWhile(p:Char=>Boolean):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "someNot", "tail" : "(chars: NonEmptySet[Char]): Characters[String]", "member" : "laika.parse.text.TextParsers.someNot", "link" : "laika\/parse\/builders$.html#someNot(chars:cats.data.NonEmptySet[Char]):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "someNot", "tail" : "(char: Char, chars: Char*): Characters[String]", "member" : "laika.parse.text.TextParsers.someNot", "link" : "laika\/parse\/builders$.html#someNot(char:Char,chars:Char*):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "someOf", "tail" : "(chars: NonEmptySet[Char]): PrefixCharacters[String]", "member" : "laika.parse.text.TextParsers.someOf", "link" : "laika\/parse\/builders$.html#someOf(chars:cats.data.NonEmptySet[Char]):laika.parse.text.PrefixCharacters[String]", "kind" : "def"}, {"label" : "someOf", "tail" : "(char: Char, chars: Char*): PrefixCharacters[String]", "member" : "laika.parse.text.TextParsers.someOf", "link" : "laika\/parse\/builders$.html#someOf(char:Char,chars:Char*):laika.parse.text.PrefixCharacters[String]", "kind" : "def"}, {"label" : "oneChar", "tail" : ": Parser[String]", "member" : "laika.parse.text.TextParsers.oneChar", "link" : "laika\/parse\/builders$.html#oneChar:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "oneIf", "tail" : "(p: (Char) ⇒ Boolean): Parser[String]", "member" : "laika.parse.text.TextParsers.oneIf", "link" : "laika\/parse\/builders$.html#oneIf(p:Char=>Boolean):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "oneNot", "tail" : "(chars: NonEmptySet[Char]): Parser[String]", "member" : "laika.parse.text.TextParsers.oneNot", "link" : "laika\/parse\/builders$.html#oneNot(chars:cats.data.NonEmptySet[Char]):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "oneNot", "tail" : "(char: Char, chars: Char*): Parser[String]", "member" : "laika.parse.text.TextParsers.oneNot", "link" : "laika\/parse\/builders$.html#oneNot(char:Char,chars:Char*):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "oneOf", "tail" : "(chars: NonEmptySet[Char]): PrefixedParser[String]", "member" : "laika.parse.text.TextParsers.oneOf", "link" : "laika\/parse\/builders$.html#oneOf(chars:cats.data.NonEmptySet[Char]):laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "oneOf", "tail" : "(char: Char, chars: Char*): PrefixedParser[String]", "member" : "laika.parse.text.TextParsers.oneOf", "link" : "laika\/parse\/builders$.html#oneOf(char:Char,chars:Char*):laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "anyWhile", "tail" : "(p: (Char) ⇒ Boolean): Characters[String]", "member" : "laika.parse.text.TextParsers.anyWhile", "link" : "laika\/parse\/builders$.html#anyWhile(p:Char=>Boolean):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "anyNot", "tail" : "(chars: NonEmptySet[Char]): Characters[String]", "member" : "laika.parse.text.TextParsers.anyNot", "link" : "laika\/parse\/builders$.html#anyNot(chars:cats.data.NonEmptySet[Char]):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "anyNot", "tail" : "(char: Char, chars: Char*): Characters[String]", "member" : "laika.parse.text.TextParsers.anyNot", "link" : "laika\/parse\/builders$.html#anyNot(char:Char,chars:Char*):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "anyOf", "tail" : "(chars: NonEmptySet[Char]): Characters[String]", "member" : "laika.parse.text.TextParsers.anyOf", "link" : "laika\/parse\/builders$.html#anyOf(chars:cats.data.NonEmptySet[Char]):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "anyOf", "tail" : "(char: Char, chars: Char*): Characters[String]", "member" : "laika.parse.text.TextParsers.anyOf", "link" : "laika\/parse\/builders$.html#anyOf(char:Char,chars:Char*):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "anyChars", "tail" : ": Characters[String]", "member" : "laika.parse.text.TextParsers.anyChars", "link" : "laika\/parse\/builders$.html#anyChars:laika.parse.text.Characters[String]", "kind" : "val"}, {"label" : "nextIs", "tail" : "(predicate: (Char) ⇒ Boolean): Parser[Unit]", "member" : "laika.parse.text.TextParsers.nextIs", "link" : "laika\/parse\/builders$.html#nextIs(predicate:Char=>Boolean):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "nextIn", "tail" : "(chars: NonEmptySet[Char]): Parser[Unit]", "member" : "laika.parse.text.TextParsers.nextIn", "link" : "laika\/parse\/builders$.html#nextIn(chars:cats.data.NonEmptySet[Char]):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "nextIn", "tail" : "(char: Char, chars: Char*): Parser[Unit]", "member" : "laika.parse.text.TextParsers.nextIn", "link" : "laika\/parse\/builders$.html#nextIn(char:Char,chars:Char*):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "prevIs", "tail" : "(predicate: (Char) ⇒ Boolean): Parser[Unit]", "member" : "laika.parse.text.TextParsers.prevIs", "link" : "laika\/parse\/builders$.html#prevIs(predicate:Char=>Boolean):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "prevIn", "tail" : "(chars: NonEmptySet[Char]): Parser[Unit]", "member" : "laika.parse.text.TextParsers.prevIn", "link" : "laika\/parse\/builders$.html#prevIn(chars:cats.data.NonEmptySet[Char]):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "prevIn", "tail" : "(char: Char, chars: Char*): Parser[Unit]", "member" : "laika.parse.text.TextParsers.prevIn", "link" : "laika\/parse\/builders$.html#prevIn(char:Char,chars:Char*):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "nextNot", "tail" : "(predicate: (Char) ⇒ Boolean): Parser[Unit]", "member" : "laika.parse.text.TextParsers.nextNot", "link" : "laika\/parse\/builders$.html#nextNot(predicate:Char=>Boolean):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "nextNot", "tail" : "(chars: NonEmptySet[Char]): Parser[Unit]", "member" : "laika.parse.text.TextParsers.nextNot", "link" : "laika\/parse\/builders$.html#nextNot(chars:cats.data.NonEmptySet[Char]):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "nextNot", "tail" : "(char: Char, chars: Char*): Parser[Unit]", "member" : "laika.parse.text.TextParsers.nextNot", "link" : "laika\/parse\/builders$.html#nextNot(char:Char,chars:Char*):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "prevNot", "tail" : "(predicate: (Char) ⇒ Boolean): Parser[Unit]", "member" : "laika.parse.text.TextParsers.prevNot", "link" : "laika\/parse\/builders$.html#prevNot(predicate:Char=>Boolean):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "prevNot", "tail" : "(chars: NonEmptySet[Char]): Parser[Unit]", "member" : "laika.parse.text.TextParsers.prevNot", "link" : "laika\/parse\/builders$.html#prevNot(chars:cats.data.NonEmptySet[Char]):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "prevNot", "tail" : "(char: Char, chars: Char*): Parser[Unit]", "member" : "laika.parse.text.TextParsers.prevNot", "link" : "laika\/parse\/builders$.html#prevNot(char:Char,chars:Char*):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "textLine", "tail" : ": Parser[String]", "member" : "laika.parse.text.TextParsers.textLine", "link" : "laika\/parse\/builders$.html#textLine:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "restOfLine", "tail" : ": Parser[String]", "member" : "laika.parse.text.TextParsers.restOfLine", "link" : "laika\/parse\/builders$.html#restOfLine:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "blankLines", "tail" : ": Parser[List[String]]", "member" : "laika.parse.text.TextParsers.blankLines", "link" : "laika\/parse\/builders$.html#blankLines:laika.parse.Parser[List[String]]", "kind" : "val"}, {"label" : "blankLine", "tail" : ": Parser[String]", "member" : "laika.parse.text.TextParsers.blankLine", "link" : "laika\/parse\/builders$.html#blankLine:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "atStart", "tail" : ": Parser[Unit]", "member" : "laika.parse.text.TextParsers.atStart", "link" : "laika\/parse\/builders$.html#atStart:laika.parse.Parser[Unit]", "kind" : "val"}, {"label" : "eof", "tail" : ": Parser[String]", "member" : "laika.parse.text.TextParsers.eof", "link" : "laika\/parse\/builders$.html#eof:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "wsEol", "tail" : ": Parser[Unit]", "member" : "laika.parse.text.TextParsers.wsEol", "link" : "laika\/parse\/builders$.html#wsEol:laika.parse.Parser[Unit]", "kind" : "val"}, {"label" : "eol", "tail" : ": Parser[Unit]", "member" : "laika.parse.text.TextParsers.eol", "link" : "laika\/parse\/builders$.html#eol:laika.parse.Parser[Unit]", "kind" : "val"}, {"label" : "ws", "tail" : ": Characters[String]", "member" : "laika.parse.text.TextParsers.ws", "link" : "laika\/parse\/builders$.html#ws:laika.parse.text.Characters[String]", "kind" : "lazy val"}, {"label" : "literal", "tail" : "(expected: String): PrefixedParser[String]", "member" : "laika.parse.text.TextParsers.literal", "link" : "laika\/parse\/builders$.html#literal(expected:String):laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "range", "tail" : "(fromChar: Char, toChar: Char): NonEmptySet[Char]", "member" : "laika.parse.text.TextParsers.range", "link" : "laika\/parse\/builders$.html#range(fromChar:Char,toChar:Char):cats.data.NonEmptySet[Char]", "kind" : "def"}, {"label" : "lazily", "tail" : "(p: ⇒ Parser[T]): Parser[T]", "member" : "laika.parse.combinator.Parsers.lazily", "link" : "laika\/parse\/builders$.html#lazily[T](p:=>laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "consumeAll", "tail" : "(p: Parser[T]): Parser[T]", "member" : "laika.parse.combinator.Parsers.consumeAll", "link" : "laika\/parse\/builders$.html#consumeAll[T](p:laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "failure", "tail" : "(msg: String): Parser[Nothing]", "member" : "laika.parse.combinator.Parsers.failure", "link" : "laika\/parse\/builders$.html#failure(msg:String):laika.parse.Parser[Nothing]", "kind" : "def"}, {"label" : "success", "tail" : "(v: T): Parser[T]", "member" : "laika.parse.combinator.Parsers.success", "link" : "laika\/parse\/builders$.html#success[T](v:T):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "lookBehind", "tail" : "(offset: Int, parser: ⇒ Parser[T]): Parser[T]", "member" : "laika.parse.combinator.Parsers.lookBehind", "link" : "laika\/parse\/builders$.html#lookBehind[T](offset:Int,parser:=>laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "lookAhead", "tail" : "(offset: Int, value: String): Parser[String]", "member" : "laika.parse.combinator.Parsers.lookAhead", "link" : "laika\/parse\/builders$.html#lookAhead(offset:Int,value:String):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "lookAhead", "tail" : "(offset: Int, p: Parser[T]): Parser[T]", "member" : "laika.parse.combinator.Parsers.lookAhead", "link" : "laika\/parse\/builders$.html#lookAhead[T](offset:Int,p:laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "lookAhead", "tail" : "(value: String): Parser[String]", "member" : "laika.parse.combinator.Parsers.lookAhead", "link" : "laika\/parse\/builders$.html#lookAhead(value:String):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "lookAhead", "tail" : "(p: Parser[T]): Parser[T]", "member" : "laika.parse.combinator.Parsers.lookAhead", "link" : "laika\/parse\/builders$.html#lookAhead[T](p:laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "not", "tail" : "(value: String): Parser[Unit]", "member" : "laika.parse.combinator.Parsers.not", "link" : "laika\/parse\/builders$.html#not(value:String):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "not", "tail" : "(p: Parser[T]): Parser[Unit]", "member" : "laika.parse.combinator.Parsers.not", "link" : "laika\/parse\/builders$.html#not[T](p:laika.parse.Parser[T]):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "opt", "tail" : "(value: String): Parser[Option[String]]", "member" : "laika.parse.combinator.Parsers.opt", "link" : "laika\/parse\/builders$.html#opt(value:String):laika.parse.Parser[Option[String]]", "kind" : "def"}, {"label" : "opt", "tail" : "(p: Parser[T]): Parser[Option[T]]", "member" : "laika.parse.combinator.Parsers.opt", "link" : "laika\/parse\/builders$.html#opt[T](p:laika.parse.Parser[T]):laika.parse.Parser[Option[T]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/builders$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/builders$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/builders$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/builders$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/builders$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/builders$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/builders$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/builders$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/builders$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/builders$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/builders$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/builders$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/builders$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/builders$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/builders$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/builders$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/builders$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/builders$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/builders$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.Failure", "shortDescription" : " The failure case of Parsed containing an error message and the remaining input.", "object" : "laika\/parse\/Failure$.html", "members_object" : [{"label" : "apply", "tail" : "(msgProvider: Message, next: SourceCursor): Failure", "member" : "laika.parse.Failure.apply", "link" : "laika\/parse\/Failure$.html#apply(msgProvider:laika.parse.Message,next:laika.parse.SourceCursor):laika.parse.Failure", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/Failure$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/Failure$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/Failure$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/Failure$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/Failure$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/Failure$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/Failure$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Failure$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Failure$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Failure$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/Failure$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/Failure$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/Failure$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/Failure$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/Failure$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/Failure$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/Failure$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/Failure$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/Failure$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "laika.parse.Failure.toString", "link" : "laika\/parse\/Failure.html#toString():String", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Nothing) ⇒ U): Failure", "member" : "laika.parse.Failure.map", "link" : "laika\/parse\/Failure.html#map[U](f:Nothing=>U):laika.parse.Failure", "kind" : "def"}, {"label" : "orElse", "tail" : "(default: ⇒ Parsed[U]): Parsed[U]", "member" : "laika.parse.Failure.orElse", "link" : "laika\/parse\/Failure.html#orElse[U](default:=>laika.parse.Parsed[U]):laika.parse.Parsed[U]", "kind" : "def"}, {"label" : "toEither", "tail" : "(): Either[String, Nothing]", "member" : "laika.parse.Failure.toEither", "link" : "laika\/parse\/Failure.html#toEither:Either[String,Nothing]", "kind" : "def"}, {"label" : "toOption", "tail" : "(): Option[Nothing]", "member" : "laika.parse.Failure.toOption", "link" : "laika\/parse\/Failure.html#toOption:Option[Nothing]", "kind" : "def"}, {"label" : "isSuccess", "tail" : ": Boolean", "member" : "laika.parse.Failure.isSuccess", "link" : "laika\/parse\/Failure.html#isSuccess:Boolean", "kind" : "val"}, {"label" : "message", "tail" : ": String", "member" : "laika.parse.Failure.message", "link" : "laika\/parse\/Failure.html#message:String", "kind" : "lazy val"}, {"member" : "laika.parse.Failure#<init>", "error" : "unsupported entity"}, {"label" : "maxOffset", "tail" : ": Int", "member" : "laika.parse.Failure.maxOffset", "link" : "laika\/parse\/Failure.html#maxOffset:Int", "kind" : "val"}, {"label" : "next", "tail" : ": SourceCursor", "member" : "laika.parse.Failure.next", "link" : "laika\/parse\/Failure.html#next:laika.parse.SourceCursor", "kind" : "val"}, {"label" : "msgProvider", "tail" : ": Message", "member" : "laika.parse.Failure.msgProvider", "link" : "laika\/parse\/Failure.html#msgProvider:laika.parse.Message", "kind" : "val"}, {"label" : "getOrElse", "tail" : "(default: ⇒ B): B", "member" : "laika.parse.Parsed.getOrElse", "link" : "laika\/parse\/Failure.html#getOrElse[B>:T](default:=>B):B", "kind" : "def"}, {"label" : "isFailure", "tail" : "(): Boolean", "member" : "laika.parse.Parsed.isFailure", "link" : "laika\/parse\/Failure.html#isFailure:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/Failure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/Failure.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/Failure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/Failure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/Failure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/Failure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/Failure.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Failure.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Failure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Failure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/Failure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/Failure.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/Failure.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/Failure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/Failure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/Failure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/parse\/Failure.html", "kind" : "case class"}, {"name" : "laika.parse.GeneratedSource", "shortDescription" : "Represents a generated source, where an AST node has been created programmatically and cannot betraced back to the corresponding input source.", "object" : "laika\/parse\/GeneratedSource$.html", "members_object" : [{"label" : "reverse", "tail" : "(): GeneratedSource.this.type", "member" : "laika.parse.GeneratedSource.reverse", "link" : "laika\/parse\/GeneratedSource$.html#reverse:laika.parse.GeneratedSource.type", "kind" : "def"}, {"label" : "nextNestLevel", "tail" : "(): GeneratedSource.this.type", "member" : "laika.parse.GeneratedSource.nextNestLevel", "link" : "laika\/parse\/GeneratedSource$.html#nextNestLevel:laika.parse.GeneratedSource.type", "kind" : "def"}, {"label" : "nestLevel", "tail" : "(): Int", "member" : "laika.parse.GeneratedSource.nestLevel", "link" : "laika\/parse\/GeneratedSource$.html#nestLevel:Int", "kind" : "def"}, {"label" : "position", "tail" : "(): Position", "member" : "laika.parse.GeneratedSource.position", "link" : "laika\/parse\/GeneratedSource$.html#position:laika.parse.Position", "kind" : "def"}, {"label" : "root", "tail" : "(): RootSource", "member" : "laika.parse.GeneratedSource.root", "link" : "laika\/parse\/GeneratedSource$.html#root:laika.parse.RootSource", "kind" : "def"}, {"label" : "consume", "tail" : "(numChars: Int): GeneratedSource.this.type", "member" : "laika.parse.GeneratedSource.consume", "link" : "laika\/parse\/GeneratedSource$.html#consume(numChars:Int):laika.parse.GeneratedSource.type", "kind" : "def"}, {"label" : "capture", "tail" : "(numChars: Int): String", "member" : "laika.parse.GeneratedSource.capture", "link" : "laika\/parse\/GeneratedSource$.html#capture(numChars:Int):String", "kind" : "def"}, {"label" : "atEnd", "tail" : "(): Boolean", "member" : "laika.parse.GeneratedSource.atEnd", "link" : "laika\/parse\/GeneratedSource$.html#atEnd:Boolean", "kind" : "def"}, {"label" : "remaining", "tail" : "(): Int", "member" : "laika.parse.GeneratedSource.remaining", "link" : "laika\/parse\/GeneratedSource$.html#remaining:Int", "kind" : "def"}, {"label" : "offset", "tail" : "(): Int", "member" : "laika.parse.GeneratedSource.offset", "link" : "laika\/parse\/GeneratedSource$.html#offset:Int", "kind" : "def"}, {"label" : "input", "tail" : "(): String", "member" : "laika.parse.GeneratedSource.input", "link" : "laika\/parse\/GeneratedSource$.html#input:String", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.parse.GeneratedSource.Self", "link" : "laika\/parse\/GeneratedSource$.html#Self=laika.parse.GeneratedSource.type", "kind" : "type"}, {"label" : "canConsume", "tail" : "(maxChars: Int): Int", "member" : "laika.parse.SourceCursor.canConsume", "link" : "laika\/parse\/GeneratedSource$.html#canConsume(maxChars:Int):Int", "kind" : "def"}, {"label" : "charAt", "tail" : "(relativeOffset: Int): Char", "member" : "laika.parse.SourceCursor.charAt", "link" : "laika\/parse\/GeneratedSource$.html#charAt(relativeOffset:Int):Char", "kind" : "def"}, {"label" : "char", "tail" : "(): Char", "member" : "laika.parse.SourceCursor.char", "link" : "laika\/parse\/GeneratedSource$.html#char:Char", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "laika.parse.SourceCursor.length", "link" : "laika\/parse\/GeneratedSource$.html#length:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/GeneratedSource$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/GeneratedSource$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/GeneratedSource$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/GeneratedSource$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/GeneratedSource$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/GeneratedSource$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/GeneratedSource$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/GeneratedSource$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/GeneratedSource$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/GeneratedSource$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/GeneratedSource$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/GeneratedSource$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/GeneratedSource$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/GeneratedSource$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/GeneratedSource$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/GeneratedSource$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/GeneratedSource$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/GeneratedSource$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/GeneratedSource$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.implicits", "shortDescription" : "Collection of extension methods that helps keeping parser definitions concise.", "object" : "laika\/parse\/implicits$.html", "members_object" : [{"label" : "LiteralStringOps", "tail" : "", "member" : "laika.parse.implicits.LiteralStringOps", "link" : "laika\/parse\/implicits$.html#LiteralStringOpsextendsAnyVal", "kind" : "implicit final class"}, {"label" : "PrefixedMap5Ops", "tail" : "", "member" : "laika.parse.implicits.PrefixedMap5Ops", "link" : "laika\/parse\/implicits$.html#PrefixedMap5Ops[A,B,C,D,E]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "Map5Ops", "tail" : "", "member" : "laika.parse.implicits.Map5Ops", "link" : "laika\/parse\/implicits$.html#Map5Ops[A,B,C,D,E]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "PrefixedMap4Ops", "tail" : "", "member" : "laika.parse.implicits.PrefixedMap4Ops", "link" : "laika\/parse\/implicits$.html#PrefixedMap4Ops[A,B,C,D]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "Map4Ops", "tail" : "", "member" : "laika.parse.implicits.Map4Ops", "link" : "laika\/parse\/implicits$.html#Map4Ops[A,B,C,D]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "PrefixedMap3Ops", "tail" : "", "member" : "laika.parse.implicits.PrefixedMap3Ops", "link" : "laika\/parse\/implicits$.html#PrefixedMap3Ops[A,B,C]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "Map3Ops", "tail" : "", "member" : "laika.parse.implicits.Map3Ops", "link" : "laika\/parse\/implicits$.html#Map3Ops[A,B,C]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "PrefixedMap2Ops", "tail" : "", "member" : "laika.parse.implicits.PrefixedMap2Ops", "link" : "laika\/parse\/implicits$.html#PrefixedMap2Ops[A,B]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "Map2Ops", "tail" : "", "member" : "laika.parse.implicits.Map2Ops", "link" : "laika\/parse\/implicits$.html#Map2Ops[A,B]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "PrefixedStringParserOps", "tail" : "", "member" : "laika.parse.implicits.PrefixedStringParserOps", "link" : "laika\/parse\/implicits$.html#PrefixedStringParserOps[T]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "StringParserOps", "tail" : "", "member" : "laika.parse.implicits.StringParserOps", "link" : "laika\/parse\/implicits$.html#StringParserOps[T]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "SeqStringPrefixedParserOps", "tail" : "", "member" : "laika.parse.implicits.SeqStringPrefixedParserOps", "link" : "laika\/parse\/implicits$.html#SeqStringPrefixedParserOps[T]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "SeqStringParserOps", "tail" : "", "member" : "laika.parse.implicits.SeqStringParserOps", "link" : "laika\/parse\/implicits$.html#SeqStringParserOps[T]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "Seq4PrefixedParsersOps", "tail" : "", "member" : "laika.parse.implicits.Seq4PrefixedParsersOps", "link" : "laika\/parse\/implicits$.html#Seq4PrefixedParsersOps[T]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "Seq4ParsersOps", "tail" : "", "member" : "laika.parse.implicits.Seq4ParsersOps", "link" : "laika\/parse\/implicits$.html#Seq4ParsersOps[T]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "Seq3PrefixedParsersOps", "tail" : "", "member" : "laika.parse.implicits.Seq3PrefixedParsersOps", "link" : "laika\/parse\/implicits$.html#Seq3PrefixedParsersOps[T]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "Seq3ParsersOps", "tail" : "", "member" : "laika.parse.implicits.Seq3ParsersOps", "link" : "laika\/parse\/implicits$.html#Seq3ParsersOps[T]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "Seq2PrefixedParsersOps", "tail" : "", "member" : "laika.parse.implicits.Seq2PrefixedParsersOps", "link" : "laika\/parse\/implicits$.html#Seq2PrefixedParsersOps[T]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "Seq2ParsersOps", "tail" : "", "member" : "laika.parse.implicits.Seq2ParsersOps", "link" : "laika\/parse\/implicits$.html#Seq2ParsersOps[T]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "Prepend2PrefixedParserOps", "tail" : "", "member" : "laika.parse.implicits.Prepend2PrefixedParserOps", "link" : "laika\/parse\/implicits$.html#Prepend2PrefixedParserOps[T]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "Prepend2ParserOps", "tail" : "", "member" : "laika.parse.implicits.Prepend2ParserOps", "link" : "laika\/parse\/implicits$.html#Prepend2ParserOps[T]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "PrependPrefixedParserOps", "tail" : "", "member" : "laika.parse.implicits.PrependPrefixedParserOps", "link" : "laika\/parse\/implicits$.html#PrependPrefixedParserOps[T]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "PrependParserOps", "tail" : "", "member" : "laika.parse.implicits.PrependParserOps", "link" : "laika\/parse\/implicits$.html#PrependParserOps[T]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/implicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/implicits$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/implicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/implicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/implicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/implicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/implicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/implicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/implicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/implicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/implicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/implicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/implicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/implicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/implicits$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/implicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/implicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/implicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/implicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.LineSource", "shortDescription" : "A line source represents all or part of a single line from the root input source.", "object" : "laika\/parse\/LineSource$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "laika.parse.LineSource.toString", "link" : "laika\/parse\/LineSource.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(obj: Any): Boolean", "member" : "laika.parse.LineSource.equals", "link" : "laika\/parse\/LineSource.html#equals(obj:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "laika.parse.LineSource.hashCode", "link" : "laika\/parse\/LineSource.html#hashCode():Int", "kind" : "def"}, {"label" : "trim", "tail" : "(): LineSource", "member" : "laika.parse.LineSource.trim", "link" : "laika\/parse\/LineSource.html#trim:laika.parse.LineSource", "kind" : "def"}, {"label" : "reverse", "tail" : "(): LineSource", "member" : "laika.parse.LineSource.reverse", "link" : "laika\/parse\/LineSource.html#reverse:laika.parse.LineSource", "kind" : "def"}, {"label" : "nextNestLevel", "tail" : "(): LineSource", "member" : "laika.parse.LineSource.nextNestLevel", "link" : "laika\/parse\/LineSource.html#nextNestLevel:laika.parse.LineSource", "kind" : "def"}, {"label" : "position", "tail" : ": Position", "member" : "laika.parse.LineSource.position", "link" : "laika\/parse\/LineSource.html#position:laika.parse.Position", "kind" : "lazy val"}, {"label" : "root", "tail" : ": RootSource", "member" : "laika.parse.LineSource.root", "link" : "laika\/parse\/LineSource.html#root:laika.parse.RootSource", "kind" : "lazy val"}, {"label" : "parent", "tail" : ": SourceCursor", "member" : "laika.parse.LineSource.parent", "link" : "laika\/parse\/LineSource.html#parent:laika.parse.SourceCursor", "kind" : "lazy val"}, {"label" : "consume", "tail" : "(numChars: Int): LineSource", "member" : "laika.parse.LineSource.consume", "link" : "laika\/parse\/LineSource.html#consume(numChars:Int):laika.parse.LineSource", "kind" : "def"}, {"label" : "capture", "tail" : "(numChars: Int): String", "member" : "laika.parse.LineSource.capture", "link" : "laika\/parse\/LineSource.html#capture(numChars:Int):String", "kind" : "def"}, {"label" : "remaining", "tail" : "(): Int", "member" : "laika.parse.LineSource.remaining", "link" : "laika\/parse\/LineSource.html#remaining:Int", "kind" : "def"}, {"label" : "atEnd", "tail" : "(): Boolean", "member" : "laika.parse.LineSource.atEnd", "link" : "laika\/parse\/LineSource.html#atEnd:Boolean", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.parse.LineSource.Self", "link" : "laika\/parse\/LineSource.html#Self=laika.parse.LineSource", "kind" : "type"}, {"label" : "nestLevel", "tail" : ": Int", "member" : "laika.parse.LineSource.nestLevel", "link" : "laika\/parse\/LineSource.html#nestLevel:Int", "kind" : "val"}, {"label" : "offset", "tail" : ": Int", "member" : "laika.parse.LineSource.offset", "link" : "laika\/parse\/LineSource.html#offset:Int", "kind" : "val"}, {"label" : "input", "tail" : ": String", "member" : "laika.parse.LineSource.input", "link" : "laika\/parse\/LineSource.html#input:String", "kind" : "val"}, {"label" : "canConsume", "tail" : "(maxChars: Int): Int", "member" : "laika.parse.SourceCursor.canConsume", "link" : "laika\/parse\/LineSource.html#canConsume(maxChars:Int):Int", "kind" : "def"}, {"label" : "charAt", "tail" : "(relativeOffset: Int): Char", "member" : "laika.parse.SourceCursor.charAt", "link" : "laika\/parse\/LineSource.html#charAt(relativeOffset:Int):Char", "kind" : "def"}, {"label" : "char", "tail" : "(): Char", "member" : "laika.parse.SourceCursor.char", "link" : "laika\/parse\/LineSource.html#char:Char", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "laika.parse.SourceCursor.length", "link" : "laika\/parse\/LineSource.html#length:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/LineSource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/LineSource.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/LineSource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/LineSource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/LineSource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/LineSource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/LineSource.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/LineSource.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/LineSource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/LineSource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/LineSource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/LineSource.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/LineSource.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/LineSource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/LineSource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/LineSource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(input: String, parent: SourceCursor): LineSource", "member" : "laika.parse.LineSource.apply", "link" : "laika\/parse\/LineSource$.html#apply(input:String,parent:laika.parse.SourceCursor):laika.parse.LineSource", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/LineSource$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/LineSource$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/LineSource$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/LineSource$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/LineSource$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/LineSource$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/LineSource$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/LineSource$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/LineSource$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/LineSource$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/LineSource$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/LineSource$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/LineSource$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/LineSource$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/LineSource$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/LineSource$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/LineSource$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/LineSource$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/LineSource$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/parse\/LineSource.html", "kind" : "class"}, {"name" : "laika.parse.Message", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/Message.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/Message.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/Message.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/Message.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/Message.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/Message.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/Message.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Message.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Message.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Message.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/Message.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/Message.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/Message.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/Message.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/Message.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/Message.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/Message.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/Message.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/Message.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "message", "tail" : "(source: SourceCursor): String", "member" : "laika.parse.Message.message", "link" : "laika\/parse\/Message.html#message(source:laika.parse.SourceCursor):String", "kind" : "abstract def"}], "shortDescription" : "Represents a lazy failure message.", "object" : "laika\/parse\/Message$.html", "members_object" : [{"label" : "forRuntimeValue", "tail" : "(f: (T) ⇒ String): (T) ⇒ Message", "member" : "laika.parse.Message.forRuntimeValue", "link" : "laika\/parse\/Message$.html#forRuntimeValue[T](f:T=>String):T=>laika.parse.Message", "kind" : "def"}, {"label" : "forContext", "tail" : "(f: (SourceCursor) ⇒ String): Message", "member" : "laika.parse.Message.forContext", "link" : "laika\/parse\/Message$.html#forContext(f:laika.parse.SourceCursor=>String):laika.parse.Message", "kind" : "def"}, {"label" : "fixed", "tail" : "(msg: String): Message", "member" : "laika.parse.Message.fixed", "link" : "laika\/parse\/Message$.html#fixed(msg:String):laika.parse.Message", "kind" : "def"}, {"label" : "MessageFactory", "tail" : "", "member" : "laika.parse.Message.MessageFactory", "link" : "laika\/parse\/Message$.html#MessageFactory[T]extendsT=>laika.parse.Message", "kind" : "class"}, {"label" : "ExpectedEOL", "tail" : ": Message", "member" : "laika.parse.Message.ExpectedEOL", "link" : "laika\/parse\/Message$.html#ExpectedEOL:laika.parse.Message", "kind" : "val"}, {"label" : "ExpectedStart", "tail" : ": Message", "member" : "laika.parse.Message.ExpectedStart", "link" : "laika\/parse\/Message$.html#ExpectedStart:laika.parse.Message", "kind" : "val"}, {"label" : "ExpectedEOF", "tail" : ": Message", "member" : "laika.parse.Message.ExpectedEOF", "link" : "laika\/parse\/Message$.html#ExpectedEOF:laika.parse.Message", "kind" : "val"}, {"label" : "ExpectedFailure", "tail" : ": Message", "member" : "laika.parse.Message.ExpectedFailure", "link" : "laika\/parse\/Message$.html#ExpectedFailure:laika.parse.Message", "kind" : "val"}, {"label" : "UnexpectedEOF", "tail" : ": Message", "member" : "laika.parse.Message.UnexpectedEOF", "link" : "laika\/parse\/Message$.html#UnexpectedEOF:laika.parse.Message", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/Message$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/Message$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/Message$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/Message$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/Message$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/Message$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/Message$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Message$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Message$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Message$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/Message$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/Message$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/Message$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/Message$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/Message$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/Message$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/Message$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/Message$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/Message$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/parse\/Message.html", "kind" : "trait"}, {"name" : "laika.parse.Parsed", "shortDescription" : "Represents the result of a Parser, a value of type T in case of success,a message in case of failure as well as the SourceCursor for the remaining input.", "members_class" : [{"label" : "getOrElse", "tail" : "(default: ⇒ B): B", "member" : "laika.parse.Parsed.getOrElse", "link" : "laika\/parse\/Parsed.html#getOrElse[B>:T](default:=>B):B", "kind" : "def"}, {"label" : "isFailure", "tail" : "(): Boolean", "member" : "laika.parse.Parsed.isFailure", "link" : "laika\/parse\/Parsed.html#isFailure:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/Parsed.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/Parsed.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/Parsed.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/Parsed.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/Parsed.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/Parsed.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/Parsed.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Parsed.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Parsed.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Parsed.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/Parsed.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/Parsed.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/Parsed.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/Parsed.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/Parsed.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/Parsed.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/Parsed.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/Parsed.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/Parsed.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (T) ⇒ U): Parsed[U]", "member" : "laika.parse.Parsed.map", "link" : "laika\/parse\/Parsed.html#map[U](f:T=>U):laika.parse.Parsed[U]", "kind" : "abstract def"}, {"label" : "orElse", "tail" : "(default: ⇒ Parsed[U]): Parsed[U]", "member" : "laika.parse.Parsed.orElse", "link" : "laika\/parse\/Parsed.html#orElse[U>:T](default:=>laika.parse.Parsed[U]):laika.parse.Parsed[U]", "kind" : "abstract def"}, {"label" : "toEither", "tail" : "(): Either[String, T]", "member" : "laika.parse.Parsed.toEither", "link" : "laika\/parse\/Parsed.html#toEither:Either[String,T]", "kind" : "abstract def"}, {"label" : "toOption", "tail" : "(): Option[T]", "member" : "laika.parse.Parsed.toOption", "link" : "laika\/parse\/Parsed.html#toOption:Option[T]", "kind" : "abstract def"}, {"label" : "isSuccess", "tail" : ": Boolean", "member" : "laika.parse.Parsed.isSuccess", "link" : "laika\/parse\/Parsed.html#isSuccess:Boolean", "kind" : "abstract val"}, {"label" : "next", "tail" : ": SourceCursor", "member" : "laika.parse.Parsed.next", "link" : "laika\/parse\/Parsed.html#next:laika.parse.SourceCursor", "kind" : "abstract val"}], "class" : "laika\/parse\/Parsed.html", "kind" : "class"}, {"name" : "laika.parse.Parser", "shortDescription" : " The abstract base for all parser implementations.", "object" : "laika\/parse\/Parser$.html", "members_class" : [{"label" : "withSource", "tail" : "(): Parser[(T, String)]", "member" : "laika.parse.Parser.withSource", "link" : "laika\/parse\/Parser.html#withSource:laika.parse.Parser[(T,String)]", "kind" : "def"}, {"label" : "withContext", "tail" : "(): Parser[(T, SourceFragment)]", "member" : "laika.parse.Parser.withContext", "link" : "laika\/parse\/Parser.html#withContext:laika.parse.Parser[(T,laika.parse.SourceFragment)]", "kind" : "def"}, {"label" : "withPosition", "tail" : "(): Parser[(T, Position)]", "member" : "laika.parse.Parser.withPosition", "link" : "laika\/parse\/Parser.html#withPosition:laika.parse.Parser[(T,laika.parse.Position)]", "kind" : "def"}, {"label" : "count", "tail" : "(): Parser[Int]", "member" : "laika.parse.Parser.count", "link" : "laika\/parse\/Parser.html#count:laika.parse.Parser[Int]", "kind" : "def"}, {"label" : "source", "tail" : "(): Parser[String]", "member" : "laika.parse.Parser.source", "link" : "laika\/parse\/Parser.html#source:laika.parse.Parser[String]", "kind" : "def"}, {"label" : "cursor", "tail" : "(): Parser[SourceFragment]", "member" : "laika.parse.Parser.cursor", "link" : "laika\/parse\/Parser.html#cursor:laika.parse.Parser[laika.parse.SourceFragment]", "kind" : "def"}, {"label" : "withCursor", "tail" : "(): Parser[(T, SourceFragment)]", "member" : "laika.parse.Parser.withCursor", "link" : "laika\/parse\/Parser.html#withCursor:laika.parse.Parser[(T,laika.parse.SourceFragment)]", "kind" : "def"}, {"label" : "withFailureMessage", "tail" : "(msg: String): Parser[T]", "member" : "laika.parse.Parser.withFailureMessage", "link" : "laika\/parse\/Parser.html#withFailureMessage(msg:String):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(pf: PartialFunction[Failure, Parser[U]]): Parser[U]", "member" : "laika.parse.Parser.recoverWith", "link" : "laika\/parse\/Parser.html#recoverWith[U>:T](pf:PartialFunction[laika.parse.Failure,laika.parse.Parser[U]]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "handleErrorWith", "tail" : "(f: (Failure) ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.handleErrorWith", "link" : "laika\/parse\/Parser.html#handleErrorWith[U>:T](f:laika.parse.Failure=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "repWith", "tail" : "(next: (U) ⇒ Parser[U]): Parser[List[U]]", "member" : "laika.parse.Parser.repWith", "link" : "laika\/parse\/Parser.html#repWith[U>:T](next:U=>laika.parse.Parser[U]):laika.parse.Parser[List[U]]", "kind" : "def"}, {"label" : "repUntil", "tail" : "(endCondition: Parser[U]): Parser[(List[T], Option[U])]", "member" : "laika.parse.Parser.repUntil", "link" : "laika\/parse\/Parser.html#repUntil[U](endCondition:laika.parse.Parser[U]):laika.parse.Parser[(List[T],Option[U])]", "kind" : "def"}, {"label" : "?", "tail" : "(): Parser[Option[T]]", "member" : "laika.parse.Parser.?", "link" : "laika\/parse\/Parser.html#?:laika.parse.Parser[Option[T]]", "kind" : "def"}, {"label" : "+", "tail" : "(): Repeat[T]", "member" : "laika.parse.Parser.+", "link" : "laika\/parse\/Parser.html#+:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "*", "tail" : "(): Repeat[T]", "member" : "laika.parse.Parser.*", "link" : "laika\/parse\/Parser.html#*:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(separator: String): Repeat[T]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/Parser.html#rep(separator:String):laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(separator: Parser[Unit]): Repeat[T]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/Parser.html#rep(separator:laika.parse.Parser[Unit]):laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(): Repeat[T]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/Parser.html#rep:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : ">>", "tail" : "(fq: (T) ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.>>", "link" : "laika\/parse\/Parser.html#>>[U](fq:T=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "evalMap", "tail" : "(f: (T) ⇒ Either[String, U]): Parser[U]", "member" : "laika.parse.Parser.evalMap", "link" : "laika\/parse\/Parser.html#evalMap[U](f:T=>Either[String,U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[T, U], error: (T) ⇒ String): Parser[U]", "member" : "laika.parse.Parser.collect", "link" : "laika\/parse\/Parser.html#collect[U](f:PartialFunction[T,U],error:T=>String):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "void", "tail" : "(): Parser[Unit]", "member" : "laika.parse.Parser.void", "link" : "laika\/parse\/Parser.html#void:laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "as", "tail" : "(v: ⇒ U): Parser[U]", "member" : "laika.parse.Parser.as", "link" : "laika\/parse\/Parser.html#as[U](v:=>U):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "^^", "tail" : "(f: (T) ⇒ U): Parser[U]", "member" : "laika.parse.Parser.^^", "link" : "laika\/parse\/Parser.html#^^[U](f:T=>U):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "|", "tail" : "(value: String)(ev: <:<[T, String]): Parser[String]", "member" : "laika.parse.Parser.|", "link" : "laika\/parse\/Parser.html#|(value:String)(implicitev:T<:<String):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "|", "tail" : "(p: ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.|", "link" : "laika\/parse\/Parser.html#|[U>:T](p:=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "<~", "tail" : "(p: Parser[U]): Parser[T]", "member" : "laika.parse.Parser.<~", "link" : "laika\/parse\/Parser.html#<~[U](p:laika.parse.Parser[U]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "<~", "tail" : "(value: String): Parser[T]", "member" : "laika.parse.Parser.<~", "link" : "laika\/parse\/Parser.html#<~(value:String):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "~>", "tail" : "(p: Parser[U]): Parser[U]", "member" : "laika.parse.Parser.~>", "link" : "laika\/parse\/Parser.html#~>[U](p:laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "~>", "tail" : "(value: String): Parser[String]", "member" : "laika.parse.Parser.~>", "link" : "laika\/parse\/Parser.html#~>(value:String):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "~", "tail" : "(p: Parser[U]): Parser[~[T, U]]", "member" : "laika.parse.Parser.~", "link" : "laika\/parse\/Parser.html#~[U](p:laika.parse.Parser[U]):laika.parse.Parser[T~U]", "kind" : "def"}, {"label" : "~", "tail" : "(value: String): Parser[~[T, String]]", "member" : "laika.parse.Parser.~", "link" : "laika\/parse\/Parser.html#~(value:String):laika.parse.Parser[T~String]", "kind" : "def"}, {"label" : "orElse", "tail" : "(p0: ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.orElse", "link" : "laika\/parse\/Parser.html#orElse[U>:T](p0:=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) ⇒ U): Parser[U]", "member" : "laika.parse.Parser.map", "link" : "laika\/parse\/Parser.html#map[U](f:T=>U):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (T) ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.flatMap", "link" : "laika\/parse\/Parser.html#flatMap[U](f:T=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "parse", "tail" : "(in: String): Parsed[T]", "member" : "laika.parse.Parser.parse", "link" : "laika\/parse\/Parser.html#parse(in:String):laika.parse.Parsed[T]", "kind" : "def"}, {"member" : "laika.parse.Parser#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/Parser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/Parser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/Parser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/Parser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/Parser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/Parser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/Parser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Parser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Parser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Parser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/Parser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/Parser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/Parser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/Parser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/Parser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/Parser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/Parser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/Parser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/Parser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "parse", "tail" : "(in: SourceCursor): Parsed[T]", "member" : "laika.parse.Parser.parse", "link" : "laika\/parse\/Parser.html#parse(in:laika.parse.SourceCursor):laika.parse.Parsed[T]", "kind" : "abstract def"}], "members_object" : [{"label" : "apply", "tail" : "(f: (SourceCursor) ⇒ Parsed[T]): Parser[T]", "member" : "laika.parse.Parser.apply", "link" : "laika\/parse\/Parser$.html#apply[T](f:laika.parse.SourceCursor=>laika.parse.Parsed[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/Parser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/Parser$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/Parser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/Parser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/Parser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/Parser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/Parser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Parser$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Parser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Parser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/Parser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/Parser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/Parser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/Parser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/Parser$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/Parser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/Parser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/Parser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/Parser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/parse\/Parser.html", "kind" : "class"}, {"name" : "laika.parse.Position", "shortDescription" : " Represents an offset into a source string.", "members_class" : [{"label" : "toString", "tail" : ": String", "member" : "laika.parse.Position.toString", "link" : "laika\/parse\/Position.html#toString:String", "kind" : "lazy val"}, {"label" : "lineContentWithCaret", "tail" : "(): String", "member" : "laika.parse.Position.lineContentWithCaret", "link" : "laika\/parse\/Position.html#lineContentWithCaret:String", "kind" : "def"}, {"label" : "lineContent", "tail" : ": String", "member" : "laika.parse.Position.lineContent", "link" : "laika\/parse\/Position.html#lineContent:String", "kind" : "lazy val"}, {"label" : "column", "tail" : ": Int", "member" : "laika.parse.Position.column", "link" : "laika\/parse\/Position.html#column:Int", "kind" : "lazy val"}, {"label" : "line", "tail" : ": Int", "member" : "laika.parse.Position.line", "link" : "laika\/parse\/Position.html#line:Int", "kind" : "lazy val"}, {"label" : "source", "tail" : ": String", "member" : "laika.parse.Position.source", "link" : "laika\/parse\/Position.html#source:String", "kind" : "val"}, {"member" : "laika.parse.Position#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/Position.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/Position.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/Position.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/Position.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/Position.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/Position.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/Position.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Position.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Position.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Position.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/Position.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/Position.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/Position.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/Position.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/Position.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/Position.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/Position.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/Position.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/parse\/Position.html", "kind" : "class"}, {"name" : "laika.parse.RootSource", "shortDescription" : "A root source represents the full input string of a parsing operation.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "laika.parse.RootSource.toString", "link" : "laika\/parse\/RootSource.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(obj: Any): Boolean", "member" : "laika.parse.RootSource.equals", "link" : "laika\/parse\/RootSource.html#equals(obj:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "laika.parse.RootSource.hashCode", "link" : "laika\/parse\/RootSource.html#hashCode():Int", "kind" : "def"}, {"label" : "reverse", "tail" : "(): RootSource", "member" : "laika.parse.RootSource.reverse", "link" : "laika\/parse\/RootSource.html#reverse:laika.parse.RootSource", "kind" : "def"}, {"label" : "nextNestLevel", "tail" : "(): RootSource", "member" : "laika.parse.RootSource.nextNestLevel", "link" : "laika\/parse\/RootSource.html#nextNestLevel:laika.parse.RootSource", "kind" : "def"}, {"label" : "position", "tail" : ": Position", "member" : "laika.parse.RootSource.position", "link" : "laika\/parse\/RootSource.html#position:laika.parse.Position", "kind" : "lazy val"}, {"label" : "root", "tail" : ": RootSource", "member" : "laika.parse.RootSource.root", "link" : "laika\/parse\/RootSource.html#root:laika.parse.RootSource", "kind" : "val"}, {"label" : "consume", "tail" : "(numChars: Int): RootSource", "member" : "laika.parse.RootSource.consume", "link" : "laika\/parse\/RootSource.html#consume(numChars:Int):laika.parse.RootSource", "kind" : "def"}, {"label" : "capture", "tail" : "(numChars: Int): String", "member" : "laika.parse.RootSource.capture", "link" : "laika\/parse\/RootSource.html#capture(numChars:Int):String", "kind" : "def"}, {"label" : "remaining", "tail" : "(): Int", "member" : "laika.parse.RootSource.remaining", "link" : "laika\/parse\/RootSource.html#remaining:Int", "kind" : "def"}, {"label" : "atEnd", "tail" : "(): Boolean", "member" : "laika.parse.RootSource.atEnd", "link" : "laika\/parse\/RootSource.html#atEnd:Boolean", "kind" : "def"}, {"label" : "input", "tail" : ": String", "member" : "laika.parse.RootSource.input", "link" : "laika\/parse\/RootSource.html#input:String", "kind" : "val"}, {"label" : "Self", "tail" : "", "member" : "laika.parse.RootSource.Self", "link" : "laika\/parse\/RootSource.html#Self=laika.parse.RootSource", "kind" : "type"}, {"member" : "laika.parse.RootSource#<init>", "error" : "unsupported entity"}, {"label" : "nestLevel", "tail" : ": Int", "member" : "laika.parse.RootSource.nestLevel", "link" : "laika\/parse\/RootSource.html#nestLevel:Int", "kind" : "val"}, {"label" : "offset", "tail" : ": Int", "member" : "laika.parse.RootSource.offset", "link" : "laika\/parse\/RootSource.html#offset:Int", "kind" : "val"}, {"label" : "canConsume", "tail" : "(maxChars: Int): Int", "member" : "laika.parse.SourceCursor.canConsume", "link" : "laika\/parse\/RootSource.html#canConsume(maxChars:Int):Int", "kind" : "def"}, {"label" : "charAt", "tail" : "(relativeOffset: Int): Char", "member" : "laika.parse.SourceCursor.charAt", "link" : "laika\/parse\/RootSource.html#charAt(relativeOffset:Int):Char", "kind" : "def"}, {"label" : "char", "tail" : "(): Char", "member" : "laika.parse.SourceCursor.char", "link" : "laika\/parse\/RootSource.html#char:Char", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "laika.parse.SourceCursor.length", "link" : "laika\/parse\/RootSource.html#length:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/RootSource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/RootSource.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/RootSource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/RootSource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/RootSource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/RootSource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/RootSource.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/RootSource.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/RootSource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/RootSource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/RootSource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/RootSource.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/RootSource.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/RootSource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/RootSource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/RootSource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/parse\/RootSource.html", "kind" : "class"}, {"name" : "laika.parse.SourceCursor", "members_trait" : [{"label" : "canConsume", "tail" : "(maxChars: Int): Int", "member" : "laika.parse.SourceCursor.canConsume", "link" : "laika\/parse\/SourceCursor.html#canConsume(maxChars:Int):Int", "kind" : "def"}, {"label" : "charAt", "tail" : "(relativeOffset: Int): Char", "member" : "laika.parse.SourceCursor.charAt", "link" : "laika\/parse\/SourceCursor.html#charAt(relativeOffset:Int):Char", "kind" : "def"}, {"label" : "char", "tail" : "(): Char", "member" : "laika.parse.SourceCursor.char", "link" : "laika\/parse\/SourceCursor.html#char:Char", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "laika.parse.SourceCursor.length", "link" : "laika\/parse\/SourceCursor.html#length:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/SourceCursor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/SourceCursor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/SourceCursor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/SourceCursor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/SourceCursor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/SourceCursor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/SourceCursor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/SourceCursor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/SourceCursor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/SourceCursor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/SourceCursor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/SourceCursor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/SourceCursor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/SourceCursor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/SourceCursor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/SourceCursor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/SourceCursor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/SourceCursor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/SourceCursor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "reverse", "tail" : "(): Self", "member" : "laika.parse.SourceCursor.reverse", "link" : "laika\/parse\/SourceCursor.html#reverse:SourceCursor.this.Self", "kind" : "abstract def"}, {"label" : "nextNestLevel", "tail" : "(): Self", "member" : "laika.parse.SourceCursor.nextNestLevel", "link" : "laika\/parse\/SourceCursor.html#nextNestLevel:SourceCursor.this.Self", "kind" : "abstract def"}, {"label" : "nestLevel", "tail" : "(): Int", "member" : "laika.parse.SourceCursor.nestLevel", "link" : "laika\/parse\/SourceCursor.html#nestLevel:Int", "kind" : "abstract def"}, {"label" : "position", "tail" : "(): Position", "member" : "laika.parse.SourceCursor.position", "link" : "laika\/parse\/SourceCursor.html#position:laika.parse.Position", "kind" : "abstract def"}, {"label" : "root", "tail" : "(): RootSource", "member" : "laika.parse.SourceCursor.root", "link" : "laika\/parse\/SourceCursor.html#root:laika.parse.RootSource", "kind" : "abstract def"}, {"label" : "consume", "tail" : "(numChars: Int): Self", "member" : "laika.parse.SourceCursor.consume", "link" : "laika\/parse\/SourceCursor.html#consume(numChars:Int):SourceCursor.this.Self", "kind" : "abstract def"}, {"label" : "capture", "tail" : "(numChars: Int): String", "member" : "laika.parse.SourceCursor.capture", "link" : "laika\/parse\/SourceCursor.html#capture(numChars:Int):String", "kind" : "abstract def"}, {"label" : "remaining", "tail" : "(): Int", "member" : "laika.parse.SourceCursor.remaining", "link" : "laika\/parse\/SourceCursor.html#remaining:Int", "kind" : "abstract def"}, {"label" : "atEnd", "tail" : "(): Boolean", "member" : "laika.parse.SourceCursor.atEnd", "link" : "laika\/parse\/SourceCursor.html#atEnd:Boolean", "kind" : "abstract def"}, {"label" : "offset", "tail" : "(): Int", "member" : "laika.parse.SourceCursor.offset", "link" : "laika\/parse\/SourceCursor.html#offset:Int", "kind" : "abstract def"}, {"label" : "input", "tail" : "(): String", "member" : "laika.parse.SourceCursor.input", "link" : "laika\/parse\/SourceCursor.html#input:String", "kind" : "abstract def"}, {"member" : "laika.parse.SourceCursor.Self", "error" : "unsupported entity"}], "shortDescription" : "Represents the state and context of a parsing operation,containing the input string as well as positional information.", "object" : "laika\/parse\/SourceCursor$.html", "members_object" : [{"label" : "apply", "tail" : "(input: String): SourceCursor", "member" : "laika.parse.SourceCursor.apply", "link" : "laika\/parse\/SourceCursor$.html#apply(input:String):laika.parse.SourceCursor", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/SourceCursor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/SourceCursor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/SourceCursor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/SourceCursor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/SourceCursor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/SourceCursor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/SourceCursor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/SourceCursor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/SourceCursor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/SourceCursor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/SourceCursor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/SourceCursor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/SourceCursor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/SourceCursor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/SourceCursor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/SourceCursor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/SourceCursor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/SourceCursor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/SourceCursor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/parse\/SourceCursor.html", "kind" : "trait"}, {"name" : "laika.parse.SourceFragment", "members_trait" : [{"label" : "canConsume", "tail" : "(maxChars: Int): Int", "member" : "laika.parse.SourceCursor.canConsume", "link" : "laika\/parse\/SourceFragment.html#canConsume(maxChars:Int):Int", "kind" : "def"}, {"label" : "charAt", "tail" : "(relativeOffset: Int): Char", "member" : "laika.parse.SourceCursor.charAt", "link" : "laika\/parse\/SourceFragment.html#charAt(relativeOffset:Int):Char", "kind" : "def"}, {"label" : "char", "tail" : "(): Char", "member" : "laika.parse.SourceCursor.char", "link" : "laika\/parse\/SourceFragment.html#char:Char", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "laika.parse.SourceCursor.length", "link" : "laika\/parse\/SourceFragment.html#length:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/SourceFragment.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/SourceFragment.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/SourceFragment.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/SourceFragment.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/SourceFragment.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/SourceFragment.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/SourceFragment.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/SourceFragment.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/SourceFragment.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/SourceFragment.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/SourceFragment.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/SourceFragment.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/SourceFragment.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/SourceFragment.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/SourceFragment.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/SourceFragment.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/SourceFragment.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/SourceFragment.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/SourceFragment.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "laika.parse.SourceFragment.Self", "error" : "unsupported entity"}, {"label" : "reverse", "tail" : "(): Self", "member" : "laika.parse.SourceCursor.reverse", "link" : "laika\/parse\/SourceFragment.html#reverse:SourceCursor.this.Self", "kind" : "abstract def"}, {"label" : "nextNestLevel", "tail" : "(): Self", "member" : "laika.parse.SourceCursor.nextNestLevel", "link" : "laika\/parse\/SourceFragment.html#nextNestLevel:SourceCursor.this.Self", "kind" : "abstract def"}, {"label" : "nestLevel", "tail" : "(): Int", "member" : "laika.parse.SourceCursor.nestLevel", "link" : "laika\/parse\/SourceFragment.html#nestLevel:Int", "kind" : "abstract def"}, {"label" : "position", "tail" : "(): Position", "member" : "laika.parse.SourceCursor.position", "link" : "laika\/parse\/SourceFragment.html#position:laika.parse.Position", "kind" : "abstract def"}, {"label" : "root", "tail" : "(): RootSource", "member" : "laika.parse.SourceCursor.root", "link" : "laika\/parse\/SourceFragment.html#root:laika.parse.RootSource", "kind" : "abstract def"}, {"label" : "consume", "tail" : "(numChars: Int): Self", "member" : "laika.parse.SourceCursor.consume", "link" : "laika\/parse\/SourceFragment.html#consume(numChars:Int):SourceCursor.this.Self", "kind" : "abstract def"}, {"label" : "capture", "tail" : "(numChars: Int): String", "member" : "laika.parse.SourceCursor.capture", "link" : "laika\/parse\/SourceFragment.html#capture(numChars:Int):String", "kind" : "abstract def"}, {"label" : "remaining", "tail" : "(): Int", "member" : "laika.parse.SourceCursor.remaining", "link" : "laika\/parse\/SourceFragment.html#remaining:Int", "kind" : "abstract def"}, {"label" : "atEnd", "tail" : "(): Boolean", "member" : "laika.parse.SourceCursor.atEnd", "link" : "laika\/parse\/SourceFragment.html#atEnd:Boolean", "kind" : "abstract def"}, {"label" : "offset", "tail" : "(): Int", "member" : "laika.parse.SourceCursor.offset", "link" : "laika\/parse\/SourceFragment.html#offset:Int", "kind" : "abstract def"}, {"label" : "input", "tail" : "(): String", "member" : "laika.parse.SourceCursor.input", "link" : "laika\/parse\/SourceFragment.html#input:String", "kind" : "abstract def"}], "shortDescription" : "Represents any source cursor other than the root cursor and it is mandated by some APIs thatsolely deal with recursive parsing where the root input will never be used as the source for the parser.", "trait" : "laika\/parse\/SourceFragment.html", "kind" : "trait"}, {"name" : "laika.parse.Success", "shortDescription" : "The success case of Parsed containing the result and the remaining input.", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "laika.parse.Success.toString", "link" : "laika\/parse\/Success.html#toString():String", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) ⇒ U): Success[U]", "member" : "laika.parse.Success.map", "link" : "laika\/parse\/Success.html#map[U](f:T=>U):laika.parse.Success[U]", "kind" : "def"}, {"label" : "orElse", "tail" : "(default: ⇒ Parsed[U]): Parsed[U]", "member" : "laika.parse.Success.orElse", "link" : "laika\/parse\/Success.html#orElse[U>:T](default:=>laika.parse.Parsed[U]):laika.parse.Parsed[U]", "kind" : "def"}, {"label" : "toEither", "tail" : "(): Either[String, T]", "member" : "laika.parse.Success.toEither", "link" : "laika\/parse\/Success.html#toEither:Either[String,T]", "kind" : "def"}, {"label" : "toOption", "tail" : "(): Option[T]", "member" : "laika.parse.Success.toOption", "link" : "laika\/parse\/Success.html#toOption:Option[T]", "kind" : "def"}, {"label" : "isSuccess", "tail" : ": Boolean", "member" : "laika.parse.Success.isSuccess", "link" : "laika\/parse\/Success.html#isSuccess:Boolean", "kind" : "val"}, {"member" : "laika.parse.Success#<init>", "error" : "unsupported entity"}, {"label" : "next", "tail" : ": SourceCursor", "member" : "laika.parse.Success.next", "link" : "laika\/parse\/Success.html#next:laika.parse.SourceCursor", "kind" : "val"}, {"label" : "result", "tail" : ": T", "member" : "laika.parse.Success.result", "link" : "laika\/parse\/Success.html#result:T", "kind" : "val"}, {"label" : "getOrElse", "tail" : "(default: ⇒ B): B", "member" : "laika.parse.Parsed.getOrElse", "link" : "laika\/parse\/Success.html#getOrElse[B>:T](default:=>B):B", "kind" : "def"}, {"label" : "isFailure", "tail" : "(): Boolean", "member" : "laika.parse.Parsed.isFailure", "link" : "laika\/parse\/Success.html#isFailure:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/Success.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/Success.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/Success.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/Success.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/Success.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/Success.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/Success.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Success.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Success.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/Success.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/Success.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/Success.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/Success.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/Success.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/Success.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/Success.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/parse\/Success.html", "kind" : "case class"}], "laika.io" : [{"name" : "laika.io.implicits", "shortDescription" : "Implicits that add an io method to all builder instances for parsers, renderers and transformersfrom the laika-core module, adding support for file\/stream IO, suspended in the effect of your choice.", "object" : "laika\/io\/implicits$.html", "members_object" : [{"label" : "ImplicitBinaryTransformerOps", "tail" : "", "member" : "laika.io.implicits.ImplicitBinaryTransformerOps", "link" : "laika\/io\/implicits$.html#ImplicitBinaryTransformerOpsextendsAnyVal", "kind" : "implicit final class"}, {"label" : "ImplicitBinaryRendererOps", "tail" : "", "member" : "laika.io.implicits.ImplicitBinaryRendererOps", "link" : "laika\/io\/implicits$.html#ImplicitBinaryRendererOpsextendsAnyVal", "kind" : "implicit final class"}, {"label" : "ImplicitTextTransformerOps", "tail" : "", "member" : "laika.io.implicits.ImplicitTextTransformerOps", "link" : "laika\/io\/implicits$.html#ImplicitTextTransformerOpsextendsAnyVal", "kind" : "implicit final class"}, {"label" : "ImplicitTextRendererOps", "tail" : "", "member" : "laika.io.implicits.ImplicitTextRendererOps", "link" : "laika\/io\/implicits$.html#ImplicitTextRendererOpsextendsAnyVal", "kind" : "implicit final class"}, {"label" : "ImplicitParserOps", "tail" : "", "member" : "laika.io.implicits.ImplicitParserOps", "link" : "laika\/io\/implicits$.html#ImplicitParserOpsextendsAnyVal", "kind" : "implicit final class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/implicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/implicits$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/implicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/implicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/implicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/implicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/implicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/implicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/implicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/implicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/implicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/implicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/implicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/implicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/implicits$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/implicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/implicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/implicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/implicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "laika.ast" : [{"name" : "laika.ast.\/", "shortDescription" : "Extractors for pattern matching against absolute and relative paths.", "object" : "laika\/ast\/$div$.html", "members_object" : [{"label" : "unapply", "tail" : "(p: RelativePath): Option[(RelativePath, String)]", "member" : "laika.ast.\/.unapply", "link" : "laika\/ast\/$div$.html#unapply(p:laika.ast.RelativePath):Option[(laika.ast.RelativePath,String)]", "kind" : "def"}, {"label" : "unapply", "tail" : "(p: Path): Option[(Path, String)]", "member" : "laika.ast.\/.unapply", "link" : "laika\/ast\/$div$.html#unapply(p:laika.ast.Path):Option[(laika.ast.Path,String)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/$div$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/$div$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/$div$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/$div$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/$div$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/$div$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/$div$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/$div$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/$div$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/$div$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/$div$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/$div$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/$div$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/$div$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/$div$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/$div$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/$div$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/$div$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/$div$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.ast.AbsoluteInternalTarget", "shortDescription" : "Represents a target defined by an absolute path.", "members_case class" : [{"label" : "render", "tail" : "(internalTargetsAbsolute: Boolean): String", "member" : "laika.ast.AbsoluteInternalTarget.render", "link" : "laika\/ast\/AbsoluteInternalTarget.html#render(internalTargetsAbsolute:Boolean):String", "kind" : "def"}, {"label" : "relativeTo", "tail" : "(refPath: Path): ResolvedInternalTarget", "member" : "laika.ast.AbsoluteInternalTarget.relativeTo", "link" : "laika\/ast\/AbsoluteInternalTarget.html#relativeTo(refPath:laika.ast.Path):laika.ast.ResolvedInternalTarget", "kind" : "def"}, {"member" : "laika.ast.AbsoluteInternalTarget#<init>", "error" : "unsupported entity"}, {"label" : "path", "tail" : ": Path", "member" : "laika.ast.AbsoluteInternalTarget.path", "link" : "laika\/ast\/AbsoluteInternalTarget.html#path:laika.ast.Path", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/AbsoluteInternalTarget.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/AbsoluteInternalTarget.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/AbsoluteInternalTarget.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/AbsoluteInternalTarget.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/AbsoluteInternalTarget.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/AbsoluteInternalTarget.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/AbsoluteInternalTarget.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/AbsoluteInternalTarget.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/AbsoluteInternalTarget.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/AbsoluteInternalTarget.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/AbsoluteInternalTarget.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/AbsoluteInternalTarget.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/AbsoluteInternalTarget.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/AbsoluteInternalTarget.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/AbsoluteInternalTarget.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/AbsoluteInternalTarget.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/AbsoluteInternalTarget.html", "kind" : "case class"}, {"name" : "laika.ast.Autonumber", "shortDescription" : "Label with automatic numbering.", "object" : "laika\/ast\/Autonumber$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Autonumber$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Autonumber$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Autonumber$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Autonumber$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Autonumber$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Autonumber$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Autonumber$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Autonumber$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Autonumber$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Autonumber$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Autonumber$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Autonumber$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Autonumber$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Autonumber$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Autonumber$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Autonumber$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Autonumber$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.ast.AutonumberLabel", "shortDescription" : "Label using automatic numbering and explicit label names together.", "members_case class" : [{"member" : "laika.ast.AutonumberLabel#<init>", "error" : "unsupported entity"}, {"label" : "label", "tail" : ": String", "member" : "laika.ast.AutonumberLabel.label", "link" : "laika\/ast\/AutonumberLabel.html#label:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/AutonumberLabel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/AutonumberLabel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/AutonumberLabel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/AutonumberLabel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/AutonumberLabel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/AutonumberLabel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/AutonumberLabel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/AutonumberLabel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/AutonumberLabel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/AutonumberLabel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/AutonumberLabel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/AutonumberLabel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/AutonumberLabel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/AutonumberLabel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/AutonumberLabel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/AutonumberLabel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/AutonumberLabel.html", "kind" : "case class"}, {"name" : "laika.ast.Autosymbol", "shortDescription" : "Label with automatic symbol assignment.", "object" : "laika\/ast\/Autosymbol$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Autosymbol$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Autosymbol$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Autosymbol$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Autosymbol$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Autosymbol$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Autosymbol$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Autosymbol$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Autosymbol$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Autosymbol$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Autosymbol$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Autosymbol$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Autosymbol$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Autosymbol$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Autosymbol$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Autosymbol$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Autosymbol$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Autosymbol$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.ast.Block", "members_trait" : [{"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Block.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Block.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Block.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Block.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Block.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Block.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Block.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Block.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Block.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/Block.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/Block.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Block.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Block.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Block.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Block.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Block.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Block.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Block.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Block.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Block.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Block.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Block.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Block.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Block.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Block.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Block.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Block.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Block.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Block.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Block.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "laika.ast.Block.Self", "error" : "unsupported entity"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/Block.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/Block.html#options:laika.ast.Options", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/Block.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/Block.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/Block.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "The base type for all block level elements.", "trait" : "laika\/ast\/Block.html", "kind" : "trait"}, {"name" : "laika.ast.BlockContainer", "members_trait" : [{"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.BlockContainer.rewriteChildren", "link" : "laika\/ast\/BlockContainer.html#rewriteChildren(rules:laika.ast.RewriteRules):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteBlocks", "tail" : "(rules: RewriteRule[Block]): Self", "member" : "laika.ast.BlockContainer.rewriteBlocks", "link" : "laika\/ast\/BlockContainer.html#rewriteBlocks(rules:laika.ast.RewriteRule[laika.ast.Block]):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/BlockContainer.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/BlockContainer.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/BlockContainer.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/BlockContainer.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/BlockContainer.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/BlockContainer.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/BlockContainer.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/BlockContainer.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/BlockContainer.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/BlockContainer.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/BlockContainer.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/BlockContainer.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/BlockContainer.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/BlockContainer.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/BlockContainer.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/BlockContainer.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/BlockContainer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/BlockContainer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/BlockContainer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/BlockContainer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/BlockContainer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/BlockContainer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/BlockContainer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BlockContainer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BlockContainer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BlockContainer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/BlockContainer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/BlockContainer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/BlockContainer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/BlockContainer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/BlockContainer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/BlockContainer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/BlockContainer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/BlockContainer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Block]): Self", "member" : "laika.ast.BlockContainer.withContent", "link" : "laika\/ast\/BlockContainer.html#withContent(newContent:Seq[laika.ast.Block]):BlockContainer.this.Self", "kind" : "abstract def"}, {"member" : "laika.ast.BlockContainer.Self", "error" : "unsupported entity"}, {"label" : "content", "tail" : "(): Seq[Block]", "member" : "laika.ast.Container.content", "link" : "laika\/ast\/BlockContainer.html#content:T", "kind" : "abstract def"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/BlockContainer.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/BlockContainer.html#options:laika.ast.Options", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/BlockContainer.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/BlockContainer.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/BlockContainer.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "A container of other Block elements.", "trait" : "laika\/ast\/BlockContainer.html", "kind" : "trait"}, {"name" : "laika.ast.BlockContainerCompanion", "members_trait" : [{"label" : "apply", "tail" : "(block: Block, blocks: Block*): ContainerType", "member" : "laika.ast.BlockContainerCompanion.apply", "link" : "laika\/ast\/BlockContainerCompanion.html#apply(block:laika.ast.Block,blocks:laika.ast.Block*):BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "createSpanContainer", "tail" : "(spans: Seq[Span]): ContainerType", "member" : "laika.ast.BlockContainerCompanion.createSpanContainer", "link" : "laika\/ast\/BlockContainerCompanion.html#createSpanContainer(spans:Seq[laika.ast.Span]):BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.BlockContainerCompanion.empty", "link" : "laika\/ast\/BlockContainerCompanion.html#empty:BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(span: Span, spans: Span*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/BlockContainerCompanion.html#apply(span:laika.ast.Span,spans:laika.ast.Span*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/BlockContainerCompanion.html#apply(text:String,texts:String*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/BlockContainerCompanion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/BlockContainerCompanion.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/BlockContainerCompanion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/BlockContainerCompanion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/BlockContainerCompanion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/BlockContainerCompanion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/BlockContainerCompanion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BlockContainerCompanion.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BlockContainerCompanion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BlockContainerCompanion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/BlockContainerCompanion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/BlockContainerCompanion.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/BlockContainerCompanion.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/BlockContainerCompanion.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/BlockContainerCompanion.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/BlockContainerCompanion.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/BlockContainerCompanion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/BlockContainerCompanion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/BlockContainerCompanion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createBlockContainer", "tail" : "(blocks: Seq[Block]): ContainerType", "member" : "laika.ast.BlockContainerCompanion.createBlockContainer", "link" : "laika\/ast\/BlockContainerCompanion.html#createBlockContainer(blocks:Seq[laika.ast.Block]):BlockContainerCompanion.this.ContainerType", "kind" : "abstract def"}, {"member" : "laika.ast.SpanContainerCompanion.ContainerType", "error" : "unsupported entity"}], "shortDescription" : "Common methods for simple block containers (without additional parameters).", "trait" : "laika\/ast\/BlockContainerCompanion.html", "kind" : "trait"}, {"name" : "laika.ast.BlockResolver", "members_trait" : [{"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/BlockResolver.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/BlockResolver.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/BlockResolver.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/BlockResolver.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/BlockResolver.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/BlockResolver.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/BlockResolver.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/BlockResolver.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/BlockResolver.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/BlockResolver.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/BlockResolver.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/BlockResolver.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/BlockResolver.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/BlockResolver.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/BlockResolver.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/BlockResolver.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/BlockResolver.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/BlockResolver.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BlockResolver.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BlockResolver.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BlockResolver.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/BlockResolver.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/BlockResolver.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/BlockResolver.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/BlockResolver.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/BlockResolver.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/BlockResolver.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/BlockResolver.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/BlockResolver.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/BlockResolver.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "resolve", "tail" : "(cursor: DocumentCursor): Block", "member" : "laika.ast.BlockResolver.resolve", "link" : "laika\/ast\/BlockResolver.html#resolve(cursor:laika.ast.DocumentCursor):laika.ast.Block", "kind" : "abstract def"}, {"label" : "unresolvedMessage", "tail" : "(): String", "member" : "laika.ast.Unresolved.unresolvedMessage", "link" : "laika\/ast\/BlockResolver.html#unresolvedMessage:String", "kind" : "abstract def"}, {"label" : "source", "tail" : "(): SourceFragment", "member" : "laika.ast.Unresolved.source", "link" : "laika\/ast\/BlockResolver.html#source:laika.parse.SourceFragment", "kind" : "abstract def"}, {"member" : "laika.ast.Block.Self", "error" : "unsupported entity"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/BlockResolver.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/BlockResolver.html#options:laika.ast.Options", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/BlockResolver.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/BlockResolver.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/BlockResolver.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "Represents a placeholder block element that needs to be resolved in a rewrite step.", "trait" : "laika\/ast\/BlockResolver.html", "kind" : "trait"}, {"name" : "laika.ast.BlockSequence", "shortDescription" : "A generic container element containing a list of blocks.", "object" : "laika\/ast\/BlockSequence$.html", "members_object" : [{"label" : "createBlockContainer", "tail" : "(blocks: Seq[Block]): BlockSequence", "member" : "laika.ast.BlockSequence.createBlockContainer", "link" : "laika\/ast\/BlockSequence$.html#createBlockContainer(blocks:Seq[laika.ast.Block]):laika.ast.BlockSequence", "kind" : "def"}, {"label" : "ContainerType", "tail" : "", "member" : "laika.ast.BlockSequence.ContainerType", "link" : "laika\/ast\/BlockSequence$.html#ContainerType=laika.ast.BlockSequence", "kind" : "type"}, {"label" : "apply", "tail" : "(block: Block, blocks: Block*): ContainerType", "member" : "laika.ast.BlockContainerCompanion.apply", "link" : "laika\/ast\/BlockSequence$.html#apply(block:laika.ast.Block,blocks:laika.ast.Block*):BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "createSpanContainer", "tail" : "(spans: Seq[Span]): ContainerType", "member" : "laika.ast.BlockContainerCompanion.createSpanContainer", "link" : "laika\/ast\/BlockSequence$.html#createSpanContainer(spans:Seq[laika.ast.Span]):BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.BlockContainerCompanion.empty", "link" : "laika\/ast\/BlockSequence$.html#empty:BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(span: Span, spans: Span*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/BlockSequence$.html#apply(span:laika.ast.Span,spans:laika.ast.Span*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/BlockSequence$.html#apply(text:String,texts:String*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/BlockSequence$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/BlockSequence$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/BlockSequence$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/BlockSequence$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/BlockSequence$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/BlockSequence$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/BlockSequence$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BlockSequence$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BlockSequence$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BlockSequence$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/BlockSequence$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/BlockSequence$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/BlockSequence$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/BlockSequence$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/BlockSequence$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/BlockSequence$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/BlockSequence$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/BlockSequence$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/BlockSequence$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): BlockSequence", "member" : "laika.ast.BlockSequence.withOptions", "link" : "laika\/ast\/BlockSequence.html#withOptions(options:laika.ast.Options):laika.ast.BlockSequence", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Block]): BlockSequence", "member" : "laika.ast.BlockSequence.withContent", "link" : "laika\/ast\/BlockSequence.html#withContent(newContent:Seq[laika.ast.Block]):laika.ast.BlockSequence", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.BlockSequence.Self", "link" : "laika\/ast\/BlockSequence.html#Self=laika.ast.BlockSequence", "kind" : "type"}, {"member" : "laika.ast.BlockSequence#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.BlockSequence.options", "link" : "laika\/ast\/BlockSequence.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Block]", "member" : "laika.ast.BlockSequence.content", "link" : "laika\/ast\/BlockSequence.html#content:Seq[laika.ast.Block]", "kind" : "val"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.BlockContainer.rewriteChildren", "link" : "laika\/ast\/BlockSequence.html#rewriteChildren(rules:laika.ast.RewriteRules):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteBlocks", "tail" : "(rules: RewriteRule[Block]): Self", "member" : "laika.ast.BlockContainer.rewriteBlocks", "link" : "laika\/ast\/BlockSequence.html#rewriteBlocks(rules:laika.ast.RewriteRule[laika.ast.Block]):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/BlockSequence.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/BlockSequence.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/BlockSequence.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/BlockSequence.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/BlockSequence.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/BlockSequence.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/BlockSequence.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/BlockSequence.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/BlockSequence.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/BlockSequence.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/BlockSequence.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/BlockSequence.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/BlockSequence.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/BlockSequence.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/BlockSequence.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/BlockSequence.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/BlockSequence.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/BlockSequence.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/BlockSequence.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/BlockSequence.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/BlockSequence.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BlockSequence.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BlockSequence.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BlockSequence.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/BlockSequence.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/BlockSequence.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/BlockSequence.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/BlockSequence.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/BlockSequence.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/BlockSequence.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/BlockSequence.html", "kind" : "case class"}, {"name" : "laika.ast.BodyCell", "shortDescription" : "A cell in the body part of the table.", "object" : "laika\/ast\/BodyCell$.html", "members_object" : [{"label" : "createBlockContainer", "tail" : "(blocks: Seq[Block]): Cell", "member" : "laika.ast.BodyCell.createBlockContainer", "link" : "laika\/ast\/BodyCell$.html#createBlockContainer(blocks:Seq[laika.ast.Block]):laika.ast.Cell", "kind" : "def"}, {"label" : "apply", "tail" : "(blocks: Seq[Block]): Cell", "member" : "laika.ast.BodyCell.apply", "link" : "laika\/ast\/BodyCell$.html#apply(blocks:Seq[laika.ast.Block]):laika.ast.Cell", "kind" : "def"}, {"label" : "ContainerType", "tail" : "", "member" : "laika.ast.BodyCell.ContainerType", "link" : "laika\/ast\/BodyCell$.html#ContainerType=laika.ast.Cell", "kind" : "type"}, {"label" : "apply", "tail" : "(block: Block, blocks: Block*): ContainerType", "member" : "laika.ast.BlockContainerCompanion.apply", "link" : "laika\/ast\/BodyCell$.html#apply(block:laika.ast.Block,blocks:laika.ast.Block*):BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "createSpanContainer", "tail" : "(spans: Seq[Span]): ContainerType", "member" : "laika.ast.BlockContainerCompanion.createSpanContainer", "link" : "laika\/ast\/BodyCell$.html#createSpanContainer(spans:Seq[laika.ast.Span]):BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.BlockContainerCompanion.empty", "link" : "laika\/ast\/BodyCell$.html#empty:BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(span: Span, spans: Span*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/BodyCell$.html#apply(span:laika.ast.Span,spans:laika.ast.Span*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/BodyCell$.html#apply(text:String,texts:String*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/BodyCell$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/BodyCell$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/BodyCell$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/BodyCell$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/BodyCell$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/BodyCell$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/BodyCell$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BodyCell$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BodyCell$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BodyCell$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/BodyCell$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/BodyCell$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/BodyCell$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/BodyCell$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/BodyCell$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/BodyCell$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/BodyCell$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.ast.BulletFormat", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/BulletFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/BulletFormat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/BulletFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/BulletFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/BulletFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/BulletFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/BulletFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BulletFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BulletFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BulletFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/BulletFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/BulletFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/BulletFormat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/BulletFormat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/BulletFormat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/BulletFormat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/BulletFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/BulletFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/BulletFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "The format of a bullet list item.", "trait" : "laika\/ast\/BulletFormat.html", "kind" : "trait"}, {"name" : "laika.ast.BulletList", "shortDescription" : "A bullet list that may contain nested lists.", "object" : "laika\/ast\/BulletList$.html", "members_object" : [{"label" : "apply", "tail" : "(format: BulletFormat): BulletListCompanion", "member" : "laika.ast.BulletList.apply", "link" : "laika\/ast\/BulletList$.html#apply(format:laika.ast.BulletFormat):laika.ast.BulletListCompanion", "kind" : "def"}, {"label" : "createBlockContainer", "tail" : "(blocks: Seq[Block]): ContainerType", "member" : "laika.ast.BulletListCompanion.createBlockContainer", "link" : "laika\/ast\/BulletList$.html#createBlockContainer(blocks:Seq[laika.ast.Block]):BulletListCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(block: Seq[Block], blocks: Seq[Block]*): ContainerType", "member" : "laika.ast.BulletListCompanion.apply", "link" : "laika\/ast\/BulletList$.html#apply(block:Seq[laika.ast.Block],blocks:Seq[laika.ast.Block]*):BulletListCompanion.this.ContainerType", "kind" : "def"}, {"label" : "createSpanContainer", "tail" : "(spans: Seq[Span]): ContainerType", "member" : "laika.ast.BulletListCompanion.createSpanContainer", "link" : "laika\/ast\/BulletList$.html#createSpanContainer(spans:Seq[laika.ast.Span]):BulletListCompanion.this.ContainerType", "kind" : "def"}, {"label" : "bullet", "tail" : "(): BulletFormat", "member" : "laika.ast.BulletListCompanion.bullet", "link" : "laika\/ast\/BulletList$.html#bullet:laika.ast.BulletFormat", "kind" : "def"}, {"label" : "ContainerType", "tail" : "", "member" : "laika.ast.BulletListCompanion.ContainerType", "link" : "laika\/ast\/BulletList$.html#ContainerType=laika.ast.BulletList", "kind" : "type"}, {"label" : "apply", "tail" : "(block: Block, blocks: Block*): ContainerType", "member" : "laika.ast.BlockContainerCompanion.apply", "link" : "laika\/ast\/BulletList$.html#apply(block:laika.ast.Block,blocks:laika.ast.Block*):BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.BlockContainerCompanion.empty", "link" : "laika\/ast\/BulletList$.html#empty:BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(span: Span, spans: Span*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/BulletList$.html#apply(span:laika.ast.Span,spans:laika.ast.Span*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/BulletList$.html#apply(text:String,texts:String*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/BulletList$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/BulletList$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/BulletList$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/BulletList$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/BulletList$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/BulletList$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/BulletList$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BulletList$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BulletList$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BulletList$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/BulletList$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/BulletList$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/BulletList$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/BulletList$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/BulletList$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/BulletList$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/BulletList$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/BulletList$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/BulletList$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): BulletList", "member" : "laika.ast.BulletList.withOptions", "link" : "laika\/ast\/BulletList.html#withOptions(options:laika.ast.Options):laika.ast.BulletList", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): BulletList", "member" : "laika.ast.BulletList.rewriteChildren", "link" : "laika\/ast\/BulletList.html#rewriteChildren(rules:laika.ast.RewriteRules):laika.ast.BulletList", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.BulletList.Self", "link" : "laika\/ast\/BulletList.html#Self=laika.ast.BulletList", "kind" : "type"}, {"member" : "laika.ast.BulletList#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.BulletList.options", "link" : "laika\/ast\/BulletList.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "format", "tail" : ": BulletFormat", "member" : "laika.ast.BulletList.format", "link" : "laika\/ast\/BulletList.html#format:laika.ast.BulletFormat", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[BulletListItem]", "member" : "laika.ast.BulletList.content", "link" : "laika\/ast\/BulletList.html#content:Seq[laika.ast.BulletListItem]", "kind" : "val"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/BulletList.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/BulletList.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/BulletList.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/BulletList.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/BulletList.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/BulletList.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/BulletList.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/BulletList.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/BulletList.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/BulletList.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/BulletList.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/BulletList.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/BulletList.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/BulletList.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/BulletList.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/BulletList.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/BulletList.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/BulletList.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/BulletList.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/BulletList.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/BulletList.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BulletList.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BulletList.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BulletList.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/BulletList.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/BulletList.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/BulletList.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/BulletList.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/BulletList.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/BulletList.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/BulletList.html", "kind" : "case class"}, {"name" : "laika.ast.BulletListCompanion", "members_trait" : [{"label" : "createBlockContainer", "tail" : "(blocks: Seq[Block]): ContainerType", "member" : "laika.ast.BulletListCompanion.createBlockContainer", "link" : "laika\/ast\/BulletListCompanion.html#createBlockContainer(blocks:Seq[laika.ast.Block]):BulletListCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(block: Seq[Block], blocks: Seq[Block]*): ContainerType", "member" : "laika.ast.BulletListCompanion.apply", "link" : "laika\/ast\/BulletListCompanion.html#apply(block:Seq[laika.ast.Block],blocks:Seq[laika.ast.Block]*):BulletListCompanion.this.ContainerType", "kind" : "def"}, {"label" : "createSpanContainer", "tail" : "(spans: Seq[Span]): ContainerType", "member" : "laika.ast.BulletListCompanion.createSpanContainer", "link" : "laika\/ast\/BulletListCompanion.html#createSpanContainer(spans:Seq[laika.ast.Span]):BulletListCompanion.this.ContainerType", "kind" : "def"}, {"label" : "bullet", "tail" : "(): BulletFormat", "member" : "laika.ast.BulletListCompanion.bullet", "link" : "laika\/ast\/BulletListCompanion.html#bullet:laika.ast.BulletFormat", "kind" : "def"}, {"label" : "ContainerType", "tail" : "", "member" : "laika.ast.BulletListCompanion.ContainerType", "link" : "laika\/ast\/BulletListCompanion.html#ContainerType=laika.ast.BulletList", "kind" : "type"}, {"label" : "apply", "tail" : "(block: Block, blocks: Block*): ContainerType", "member" : "laika.ast.BlockContainerCompanion.apply", "link" : "laika\/ast\/BulletListCompanion.html#apply(block:laika.ast.Block,blocks:laika.ast.Block*):BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.BlockContainerCompanion.empty", "link" : "laika\/ast\/BulletListCompanion.html#empty:BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(span: Span, spans: Span*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/BulletListCompanion.html#apply(span:laika.ast.Span,spans:laika.ast.Span*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/BulletListCompanion.html#apply(text:String,texts:String*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/BulletListCompanion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/BulletListCompanion.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/BulletListCompanion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/BulletListCompanion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/BulletListCompanion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/BulletListCompanion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/BulletListCompanion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BulletListCompanion.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BulletListCompanion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BulletListCompanion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/BulletListCompanion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/BulletListCompanion.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/BulletListCompanion.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/BulletListCompanion.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/BulletListCompanion.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/BulletListCompanion.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/BulletListCompanion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/BulletListCompanion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/BulletListCompanion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Base trait for companions that create BulletList instances.", "trait" : "laika\/ast\/BulletListCompanion.html", "kind" : "trait"}, {"name" : "laika.ast.BulletListItem", "shortDescription" : "A single bullet list item consisting of one or more block elements.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): BulletListItem", "member" : "laika.ast.BulletListItem.withOptions", "link" : "laika\/ast\/BulletListItem.html#withOptions(options:laika.ast.Options):laika.ast.BulletListItem", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Block]): BulletListItem", "member" : "laika.ast.BulletListItem.withContent", "link" : "laika\/ast\/BulletListItem.html#withContent(newContent:Seq[laika.ast.Block]):laika.ast.BulletListItem", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.BulletListItem.Self", "link" : "laika\/ast\/BulletListItem.html#Self=laika.ast.BulletListItem", "kind" : "type"}, {"member" : "laika.ast.BulletListItem#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.BulletListItem.options", "link" : "laika\/ast\/BulletListItem.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "format", "tail" : ": BulletFormat", "member" : "laika.ast.BulletListItem.format", "link" : "laika\/ast\/BulletListItem.html#format:laika.ast.BulletFormat", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Block]", "member" : "laika.ast.BulletListItem.content", "link" : "laika\/ast\/BulletListItem.html#content:Seq[laika.ast.Block]", "kind" : "val"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.BlockContainer.rewriteChildren", "link" : "laika\/ast\/BulletListItem.html#rewriteChildren(rules:laika.ast.RewriteRules):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteBlocks", "tail" : "(rules: RewriteRule[Block]): Self", "member" : "laika.ast.BlockContainer.rewriteBlocks", "link" : "laika\/ast\/BulletListItem.html#rewriteBlocks(rules:laika.ast.RewriteRule[laika.ast.Block]):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/BulletListItem.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/BulletListItem.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/BulletListItem.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/BulletListItem.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/BulletListItem.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/BulletListItem.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/BulletListItem.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/BulletListItem.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/BulletListItem.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/BulletListItem.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/BulletListItem.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/BulletListItem.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/BulletListItem.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/BulletListItem.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/BulletListItem.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/BulletListItem.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/BulletListItem.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/BulletListItem.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/BulletListItem.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/BulletListItem.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/BulletListItem.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BulletListItem.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BulletListItem.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/BulletListItem.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/BulletListItem.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/BulletListItem.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/BulletListItem.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/BulletListItem.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/BulletListItem.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/BulletListItem.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/BulletListItem.html", "kind" : "case class"}, {"name" : "laika.ast.Caption", "shortDescription" : "The table caption.", "object" : "laika\/ast\/Caption$.html", "members_object" : [{"label" : "createSpanContainer", "tail" : "(spans: Seq[Span]): Caption", "member" : "laika.ast.Caption.createSpanContainer", "link" : "laika\/ast\/Caption$.html#createSpanContainer(spans:Seq[laika.ast.Span]):laika.ast.Caption", "kind" : "def"}, {"label" : "ContainerType", "tail" : "", "member" : "laika.ast.Caption.ContainerType", "link" : "laika\/ast\/Caption$.html#ContainerType=laika.ast.Caption", "kind" : "type"}, {"label" : "apply", "tail" : "(span: Span, spans: Span*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/Caption$.html#apply(span:laika.ast.Span,spans:laika.ast.Span*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/Caption$.html#apply(text:String,texts:String*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.SpanContainerCompanion.empty", "link" : "laika\/ast\/Caption$.html#empty:SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Caption$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Caption$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Caption$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Caption$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Caption$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Caption$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Caption$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Caption$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Caption$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Caption$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Caption$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Caption$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Caption$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Caption$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Caption$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Caption$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Caption$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Caption$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Caption$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Caption", "member" : "laika.ast.Caption.withOptions", "link" : "laika\/ast\/Caption.html#withOptions(options:laika.ast.Options):laika.ast.Caption", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Span]): Caption", "member" : "laika.ast.Caption.withContent", "link" : "laika\/ast\/Caption.html#withContent(newContent:Seq[laika.ast.Span]):laika.ast.Caption", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Caption.Self", "link" : "laika\/ast\/Caption.html#Self=laika.ast.Caption", "kind" : "type"}, {"member" : "laika.ast.Caption#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Caption.options", "link" : "laika\/ast\/Caption.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Span]", "member" : "laika.ast.Caption.content", "link" : "laika\/ast\/Caption.html#content:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "extractText", "tail" : "(): String", "member" : "laika.ast.SpanContainer.extractText", "link" : "laika\/ast\/Caption.html#extractText:String", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.SpanContainer.rewriteChildren", "link" : "laika\/ast\/Caption.html#rewriteChildren(rules:laika.ast.RewriteRules):SpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/Caption.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/Caption.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/Caption.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/Caption.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/Caption.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Caption.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Caption.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Caption.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Caption.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Caption.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Caption.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Caption.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Caption.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Caption.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Caption.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Caption.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Caption.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Caption.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Caption.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Caption.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Caption.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Caption.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Caption.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Caption.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Caption.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Caption.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Caption.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Caption.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Caption.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Caption.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Caption.html", "kind" : "case class"}, {"name" : "laika.ast.CategorizedCode", "members_trait" : [{"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/CategorizedCode.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/CategorizedCode.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/CategorizedCode.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/CategorizedCode.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/CategorizedCode.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/CategorizedCode.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/CategorizedCode.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/CategorizedCode.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/CategorizedCode.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/CategorizedCode.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/CategorizedCode.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/CategorizedCode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/CategorizedCode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/CategorizedCode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/CategorizedCode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/CategorizedCode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/CategorizedCode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/CategorizedCode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CategorizedCode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CategorizedCode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CategorizedCode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/CategorizedCode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/CategorizedCode.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/CategorizedCode.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/CategorizedCode.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/CategorizedCode.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/CategorizedCode.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/CategorizedCode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/CategorizedCode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/CategorizedCode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "laika.ast.Span.Self", "error" : "unsupported entity"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/CategorizedCode.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/CategorizedCode.html#options:laika.ast.Options", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/CategorizedCode.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/CategorizedCode.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/CategorizedCode.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "A single span inside a code block that has beencategorized by a syntax highlighter.", "trait" : "laika\/ast\/CategorizedCode.html", "kind" : "trait"}, {"name" : "laika.ast.Cell", "shortDescription" : "A single cell, potentially spanning multiple rows or columns, containing one or more block elements.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Cell", "member" : "laika.ast.Cell.withOptions", "link" : "laika\/ast\/Cell.html#withOptions(options:laika.ast.Options):laika.ast.Cell", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Block]): Cell", "member" : "laika.ast.Cell.withContent", "link" : "laika\/ast\/Cell.html#withContent(newContent:Seq[laika.ast.Block]):laika.ast.Cell", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Cell.Self", "link" : "laika\/ast\/Cell.html#Self=laika.ast.Cell", "kind" : "type"}, {"member" : "laika.ast.Cell#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Cell.options", "link" : "laika\/ast\/Cell.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "rowspan", "tail" : ": Int", "member" : "laika.ast.Cell.rowspan", "link" : "laika\/ast\/Cell.html#rowspan:Int", "kind" : "val"}, {"label" : "colspan", "tail" : ": Int", "member" : "laika.ast.Cell.colspan", "link" : "laika\/ast\/Cell.html#colspan:Int", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Block]", "member" : "laika.ast.Cell.content", "link" : "laika\/ast\/Cell.html#content:Seq[laika.ast.Block]", "kind" : "val"}, {"label" : "cellType", "tail" : ": CellType", "member" : "laika.ast.Cell.cellType", "link" : "laika\/ast\/Cell.html#cellType:laika.ast.CellType", "kind" : "val"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.BlockContainer.rewriteChildren", "link" : "laika\/ast\/Cell.html#rewriteChildren(rules:laika.ast.RewriteRules):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteBlocks", "tail" : "(rules: RewriteRule[Block]): Self", "member" : "laika.ast.BlockContainer.rewriteBlocks", "link" : "laika\/ast\/Cell.html#rewriteBlocks(rules:laika.ast.RewriteRule[laika.ast.Block]):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/Cell.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/Cell.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/Cell.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/Cell.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/Cell.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Cell.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Cell.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Cell.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Cell.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Cell.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Cell.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Cell.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Cell.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Cell.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Cell.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Cell.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Cell.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Cell.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Cell.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Cell.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Cell.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Cell.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Cell.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Cell.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Cell.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Cell.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Cell.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Cell.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Cell.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Cell.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Cell.html", "kind" : "case class"}, {"name" : "laika.ast.CellType", "shortDescription" : "The cell type specifies which part of the table the cell belongs to.", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/CellType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/CellType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/CellType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/CellType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/CellType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/CellType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/CellType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CellType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CellType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CellType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/CellType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/CellType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/CellType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/CellType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/CellType.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/CellType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/CellType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/CellType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/CellType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/ast\/CellType.html", "kind" : "class"}, {"name" : "laika.ast.Choice", "shortDescription" : "Represents a single choice in a ChoiceGroup.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Choice", "member" : "laika.ast.Choice.withOptions", "link" : "laika\/ast\/Choice.html#withOptions(options:laika.ast.Options):laika.ast.Choice", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Block]): Choice", "member" : "laika.ast.Choice.withContent", "link" : "laika\/ast\/Choice.html#withContent(newContent:Seq[laika.ast.Block]):laika.ast.Choice", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Choice.Self", "link" : "laika\/ast\/Choice.html#Self=laika.ast.Choice", "kind" : "type"}, {"member" : "laika.ast.Choice#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Choice.options", "link" : "laika\/ast\/Choice.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Block]", "member" : "laika.ast.Choice.content", "link" : "laika\/ast\/Choice.html#content:Seq[laika.ast.Block]", "kind" : "val"}, {"label" : "label", "tail" : ": String", "member" : "laika.ast.Choice.label", "link" : "laika\/ast\/Choice.html#label:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "laika.ast.Choice.name", "link" : "laika\/ast\/Choice.html#name:String", "kind" : "val"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.BlockContainer.rewriteChildren", "link" : "laika\/ast\/Choice.html#rewriteChildren(rules:laika.ast.RewriteRules):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteBlocks", "tail" : "(rules: RewriteRule[Block]): Self", "member" : "laika.ast.BlockContainer.rewriteBlocks", "link" : "laika\/ast\/Choice.html#rewriteBlocks(rules:laika.ast.RewriteRule[laika.ast.Block]):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/Choice.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/Choice.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/Choice.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/Choice.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/Choice.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Choice.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Choice.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Choice.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Choice.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Choice.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Choice.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Choice.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Choice.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Choice.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Choice.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Choice.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Choice.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Choice.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Choice.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Choice.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Choice.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Choice.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Choice.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Choice.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Choice.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Choice.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Choice.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Choice.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Choice.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Choice.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Choice.html", "kind" : "case class"}, {"name" : "laika.ast.Citation", "shortDescription" : "A citation that can be referred to by a CitationLink by id.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Citation", "member" : "laika.ast.Citation.withOptions", "link" : "laika\/ast\/Citation.html#withOptions(options:laika.ast.Options):laika.ast.Citation", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Block]): Citation", "member" : "laika.ast.Citation.withContent", "link" : "laika\/ast\/Citation.html#withContent(newContent:Seq[laika.ast.Block]):laika.ast.Citation", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Citation.Self", "link" : "laika\/ast\/Citation.html#Self=laika.ast.Citation", "kind" : "type"}, {"member" : "laika.ast.Citation#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Citation.options", "link" : "laika\/ast\/Citation.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Block]", "member" : "laika.ast.Citation.content", "link" : "laika\/ast\/Citation.html#content:Seq[laika.ast.Block]", "kind" : "val"}, {"label" : "label", "tail" : ": String", "member" : "laika.ast.Citation.label", "link" : "laika\/ast\/Citation.html#label:String", "kind" : "val"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.BlockContainer.rewriteChildren", "link" : "laika\/ast\/Citation.html#rewriteChildren(rules:laika.ast.RewriteRules):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteBlocks", "tail" : "(rules: RewriteRule[Block]): Self", "member" : "laika.ast.BlockContainer.rewriteBlocks", "link" : "laika\/ast\/Citation.html#rewriteBlocks(rules:laika.ast.RewriteRule[laika.ast.Block]):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/Citation.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/Citation.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/Citation.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/Citation.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/Citation.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Citation.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Citation.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Citation.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Citation.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Citation.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Citation.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Citation.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Citation.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Citation.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Citation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Citation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Citation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Citation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Citation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Citation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Citation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Citation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Citation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Citation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Citation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Citation.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Citation.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Citation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Citation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Citation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Citation.html", "kind" : "case class"}, {"name" : "laika.ast.CitationLink", "shortDescription" : "A resolved link to a citation.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): CitationLink", "member" : "laika.ast.CitationLink.withOptions", "link" : "laika\/ast\/CitationLink.html#withOptions(options:laika.ast.Options):laika.ast.CitationLink", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.CitationLink.Self", "link" : "laika\/ast\/CitationLink.html#Self=laika.ast.CitationLink", "kind" : "type"}, {"member" : "laika.ast.CitationLink#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.CitationLink.options", "link" : "laika\/ast\/CitationLink.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "label", "tail" : ": String", "member" : "laika.ast.CitationLink.label", "link" : "laika\/ast\/CitationLink.html#label:String", "kind" : "val"}, {"label" : "refId", "tail" : ": String", "member" : "laika.ast.CitationLink.refId", "link" : "laika\/ast\/CitationLink.html#refId:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/CitationLink.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/CitationLink.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/CitationLink.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/CitationLink.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/CitationLink.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/CitationLink.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/CitationLink.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/CitationLink.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/CitationLink.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/CitationLink.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/CitationLink.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/CitationLink.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/CitationLink.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/CitationLink.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/CitationLink.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/CitationLink.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CitationLink.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CitationLink.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CitationLink.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/CitationLink.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/CitationLink.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/CitationLink.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/CitationLink.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/CitationLink.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/CitationLink.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/CitationLink.html", "kind" : "case class"}, {"name" : "laika.ast.CitationReference", "shortDescription" : "A reference to a citation with a matching label.", "members_case class" : [{"label" : "unresolvedMessage", "tail" : ": String", "member" : "laika.ast.CitationReference.unresolvedMessage", "link" : "laika\/ast\/CitationReference.html#unresolvedMessage:String", "kind" : "lazy val"}, {"label" : "withOptions", "tail" : "(options: Options): CitationReference", "member" : "laika.ast.CitationReference.withOptions", "link" : "laika\/ast\/CitationReference.html#withOptions(options:laika.ast.Options):laika.ast.CitationReference", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.CitationReference.Self", "link" : "laika\/ast\/CitationReference.html#Self=laika.ast.CitationReference", "kind" : "type"}, {"member" : "laika.ast.CitationReference#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.CitationReference.options", "link" : "laika\/ast\/CitationReference.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "source", "tail" : ": SourceFragment", "member" : "laika.ast.CitationReference.source", "link" : "laika\/ast\/CitationReference.html#source:laika.parse.SourceFragment", "kind" : "val"}, {"label" : "label", "tail" : ": String", "member" : "laika.ast.CitationReference.label", "link" : "laika\/ast\/CitationReference.html#label:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/CitationReference.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/CitationReference.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/CitationReference.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/CitationReference.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/CitationReference.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/CitationReference.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/CitationReference.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/CitationReference.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/CitationReference.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/CitationReference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/CitationReference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/CitationReference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/CitationReference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/CitationReference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/CitationReference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/CitationReference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CitationReference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CitationReference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CitationReference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/CitationReference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/CitationReference.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/CitationReference.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/CitationReference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/CitationReference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/CitationReference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/CitationReference.html", "kind" : "case class"}, {"name" : "laika.ast.CodeBlock", "shortDescription" : "A block of program code.", "members_case class" : [{"label" : "hasSyntaxHighlighting", "tail" : "(): Boolean", "member" : "laika.ast.CodeBlock.hasSyntaxHighlighting", "link" : "laika\/ast\/CodeBlock.html#hasSyntaxHighlighting:Boolean", "kind" : "def"}, {"label" : "withOptions", "tail" : "(options: Options): CodeBlock", "member" : "laika.ast.CodeBlock.withOptions", "link" : "laika\/ast\/CodeBlock.html#withOptions(options:laika.ast.Options):laika.ast.CodeBlock", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Span]): CodeBlock", "member" : "laika.ast.CodeBlock.withContent", "link" : "laika\/ast\/CodeBlock.html#withContent(newContent:Seq[laika.ast.Span]):laika.ast.CodeBlock", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.CodeBlock.Self", "link" : "laika\/ast\/CodeBlock.html#Self=laika.ast.CodeBlock", "kind" : "type"}, {"member" : "laika.ast.CodeBlock#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.CodeBlock.options", "link" : "laika\/ast\/CodeBlock.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Span]", "member" : "laika.ast.CodeBlock.content", "link" : "laika\/ast\/CodeBlock.html#content:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "language", "tail" : ": String", "member" : "laika.ast.CodeBlock.language", "link" : "laika\/ast\/CodeBlock.html#language:String", "kind" : "val"}, {"label" : "extractText", "tail" : "(): String", "member" : "laika.ast.SpanContainer.extractText", "link" : "laika\/ast\/CodeBlock.html#extractText:String", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.SpanContainer.rewriteChildren", "link" : "laika\/ast\/CodeBlock.html#rewriteChildren(rules:laika.ast.RewriteRules):SpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/CodeBlock.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/CodeBlock.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/CodeBlock.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/CodeBlock.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/CodeBlock.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/CodeBlock.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/CodeBlock.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/CodeBlock.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/CodeBlock.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/CodeBlock.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/CodeBlock.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/CodeBlock.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/CodeBlock.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/CodeBlock.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/CodeBlock.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/CodeBlock.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/CodeBlock.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/CodeBlock.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/CodeBlock.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/CodeBlock.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/CodeBlock.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CodeBlock.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CodeBlock.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CodeBlock.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/CodeBlock.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/CodeBlock.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/CodeBlock.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/CodeBlock.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/CodeBlock.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/CodeBlock.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/CodeBlock.html", "kind" : "case class"}, {"name" : "laika.ast.CodeSpan", "shortDescription" : "A span of code associated with zero or more code categories.", "object" : "laika\/ast\/CodeSpan$.html", "members_object" : [{"label" : "apply", "tail" : "(content: String): CodeSpan", "member" : "laika.ast.CodeSpan.apply", "link" : "laika\/ast\/CodeSpan$.html#apply(content:String):laika.ast.CodeSpan", "kind" : "def"}, {"label" : "apply", "tail" : "(content: String, category: CodeCategory): CodeSpan", "member" : "laika.ast.CodeSpan.apply", "link" : "laika\/ast\/CodeSpan$.html#apply(content:String,category:laika.parse.code.CodeCategory):laika.ast.CodeSpan", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/CodeSpan$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/CodeSpan$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/CodeSpan$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/CodeSpan$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/CodeSpan$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/CodeSpan$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/CodeSpan$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CodeSpan$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CodeSpan$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CodeSpan$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/CodeSpan$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/CodeSpan$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/CodeSpan$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/CodeSpan$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/CodeSpan$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/CodeSpan$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/CodeSpan$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/CodeSpan$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/CodeSpan$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): CodeSpan", "member" : "laika.ast.CodeSpan.withOptions", "link" : "laika\/ast\/CodeSpan.html#withOptions(options:laika.ast.Options):laika.ast.CodeSpan", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.CodeSpan.Self", "link" : "laika\/ast\/CodeSpan.html#Self=laika.ast.CodeSpan", "kind" : "type"}, {"member" : "laika.ast.CodeSpan#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.CodeSpan.options", "link" : "laika\/ast\/CodeSpan.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "categories", "tail" : ": Set[CodeCategory]", "member" : "laika.ast.CodeSpan.categories", "link" : "laika\/ast\/CodeSpan.html#categories:Set[laika.parse.code.CodeCategory]", "kind" : "val"}, {"label" : "content", "tail" : ": String", "member" : "laika.ast.CodeSpan.content", "link" : "laika\/ast\/CodeSpan.html#content:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/CodeSpan.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/CodeSpan.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/CodeSpan.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/CodeSpan.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/CodeSpan.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/CodeSpan.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/CodeSpan.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/CodeSpan.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/CodeSpan.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/CodeSpan.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/CodeSpan.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/CodeSpan.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/CodeSpan.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/CodeSpan.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/CodeSpan.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/CodeSpan.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CodeSpan.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CodeSpan.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CodeSpan.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/CodeSpan.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/CodeSpan.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/CodeSpan.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/CodeSpan.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/CodeSpan.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/CodeSpan.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/CodeSpan.html", "kind" : "case class"}, {"name" : "laika.ast.CodeSpans", "shortDescription" : "", "object" : "laika\/ast\/CodeSpans$.html", "members_object" : [{"label" : "merge", "tail" : "(spans: Seq[CodeSpan]): Seq[CodeSpan]", "member" : "laika.ast.CodeSpans.merge", "link" : "laika\/ast\/CodeSpans$.html#merge(spans:Seq[laika.ast.CodeSpan]):Seq[laika.ast.CodeSpan]", "kind" : "def"}, {"label" : "extract", "tail" : "(defaultCategories: Set[CodeCategory])(span: Span): Seq[CodeSpan]", "member" : "laika.ast.CodeSpans.extract", "link" : "laika\/ast\/CodeSpans$.html#extract(defaultCategories:Set[laika.parse.code.CodeCategory])(span:laika.ast.Span):Seq[laika.ast.CodeSpan]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/CodeSpans$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/CodeSpans$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/CodeSpans$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/CodeSpans$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/CodeSpans$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/CodeSpans$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/CodeSpans$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CodeSpans$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CodeSpans$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CodeSpans$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/CodeSpans$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/CodeSpans$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/CodeSpans$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/CodeSpans$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/CodeSpans$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/CodeSpans$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/CodeSpans$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/CodeSpans$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/CodeSpans$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.ast.CodeSpanSequence", "shortDescription" : "A sequence of code spans where most of them are usually associated with zero or more code categories.", "object" : "laika\/ast\/CodeSpanSequence$.html", "members_object" : [{"label" : "createSpanContainer", "tail" : "(spans: Seq[Span]): CodeSpanSequence", "member" : "laika.ast.CodeSpanSequence.createSpanContainer", "link" : "laika\/ast\/CodeSpanSequence$.html#createSpanContainer(spans:Seq[laika.ast.Span]):laika.ast.CodeSpanSequence", "kind" : "def"}, {"label" : "ContainerType", "tail" : "", "member" : "laika.ast.CodeSpanSequence.ContainerType", "link" : "laika\/ast\/CodeSpanSequence$.html#ContainerType=laika.ast.CodeSpanSequence", "kind" : "type"}, {"label" : "apply", "tail" : "(span: Span, spans: Span*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/CodeSpanSequence$.html#apply(span:laika.ast.Span,spans:laika.ast.Span*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/CodeSpanSequence$.html#apply(text:String,texts:String*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.SpanContainerCompanion.empty", "link" : "laika\/ast\/CodeSpanSequence$.html#empty:SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/CodeSpanSequence$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/CodeSpanSequence$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/CodeSpanSequence$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/CodeSpanSequence$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/CodeSpanSequence$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/CodeSpanSequence$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/CodeSpanSequence$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CodeSpanSequence$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CodeSpanSequence$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CodeSpanSequence$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/CodeSpanSequence$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/CodeSpanSequence$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/CodeSpanSequence$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/CodeSpanSequence$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/CodeSpanSequence$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/CodeSpanSequence$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/CodeSpanSequence$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/CodeSpanSequence$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/CodeSpanSequence$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): CodeSpanSequence", "member" : "laika.ast.CodeSpanSequence.withOptions", "link" : "laika\/ast\/CodeSpanSequence.html#withOptions(options:laika.ast.Options):laika.ast.CodeSpanSequence", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Span]): CodeSpanSequence", "member" : "laika.ast.CodeSpanSequence.withContent", "link" : "laika\/ast\/CodeSpanSequence.html#withContent(newContent:Seq[laika.ast.Span]):laika.ast.CodeSpanSequence", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.CodeSpanSequence.Self", "link" : "laika\/ast\/CodeSpanSequence.html#Self=laika.ast.CodeSpanSequence", "kind" : "type"}, {"member" : "laika.ast.CodeSpanSequence#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.CodeSpanSequence.options", "link" : "laika\/ast\/CodeSpanSequence.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Span]", "member" : "laika.ast.CodeSpanSequence.content", "link" : "laika\/ast\/CodeSpanSequence.html#content:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "extractText", "tail" : "(): String", "member" : "laika.ast.SpanContainer.extractText", "link" : "laika\/ast\/CodeSpanSequence.html#extractText:String", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.SpanContainer.rewriteChildren", "link" : "laika\/ast\/CodeSpanSequence.html#rewriteChildren(rules:laika.ast.RewriteRules):SpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/CodeSpanSequence.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/CodeSpanSequence.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/CodeSpanSequence.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/CodeSpanSequence.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/CodeSpanSequence.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/CodeSpanSequence.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/CodeSpanSequence.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/CodeSpanSequence.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/CodeSpanSequence.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/CodeSpanSequence.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/CodeSpanSequence.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/CodeSpanSequence.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/CodeSpanSequence.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/CodeSpanSequence.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/CodeSpanSequence.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/CodeSpanSequence.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/CodeSpanSequence.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/CodeSpanSequence.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/CodeSpanSequence.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/CodeSpanSequence.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/CodeSpanSequence.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CodeSpanSequence.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CodeSpanSequence.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/CodeSpanSequence.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/CodeSpanSequence.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/CodeSpanSequence.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/CodeSpanSequence.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/CodeSpanSequence.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/CodeSpanSequence.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/CodeSpanSequence.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/CodeSpanSequence.html", "kind" : "case class"}, {"name" : "laika.ast.Column", "shortDescription" : "The options (like styles) for a column table.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Column", "member" : "laika.ast.Column.withOptions", "link" : "laika\/ast\/Column.html#withOptions(options:laika.ast.Options):laika.ast.Column", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Column.Self", "link" : "laika\/ast\/Column.html#Self=laika.ast.Column", "kind" : "type"}, {"member" : "laika.ast.Column#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Column.options", "link" : "laika\/ast\/Column.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Column.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Column.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Column.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Column.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Column.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Column.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Column.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Column.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Column.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Column.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Column.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Column.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Column.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Column.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Column.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Column.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Column.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Column.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Column.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Column.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Column.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Column.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Column.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Column.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Column.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Column.html", "kind" : "case class"}, {"name" : "laika.ast.Columns", "shortDescription" : "Contains the (optional) column specification of a table.", "object" : "laika\/ast\/Columns$.html", "members_object" : [{"label" : "options", "tail" : "(options: Options*): Columns", "member" : "laika.ast.Columns.options", "link" : "laika\/ast\/Columns$.html#options(options:laika.ast.Options*):laika.ast.Columns", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Columns$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Columns$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Columns$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Columns$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Columns$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Columns$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Columns$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Columns$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Columns$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Columns$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Columns$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Columns$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Columns$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Columns$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Columns$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Columns$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Columns$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Columns$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Columns$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Columns", "member" : "laika.ast.Columns.withOptions", "link" : "laika\/ast\/Columns.html#withOptions(options:laika.ast.Options):laika.ast.Columns", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Columns.Self", "link" : "laika\/ast\/Columns.html#Self=laika.ast.Columns", "kind" : "type"}, {"member" : "laika.ast.Columns#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Columns.options", "link" : "laika\/ast\/Columns.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Column]", "member" : "laika.ast.Columns.content", "link" : "laika\/ast\/Columns.html#content:Seq[laika.ast.Column]", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/Columns.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/Columns.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/Columns.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/Columns.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Columns.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Columns.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Columns.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Columns.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Columns.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Columns.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Columns.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Columns.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Columns.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Columns.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Columns.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Columns.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Columns.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Columns.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Columns.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Columns.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Columns.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Columns.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Columns.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Columns.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Columns.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Columns.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Columns.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Columns.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Columns.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Columns.html", "kind" : "case class"}, {"name" : "laika.ast.Comment", "shortDescription" : "A comment that may be omitted by renderers.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Comment", "member" : "laika.ast.Comment.withOptions", "link" : "laika\/ast\/Comment.html#withOptions(options:laika.ast.Options):laika.ast.Comment", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Comment.Self", "link" : "laika\/ast\/Comment.html#Self=laika.ast.Comment", "kind" : "type"}, {"member" : "laika.ast.Comment#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Comment.options", "link" : "laika\/ast\/Comment.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": String", "member" : "laika.ast.Comment.content", "link" : "laika\/ast\/Comment.html#content:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Comment.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Comment.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Comment.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Comment.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Comment.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Comment.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Comment.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Comment.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Comment.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Comment.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Comment.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Comment.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Comment.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Comment.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Comment.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Comment.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Comment.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Comment.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Comment.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Comment.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Comment.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Comment.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Comment.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Comment.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Comment.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Comment.html", "kind" : "case class"}, {"name" : "laika.ast.Container", "members_trait" : [{"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Container.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Container.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Container.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Container.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Container.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Container.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Container.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Container.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Container.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/Container.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/Container.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Container.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Container.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Container.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Container.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Container.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Container.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Container.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Container.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Container.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Container.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Container.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Container.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Container.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Container.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Container.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Container.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Container.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Container.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Container.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "content", "tail" : "(): T", "member" : "laika.ast.Container.content", "link" : "laika\/ast\/Container.html#content:T", "kind" : "abstract def"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/Container.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/Container.html#options:laika.ast.Options", "kind" : "abstract def"}, {"member" : "laika.ast.Customizable.Self", "error" : "unsupported entity"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/Container.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/Container.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/Container.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "A generic container.", "trait" : "laika\/ast\/Container.html", "kind" : "trait"}, {"name" : "laika.ast.ContextReference", "shortDescription" : "Represents a reference to a value from the context of the current document.", "members_class" : [{"label" : "invalidType", "tail" : "(value: ConfigValue): InvalidSpan", "member" : "laika.ast.ContextReference.invalidType", "link" : "laika\/ast\/ContextReference.html#invalidType(value:laika.config.ConfigValue):laika.ast.InvalidSpan", "kind" : "def"}, {"label" : "invalid", "tail" : "(cError: ConfigError): InvalidSpan", "member" : "laika.ast.ContextReference.invalid", "link" : "laika\/ast\/ContextReference.html#invalid(cError:laika.config.ConfigError):laika.ast.InvalidSpan", "kind" : "def"}, {"label" : "missing", "tail" : "(): InvalidSpan", "member" : "laika.ast.ContextReference.missing", "link" : "laika\/ast\/ContextReference.html#missing:laika.ast.InvalidSpan", "kind" : "def"}, {"label" : "resolve", "tail" : "(cursor: DocumentCursor): Span", "member" : "laika.ast.ContextReference.resolve", "link" : "laika\/ast\/ContextReference.html#resolve(cursor:laika.ast.DocumentCursor):laika.ast.Span", "kind" : "def"}, {"member" : "laika.ast.ContextReference#<init>", "error" : "unsupported entity"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/ContextReference.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/ContextReference.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/ContextReference.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/ContextReference.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/ContextReference.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/ContextReference.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/ContextReference.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/ContextReference.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/ContextReference.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/ContextReference.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/ContextReference.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/ContextReference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/ContextReference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/ContextReference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/ContextReference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/ContextReference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/ContextReference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/ContextReference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ContextReference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ContextReference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ContextReference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/ContextReference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/ContextReference.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/ContextReference.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/ContextReference.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/ContextReference.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/ContextReference.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/ContextReference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/ContextReference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/ContextReference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "result", "tail" : "(value: ConfigResult[Option[ConfigValue]]): T", "member" : "laika.ast.ContextReference.result", "link" : "laika\/ast\/ContextReference.html#result(value:laika.config.Config.ConfigResult[Option[laika.config.ConfigValue]]):T", "kind" : "abstract def"}, {"label" : "unresolvedMessage", "tail" : "(): String", "member" : "laika.ast.Unresolved.unresolvedMessage", "link" : "laika\/ast\/ContextReference.html#unresolvedMessage:String", "kind" : "abstract def"}, {"label" : "source", "tail" : "(): SourceFragment", "member" : "laika.ast.Unresolved.source", "link" : "laika\/ast\/ContextReference.html#source:laika.parse.SourceFragment", "kind" : "abstract def"}, {"member" : "laika.ast.Span.Self", "error" : "unsupported entity"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/ContextReference.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/ContextReference.html#options:laika.ast.Options", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/ContextReference.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/ContextReference.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/ContextReference.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "class" : "laika\/ast\/ContextReference.html", "kind" : "class"}, {"name" : "laika.ast.Cursor", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Cursor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Cursor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Cursor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Cursor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Cursor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Cursor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Cursor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Cursor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Cursor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Cursor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Cursor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Cursor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Cursor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Cursor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Cursor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Cursor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Cursor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Cursor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Cursor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "position", "tail" : "(): TreePosition", "member" : "laika.ast.Cursor.position", "link" : "laika\/ast\/Cursor.html#position:laika.ast.TreePosition", "kind" : "abstract def"}, {"label" : "config", "tail" : "(): Config", "member" : "laika.ast.Cursor.config", "link" : "laika\/ast\/Cursor.html#config:laika.config.Config", "kind" : "abstract def"}, {"label" : "root", "tail" : "(): RootCursor", "member" : "laika.ast.Cursor.root", "link" : "laika\/ast\/Cursor.html#root:laika.ast.RootCursor", "kind" : "abstract def"}, {"label" : "path", "tail" : "(): Path", "member" : "laika.ast.Cursor.path", "link" : "laika\/ast\/Cursor.html#path:laika.ast.Path", "kind" : "abstract def"}, {"label" : "target", "tail" : "(): Target", "member" : "laika.ast.Cursor.target", "link" : "laika\/ast\/Cursor.html#target:Cursor.this.Target", "kind" : "abstract def"}, {"member" : "laika.ast.Cursor.Target", "error" : "unsupported entity"}], "shortDescription" : "A cursor provides the necessary context during a rewrite operation.", "trait" : "laika\/ast\/Cursor.html", "kind" : "trait"}, {"name" : "laika.ast.Customizable", "members_trait" : [{"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Customizable.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Customizable.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Customizable.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Customizable.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Customizable.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Customizable.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Customizable.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Customizable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Customizable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Customizable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Customizable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Customizable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Customizable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Customizable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Customizable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Customizable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Customizable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Customizable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Customizable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Customizable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Customizable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Customizable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Customizable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Customizable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Customizable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Customizable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/Customizable.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/Customizable.html#options:laika.ast.Options", "kind" : "abstract def"}, {"member" : "laika.ast.Customizable.Self", "error" : "unsupported entity"}], "shortDescription" : "", "trait" : "laika\/ast\/Customizable.html", "kind" : "trait"}, {"name" : "laika.ast.DecoratedHeader", "shortDescription" : "A decorated header where the level gets determined in the rewrite phase based on the decoration used and the order they appear in the document.", "object" : "laika\/ast\/DecoratedHeader$.html", "members_object" : [{"label" : "apply", "tail" : "(decoration: HeaderDecoration, source: SourceFragment, span: Span, spans: Span*): DecoratedHeader", "member" : "laika.ast.DecoratedHeader.apply", "link" : "laika\/ast\/DecoratedHeader$.html#apply(decoration:laika.ast.HeaderDecoration,source:laika.parse.SourceFragment,span:laika.ast.Span,spans:laika.ast.Span*):laika.ast.DecoratedHeader", "kind" : "def"}, {"label" : "apply", "tail" : "(decoration: HeaderDecoration, source: SourceFragment, text: String): DecoratedHeader", "member" : "laika.ast.DecoratedHeader.apply", "link" : "laika\/ast\/DecoratedHeader$.html#apply(decoration:laika.ast.HeaderDecoration,source:laika.parse.SourceFragment,text:String):laika.ast.DecoratedHeader", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/DecoratedHeader$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/DecoratedHeader$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/DecoratedHeader$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/DecoratedHeader$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/DecoratedHeader$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/DecoratedHeader$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/DecoratedHeader$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DecoratedHeader$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DecoratedHeader$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DecoratedHeader$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/DecoratedHeader$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/DecoratedHeader$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/DecoratedHeader$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/DecoratedHeader$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/DecoratedHeader$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/DecoratedHeader$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/DecoratedHeader$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/DecoratedHeader$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/DecoratedHeader$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "unresolvedMessage", "tail" : ": String", "member" : "laika.ast.DecoratedHeader.unresolvedMessage", "link" : "laika\/ast\/DecoratedHeader.html#unresolvedMessage:String", "kind" : "lazy val"}, {"label" : "withOptions", "tail" : "(options: Options): DecoratedHeader", "member" : "laika.ast.DecoratedHeader.withOptions", "link" : "laika\/ast\/DecoratedHeader.html#withOptions(options:laika.ast.Options):laika.ast.DecoratedHeader", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Span]): DecoratedHeader", "member" : "laika.ast.DecoratedHeader.withContent", "link" : "laika\/ast\/DecoratedHeader.html#withContent(newContent:Seq[laika.ast.Span]):laika.ast.DecoratedHeader", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.DecoratedHeader.Self", "link" : "laika\/ast\/DecoratedHeader.html#Self=laika.ast.DecoratedHeader", "kind" : "type"}, {"member" : "laika.ast.DecoratedHeader#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.DecoratedHeader.options", "link" : "laika\/ast\/DecoratedHeader.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "source", "tail" : ": SourceFragment", "member" : "laika.ast.DecoratedHeader.source", "link" : "laika\/ast\/DecoratedHeader.html#source:laika.parse.SourceFragment", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Span]", "member" : "laika.ast.DecoratedHeader.content", "link" : "laika\/ast\/DecoratedHeader.html#content:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "decoration", "tail" : ": HeaderDecoration", "member" : "laika.ast.DecoratedHeader.decoration", "link" : "laika\/ast\/DecoratedHeader.html#decoration:laika.ast.HeaderDecoration", "kind" : "val"}, {"label" : "extractText", "tail" : "(): String", "member" : "laika.ast.SpanContainer.extractText", "link" : "laika\/ast\/DecoratedHeader.html#extractText:String", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.SpanContainer.rewriteChildren", "link" : "laika\/ast\/DecoratedHeader.html#rewriteChildren(rules:laika.ast.RewriteRules):SpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/DecoratedHeader.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/DecoratedHeader.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/DecoratedHeader.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/DecoratedHeader.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/DecoratedHeader.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/DecoratedHeader.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/DecoratedHeader.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/DecoratedHeader.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/DecoratedHeader.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/DecoratedHeader.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/DecoratedHeader.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/DecoratedHeader.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/DecoratedHeader.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/DecoratedHeader.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/DecoratedHeader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/DecoratedHeader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/DecoratedHeader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/DecoratedHeader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/DecoratedHeader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/DecoratedHeader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/DecoratedHeader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DecoratedHeader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DecoratedHeader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DecoratedHeader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/DecoratedHeader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/DecoratedHeader.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/DecoratedHeader.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/DecoratedHeader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/DecoratedHeader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/DecoratedHeader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/DecoratedHeader.html", "kind" : "case class"}, {"name" : "laika.ast.Definition", "members_trait" : [{"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Definition.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Definition.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Definition.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Definition.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Definition.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Definition.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Definition.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Definition.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Definition.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/Definition.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/Definition.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Definition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Definition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Definition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Definition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Definition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Definition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Definition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Definition.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Definition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Definition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Definition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Definition.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Definition.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Definition.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Definition.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Definition.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Definition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Definition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Definition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "laika.ast.Definition.Self", "error" : "unsupported entity"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/Definition.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/Definition.html#options:laika.ast.Options", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/Definition.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/Definition.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/Definition.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "Represents a definition that can be used to resolve references.", "trait" : "laika\/ast\/Definition.html", "kind" : "trait"}, {"name" : "laika.ast.DefinitionList", "shortDescription" : "A list of terms and their definitions.", "object" : "laika\/ast\/DefinitionList$.html", "members_object" : [{"label" : "apply", "tail" : "(items: DefinitionListItem*): DefinitionList", "member" : "laika.ast.DefinitionList.apply", "link" : "laika\/ast\/DefinitionList$.html#apply(items:laika.ast.DefinitionListItem*):laika.ast.DefinitionList", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/DefinitionList$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/DefinitionList$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/DefinitionList$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/DefinitionList$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/DefinitionList$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/DefinitionList$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/DefinitionList$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DefinitionList$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DefinitionList$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DefinitionList$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/DefinitionList$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/DefinitionList$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/DefinitionList$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/DefinitionList$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/DefinitionList$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/DefinitionList$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/DefinitionList$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/DefinitionList$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/DefinitionList$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): DefinitionList", "member" : "laika.ast.DefinitionList.withOptions", "link" : "laika\/ast\/DefinitionList.html#withOptions(options:laika.ast.Options):laika.ast.DefinitionList", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): DefinitionList", "member" : "laika.ast.DefinitionList.rewriteChildren", "link" : "laika\/ast\/DefinitionList.html#rewriteChildren(rules:laika.ast.RewriteRules):laika.ast.DefinitionList", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.DefinitionList.Self", "link" : "laika\/ast\/DefinitionList.html#Self=laika.ast.DefinitionList", "kind" : "type"}, {"member" : "laika.ast.DefinitionList#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.DefinitionList.options", "link" : "laika\/ast\/DefinitionList.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[DefinitionListItem]", "member" : "laika.ast.DefinitionList.content", "link" : "laika\/ast\/DefinitionList.html#content:Seq[laika.ast.DefinitionListItem]", "kind" : "val"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/DefinitionList.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/DefinitionList.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/DefinitionList.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/DefinitionList.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/DefinitionList.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/DefinitionList.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/DefinitionList.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/DefinitionList.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/DefinitionList.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/DefinitionList.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/DefinitionList.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/DefinitionList.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/DefinitionList.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/DefinitionList.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/DefinitionList.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/DefinitionList.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/DefinitionList.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/DefinitionList.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/DefinitionList.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/DefinitionList.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/DefinitionList.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DefinitionList.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DefinitionList.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DefinitionList.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/DefinitionList.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/DefinitionList.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/DefinitionList.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/DefinitionList.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/DefinitionList.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/DefinitionList.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/DefinitionList.html", "kind" : "case class"}, {"name" : "laika.ast.DefinitionListItem", "shortDescription" : "A single definition item, containing the term and definition (as the content property).", "object" : "laika\/ast\/DefinitionListItem$.html", "members_object" : [{"label" : "apply", "tail" : "(term: String, blocks: Block*): DefinitionListItem", "member" : "laika.ast.DefinitionListItem.apply", "link" : "laika\/ast\/DefinitionListItem$.html#apply(term:String,blocks:laika.ast.Block*):laika.ast.DefinitionListItem", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/DefinitionListItem$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/DefinitionListItem$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/DefinitionListItem$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/DefinitionListItem$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/DefinitionListItem$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/DefinitionListItem$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/DefinitionListItem$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DefinitionListItem$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DefinitionListItem$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DefinitionListItem$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/DefinitionListItem$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/DefinitionListItem$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/DefinitionListItem$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/DefinitionListItem$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/DefinitionListItem$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/DefinitionListItem$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/DefinitionListItem$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/DefinitionListItem$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/DefinitionListItem$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): DefinitionListItem", "member" : "laika.ast.DefinitionListItem.withOptions", "link" : "laika\/ast\/DefinitionListItem.html#withOptions(options:laika.ast.Options):laika.ast.DefinitionListItem", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Block]): DefinitionListItem", "member" : "laika.ast.DefinitionListItem.withContent", "link" : "laika\/ast\/DefinitionListItem.html#withContent(newContent:Seq[laika.ast.Block]):laika.ast.DefinitionListItem", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): DefinitionListItem", "member" : "laika.ast.DefinitionListItem.rewriteChildren", "link" : "laika\/ast\/DefinitionListItem.html#rewriteChildren(rules:laika.ast.RewriteRules):laika.ast.DefinitionListItem", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.DefinitionListItem.Self", "link" : "laika\/ast\/DefinitionListItem.html#Self=laika.ast.DefinitionListItem", "kind" : "type"}, {"member" : "laika.ast.DefinitionListItem#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.DefinitionListItem.options", "link" : "laika\/ast\/DefinitionListItem.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Block]", "member" : "laika.ast.DefinitionListItem.content", "link" : "laika\/ast\/DefinitionListItem.html#content:Seq[laika.ast.Block]", "kind" : "val"}, {"label" : "term", "tail" : ": Seq[Span]", "member" : "laika.ast.DefinitionListItem.term", "link" : "laika\/ast\/DefinitionListItem.html#term:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "rewriteBlocks", "tail" : "(rules: RewriteRule[Block]): Self", "member" : "laika.ast.BlockContainer.rewriteBlocks", "link" : "laika\/ast\/DefinitionListItem.html#rewriteBlocks(rules:laika.ast.RewriteRule[laika.ast.Block]):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/DefinitionListItem.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/DefinitionListItem.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/DefinitionListItem.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/DefinitionListItem.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/DefinitionListItem.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/DefinitionListItem.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/DefinitionListItem.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/DefinitionListItem.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/DefinitionListItem.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/DefinitionListItem.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/DefinitionListItem.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/DefinitionListItem.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/DefinitionListItem.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/DefinitionListItem.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/DefinitionListItem.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/DefinitionListItem.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/DefinitionListItem.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/DefinitionListItem.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/DefinitionListItem.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/DefinitionListItem.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/DefinitionListItem.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DefinitionListItem.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DefinitionListItem.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DefinitionListItem.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/DefinitionListItem.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/DefinitionListItem.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/DefinitionListItem.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/DefinitionListItem.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/DefinitionListItem.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/DefinitionListItem.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/DefinitionListItem.html", "kind" : "case class"}, {"name" : "laika.ast.Deleted", "shortDescription" : "A span representing deleted inline elements that may contain nested spans.", "object" : "laika\/ast\/Deleted$.html", "members_object" : [{"label" : "createSpanContainer", "tail" : "(spans: Seq[Span]): Deleted", "member" : "laika.ast.Deleted.createSpanContainer", "link" : "laika\/ast\/Deleted$.html#createSpanContainer(spans:Seq[laika.ast.Span]):laika.ast.Deleted", "kind" : "def"}, {"label" : "ContainerType", "tail" : "", "member" : "laika.ast.Deleted.ContainerType", "link" : "laika\/ast\/Deleted$.html#ContainerType=laika.ast.Deleted", "kind" : "type"}, {"label" : "apply", "tail" : "(span: Span, spans: Span*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/Deleted$.html#apply(span:laika.ast.Span,spans:laika.ast.Span*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/Deleted$.html#apply(text:String,texts:String*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.SpanContainerCompanion.empty", "link" : "laika\/ast\/Deleted$.html#empty:SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Deleted$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Deleted$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Deleted$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Deleted$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Deleted$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Deleted$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Deleted$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Deleted$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Deleted$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Deleted$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Deleted$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Deleted$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Deleted$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Deleted$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Deleted$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Deleted$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Deleted$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Deleted$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Deleted$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Deleted", "member" : "laika.ast.Deleted.withOptions", "link" : "laika\/ast\/Deleted.html#withOptions(options:laika.ast.Options):laika.ast.Deleted", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Span]): Deleted", "member" : "laika.ast.Deleted.withContent", "link" : "laika\/ast\/Deleted.html#withContent(newContent:Seq[laika.ast.Span]):laika.ast.Deleted", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Deleted.Self", "link" : "laika\/ast\/Deleted.html#Self=laika.ast.Deleted", "kind" : "type"}, {"member" : "laika.ast.Deleted#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Deleted.options", "link" : "laika\/ast\/Deleted.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Span]", "member" : "laika.ast.Deleted.content", "link" : "laika\/ast\/Deleted.html#content:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "extractText", "tail" : "(): String", "member" : "laika.ast.SpanContainer.extractText", "link" : "laika\/ast\/Deleted.html#extractText:String", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.SpanContainer.rewriteChildren", "link" : "laika\/ast\/Deleted.html#rewriteChildren(rules:laika.ast.RewriteRules):SpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/Deleted.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/Deleted.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/Deleted.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/Deleted.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/Deleted.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Deleted.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Deleted.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Deleted.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Deleted.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Deleted.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Deleted.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Deleted.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Deleted.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Deleted.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Deleted.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Deleted.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Deleted.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Deleted.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Deleted.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Deleted.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Deleted.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Deleted.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Deleted.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Deleted.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Deleted.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Deleted.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Deleted.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Deleted.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Deleted.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Deleted.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Deleted.html", "kind" : "case class"}, {"name" : "laika.ast.Document", "shortDescription" : "Represents a single document and provides access to the document content and structure as well as hooks for triggering rewrite operations.", "members_case class" : [{"label" : "configScope", "tail" : ": Scope", "member" : "laika.ast.Document.configScope", "link" : "laika\/ast\/Document.html#configScope:laika.config.Origin.Scope", "kind" : "val"}, {"label" : "rewrite", "tail" : "(rules: RewriteRules): Document", "member" : "laika.ast.Document.rewrite", "link" : "laika\/ast\/Document.html#rewrite(rules:laika.ast.RewriteRules):laika.ast.Document", "kind" : "def"}, {"member" : "laika.ast.Document#<init>", "error" : "unsupported entity"}, {"label" : "position", "tail" : ": TreePosition", "member" : "laika.ast.Document.position", "link" : "laika\/ast\/Document.html#position:laika.ast.TreePosition", "kind" : "val"}, {"label" : "config", "tail" : ": Config", "member" : "laika.ast.Document.config", "link" : "laika\/ast\/Document.html#config:laika.config.Config", "kind" : "val"}, {"label" : "fragments", "tail" : ": Map[String, Element]", "member" : "laika.ast.Document.fragments", "link" : "laika\/ast\/Document.html#fragments:Map[String,laika.ast.Element]", "kind" : "val"}, {"label" : "content", "tail" : ": RootElement", "member" : "laika.ast.Document.content", "link" : "laika\/ast\/Document.html#content:laika.ast.RootElement", "kind" : "val"}, {"label" : "path", "tail" : ": Path", "member" : "laika.ast.Document.path", "link" : "laika\/ast\/Document.html#path:laika.ast.Path", "kind" : "val"}, {"label" : "targetFormats", "tail" : "(): TargetFormats", "member" : "laika.ast.TreeContent.targetFormats", "link" : "laika\/ast\/Document.html#targetFormats:laika.rewrite.nav.TargetFormats", "kind" : "def"}, {"label" : "titleFromConfig", "tail" : "(): Option[SpanSequence]", "member" : "laika.ast.TreeContent.titleFromConfig", "link" : "laika\/ast\/Document.html#titleFromConfig:Option[laika.ast.SpanSequence]", "kind" : "def"}, {"label" : "invalidElements", "tail" : "(filter: MessageFilter): Seq[Invalid]", "member" : "laika.ast.DocumentStructure.invalidElements", "link" : "laika\/ast\/Document.html#invalidElements(filter:laika.ast.MessageFilter):Seq[laika.ast.Invalid]", "kind" : "def"}, {"label" : "runtimeMessages", "tail" : "(filter: MessageFilter): Seq[RuntimeMessage]", "member" : "laika.ast.DocumentStructure.runtimeMessages", "link" : "laika\/ast\/Document.html#runtimeMessages(filter:laika.ast.MessageFilter):Seq[laika.ast.RuntimeMessage]", "kind" : "def"}, {"label" : "sections", "tail" : ": Seq[SectionInfo]", "member" : "laika.ast.DocumentStructure.sections", "link" : "laika\/ast\/Document.html#sections:Seq[laika.ast.SectionInfo]", "kind" : "lazy val"}, {"label" : "title", "tail" : "(): Option[SpanSequence]", "member" : "laika.ast.DocumentStructure.title", "link" : "laika\/ast\/Document.html#title:Option[laika.ast.SpanSequence]", "kind" : "def"}, {"label" : "asNavigationItem", "tail" : "(context: NavigationBuilderContext): NavigationItem", "member" : "laika.ast.DocumentNavigation.asNavigationItem", "link" : "laika\/ast\/Document.html#asNavigationItem(context:laika.ast.NavigationBuilderContext):laika.ast.NavigationItem", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "laika.ast.Navigatable.name", "link" : "laika\/ast\/Document.html#name:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Document.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Document.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Document.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Document.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Document.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Document.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Document.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Document.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Document.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Document.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Document.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Document.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Document.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Document.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Document.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Document.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Document.html", "kind" : "case class"}, {"name" : "laika.ast.DocumentCursor", "shortDescription" : "Cursor for a single document, its parent, siblings and root directories, its associated template and other context information that is required during a rewrite operation.", "object" : "laika\/ast\/DocumentCursor$.html", "members_object" : [{"label" : "apply", "tail" : "(document: Document, parent: TreeCursor, config: Config, position: TreePosition): DocumentCursor", "member" : "laika.ast.DocumentCursor.apply", "link" : "laika\/ast\/DocumentCursor$.html#apply(document:laika.ast.Document,parent:laika.ast.TreeCursor,config:laika.config.Config,position:laika.ast.TreePosition):laika.ast.DocumentCursor", "kind" : "def"}, {"label" : "apply", "tail" : "(document: Document, targetFormat: Option[String]): DocumentCursor", "member" : "laika.ast.DocumentCursor.apply", "link" : "laika\/ast\/DocumentCursor$.html#apply(document:laika.ast.Document,targetFormat:Option[String]):laika.ast.DocumentCursor", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/DocumentCursor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/DocumentCursor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/DocumentCursor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/DocumentCursor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/DocumentCursor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/DocumentCursor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/DocumentCursor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentCursor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentCursor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentCursor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/DocumentCursor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/DocumentCursor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/DocumentCursor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/DocumentCursor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/DocumentCursor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/DocumentCursor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/DocumentCursor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/DocumentCursor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/DocumentCursor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "validateAndRecover", "tail" : "(link: Link, source: SourceFragment): Span", "member" : "laika.ast.DocumentCursor.validateAndRecover", "link" : "laika\/ast\/DocumentCursor.html#validateAndRecover(link:laika.ast.Link,source:laika.parse.SourceFragment):laika.ast.Span", "kind" : "def"}, {"label" : "validate", "tail" : "(link: L): Either[String, L]", "member" : "laika.ast.DocumentCursor.validate", "link" : "laika\/ast\/DocumentCursor.html#validate[L<:laika.ast.Link](link:L):Either[String,L]", "kind" : "def"}, {"label" : "validate", "tail" : "(target: InternalTarget): TargetValidation", "member" : "laika.ast.DocumentCursor.validate", "link" : "laika\/ast\/DocumentCursor.html#validate(target:laika.ast.InternalTarget):laika.rewrite.link.TargetValidation", "kind" : "def"}, {"label" : "withReferenceContext", "tail" : "(refValue: T)(arg0: ConfigEncoder[T]): DocumentCursor", "member" : "laika.ast.DocumentCursor.withReferenceContext", "link" : "laika\/ast\/DocumentCursor.html#withReferenceContext[T](refValue:T)(implicitevidence$1:laika.config.ConfigEncoder[T]):laika.ast.DocumentCursor", "kind" : "def"}, {"label" : "resolveReference", "tail" : "(key: Key): ConfigResult[Option[ConfigValue]]", "member" : "laika.ast.DocumentCursor.resolveReference", "link" : "laika\/ast\/DocumentCursor.html#resolveReference(key:laika.config.Key):laika.config.Config.ConfigResult[Option[laika.config.ConfigValue]]", "kind" : "def"}, {"label" : "nextDocument", "tail" : "(): Option[DocumentCursor]", "member" : "laika.ast.DocumentCursor.nextDocument", "link" : "laika\/ast\/DocumentCursor.html#nextDocument:Option[laika.ast.DocumentCursor]", "kind" : "def"}, {"label" : "previousDocument", "tail" : "(): Option[DocumentCursor]", "member" : "laika.ast.DocumentCursor.previousDocument", "link" : "laika\/ast\/DocumentCursor.html#previousDocument:Option[laika.ast.DocumentCursor]", "kind" : "def"}, {"label" : "flattenedSiblings", "tail" : "(): Siblings", "member" : "laika.ast.DocumentCursor.flattenedSiblings", "link" : "laika\/ast\/DocumentCursor.html#flattenedSiblings:DocumentCursor.this.Siblings", "kind" : "def"}, {"label" : "Siblings", "tail" : "", "member" : "laika.ast.DocumentCursor.Siblings", "link" : "laika\/ast\/DocumentCursor.html#SiblingsextendsAnyRef", "kind" : "class"}, {"label" : "rewriteTarget", "tail" : "(rules: RewriteRules): Document", "member" : "laika.ast.DocumentCursor.rewriteTarget", "link" : "laika\/ast\/DocumentCursor.html#rewriteTarget(rules:laika.ast.RewriteRules):laika.ast.Document", "kind" : "def"}, {"label" : "root", "tail" : ": RootCursor", "member" : "laika.ast.DocumentCursor.root", "link" : "laika\/ast\/DocumentCursor.html#root:laika.ast.RootCursor", "kind" : "lazy val"}, {"label" : "path", "tail" : ": Path", "member" : "laika.ast.DocumentCursor.path", "link" : "laika\/ast\/DocumentCursor.html#path:laika.ast.Path", "kind" : "val"}, {"label" : "Target", "tail" : "", "member" : "laika.ast.DocumentCursor.Target", "link" : "laika\/ast\/DocumentCursor.html#Target=laika.ast.Document", "kind" : "type"}, {"member" : "laika.ast.DocumentCursor#<init>", "error" : "unsupported entity"}, {"label" : "position", "tail" : ": TreePosition", "member" : "laika.ast.DocumentCursor.position", "link" : "laika\/ast\/DocumentCursor.html#position:laika.ast.TreePosition", "kind" : "val"}, {"label" : "templatePath", "tail" : ": Option[Path]", "member" : "laika.ast.DocumentCursor.templatePath", "link" : "laika\/ast\/DocumentCursor.html#templatePath:Option[laika.ast.Path]", "kind" : "val"}, {"label" : "config", "tail" : ": Config", "member" : "laika.ast.DocumentCursor.config", "link" : "laika\/ast\/DocumentCursor.html#config:laika.config.Config", "kind" : "val"}, {"label" : "resolver", "tail" : ": ReferenceResolver", "member" : "laika.ast.DocumentCursor.resolver", "link" : "laika\/ast\/DocumentCursor.html#resolver:laika.rewrite.ReferenceResolver", "kind" : "val"}, {"label" : "parent", "tail" : ": TreeCursor", "member" : "laika.ast.DocumentCursor.parent", "link" : "laika\/ast\/DocumentCursor.html#parent:laika.ast.TreeCursor", "kind" : "val"}, {"label" : "target", "tail" : ": Document", "member" : "laika.ast.DocumentCursor.target", "link" : "laika\/ast\/DocumentCursor.html#target:laika.ast.Document", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/DocumentCursor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/DocumentCursor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/DocumentCursor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/DocumentCursor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/DocumentCursor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/DocumentCursor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/DocumentCursor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentCursor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentCursor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentCursor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/DocumentCursor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/DocumentCursor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/DocumentCursor.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/DocumentCursor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/DocumentCursor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/DocumentCursor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/DocumentCursor.html", "kind" : "case class"}, {"name" : "laika.ast.DocumentFragment", "shortDescription" : "A named document fragment that usually gets rendered separately from the main root element", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): DocumentFragment", "member" : "laika.ast.DocumentFragment.withOptions", "link" : "laika\/ast\/DocumentFragment.html#withOptions(options:laika.ast.Options):laika.ast.DocumentFragment", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.DocumentFragment.Self", "link" : "laika\/ast\/DocumentFragment.html#Self=laika.ast.DocumentFragment", "kind" : "type"}, {"member" : "laika.ast.DocumentFragment#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.DocumentFragment.options", "link" : "laika\/ast\/DocumentFragment.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "root", "tail" : ": Element", "member" : "laika.ast.DocumentFragment.root", "link" : "laika\/ast\/DocumentFragment.html#root:laika.ast.Element", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "laika.ast.DocumentFragment.name", "link" : "laika\/ast\/DocumentFragment.html#name:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/DocumentFragment.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/DocumentFragment.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/DocumentFragment.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/DocumentFragment.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/DocumentFragment.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/DocumentFragment.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/DocumentFragment.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/DocumentFragment.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/DocumentFragment.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/DocumentFragment.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/DocumentFragment.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/DocumentFragment.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/DocumentFragment.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/DocumentFragment.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/DocumentFragment.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/DocumentFragment.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentFragment.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentFragment.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentFragment.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/DocumentFragment.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/DocumentFragment.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/DocumentFragment.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/DocumentFragment.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/DocumentFragment.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/DocumentFragment.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/DocumentFragment.html", "kind" : "case class"}, {"name" : "laika.ast.DocumentMetadata", "shortDescription" : "Metadata associated with a document.", "object" : "laika\/ast\/DocumentMetadata$.html", "members_object" : [{"label" : "defaultKey", "tail" : ": DefaultKey[DocumentMetadata]", "member" : "laika.ast.DocumentMetadata.defaultKey", "link" : "laika\/ast\/DocumentMetadata$.html#defaultKey:laika.config.DefaultKey[laika.ast.DocumentMetadata]", "kind" : "implicit val"}, {"label" : "encoder", "tail" : ": ConfigEncoder[DocumentMetadata]", "member" : "laika.ast.DocumentMetadata.encoder", "link" : "laika\/ast\/DocumentMetadata$.html#encoder:laika.config.ConfigEncoder[laika.ast.DocumentMetadata]", "kind" : "implicit val"}, {"label" : "decoder", "tail" : ": ConfigDecoder[DocumentMetadata]", "member" : "laika.ast.DocumentMetadata.decoder", "link" : "laika\/ast\/DocumentMetadata$.html#decoder:laika.config.ConfigDecoder[laika.ast.DocumentMetadata]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/DocumentMetadata$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/DocumentMetadata$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/DocumentMetadata$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/DocumentMetadata$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/DocumentMetadata$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/DocumentMetadata$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/DocumentMetadata$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentMetadata$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentMetadata$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentMetadata$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/DocumentMetadata$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/DocumentMetadata$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/DocumentMetadata$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/DocumentMetadata$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/DocumentMetadata$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/DocumentMetadata$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/DocumentMetadata$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/DocumentMetadata$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/DocumentMetadata$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withDefaults", "tail" : "(defaults: DocumentMetadata): DocumentMetadata", "member" : "laika.ast.DocumentMetadata.withDefaults", "link" : "laika\/ast\/DocumentMetadata.html#withDefaults(defaults:laika.ast.DocumentMetadata):laika.ast.DocumentMetadata", "kind" : "def"}, {"member" : "laika.ast.DocumentMetadata#<init>", "error" : "unsupported entity"}, {"label" : "version", "tail" : ": Option[String]", "member" : "laika.ast.DocumentMetadata.version", "link" : "laika\/ast\/DocumentMetadata.html#version:Option[String]", "kind" : "val"}, {"label" : "date", "tail" : ": Option[Date]", "member" : "laika.ast.DocumentMetadata.date", "link" : "laika\/ast\/DocumentMetadata.html#date:Option[java.util.Date]", "kind" : "val"}, {"label" : "language", "tail" : ": Option[String]", "member" : "laika.ast.DocumentMetadata.language", "link" : "laika\/ast\/DocumentMetadata.html#language:Option[String]", "kind" : "val"}, {"label" : "authors", "tail" : ": Seq[String]", "member" : "laika.ast.DocumentMetadata.authors", "link" : "laika\/ast\/DocumentMetadata.html#authors:Seq[String]", "kind" : "val"}, {"label" : "identifier", "tail" : ": Option[String]", "member" : "laika.ast.DocumentMetadata.identifier", "link" : "laika\/ast\/DocumentMetadata.html#identifier:Option[String]", "kind" : "val"}, {"label" : "description", "tail" : ": Option[String]", "member" : "laika.ast.DocumentMetadata.description", "link" : "laika\/ast\/DocumentMetadata.html#description:Option[String]", "kind" : "val"}, {"label" : "title", "tail" : ": Option[String]", "member" : "laika.ast.DocumentMetadata.title", "link" : "laika\/ast\/DocumentMetadata.html#title:Option[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/DocumentMetadata.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/DocumentMetadata.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/DocumentMetadata.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/DocumentMetadata.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/DocumentMetadata.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/DocumentMetadata.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/DocumentMetadata.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentMetadata.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentMetadata.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentMetadata.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/DocumentMetadata.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/DocumentMetadata.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/DocumentMetadata.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/DocumentMetadata.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/DocumentMetadata.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/DocumentMetadata.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/DocumentMetadata.html", "kind" : "case class"}, {"name" : "laika.ast.DocumentNavigation", "members_trait" : [{"label" : "asNavigationItem", "tail" : "(context: NavigationBuilderContext): NavigationItem", "member" : "laika.ast.DocumentNavigation.asNavigationItem", "link" : "laika\/ast\/DocumentNavigation.html#asNavigationItem(context:laika.ast.NavigationBuilderContext):laika.ast.NavigationItem", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "laika.ast.Navigatable.name", "link" : "laika\/ast\/DocumentNavigation.html#name:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/DocumentNavigation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/DocumentNavigation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/DocumentNavigation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/DocumentNavigation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/DocumentNavigation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/DocumentNavigation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/DocumentNavigation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentNavigation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentNavigation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentNavigation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/DocumentNavigation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/DocumentNavigation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/DocumentNavigation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/DocumentNavigation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/DocumentNavigation.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/DocumentNavigation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/DocumentNavigation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/DocumentNavigation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/DocumentNavigation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "targetFormats", "tail" : "(): TargetFormats", "member" : "laika.ast.DocumentNavigation.targetFormats", "link" : "laika\/ast\/DocumentNavigation.html#targetFormats:laika.rewrite.nav.TargetFormats", "kind" : "abstract def"}, {"label" : "sections", "tail" : "(): Seq[SectionInfo]", "member" : "laika.ast.DocumentNavigation.sections", "link" : "laika\/ast\/DocumentNavigation.html#sections:Seq[laika.ast.SectionInfo]", "kind" : "abstract def"}, {"label" : "title", "tail" : "(): Option[SpanSequence]", "member" : "laika.ast.DocumentNavigation.title", "link" : "laika\/ast\/DocumentNavigation.html#title:Option[laika.ast.SpanSequence]", "kind" : "abstract def"}, {"label" : "path", "tail" : "(): Path", "member" : "laika.ast.Navigatable.path", "link" : "laika\/ast\/DocumentNavigation.html#path:laika.ast.Path", "kind" : "abstract def"}], "shortDescription" : "Represents a document structure with sections that can be turned into a navigation structure.", "trait" : "laika\/ast\/DocumentNavigation.html", "kind" : "trait"}, {"name" : "laika.ast.DocumentStructure", "members_trait" : [{"label" : "invalidElements", "tail" : "(filter: MessageFilter): Seq[Invalid]", "member" : "laika.ast.DocumentStructure.invalidElements", "link" : "laika\/ast\/DocumentStructure.html#invalidElements(filter:laika.ast.MessageFilter):Seq[laika.ast.Invalid]", "kind" : "def"}, {"label" : "runtimeMessages", "tail" : "(filter: MessageFilter): Seq[RuntimeMessage]", "member" : "laika.ast.DocumentStructure.runtimeMessages", "link" : "laika\/ast\/DocumentStructure.html#runtimeMessages(filter:laika.ast.MessageFilter):Seq[laika.ast.RuntimeMessage]", "kind" : "def"}, {"label" : "sections", "tail" : ": Seq[SectionInfo]", "member" : "laika.ast.DocumentStructure.sections", "link" : "laika\/ast\/DocumentStructure.html#sections:Seq[laika.ast.SectionInfo]", "kind" : "lazy val"}, {"label" : "title", "tail" : "(): Option[SpanSequence]", "member" : "laika.ast.DocumentStructure.title", "link" : "laika\/ast\/DocumentStructure.html#title:Option[laika.ast.SpanSequence]", "kind" : "def"}, {"label" : "asNavigationItem", "tail" : "(context: NavigationBuilderContext): NavigationItem", "member" : "laika.ast.DocumentNavigation.asNavigationItem", "link" : "laika\/ast\/DocumentStructure.html#asNavigationItem(context:laika.ast.NavigationBuilderContext):laika.ast.NavigationItem", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "laika.ast.Navigatable.name", "link" : "laika\/ast\/DocumentStructure.html#name:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/DocumentStructure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/DocumentStructure.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/DocumentStructure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/DocumentStructure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/DocumentStructure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/DocumentStructure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/DocumentStructure.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentStructure.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentStructure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentStructure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/DocumentStructure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/DocumentStructure.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/DocumentStructure.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/DocumentStructure.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/DocumentStructure.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/DocumentStructure.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/DocumentStructure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/DocumentStructure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/DocumentStructure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "content", "tail" : "(): RootElement", "member" : "laika.ast.DocumentStructure.content", "link" : "laika\/ast\/DocumentStructure.html#content:laika.ast.RootElement", "kind" : "abstract def"}, {"label" : "targetFormats", "tail" : "(): TargetFormats", "member" : "laika.ast.DocumentNavigation.targetFormats", "link" : "laika\/ast\/DocumentStructure.html#targetFormats:laika.rewrite.nav.TargetFormats", "kind" : "abstract def"}, {"label" : "path", "tail" : "(): Path", "member" : "laika.ast.Navigatable.path", "link" : "laika\/ast\/DocumentStructure.html#path:laika.ast.Path", "kind" : "abstract def"}], "shortDescription" : "The structure of a markup document.", "trait" : "laika\/ast\/DocumentStructure.html", "kind" : "trait"}, {"name" : "laika.ast.DocumentTree", "shortDescription" : "Represents a tree with all its documents, templates, configurations and subtrees.", "members_case class" : [{"label" : "configScope", "tail" : ": Scope", "member" : "laika.ast.DocumentTree.configScope", "link" : "laika\/ast\/DocumentTree.html#configScope:laika.config.Origin.Scope", "kind" : "val"}, {"label" : "rewrite", "tail" : "(rules: (DocumentCursor) ⇒ RewriteRules): DocumentTree", "member" : "laika.ast.DocumentTree.rewrite", "link" : "laika\/ast\/DocumentTree.html#rewrite(rules:laika.ast.DocumentCursor=>laika.ast.RewriteRules):laika.ast.DocumentTree", "kind" : "def"}, {"label" : "mapDocuments", "tail" : "(f: (Document) ⇒ Document): DocumentTree", "member" : "laika.ast.DocumentTree.mapDocuments", "link" : "laika\/ast\/DocumentTree.html#mapDocuments(f:laika.ast.Document=>laika.ast.Document):laika.ast.DocumentTree", "kind" : "def"}, {"label" : "targetTree", "tail" : ": DocumentTree", "member" : "laika.ast.DocumentTree.targetTree", "link" : "laika\/ast\/DocumentTree.html#targetTree:laika.ast.DocumentTree", "kind" : "val"}, {"member" : "laika.ast.DocumentTree#<init>", "error" : "unsupported entity"}, {"label" : "position", "tail" : ": TreePosition", "member" : "laika.ast.DocumentTree.position", "link" : "laika\/ast\/DocumentTree.html#position:laika.ast.TreePosition", "kind" : "val"}, {"label" : "config", "tail" : ": Config", "member" : "laika.ast.DocumentTree.config", "link" : "laika\/ast\/DocumentTree.html#config:laika.config.Config", "kind" : "val"}, {"label" : "templates", "tail" : ": Seq[TemplateDocument]", "member" : "laika.ast.DocumentTree.templates", "link" : "laika\/ast\/DocumentTree.html#templates:Seq[laika.ast.TemplateDocument]", "kind" : "val"}, {"label" : "titleDocument", "tail" : ": Option[Document]", "member" : "laika.ast.DocumentTree.titleDocument", "link" : "laika\/ast\/DocumentTree.html#titleDocument:Option[laika.ast.Document]", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[TreeContent]", "member" : "laika.ast.DocumentTree.content", "link" : "laika\/ast\/DocumentTree.html#content:Seq[laika.ast.TreeContent]", "kind" : "val"}, {"label" : "path", "tail" : ": Path", "member" : "laika.ast.DocumentTree.path", "link" : "laika\/ast\/DocumentTree.html#path:laika.ast.Path", "kind" : "val"}, {"label" : "targetFormats", "tail" : "(): TargetFormats", "member" : "laika.ast.TreeContent.targetFormats", "link" : "laika\/ast\/DocumentTree.html#targetFormats:laika.rewrite.nav.TargetFormats", "kind" : "def"}, {"label" : "titleFromConfig", "tail" : "(): Option[SpanSequence]", "member" : "laika.ast.TreeContent.titleFromConfig", "link" : "laika\/ast\/DocumentTree.html#titleFromConfig:Option[laika.ast.SpanSequence]", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "laika.ast.Navigatable.name", "link" : "laika\/ast\/DocumentTree.html#name:String", "kind" : "lazy val"}, {"label" : "invalidElements", "tail" : "(filter: MessageFilter): Seq[Invalid]", "member" : "laika.ast.TreeStructure.invalidElements", "link" : "laika\/ast\/DocumentTree.html#invalidElements(filter:laika.ast.MessageFilter):Seq[laika.ast.Invalid]", "kind" : "def"}, {"label" : "runtimeMessages", "tail" : "(filter: MessageFilter): Seq[RuntimeMessage]", "member" : "laika.ast.TreeStructure.runtimeMessages", "link" : "laika\/ast\/DocumentTree.html#runtimeMessages(filter:laika.ast.MessageFilter):Seq[laika.ast.RuntimeMessage]", "kind" : "def"}, {"label" : "asNavigationItem", "tail" : "(context: NavigationBuilderContext): NavigationItem", "member" : "laika.ast.TreeStructure.asNavigationItem", "link" : "laika\/ast\/DocumentTree.html#asNavigationItem(context:laika.ast.NavigationBuilderContext):laika.ast.NavigationItem", "kind" : "def"}, {"label" : "selectSubtree", "tail" : "(path: RelativePath): Option[DocumentTree]", "member" : "laika.ast.TreeStructure.selectSubtree", "link" : "laika\/ast\/DocumentTree.html#selectSubtree(path:laika.ast.RelativePath):Option[laika.ast.DocumentTree]", "kind" : "def"}, {"label" : "selectSubtree", "tail" : "(path: String): Option[DocumentTree]", "member" : "laika.ast.TreeStructure.selectSubtree", "link" : "laika\/ast\/DocumentTree.html#selectSubtree(path:String):Option[laika.ast.DocumentTree]", "kind" : "def"}, {"label" : "withDefaultTemplate", "tail" : "(template: TemplateRoot, formatSuffix: String): DocumentTree", "member" : "laika.ast.TreeStructure.withDefaultTemplate", "link" : "laika\/ast\/DocumentTree.html#withDefaultTemplate(template:laika.ast.TemplateRoot,formatSuffix:String):laika.ast.DocumentTree", "kind" : "def"}, {"label" : "getDefaultTemplate", "tail" : "(formatSuffix: String): Option[TemplateDocument]", "member" : "laika.ast.TreeStructure.getDefaultTemplate", "link" : "laika\/ast\/DocumentTree.html#getDefaultTemplate(formatSuffix:String):Option[laika.ast.TemplateDocument]", "kind" : "def"}, {"label" : "selectTemplate", "tail" : "(path: RelativePath): Option[TemplateDocument]", "member" : "laika.ast.TreeStructure.selectTemplate", "link" : "laika\/ast\/DocumentTree.html#selectTemplate(path:laika.ast.RelativePath):Option[laika.ast.TemplateDocument]", "kind" : "def"}, {"label" : "selectTemplate", "tail" : "(path: String): Option[TemplateDocument]", "member" : "laika.ast.TreeStructure.selectTemplate", "link" : "laika\/ast\/DocumentTree.html#selectTemplate(path:String):Option[laika.ast.TemplateDocument]", "kind" : "def"}, {"label" : "selectDocument", "tail" : "(path: RelativePath): Option[Document]", "member" : "laika.ast.TreeStructure.selectDocument", "link" : "laika\/ast\/DocumentTree.html#selectDocument(path:laika.ast.RelativePath):Option[laika.ast.Document]", "kind" : "def"}, {"label" : "selectDocument", "tail" : "(path: String): Option[Document]", "member" : "laika.ast.TreeStructure.selectDocument", "link" : "laika\/ast\/DocumentTree.html#selectDocument(path:String):Option[laika.ast.Document]", "kind" : "def"}, {"label" : "isEmpty", "tail" : ": Boolean", "member" : "laika.ast.TreeStructure.isEmpty", "link" : "laika\/ast\/DocumentTree.html#isEmpty:Boolean", "kind" : "lazy val"}, {"label" : "allDocuments", "tail" : ": Seq[Document]", "member" : "laika.ast.TreeStructure.allDocuments", "link" : "laika\/ast\/DocumentTree.html#allDocuments:Seq[laika.ast.Document]", "kind" : "lazy val"}, {"label" : "title", "tail" : ": Option[SpanSequence]", "member" : "laika.ast.TreeStructure.title", "link" : "laika\/ast\/DocumentTree.html#title:Option[laika.ast.SpanSequence]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/DocumentTree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/DocumentTree.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/DocumentTree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/DocumentTree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/DocumentTree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/DocumentTree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/DocumentTree.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentTree.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentTree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentTree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/DocumentTree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/DocumentTree.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/DocumentTree.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/DocumentTree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/DocumentTree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/DocumentTree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/DocumentTree.html", "kind" : "case class"}, {"name" : "laika.ast.DocumentTreeRoot", "shortDescription" : "Represents the root of a tree of documents.", "members_case class" : [{"label" : "rewrite", "tail" : "(rules: (DocumentCursor) ⇒ RewriteRules): DocumentTreeRoot", "member" : "laika.ast.DocumentTreeRoot.rewrite", "link" : "laika\/ast\/DocumentTreeRoot.html#rewrite(rules:laika.ast.DocumentCursor=>laika.ast.RewriteRules):laika.ast.DocumentTreeRoot", "kind" : "def"}, {"label" : "withConfig", "tail" : "(config: Config): DocumentTreeRoot", "member" : "laika.ast.DocumentTreeRoot.withConfig", "link" : "laika\/ast\/DocumentTreeRoot.html#withConfig(config:laika.config.Config):laika.ast.DocumentTreeRoot", "kind" : "def"}, {"label" : "mapDocuments", "tail" : "(f: (Document) ⇒ Document): DocumentTreeRoot", "member" : "laika.ast.DocumentTreeRoot.mapDocuments", "link" : "laika\/ast\/DocumentTreeRoot.html#mapDocuments(f:laika.ast.Document=>laika.ast.Document):laika.ast.DocumentTreeRoot", "kind" : "def"}, {"label" : "isEmpty", "tail" : ": Boolean", "member" : "laika.ast.DocumentTreeRoot.isEmpty", "link" : "laika\/ast\/DocumentTreeRoot.html#isEmpty:Boolean", "kind" : "lazy val"}, {"label" : "allDocuments", "tail" : ": Seq[Document]", "member" : "laika.ast.DocumentTreeRoot.allDocuments", "link" : "laika\/ast\/DocumentTreeRoot.html#allDocuments:Seq[laika.ast.Document]", "kind" : "lazy val"}, {"label" : "titleDocument", "tail" : ": Option[Document]", "member" : "laika.ast.DocumentTreeRoot.titleDocument", "link" : "laika\/ast\/DocumentTreeRoot.html#titleDocument:Option[laika.ast.Document]", "kind" : "val"}, {"label" : "title", "tail" : ": Option[SpanSequence]", "member" : "laika.ast.DocumentTreeRoot.title", "link" : "laika\/ast\/DocumentTreeRoot.html#title:Option[laika.ast.SpanSequence]", "kind" : "val"}, {"label" : "config", "tail" : ": Config", "member" : "laika.ast.DocumentTreeRoot.config", "link" : "laika\/ast\/DocumentTreeRoot.html#config:laika.config.Config", "kind" : "val"}, {"member" : "laika.ast.DocumentTreeRoot#<init>", "error" : "unsupported entity"}, {"label" : "includes", "tail" : ": IncludeMap", "member" : "laika.ast.DocumentTreeRoot.includes", "link" : "laika\/ast\/DocumentTreeRoot.html#includes:laika.config.Config.IncludeMap", "kind" : "val"}, {"label" : "staticDocuments", "tail" : ": Seq[StaticDocument]", "member" : "laika.ast.DocumentTreeRoot.staticDocuments", "link" : "laika\/ast\/DocumentTreeRoot.html#staticDocuments:Seq[laika.ast.StaticDocument]", "kind" : "val"}, {"label" : "styles", "tail" : ": Map[String, StyleDeclarationSet]", "member" : "laika.ast.DocumentTreeRoot.styles", "link" : "laika\/ast\/DocumentTreeRoot.html#styles:Map[String,laika.ast.StyleDeclarationSet]", "kind" : "val"}, {"label" : "coverDocument", "tail" : ": Option[Document]", "member" : "laika.ast.DocumentTreeRoot.coverDocument", "link" : "laika\/ast\/DocumentTreeRoot.html#coverDocument:Option[laika.ast.Document]", "kind" : "val"}, {"label" : "tree", "tail" : ": DocumentTree", "member" : "laika.ast.DocumentTreeRoot.tree", "link" : "laika\/ast\/DocumentTreeRoot.html#tree:laika.ast.DocumentTree", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/DocumentTreeRoot.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/DocumentTreeRoot.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/DocumentTreeRoot.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/DocumentTreeRoot.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/DocumentTreeRoot.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/DocumentTreeRoot.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/DocumentTreeRoot.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentTreeRoot.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentTreeRoot.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentTreeRoot.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/DocumentTreeRoot.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/DocumentTreeRoot.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/DocumentTreeRoot.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/DocumentTreeRoot.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/DocumentTreeRoot.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/DocumentTreeRoot.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/DocumentTreeRoot.html", "kind" : "case class"}, {"name" : "laika.ast.DocumentType", "shortDescription" : "Base type for all document type descriptors.", "object" : "laika\/ast\/DocumentType$.html", "members_class" : [{"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/DocumentType.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/DocumentType.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/DocumentType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/DocumentType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/DocumentType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/DocumentType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/DocumentType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/DocumentType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/DocumentType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/DocumentType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/DocumentType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/DocumentType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/DocumentType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/DocumentType.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/DocumentType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/DocumentType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/DocumentType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/DocumentType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/DocumentType.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/DocumentType.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/DocumentType.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "members_object" : [{"label" : "Ignored", "tail" : "", "member" : "laika.ast.DocumentType.Ignored", "link" : "laika\/ast\/DocumentType$.html#Ignored", "kind" : "object"}, {"label" : "Static", "tail" : "", "member" : "laika.ast.DocumentType.Static", "link" : "laika\/ast\/DocumentType$.html#StaticextendsDocumentTypewithProductwithSerializable", "kind" : "case class"}, {"label" : "StyleSheet", "tail" : "", "member" : "laika.ast.DocumentType.StyleSheet", "link" : "laika\/ast\/DocumentType$.html#StyleSheetextendsTextDocumentTypewithProductwithSerializable", "kind" : "case class"}, {"label" : "Template", "tail" : "", "member" : "laika.ast.DocumentType.Template", "link" : "laika\/ast\/DocumentType$.html#Template", "kind" : "object"}, {"label" : "Markup", "tail" : "", "member" : "laika.ast.DocumentType.Markup", "link" : "laika\/ast\/DocumentType$.html#Markup", "kind" : "object"}, {"label" : "Config", "tail" : "", "member" : "laika.ast.DocumentType.Config", "link" : "laika\/ast\/DocumentType$.html#Config", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/DocumentType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/DocumentType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/DocumentType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/DocumentType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/DocumentType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/DocumentType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/DocumentType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentType$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/DocumentType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/DocumentType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/DocumentType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/DocumentType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/DocumentType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/DocumentType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/DocumentType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/DocumentType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/DocumentType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/DocumentType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/ast\/DocumentType.html", "kind" : "class"}, {"name" : "laika.ast.Element", "shortDescription" : "The base class for all Elements forming the document tree.", "members_class" : [{"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Element.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Element.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"member" : "laika.ast.Element#<init>", "error" : "unsupported entity"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Element.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Element.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Element.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Element.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Element.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Element.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Element.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/Element.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/Element.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Element.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Element.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Element.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Element.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Element.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Element.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Element.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Element.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Element.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Element.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Element.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Element.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Element.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Element.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Element.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Element.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Element.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Element.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Element.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/Element.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/Element.html#options:laika.ast.Options", "kind" : "abstract def"}, {"member" : "laika.ast.Customizable.Self", "error" : "unsupported entity"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/Element.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/Element.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/Element.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "class" : "laika\/ast\/Element.html", "kind" : "class"}, {"name" : "laika.ast.ElementContainer", "members_trait" : [{"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/ElementContainer.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/ElementContainer.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/ElementContainer.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/ElementContainer.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/ElementContainer.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/ElementContainer.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/ElementContainer.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/ElementContainer.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/ElementContainer.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/ElementContainer.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/ElementContainer.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/ElementContainer.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/ElementContainer.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/ElementContainer.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/ElementContainer.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/ElementContainer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/ElementContainer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/ElementContainer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/ElementContainer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/ElementContainer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/ElementContainer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/ElementContainer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ElementContainer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ElementContainer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ElementContainer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/ElementContainer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/ElementContainer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/ElementContainer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/ElementContainer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/ElementContainer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/ElementContainer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/ElementContainer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/ElementContainer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "content", "tail" : "(): Seq[E]", "member" : "laika.ast.Container.content", "link" : "laika\/ast\/ElementContainer.html#content:T", "kind" : "abstract def"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/ElementContainer.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/ElementContainer.html#options:laika.ast.Options", "kind" : "abstract def"}, {"member" : "laika.ast.Customizable.Self", "error" : "unsupported entity"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/ElementContainer.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/ElementContainer.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/ElementContainer.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "A generic container of other elements.", "trait" : "laika\/ast\/ElementContainer.html", "kind" : "trait"}, {"name" : "laika.ast.ElementTraversal", "members_trait" : [{"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/ElementTraversal.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/ElementTraversal.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/ElementTraversal.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/ElementTraversal.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/ElementTraversal.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/ElementTraversal.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/ElementTraversal.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/ElementTraversal.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/ElementTraversal.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/ElementTraversal.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ElementTraversal.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ElementTraversal.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ElementTraversal.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/ElementTraversal.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/ElementTraversal.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/ElementTraversal.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/ElementTraversal.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/ElementTraversal.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/ElementTraversal.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/ElementTraversal.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/ElementTraversal.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/ElementTraversal.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Provides means to traverse and select elements of a document tree.", "trait" : "laika\/ast\/ElementTraversal.html", "kind" : "trait"}, {"name" : "laika.ast.EmbeddedConfigValue", "shortDescription" : "A single configuration value to be merged with the top document config.", "object" : "laika\/ast\/EmbeddedConfigValue$.html", "members_object" : [{"label" : "apply", "tail" : "(name: String, value: T)(encoder: ConfigEncoder[T]): EmbeddedConfigValue", "member" : "laika.ast.EmbeddedConfigValue.apply", "link" : "laika\/ast\/EmbeddedConfigValue$.html#apply[T](name:String,value:T)(implicitencoder:laika.config.ConfigEncoder[T]):laika.ast.EmbeddedConfigValue", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/EmbeddedConfigValue$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/EmbeddedConfigValue$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/EmbeddedConfigValue$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/EmbeddedConfigValue$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/EmbeddedConfigValue$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/EmbeddedConfigValue$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/EmbeddedConfigValue$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EmbeddedConfigValue$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EmbeddedConfigValue$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EmbeddedConfigValue$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/EmbeddedConfigValue$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/EmbeddedConfigValue$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/EmbeddedConfigValue$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/EmbeddedConfigValue$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/EmbeddedConfigValue$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/EmbeddedConfigValue$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/EmbeddedConfigValue$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/EmbeddedConfigValue$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/EmbeddedConfigValue$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): EmbeddedConfigValue", "member" : "laika.ast.EmbeddedConfigValue.withOptions", "link" : "laika\/ast\/EmbeddedConfigValue.html#withOptions(options:laika.ast.Options):laika.ast.EmbeddedConfigValue", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.EmbeddedConfigValue.Self", "link" : "laika\/ast\/EmbeddedConfigValue.html#Self=laika.ast.EmbeddedConfigValue", "kind" : "type"}, {"member" : "laika.ast.EmbeddedConfigValue#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.EmbeddedConfigValue.options", "link" : "laika\/ast\/EmbeddedConfigValue.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "value", "tail" : ": ConfigValue", "member" : "laika.ast.EmbeddedConfigValue.value", "link" : "laika\/ast\/EmbeddedConfigValue.html#value:laika.config.ConfigValue", "kind" : "val"}, {"label" : "key", "tail" : ": String", "member" : "laika.ast.EmbeddedConfigValue.key", "link" : "laika\/ast\/EmbeddedConfigValue.html#key:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/EmbeddedConfigValue.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/EmbeddedConfigValue.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/EmbeddedConfigValue.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/EmbeddedConfigValue.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/EmbeddedConfigValue.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/EmbeddedConfigValue.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/EmbeddedConfigValue.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/EmbeddedConfigValue.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/EmbeddedConfigValue.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/EmbeddedConfigValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/EmbeddedConfigValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/EmbeddedConfigValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/EmbeddedConfigValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/EmbeddedConfigValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/EmbeddedConfigValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/EmbeddedConfigValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EmbeddedConfigValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EmbeddedConfigValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EmbeddedConfigValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/EmbeddedConfigValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/EmbeddedConfigValue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/EmbeddedConfigValue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/EmbeddedConfigValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/EmbeddedConfigValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/EmbeddedConfigValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/EmbeddedConfigValue.html", "kind" : "case class"}, {"name" : "laika.ast.EmbeddedRoot", "shortDescription" : "The root element of a document tree (originating from text markup) inside a template.", "object" : "laika\/ast\/EmbeddedRoot$.html", "members_object" : [{"label" : "createBlockContainer", "tail" : "(blocks: Seq[Block]): EmbeddedRoot", "member" : "laika.ast.EmbeddedRoot.createBlockContainer", "link" : "laika\/ast\/EmbeddedRoot$.html#createBlockContainer(blocks:Seq[laika.ast.Block]):laika.ast.EmbeddedRoot", "kind" : "def"}, {"label" : "ContainerType", "tail" : "", "member" : "laika.ast.EmbeddedRoot.ContainerType", "link" : "laika\/ast\/EmbeddedRoot$.html#ContainerType=laika.ast.EmbeddedRoot", "kind" : "type"}, {"label" : "apply", "tail" : "(block: Block, blocks: Block*): ContainerType", "member" : "laika.ast.BlockContainerCompanion.apply", "link" : "laika\/ast\/EmbeddedRoot$.html#apply(block:laika.ast.Block,blocks:laika.ast.Block*):BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "createSpanContainer", "tail" : "(spans: Seq[Span]): ContainerType", "member" : "laika.ast.BlockContainerCompanion.createSpanContainer", "link" : "laika\/ast\/EmbeddedRoot$.html#createSpanContainer(spans:Seq[laika.ast.Span]):BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.BlockContainerCompanion.empty", "link" : "laika\/ast\/EmbeddedRoot$.html#empty:BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(span: Span, spans: Span*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/EmbeddedRoot$.html#apply(span:laika.ast.Span,spans:laika.ast.Span*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/EmbeddedRoot$.html#apply(text:String,texts:String*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/EmbeddedRoot$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/EmbeddedRoot$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/EmbeddedRoot$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/EmbeddedRoot$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/EmbeddedRoot$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/EmbeddedRoot$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/EmbeddedRoot$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EmbeddedRoot$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EmbeddedRoot$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EmbeddedRoot$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/EmbeddedRoot$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/EmbeddedRoot$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/EmbeddedRoot$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/EmbeddedRoot$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/EmbeddedRoot$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/EmbeddedRoot$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/EmbeddedRoot$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/EmbeddedRoot$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/EmbeddedRoot$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): EmbeddedRoot", "member" : "laika.ast.EmbeddedRoot.withOptions", "link" : "laika\/ast\/EmbeddedRoot.html#withOptions(options:laika.ast.Options):laika.ast.EmbeddedRoot", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Block]): EmbeddedRoot", "member" : "laika.ast.EmbeddedRoot.withContent", "link" : "laika\/ast\/EmbeddedRoot.html#withContent(newContent:Seq[laika.ast.Block]):laika.ast.EmbeddedRoot", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.EmbeddedRoot.Self", "link" : "laika\/ast\/EmbeddedRoot.html#Self=laika.ast.EmbeddedRoot", "kind" : "type"}, {"member" : "laika.ast.EmbeddedRoot#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.EmbeddedRoot.options", "link" : "laika\/ast\/EmbeddedRoot.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "indent", "tail" : ": Int", "member" : "laika.ast.EmbeddedRoot.indent", "link" : "laika\/ast\/EmbeddedRoot.html#indent:Int", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Block]", "member" : "laika.ast.EmbeddedRoot.content", "link" : "laika\/ast\/EmbeddedRoot.html#content:Seq[laika.ast.Block]", "kind" : "val"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.BlockContainer.rewriteChildren", "link" : "laika\/ast\/EmbeddedRoot.html#rewriteChildren(rules:laika.ast.RewriteRules):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteBlocks", "tail" : "(rules: RewriteRule[Block]): Self", "member" : "laika.ast.BlockContainer.rewriteBlocks", "link" : "laika\/ast\/EmbeddedRoot.html#rewriteBlocks(rules:laika.ast.RewriteRule[laika.ast.Block]):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/EmbeddedRoot.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/EmbeddedRoot.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/EmbeddedRoot.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/EmbeddedRoot.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/EmbeddedRoot.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/EmbeddedRoot.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/EmbeddedRoot.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/EmbeddedRoot.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/EmbeddedRoot.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/EmbeddedRoot.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/EmbeddedRoot.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/EmbeddedRoot.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/EmbeddedRoot.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/EmbeddedRoot.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/EmbeddedRoot.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/EmbeddedRoot.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/EmbeddedRoot.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/EmbeddedRoot.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/EmbeddedRoot.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/EmbeddedRoot.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/EmbeddedRoot.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EmbeddedRoot.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EmbeddedRoot.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EmbeddedRoot.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/EmbeddedRoot.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/EmbeddedRoot.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/EmbeddedRoot.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/EmbeddedRoot.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/EmbeddedRoot.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/EmbeddedRoot.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/EmbeddedRoot.html", "kind" : "case class"}, {"name" : "laika.ast.Emphasized", "shortDescription" : "A span of emphasized inline elements that may contain nested spans.", "object" : "laika\/ast\/Emphasized$.html", "members_object" : [{"label" : "createSpanContainer", "tail" : "(spans: Seq[Span]): Emphasized", "member" : "laika.ast.Emphasized.createSpanContainer", "link" : "laika\/ast\/Emphasized$.html#createSpanContainer(spans:Seq[laika.ast.Span]):laika.ast.Emphasized", "kind" : "def"}, {"label" : "ContainerType", "tail" : "", "member" : "laika.ast.Emphasized.ContainerType", "link" : "laika\/ast\/Emphasized$.html#ContainerType=laika.ast.Emphasized", "kind" : "type"}, {"label" : "apply", "tail" : "(span: Span, spans: Span*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/Emphasized$.html#apply(span:laika.ast.Span,spans:laika.ast.Span*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/Emphasized$.html#apply(text:String,texts:String*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.SpanContainerCompanion.empty", "link" : "laika\/ast\/Emphasized$.html#empty:SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Emphasized$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Emphasized$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Emphasized$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Emphasized$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Emphasized$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Emphasized$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Emphasized$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Emphasized$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Emphasized$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Emphasized$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Emphasized$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Emphasized$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Emphasized$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Emphasized$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Emphasized$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Emphasized$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Emphasized$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Emphasized$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Emphasized$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Emphasized", "member" : "laika.ast.Emphasized.withOptions", "link" : "laika\/ast\/Emphasized.html#withOptions(options:laika.ast.Options):laika.ast.Emphasized", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Span]): Emphasized", "member" : "laika.ast.Emphasized.withContent", "link" : "laika\/ast\/Emphasized.html#withContent(newContent:Seq[laika.ast.Span]):laika.ast.Emphasized", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Emphasized.Self", "link" : "laika\/ast\/Emphasized.html#Self=laika.ast.Emphasized", "kind" : "type"}, {"member" : "laika.ast.Emphasized#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Emphasized.options", "link" : "laika\/ast\/Emphasized.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Span]", "member" : "laika.ast.Emphasized.content", "link" : "laika\/ast\/Emphasized.html#content:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "extractText", "tail" : "(): String", "member" : "laika.ast.SpanContainer.extractText", "link" : "laika\/ast\/Emphasized.html#extractText:String", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.SpanContainer.rewriteChildren", "link" : "laika\/ast\/Emphasized.html#rewriteChildren(rules:laika.ast.RewriteRules):SpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/Emphasized.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/Emphasized.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/Emphasized.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/Emphasized.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/Emphasized.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Emphasized.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Emphasized.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Emphasized.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Emphasized.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Emphasized.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Emphasized.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Emphasized.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Emphasized.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Emphasized.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Emphasized.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Emphasized.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Emphasized.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Emphasized.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Emphasized.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Emphasized.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Emphasized.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Emphasized.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Emphasized.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Emphasized.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Emphasized.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Emphasized.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Emphasized.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Emphasized.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Emphasized.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Emphasized.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Emphasized.html", "kind" : "case class"}, {"name" : "laika.ast.EnumFormat", "shortDescription" : "The format of enumerated list items.", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "laika.ast.EnumFormat.toString", "link" : "laika\/ast\/EnumFormat.html#toString():String", "kind" : "def"}, {"member" : "laika.ast.EnumFormat#<init>", "error" : "unsupported entity"}, {"label" : "suffix", "tail" : ": String", "member" : "laika.ast.EnumFormat.suffix", "link" : "laika\/ast\/EnumFormat.html#suffix:String", "kind" : "val"}, {"label" : "prefix", "tail" : ": String", "member" : "laika.ast.EnumFormat.prefix", "link" : "laika\/ast\/EnumFormat.html#prefix:String", "kind" : "val"}, {"label" : "enumType", "tail" : ": EnumType", "member" : "laika.ast.EnumFormat.enumType", "link" : "laika\/ast\/EnumFormat.html#enumType:laika.ast.EnumType", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/EnumFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/EnumFormat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/EnumFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/EnumFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/EnumFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/EnumFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/EnumFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EnumFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EnumFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EnumFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/EnumFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/EnumFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/EnumFormat.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/EnumFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/EnumFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/EnumFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/EnumFormat.html", "kind" : "case class"}, {"name" : "laika.ast.EnumList", "shortDescription" : "An enumerated list that may contain nested lists.", "object" : "laika\/ast\/EnumList$.html", "members_object" : [{"label" : "apply", "tail" : "(f: EnumFormat, startPos: Int): EnumListCompanion", "member" : "laika.ast.EnumList.apply", "link" : "laika\/ast\/EnumList$.html#apply(f:laika.ast.EnumFormat,startPos:Int):laika.ast.EnumListCompanion", "kind" : "def"}, {"label" : "apply", "tail" : "(f: EnumFormat): EnumListCompanion", "member" : "laika.ast.EnumList.apply", "link" : "laika\/ast\/EnumList$.html#apply(f:laika.ast.EnumFormat):laika.ast.EnumListCompanion", "kind" : "def"}, {"label" : "createBlockContainer", "tail" : "(blocks: Seq[Block]): ContainerType", "member" : "laika.ast.EnumListCompanion.createBlockContainer", "link" : "laika\/ast\/EnumList$.html#createBlockContainer(blocks:Seq[laika.ast.Block]):EnumListCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(block: Seq[Block], blocks: Seq[Block]*): ContainerType", "member" : "laika.ast.EnumListCompanion.apply", "link" : "laika\/ast\/EnumList$.html#apply(block:Seq[laika.ast.Block],blocks:Seq[laika.ast.Block]*):EnumListCompanion.this.ContainerType", "kind" : "def"}, {"label" : "createSpanContainer", "tail" : "(spans: Seq[Span]): ContainerType", "member" : "laika.ast.EnumListCompanion.createSpanContainer", "link" : "laika\/ast\/EnumList$.html#createSpanContainer(spans:Seq[laika.ast.Span]):EnumListCompanion.this.ContainerType", "kind" : "def"}, {"label" : "startIndex", "tail" : "(): Int", "member" : "laika.ast.EnumListCompanion.startIndex", "link" : "laika\/ast\/EnumList$.html#startIndex:Int", "kind" : "def"}, {"label" : "format", "tail" : "(): EnumFormat", "member" : "laika.ast.EnumListCompanion.format", "link" : "laika\/ast\/EnumList$.html#format:laika.ast.EnumFormat", "kind" : "def"}, {"label" : "ContainerType", "tail" : "", "member" : "laika.ast.EnumListCompanion.ContainerType", "link" : "laika\/ast\/EnumList$.html#ContainerType=laika.ast.EnumList", "kind" : "type"}, {"label" : "apply", "tail" : "(block: Block, blocks: Block*): ContainerType", "member" : "laika.ast.BlockContainerCompanion.apply", "link" : "laika\/ast\/EnumList$.html#apply(block:laika.ast.Block,blocks:laika.ast.Block*):BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.BlockContainerCompanion.empty", "link" : "laika\/ast\/EnumList$.html#empty:BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(span: Span, spans: Span*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/EnumList$.html#apply(span:laika.ast.Span,spans:laika.ast.Span*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/EnumList$.html#apply(text:String,texts:String*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/EnumList$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/EnumList$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/EnumList$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/EnumList$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/EnumList$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/EnumList$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/EnumList$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EnumList$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EnumList$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EnumList$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/EnumList$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/EnumList$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/EnumList$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/EnumList$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/EnumList$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/EnumList$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/EnumList$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/EnumList$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/EnumList$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): EnumList", "member" : "laika.ast.EnumList.withOptions", "link" : "laika\/ast\/EnumList.html#withOptions(options:laika.ast.Options):laika.ast.EnumList", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): EnumList", "member" : "laika.ast.EnumList.rewriteChildren", "link" : "laika\/ast\/EnumList.html#rewriteChildren(rules:laika.ast.RewriteRules):laika.ast.EnumList", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.EnumList.Self", "link" : "laika\/ast\/EnumList.html#Self=laika.ast.EnumList", "kind" : "type"}, {"member" : "laika.ast.EnumList#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.EnumList.options", "link" : "laika\/ast\/EnumList.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "start", "tail" : ": Int", "member" : "laika.ast.EnumList.start", "link" : "laika\/ast\/EnumList.html#start:Int", "kind" : "val"}, {"label" : "format", "tail" : ": EnumFormat", "member" : "laika.ast.EnumList.format", "link" : "laika\/ast\/EnumList.html#format:laika.ast.EnumFormat", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[EnumListItem]", "member" : "laika.ast.EnumList.content", "link" : "laika\/ast\/EnumList.html#content:Seq[laika.ast.EnumListItem]", "kind" : "val"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/EnumList.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/EnumList.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/EnumList.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/EnumList.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/EnumList.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/EnumList.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/EnumList.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/EnumList.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/EnumList.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/EnumList.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/EnumList.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/EnumList.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/EnumList.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/EnumList.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/EnumList.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/EnumList.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/EnumList.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/EnumList.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/EnumList.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/EnumList.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/EnumList.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EnumList.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EnumList.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EnumList.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/EnumList.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/EnumList.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/EnumList.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/EnumList.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/EnumList.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/EnumList.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/EnumList.html", "kind" : "case class"}, {"name" : "laika.ast.EnumListCompanion", "members_trait" : [{"label" : "createBlockContainer", "tail" : "(blocks: Seq[Block]): ContainerType", "member" : "laika.ast.EnumListCompanion.createBlockContainer", "link" : "laika\/ast\/EnumListCompanion.html#createBlockContainer(blocks:Seq[laika.ast.Block]):EnumListCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(block: Seq[Block], blocks: Seq[Block]*): ContainerType", "member" : "laika.ast.EnumListCompanion.apply", "link" : "laika\/ast\/EnumListCompanion.html#apply(block:Seq[laika.ast.Block],blocks:Seq[laika.ast.Block]*):EnumListCompanion.this.ContainerType", "kind" : "def"}, {"label" : "createSpanContainer", "tail" : "(spans: Seq[Span]): ContainerType", "member" : "laika.ast.EnumListCompanion.createSpanContainer", "link" : "laika\/ast\/EnumListCompanion.html#createSpanContainer(spans:Seq[laika.ast.Span]):EnumListCompanion.this.ContainerType", "kind" : "def"}, {"label" : "startIndex", "tail" : "(): Int", "member" : "laika.ast.EnumListCompanion.startIndex", "link" : "laika\/ast\/EnumListCompanion.html#startIndex:Int", "kind" : "def"}, {"label" : "format", "tail" : "(): EnumFormat", "member" : "laika.ast.EnumListCompanion.format", "link" : "laika\/ast\/EnumListCompanion.html#format:laika.ast.EnumFormat", "kind" : "def"}, {"label" : "ContainerType", "tail" : "", "member" : "laika.ast.EnumListCompanion.ContainerType", "link" : "laika\/ast\/EnumListCompanion.html#ContainerType=laika.ast.EnumList", "kind" : "type"}, {"label" : "apply", "tail" : "(block: Block, blocks: Block*): ContainerType", "member" : "laika.ast.BlockContainerCompanion.apply", "link" : "laika\/ast\/EnumListCompanion.html#apply(block:laika.ast.Block,blocks:laika.ast.Block*):BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.BlockContainerCompanion.empty", "link" : "laika\/ast\/EnumListCompanion.html#empty:BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(span: Span, spans: Span*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/EnumListCompanion.html#apply(span:laika.ast.Span,spans:laika.ast.Span*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/EnumListCompanion.html#apply(text:String,texts:String*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/EnumListCompanion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/EnumListCompanion.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/EnumListCompanion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/EnumListCompanion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/EnumListCompanion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/EnumListCompanion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/EnumListCompanion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EnumListCompanion.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EnumListCompanion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EnumListCompanion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/EnumListCompanion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/EnumListCompanion.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/EnumListCompanion.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/EnumListCompanion.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/EnumListCompanion.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/EnumListCompanion.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/EnumListCompanion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/EnumListCompanion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/EnumListCompanion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Base trait for companions that create EnumList instances.", "trait" : "laika\/ast\/EnumListCompanion.html", "kind" : "trait"}, {"name" : "laika.ast.EnumListItem", "shortDescription" : "A single enum list item consisting of one or more block elements.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): EnumListItem", "member" : "laika.ast.EnumListItem.withOptions", "link" : "laika\/ast\/EnumListItem.html#withOptions(options:laika.ast.Options):laika.ast.EnumListItem", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Block]): EnumListItem", "member" : "laika.ast.EnumListItem.withContent", "link" : "laika\/ast\/EnumListItem.html#withContent(newContent:Seq[laika.ast.Block]):laika.ast.EnumListItem", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.EnumListItem.Self", "link" : "laika\/ast\/EnumListItem.html#Self=laika.ast.EnumListItem", "kind" : "type"}, {"member" : "laika.ast.EnumListItem#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.EnumListItem.options", "link" : "laika\/ast\/EnumListItem.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "position", "tail" : ": Int", "member" : "laika.ast.EnumListItem.position", "link" : "laika\/ast\/EnumListItem.html#position:Int", "kind" : "val"}, {"label" : "format", "tail" : ": EnumFormat", "member" : "laika.ast.EnumListItem.format", "link" : "laika\/ast\/EnumListItem.html#format:laika.ast.EnumFormat", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Block]", "member" : "laika.ast.EnumListItem.content", "link" : "laika\/ast\/EnumListItem.html#content:Seq[laika.ast.Block]", "kind" : "val"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.BlockContainer.rewriteChildren", "link" : "laika\/ast\/EnumListItem.html#rewriteChildren(rules:laika.ast.RewriteRules):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteBlocks", "tail" : "(rules: RewriteRule[Block]): Self", "member" : "laika.ast.BlockContainer.rewriteBlocks", "link" : "laika\/ast\/EnumListItem.html#rewriteBlocks(rules:laika.ast.RewriteRule[laika.ast.Block]):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/EnumListItem.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/EnumListItem.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/EnumListItem.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/EnumListItem.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/EnumListItem.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/EnumListItem.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/EnumListItem.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/EnumListItem.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/EnumListItem.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/EnumListItem.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/EnumListItem.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/EnumListItem.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/EnumListItem.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/EnumListItem.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/EnumListItem.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/EnumListItem.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/EnumListItem.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/EnumListItem.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/EnumListItem.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/EnumListItem.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/EnumListItem.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EnumListItem.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EnumListItem.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EnumListItem.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/EnumListItem.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/EnumListItem.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/EnumListItem.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/EnumListItem.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/EnumListItem.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/EnumListItem.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/EnumListItem.html", "kind" : "case class"}, {"name" : "laika.ast.EnumType", "shortDescription" : "Represents the type of an ordered list.", "object" : "laika\/ast\/EnumType$.html", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/EnumType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/EnumType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/EnumType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/EnumType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/EnumType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/EnumType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/EnumType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EnumType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EnumType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EnumType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/EnumType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/EnumType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/EnumType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/EnumType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/EnumType.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/EnumType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/EnumType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/EnumType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/EnumType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "UpperRoman", "tail" : "", "member" : "laika.ast.EnumType.UpperRoman", "link" : "laika\/ast\/EnumType$.html#UpperRoman", "kind" : "object"}, {"label" : "LowerRoman", "tail" : "", "member" : "laika.ast.EnumType.LowerRoman", "link" : "laika\/ast\/EnumType$.html#LowerRoman", "kind" : "object"}, {"label" : "UpperAlpha", "tail" : "", "member" : "laika.ast.EnumType.UpperAlpha", "link" : "laika\/ast\/EnumType$.html#UpperAlpha", "kind" : "object"}, {"label" : "LowerAlpha", "tail" : "", "member" : "laika.ast.EnumType.LowerAlpha", "link" : "laika\/ast\/EnumType$.html#LowerAlpha", "kind" : "object"}, {"label" : "Arabic", "tail" : "", "member" : "laika.ast.EnumType.Arabic", "link" : "laika\/ast\/EnumType$.html#Arabic", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/EnumType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/EnumType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/EnumType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/EnumType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/EnumType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/EnumType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/EnumType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EnumType$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EnumType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/EnumType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/EnumType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/EnumType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/EnumType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/EnumType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/EnumType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/EnumType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/EnumType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/EnumType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/EnumType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/ast\/EnumType.html", "kind" : "class"}, {"name" : "laika.ast.ExternalTarget", "shortDescription" : "An external link, outside of the virtual tree of the current transformation.", "members_case class" : [{"label" : "render", "tail" : "(internalTargetsAbsolute: Boolean): String", "member" : "laika.ast.ExternalTarget.render", "link" : "laika\/ast\/ExternalTarget.html#render(internalTargetsAbsolute:Boolean):String", "kind" : "def"}, {"member" : "laika.ast.ExternalTarget#<init>", "error" : "unsupported entity"}, {"label" : "url", "tail" : ": String", "member" : "laika.ast.ExternalTarget.url", "link" : "laika\/ast\/ExternalTarget.html#url:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/ExternalTarget.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/ExternalTarget.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/ExternalTarget.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/ExternalTarget.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/ExternalTarget.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/ExternalTarget.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/ExternalTarget.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ExternalTarget.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ExternalTarget.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ExternalTarget.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/ExternalTarget.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/ExternalTarget.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/ExternalTarget.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/ExternalTarget.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/ExternalTarget.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/ExternalTarget.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/ExternalTarget.html", "kind" : "case class"}, {"name" : "laika.ast.Fallback", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Fallback.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Fallback.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Fallback.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Fallback.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Fallback.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Fallback.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Fallback.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Fallback.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Fallback.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Fallback.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Fallback.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Fallback.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Fallback.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Fallback.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Fallback.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Fallback.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Fallback.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Fallback.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Fallback.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "fallback", "tail" : "(): Element", "member" : "laika.ast.Fallback.fallback", "link" : "laika\/ast\/Fallback.html#fallback:laika.ast.Element", "kind" : "abstract def"}], "shortDescription" : "Provides a fallback for elements the renderer does not know how to deal with.", "trait" : "laika\/ast\/Fallback.html", "kind" : "trait"}, {"name" : "laika.ast.Figure", "shortDescription" : "A figure consists of an image, an optional caption, and an optional legend as the content property.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Figure", "member" : "laika.ast.Figure.withOptions", "link" : "laika\/ast\/Figure.html#withOptions(options:laika.ast.Options):laika.ast.Figure", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Block]): Figure", "member" : "laika.ast.Figure.withContent", "link" : "laika\/ast\/Figure.html#withContent(newContent:Seq[laika.ast.Block]):laika.ast.Figure", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Figure", "member" : "laika.ast.Figure.rewriteChildren", "link" : "laika\/ast\/Figure.html#rewriteChildren(rules:laika.ast.RewriteRules):laika.ast.Figure", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Figure.Self", "link" : "laika\/ast\/Figure.html#Self=laika.ast.Figure", "kind" : "type"}, {"member" : "laika.ast.Figure#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Figure.options", "link" : "laika\/ast\/Figure.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Block]", "member" : "laika.ast.Figure.content", "link" : "laika\/ast\/Figure.html#content:Seq[laika.ast.Block]", "kind" : "val"}, {"label" : "caption", "tail" : ": Seq[Span]", "member" : "laika.ast.Figure.caption", "link" : "laika\/ast\/Figure.html#caption:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "image", "tail" : ": Span", "member" : "laika.ast.Figure.image", "link" : "laika\/ast\/Figure.html#image:laika.ast.Span", "kind" : "val"}, {"label" : "rewriteBlocks", "tail" : "(rules: RewriteRule[Block]): Self", "member" : "laika.ast.BlockContainer.rewriteBlocks", "link" : "laika\/ast\/Figure.html#rewriteBlocks(rules:laika.ast.RewriteRule[laika.ast.Block]):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/Figure.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/Figure.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/Figure.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/Figure.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/Figure.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Figure.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Figure.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Figure.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Figure.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Figure.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Figure.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Figure.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Figure.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Figure.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Figure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Figure.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Figure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Figure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Figure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Figure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Figure.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Figure.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Figure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Figure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Figure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Figure.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Figure.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Figure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Figure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Figure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Figure.html", "kind" : "case class"}, {"name" : "laika.ast.Footnote", "shortDescription" : "A footnote with resolved id and label that can be referred to by a FootnoteLink by id.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Footnote", "member" : "laika.ast.Footnote.withOptions", "link" : "laika\/ast\/Footnote.html#withOptions(options:laika.ast.Options):laika.ast.Footnote", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Block]): Footnote", "member" : "laika.ast.Footnote.withContent", "link" : "laika\/ast\/Footnote.html#withContent(newContent:Seq[laika.ast.Block]):laika.ast.Footnote", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Footnote.Self", "link" : "laika\/ast\/Footnote.html#Self=laika.ast.Footnote", "kind" : "type"}, {"member" : "laika.ast.Footnote#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Footnote.options", "link" : "laika\/ast\/Footnote.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Block]", "member" : "laika.ast.Footnote.content", "link" : "laika\/ast\/Footnote.html#content:Seq[laika.ast.Block]", "kind" : "val"}, {"label" : "label", "tail" : ": String", "member" : "laika.ast.Footnote.label", "link" : "laika\/ast\/Footnote.html#label:String", "kind" : "val"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.BlockContainer.rewriteChildren", "link" : "laika\/ast\/Footnote.html#rewriteChildren(rules:laika.ast.RewriteRules):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteBlocks", "tail" : "(rules: RewriteRule[Block]): Self", "member" : "laika.ast.BlockContainer.rewriteBlocks", "link" : "laika\/ast\/Footnote.html#rewriteBlocks(rules:laika.ast.RewriteRule[laika.ast.Block]):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/Footnote.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/Footnote.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/Footnote.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/Footnote.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/Footnote.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Footnote.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Footnote.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Footnote.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Footnote.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Footnote.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Footnote.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Footnote.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Footnote.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Footnote.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Footnote.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Footnote.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Footnote.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Footnote.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Footnote.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Footnote.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Footnote.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Footnote.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Footnote.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Footnote.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Footnote.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Footnote.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Footnote.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Footnote.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Footnote.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Footnote.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Footnote.html", "kind" : "case class"}, {"name" : "laika.ast.FootnoteDefinition", "shortDescription" : "A footnote definition that needs to be resolved to a final footnote by a rewrite rule based on the label type.", "members_case class" : [{"label" : "unresolvedMessage", "tail" : ": String", "member" : "laika.ast.FootnoteDefinition.unresolvedMessage", "link" : "laika\/ast\/FootnoteDefinition.html#unresolvedMessage:String", "kind" : "lazy val"}, {"label" : "withOptions", "tail" : "(options: Options): FootnoteDefinition", "member" : "laika.ast.FootnoteDefinition.withOptions", "link" : "laika\/ast\/FootnoteDefinition.html#withOptions(options:laika.ast.Options):laika.ast.FootnoteDefinition", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Block]): FootnoteDefinition", "member" : "laika.ast.FootnoteDefinition.withContent", "link" : "laika\/ast\/FootnoteDefinition.html#withContent(newContent:Seq[laika.ast.Block]):laika.ast.FootnoteDefinition", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.FootnoteDefinition.Self", "link" : "laika\/ast\/FootnoteDefinition.html#Self=laika.ast.FootnoteDefinition", "kind" : "type"}, {"member" : "laika.ast.FootnoteDefinition#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.FootnoteDefinition.options", "link" : "laika\/ast\/FootnoteDefinition.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "source", "tail" : ": SourceFragment", "member" : "laika.ast.FootnoteDefinition.source", "link" : "laika\/ast\/FootnoteDefinition.html#source:laika.parse.SourceFragment", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Block]", "member" : "laika.ast.FootnoteDefinition.content", "link" : "laika\/ast\/FootnoteDefinition.html#content:Seq[laika.ast.Block]", "kind" : "val"}, {"label" : "label", "tail" : ": FootnoteLabel", "member" : "laika.ast.FootnoteDefinition.label", "link" : "laika\/ast\/FootnoteDefinition.html#label:laika.ast.FootnoteLabel", "kind" : "val"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.BlockContainer.rewriteChildren", "link" : "laika\/ast\/FootnoteDefinition.html#rewriteChildren(rules:laika.ast.RewriteRules):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteBlocks", "tail" : "(rules: RewriteRule[Block]): Self", "member" : "laika.ast.BlockContainer.rewriteBlocks", "link" : "laika\/ast\/FootnoteDefinition.html#rewriteBlocks(rules:laika.ast.RewriteRule[laika.ast.Block]):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/FootnoteDefinition.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/FootnoteDefinition.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/FootnoteDefinition.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/FootnoteDefinition.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/FootnoteDefinition.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/FootnoteDefinition.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/FootnoteDefinition.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/FootnoteDefinition.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/FootnoteDefinition.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/FootnoteDefinition.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/FootnoteDefinition.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/FootnoteDefinition.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/FootnoteDefinition.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/FootnoteDefinition.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/FootnoteDefinition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/FootnoteDefinition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/FootnoteDefinition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/FootnoteDefinition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/FootnoteDefinition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/FootnoteDefinition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/FootnoteDefinition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/FootnoteDefinition.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/FootnoteDefinition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/FootnoteDefinition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/FootnoteDefinition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/FootnoteDefinition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/FootnoteDefinition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/FootnoteDefinition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/FootnoteDefinition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/FootnoteDefinition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/FootnoteDefinition.html", "kind" : "case class"}, {"name" : "laika.ast.FootnoteLabel", "shortDescription" : "Base type for all types of footnote labels.", "members_class" : [{"member" : "laika.ast.FootnoteLabel#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/FootnoteLabel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/FootnoteLabel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/FootnoteLabel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/FootnoteLabel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/FootnoteLabel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/FootnoteLabel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/FootnoteLabel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/FootnoteLabel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/FootnoteLabel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/FootnoteLabel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/FootnoteLabel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/FootnoteLabel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/FootnoteLabel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/FootnoteLabel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/FootnoteLabel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/FootnoteLabel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/FootnoteLabel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/FootnoteLabel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/FootnoteLabel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/ast\/FootnoteLabel.html", "kind" : "class"}, {"name" : "laika.ast.FootnoteLink", "shortDescription" : "A resolved link to a footnote.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): FootnoteLink", "member" : "laika.ast.FootnoteLink.withOptions", "link" : "laika\/ast\/FootnoteLink.html#withOptions(options:laika.ast.Options):laika.ast.FootnoteLink", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.FootnoteLink.Self", "link" : "laika\/ast\/FootnoteLink.html#Self=laika.ast.FootnoteLink", "kind" : "type"}, {"member" : "laika.ast.FootnoteLink#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.FootnoteLink.options", "link" : "laika\/ast\/FootnoteLink.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "label", "tail" : ": String", "member" : "laika.ast.FootnoteLink.label", "link" : "laika\/ast\/FootnoteLink.html#label:String", "kind" : "val"}, {"label" : "refId", "tail" : ": String", "member" : "laika.ast.FootnoteLink.refId", "link" : "laika\/ast\/FootnoteLink.html#refId:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/FootnoteLink.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/FootnoteLink.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/FootnoteLink.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/FootnoteLink.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/FootnoteLink.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/FootnoteLink.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/FootnoteLink.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/FootnoteLink.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/FootnoteLink.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/FootnoteLink.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/FootnoteLink.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/FootnoteLink.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/FootnoteLink.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/FootnoteLink.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/FootnoteLink.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/FootnoteLink.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/FootnoteLink.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/FootnoteLink.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/FootnoteLink.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/FootnoteLink.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/FootnoteLink.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/FootnoteLink.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/FootnoteLink.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/FootnoteLink.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/FootnoteLink.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/FootnoteLink.html", "kind" : "case class"}, {"name" : "laika.ast.FootnoteReference", "shortDescription" : "A reference to a footnote with a matching label.", "members_case class" : [{"label" : "unresolvedMessage", "tail" : ": String", "member" : "laika.ast.FootnoteReference.unresolvedMessage", "link" : "laika\/ast\/FootnoteReference.html#unresolvedMessage:String", "kind" : "lazy val"}, {"label" : "withOptions", "tail" : "(options: Options): FootnoteReference", "member" : "laika.ast.FootnoteReference.withOptions", "link" : "laika\/ast\/FootnoteReference.html#withOptions(options:laika.ast.Options):laika.ast.FootnoteReference", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.FootnoteReference.Self", "link" : "laika\/ast\/FootnoteReference.html#Self=laika.ast.FootnoteReference", "kind" : "type"}, {"member" : "laika.ast.FootnoteReference#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.FootnoteReference.options", "link" : "laika\/ast\/FootnoteReference.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "source", "tail" : ": SourceFragment", "member" : "laika.ast.FootnoteReference.source", "link" : "laika\/ast\/FootnoteReference.html#source:laika.parse.SourceFragment", "kind" : "val"}, {"label" : "label", "tail" : ": FootnoteLabel", "member" : "laika.ast.FootnoteReference.label", "link" : "laika\/ast\/FootnoteReference.html#label:laika.ast.FootnoteLabel", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/FootnoteReference.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/FootnoteReference.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/FootnoteReference.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/FootnoteReference.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/FootnoteReference.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/FootnoteReference.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/FootnoteReference.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/FootnoteReference.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/FootnoteReference.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/FootnoteReference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/FootnoteReference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/FootnoteReference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/FootnoteReference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/FootnoteReference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/FootnoteReference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/FootnoteReference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/FootnoteReference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/FootnoteReference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/FootnoteReference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/FootnoteReference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/FootnoteReference.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/FootnoteReference.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/FootnoteReference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/FootnoteReference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/FootnoteReference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/FootnoteReference.html", "kind" : "case class"}, {"name" : "laika.ast.ForcedParagraph", "shortDescription" : "A special type of paragraph that serves as a render hint.", "members_case class" : [{"label" : "fallback", "tail" : "(): Element", "member" : "laika.ast.ForcedParagraph.fallback", "link" : "laika\/ast\/ForcedParagraph.html#fallback:laika.ast.Element", "kind" : "def"}, {"label" : "withOptions", "tail" : "(options: Options): ForcedParagraph", "member" : "laika.ast.ForcedParagraph.withOptions", "link" : "laika\/ast\/ForcedParagraph.html#withOptions(options:laika.ast.Options):laika.ast.ForcedParagraph", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Span]): ForcedParagraph", "member" : "laika.ast.ForcedParagraph.withContent", "link" : "laika\/ast\/ForcedParagraph.html#withContent(newContent:Seq[laika.ast.Span]):laika.ast.ForcedParagraph", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.ForcedParagraph.Self", "link" : "laika\/ast\/ForcedParagraph.html#Self=laika.ast.ForcedParagraph", "kind" : "type"}, {"member" : "laika.ast.ForcedParagraph#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.ForcedParagraph.options", "link" : "laika\/ast\/ForcedParagraph.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Span]", "member" : "laika.ast.ForcedParagraph.content", "link" : "laika\/ast\/ForcedParagraph.html#content:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "extractText", "tail" : "(): String", "member" : "laika.ast.SpanContainer.extractText", "link" : "laika\/ast\/ForcedParagraph.html#extractText:String", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.SpanContainer.rewriteChildren", "link" : "laika\/ast\/ForcedParagraph.html#rewriteChildren(rules:laika.ast.RewriteRules):SpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/ForcedParagraph.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/ForcedParagraph.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/ForcedParagraph.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/ForcedParagraph.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/ForcedParagraph.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/ForcedParagraph.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/ForcedParagraph.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/ForcedParagraph.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/ForcedParagraph.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/ForcedParagraph.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/ForcedParagraph.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/ForcedParagraph.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/ForcedParagraph.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/ForcedParagraph.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/ForcedParagraph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/ForcedParagraph.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/ForcedParagraph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/ForcedParagraph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/ForcedParagraph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/ForcedParagraph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/ForcedParagraph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ForcedParagraph.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ForcedParagraph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ForcedParagraph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/ForcedParagraph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/ForcedParagraph.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/ForcedParagraph.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/ForcedParagraph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/ForcedParagraph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/ForcedParagraph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/ForcedParagraph.html", "kind" : "case class"}, {"name" : "laika.ast.GlobalLink", "members_trait" : [{"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/GlobalLink.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/GlobalLink.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/GlobalLink.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/GlobalLink.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/GlobalLink.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/GlobalLink.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/GlobalLink.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/GlobalLink.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/GlobalLink.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/GlobalLink.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/GlobalLink.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/GlobalLink.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/GlobalLink.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/GlobalLink.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/GlobalLink.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/GlobalLink.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/GlobalLink.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/GlobalLink.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/GlobalLink.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/GlobalLink.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/GlobalLink.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/GlobalLink.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/GlobalLink.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/GlobalLink.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/GlobalLink.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/GlobalLink.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/GlobalLink.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/GlobalLink.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/GlobalLink.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/GlobalLink.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "supportsExternalTargets", "tail" : "(): Boolean", "member" : "laika.ast.GlobalLink.supportsExternalTargets", "link" : "laika\/ast\/GlobalLink.html#supportsExternalTargets:Boolean", "kind" : "abstract def"}, {"label" : "withTarget", "tail" : "(target: Target): Self", "member" : "laika.ast.GlobalLink.withTarget", "link" : "laika\/ast\/GlobalLink.html#withTarget(target:laika.ast.Target):GlobalLink.this.Self", "kind" : "abstract def"}, {"label" : "target", "tail" : "(): Target", "member" : "laika.ast.GlobalLink.target", "link" : "laika\/ast\/GlobalLink.html#target:laika.ast.Target", "kind" : "abstract def"}, {"member" : "laika.ast.GlobalLink.Self", "error" : "unsupported entity"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/GlobalLink.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/GlobalLink.html#options:laika.ast.Options", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/GlobalLink.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/GlobalLink.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/GlobalLink.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "A global link that can point to any document within the input tree or to an external target.", "trait" : "laika\/ast\/GlobalLink.html", "kind" : "trait"}, {"name" : "laika.ast.HeadCell", "shortDescription" : "A cell in the head part of the table.", "object" : "laika\/ast\/HeadCell$.html", "members_object" : [{"label" : "createBlockContainer", "tail" : "(blocks: Seq[Block]): Cell", "member" : "laika.ast.HeadCell.createBlockContainer", "link" : "laika\/ast\/HeadCell$.html#createBlockContainer(blocks:Seq[laika.ast.Block]):laika.ast.Cell", "kind" : "def"}, {"label" : "apply", "tail" : "(blocks: Seq[Block]): Cell", "member" : "laika.ast.HeadCell.apply", "link" : "laika\/ast\/HeadCell$.html#apply(blocks:Seq[laika.ast.Block]):laika.ast.Cell", "kind" : "def"}, {"label" : "ContainerType", "tail" : "", "member" : "laika.ast.HeadCell.ContainerType", "link" : "laika\/ast\/HeadCell$.html#ContainerType=laika.ast.Cell", "kind" : "type"}, {"label" : "apply", "tail" : "(block: Block, blocks: Block*): ContainerType", "member" : "laika.ast.BlockContainerCompanion.apply", "link" : "laika\/ast\/HeadCell$.html#apply(block:laika.ast.Block,blocks:laika.ast.Block*):BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "createSpanContainer", "tail" : "(spans: Seq[Span]): ContainerType", "member" : "laika.ast.BlockContainerCompanion.createSpanContainer", "link" : "laika\/ast\/HeadCell$.html#createSpanContainer(spans:Seq[laika.ast.Span]):BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.BlockContainerCompanion.empty", "link" : "laika\/ast\/HeadCell$.html#empty:BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(span: Span, spans: Span*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/HeadCell$.html#apply(span:laika.ast.Span,spans:laika.ast.Span*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/HeadCell$.html#apply(text:String,texts:String*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/HeadCell$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/HeadCell$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/HeadCell$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/HeadCell$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/HeadCell$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/HeadCell$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/HeadCell$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/HeadCell$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/HeadCell$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/HeadCell$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/HeadCell$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/HeadCell$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/HeadCell$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/HeadCell$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/HeadCell$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/HeadCell$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/HeadCell$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.ast.Header", "shortDescription" : "A header element with a level, with 1 being the top level of the document.", "object" : "laika\/ast\/Header$.html", "members_object" : [{"label" : "apply", "tail" : "(level: Int, span: Span, spans: Span*): Header", "member" : "laika.ast.Header.apply", "link" : "laika\/ast\/Header$.html#apply(level:Int,span:laika.ast.Span,spans:laika.ast.Span*):laika.ast.Header", "kind" : "def"}, {"label" : "apply", "tail" : "(level: Int, text: String): Header", "member" : "laika.ast.Header.apply", "link" : "laika\/ast\/Header$.html#apply(level:Int,text:String):laika.ast.Header", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Header$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Header$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Header$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Header$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Header$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Header$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Header$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Header$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Header$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Header$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Header$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Header$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Header$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Header$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Header$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Header$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Header$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Header$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Header$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Header", "member" : "laika.ast.Header.withOptions", "link" : "laika\/ast\/Header.html#withOptions(options:laika.ast.Options):laika.ast.Header", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Span]): Header", "member" : "laika.ast.Header.withContent", "link" : "laika\/ast\/Header.html#withContent(newContent:Seq[laika.ast.Span]):laika.ast.Header", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Header.Self", "link" : "laika\/ast\/Header.html#Self=laika.ast.Header", "kind" : "type"}, {"member" : "laika.ast.Header#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Header.options", "link" : "laika\/ast\/Header.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Span]", "member" : "laika.ast.Header.content", "link" : "laika\/ast\/Header.html#content:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "level", "tail" : ": Int", "member" : "laika.ast.Header.level", "link" : "laika\/ast\/Header.html#level:Int", "kind" : "val"}, {"label" : "extractText", "tail" : "(): String", "member" : "laika.ast.SpanContainer.extractText", "link" : "laika\/ast\/Header.html#extractText:String", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.SpanContainer.rewriteChildren", "link" : "laika\/ast\/Header.html#rewriteChildren(rules:laika.ast.RewriteRules):SpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/Header.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/Header.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/Header.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/Header.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/Header.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Header.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Header.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Header.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Header.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Header.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Header.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Header.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Header.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Header.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Header.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Header.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Header.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Header.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Header.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Header.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Header.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Header.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Header.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Header.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Header.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Header.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Header.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Header.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Header.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Header.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Header.html", "kind" : "case class"}, {"name" : "laika.ast.HeaderDecoration", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/HeaderDecoration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/HeaderDecoration.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/HeaderDecoration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/HeaderDecoration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/HeaderDecoration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/HeaderDecoration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/HeaderDecoration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/HeaderDecoration.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/HeaderDecoration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/HeaderDecoration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/HeaderDecoration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/HeaderDecoration.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/HeaderDecoration.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/HeaderDecoration.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/HeaderDecoration.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/HeaderDecoration.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/HeaderDecoration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/HeaderDecoration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/HeaderDecoration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Represents the decoration of a header.", "trait" : "laika\/ast\/HeaderDecoration.html", "kind" : "trait"}, {"name" : "laika.ast.Hidden", "members_trait" : [{"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Hidden.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Hidden.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Hidden.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Hidden.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Hidden.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Hidden.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Hidden.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Hidden.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Hidden.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/Hidden.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/Hidden.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Hidden.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Hidden.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Hidden.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Hidden.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Hidden.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Hidden.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Hidden.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Hidden.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Hidden.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Hidden.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Hidden.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Hidden.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Hidden.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Hidden.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Hidden.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Hidden.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Hidden.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Hidden.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Hidden.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/Hidden.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/Hidden.html#options:laika.ast.Options", "kind" : "abstract def"}, {"member" : "laika.ast.Customizable.Self", "error" : "unsupported entity"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/Hidden.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/Hidden.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/Hidden.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "Represents a hidden element that will be ignored by renderers.", "trait" : "laika\/ast\/Hidden.html", "kind" : "trait"}, {"name" : "laika.ast.Icon", "shortDescription" : "Represents a font-based icon, identified by its code point.", "members_case class" : [{"label" : "withOptions", "tail" : "(newOptions: Options): Icon", "member" : "laika.ast.Icon.withOptions", "link" : "laika\/ast\/Icon.html#withOptions(newOptions:laika.ast.Options):laika.ast.Icon", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Icon.Self", "link" : "laika\/ast\/Icon.html#Self=laika.ast.Icon", "kind" : "type"}, {"label" : "codePointAsEntity", "tail" : "(): String", "member" : "laika.ast.Icon.codePointAsEntity", "link" : "laika\/ast\/Icon.html#codePointAsEntity:String", "kind" : "def"}, {"member" : "laika.ast.Icon#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Icon.options", "link" : "laika\/ast\/Icon.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "title", "tail" : ": Option[String]", "member" : "laika.ast.Icon.title", "link" : "laika\/ast\/Icon.html#title:Option[String]", "kind" : "val"}, {"label" : "codePoint", "tail" : ": Char", "member" : "laika.ast.Icon.codePoint", "link" : "laika\/ast\/Icon.html#codePoint:Char", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Icon.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Icon.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Icon.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Icon.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Icon.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Icon.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Icon.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Icon.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Icon.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Icon.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Icon.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Icon.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Icon.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Icon.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Icon.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Icon.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Icon.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Icon.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Icon.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Icon.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Icon.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Icon.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Icon.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Icon.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Icon.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Icon.html", "kind" : "case class"}, {"name" : "laika.ast.Id", "shortDescription" : "Factory and extractor for an Options instance with an id.", "object" : "laika\/ast\/Id$.html", "members_object" : [{"label" : "unapply", "tail" : "(value: Options): Option[String]", "member" : "laika.ast.Id.unapply", "link" : "laika\/ast\/Id$.html#unapply(value:laika.ast.Options):Option[String]", "kind" : "def"}, {"label" : "apply", "tail" : "(value: String): Options", "member" : "laika.ast.Id.apply", "link" : "laika\/ast\/Id$.html#apply(value:String):laika.ast.Options", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Id$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Id$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Id$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Id$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Id$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Id$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Id$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Id$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Id$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Id$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Id$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Id$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Id$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Id$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Id$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Id$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Id$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Id$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Id$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.ast.Image", "shortDescription" : "An inline image optional title, alt and size properties.", "object" : "laika\/ast\/Image$.html", "members_object" : [{"label" : "create", "tail" : "(url: String, source: SourceFragment, width: Option[Length], height: Option[Length], alt: Option[String], title: Option[String]): Span", "member" : "laika.ast.Image.create", "link" : "laika\/ast\/Image$.html#create(url:String,source:laika.parse.SourceFragment,width:Option[laika.ast.Length],height:Option[laika.ast.Length],alt:Option[String],title:Option[String]):laika.ast.Span", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Image$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Image$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Image$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Image$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Image$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Image$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Image$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Image$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Image$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Image$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Image$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Image$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Image$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Image$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Image$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Image$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Image$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Image$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Image$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Image", "member" : "laika.ast.Image.withOptions", "link" : "laika\/ast\/Image.html#withOptions(options:laika.ast.Options):laika.ast.Image", "kind" : "def"}, {"label" : "withTarget", "tail" : "(newTarget: Target): Image", "member" : "laika.ast.Image.withTarget", "link" : "laika\/ast\/Image.html#withTarget(newTarget:laika.ast.Target):laika.ast.Image", "kind" : "def"}, {"label" : "supportsExternalTargets", "tail" : ": Boolean", "member" : "laika.ast.Image.supportsExternalTargets", "link" : "laika\/ast\/Image.html#supportsExternalTargets:Boolean", "kind" : "val"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Image.Self", "link" : "laika\/ast\/Image.html#Self=laika.ast.Image", "kind" : "type"}, {"member" : "laika.ast.Image#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Image.options", "link" : "laika\/ast\/Image.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "title", "tail" : ": Option[String]", "member" : "laika.ast.Image.title", "link" : "laika\/ast\/Image.html#title:Option[String]", "kind" : "val"}, {"label" : "alt", "tail" : ": Option[String]", "member" : "laika.ast.Image.alt", "link" : "laika\/ast\/Image.html#alt:Option[String]", "kind" : "val"}, {"label" : "height", "tail" : ": Option[Length]", "member" : "laika.ast.Image.height", "link" : "laika\/ast\/Image.html#height:Option[laika.ast.Length]", "kind" : "val"}, {"label" : "width", "tail" : ": Option[Length]", "member" : "laika.ast.Image.width", "link" : "laika\/ast\/Image.html#width:Option[laika.ast.Length]", "kind" : "val"}, {"label" : "target", "tail" : ": Target", "member" : "laika.ast.Image.target", "link" : "laika\/ast\/Image.html#target:laika.ast.Target", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Image.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Image.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Image.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Image.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Image.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Image.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Image.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Image.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Image.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Image.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Image.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Image.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Image.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Image.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Image.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Image.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Image.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Image.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Image.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Image.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Image.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Image.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Image.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Image.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Image.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Image.html", "kind" : "case class"}, {"name" : "laika.ast.ImageIdReference", "shortDescription" : "An image reference, the id pointing to the id of a LinkTarget.", "members_case class" : [{"label" : "unresolvedMessage", "tail" : ": String", "member" : "laika.ast.ImageIdReference.unresolvedMessage", "link" : "laika\/ast\/ImageIdReference.html#unresolvedMessage:String", "kind" : "lazy val"}, {"label" : "withOptions", "tail" : "(options: Options): ImageIdReference", "member" : "laika.ast.ImageIdReference.withOptions", "link" : "laika\/ast\/ImageIdReference.html#withOptions(options:laika.ast.Options):laika.ast.ImageIdReference", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.ImageIdReference.Self", "link" : "laika\/ast\/ImageIdReference.html#Self=laika.ast.ImageIdReference", "kind" : "type"}, {"member" : "laika.ast.ImageIdReference#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.ImageIdReference.options", "link" : "laika\/ast\/ImageIdReference.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "source", "tail" : ": SourceFragment", "member" : "laika.ast.ImageIdReference.source", "link" : "laika\/ast\/ImageIdReference.html#source:laika.parse.SourceFragment", "kind" : "val"}, {"label" : "id", "tail" : ": String", "member" : "laika.ast.ImageIdReference.id", "link" : "laika\/ast\/ImageIdReference.html#id:String", "kind" : "val"}, {"label" : "text", "tail" : ": String", "member" : "laika.ast.ImageIdReference.text", "link" : "laika\/ast\/ImageIdReference.html#text:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/ImageIdReference.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/ImageIdReference.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/ImageIdReference.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/ImageIdReference.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/ImageIdReference.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/ImageIdReference.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/ImageIdReference.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/ImageIdReference.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/ImageIdReference.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/ImageIdReference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/ImageIdReference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/ImageIdReference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/ImageIdReference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/ImageIdReference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/ImageIdReference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/ImageIdReference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ImageIdReference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ImageIdReference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ImageIdReference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/ImageIdReference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/ImageIdReference.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/ImageIdReference.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/ImageIdReference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/ImageIdReference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/ImageIdReference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/ImageIdReference.html", "kind" : "case class"}, {"name" : "laika.ast.ImagePathReference", "shortDescription" : "An image reference to content within the virtual input tree, the path pointing to the source path.", "members_case class" : [{"label" : "unresolvedMessage", "tail" : ": String", "member" : "laika.ast.ImagePathReference.unresolvedMessage", "link" : "laika\/ast\/ImagePathReference.html#unresolvedMessage:String", "kind" : "lazy val"}, {"label" : "resolve", "tail" : "(target: Target): Link", "member" : "laika.ast.ImagePathReference.resolve", "link" : "laika\/ast\/ImagePathReference.html#resolve(target:laika.ast.Target):laika.ast.Link", "kind" : "def"}, {"label" : "withOptions", "tail" : "(options: Options): ImagePathReference", "member" : "laika.ast.ImagePathReference.withOptions", "link" : "laika\/ast\/ImagePathReference.html#withOptions(options:laika.ast.Options):laika.ast.ImagePathReference", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.ImagePathReference.Self", "link" : "laika\/ast\/ImagePathReference.html#Self=laika.ast.ImagePathReference", "kind" : "type"}, {"member" : "laika.ast.ImagePathReference#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.ImagePathReference.options", "link" : "laika\/ast\/ImagePathReference.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "title", "tail" : ": Option[String]", "member" : "laika.ast.ImagePathReference.title", "link" : "laika\/ast\/ImagePathReference.html#title:Option[String]", "kind" : "val"}, {"label" : "alt", "tail" : ": Option[String]", "member" : "laika.ast.ImagePathReference.alt", "link" : "laika\/ast\/ImagePathReference.html#alt:Option[String]", "kind" : "val"}, {"label" : "height", "tail" : ": Option[Length]", "member" : "laika.ast.ImagePathReference.height", "link" : "laika\/ast\/ImagePathReference.html#height:Option[laika.ast.Length]", "kind" : "val"}, {"label" : "width", "tail" : ": Option[Length]", "member" : "laika.ast.ImagePathReference.width", "link" : "laika\/ast\/ImagePathReference.html#width:Option[laika.ast.Length]", "kind" : "val"}, {"label" : "source", "tail" : ": SourceFragment", "member" : "laika.ast.ImagePathReference.source", "link" : "laika\/ast\/ImagePathReference.html#source:laika.parse.SourceFragment", "kind" : "val"}, {"label" : "path", "tail" : ": RelativePath", "member" : "laika.ast.ImagePathReference.path", "link" : "laika\/ast\/ImagePathReference.html#path:laika.ast.RelativePath", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/ImagePathReference.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/ImagePathReference.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/ImagePathReference.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/ImagePathReference.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/ImagePathReference.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/ImagePathReference.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/ImagePathReference.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/ImagePathReference.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/ImagePathReference.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/ImagePathReference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/ImagePathReference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/ImagePathReference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/ImagePathReference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/ImagePathReference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/ImagePathReference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/ImagePathReference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ImagePathReference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ImagePathReference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ImagePathReference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/ImagePathReference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/ImagePathReference.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/ImagePathReference.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/ImagePathReference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/ImagePathReference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/ImagePathReference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/ImagePathReference.html", "kind" : "case class"}, {"name" : "laika.ast.InlineCode", "shortDescription" : "A span of program code.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): InlineCode", "member" : "laika.ast.InlineCode.withOptions", "link" : "laika\/ast\/InlineCode.html#withOptions(options:laika.ast.Options):laika.ast.InlineCode", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Span]): InlineCode", "member" : "laika.ast.InlineCode.withContent", "link" : "laika\/ast\/InlineCode.html#withContent(newContent:Seq[laika.ast.Span]):laika.ast.InlineCode", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.InlineCode.Self", "link" : "laika\/ast\/InlineCode.html#Self=laika.ast.InlineCode", "kind" : "type"}, {"member" : "laika.ast.InlineCode#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.InlineCode.options", "link" : "laika\/ast\/InlineCode.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Span]", "member" : "laika.ast.InlineCode.content", "link" : "laika\/ast\/InlineCode.html#content:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "language", "tail" : ": String", "member" : "laika.ast.InlineCode.language", "link" : "laika\/ast\/InlineCode.html#language:String", "kind" : "val"}, {"label" : "extractText", "tail" : "(): String", "member" : "laika.ast.SpanContainer.extractText", "link" : "laika\/ast\/InlineCode.html#extractText:String", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.SpanContainer.rewriteChildren", "link" : "laika\/ast\/InlineCode.html#rewriteChildren(rules:laika.ast.RewriteRules):SpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/InlineCode.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/InlineCode.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/InlineCode.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/InlineCode.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/InlineCode.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/InlineCode.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/InlineCode.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/InlineCode.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/InlineCode.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/InlineCode.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/InlineCode.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/InlineCode.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/InlineCode.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/InlineCode.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/InlineCode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/InlineCode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/InlineCode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/InlineCode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/InlineCode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/InlineCode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/InlineCode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InlineCode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InlineCode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InlineCode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/InlineCode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/InlineCode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/InlineCode.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/InlineCode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/InlineCode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/InlineCode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/InlineCode.html", "kind" : "case class"}, {"name" : "laika.ast.Inserted", "shortDescription" : "A span representing inserted inline elements that may contain nested spans.", "object" : "laika\/ast\/Inserted$.html", "members_object" : [{"label" : "createSpanContainer", "tail" : "(spans: Seq[Span]): Inserted", "member" : "laika.ast.Inserted.createSpanContainer", "link" : "laika\/ast\/Inserted$.html#createSpanContainer(spans:Seq[laika.ast.Span]):laika.ast.Inserted", "kind" : "def"}, {"label" : "ContainerType", "tail" : "", "member" : "laika.ast.Inserted.ContainerType", "link" : "laika\/ast\/Inserted$.html#ContainerType=laika.ast.Inserted", "kind" : "type"}, {"label" : "apply", "tail" : "(span: Span, spans: Span*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/Inserted$.html#apply(span:laika.ast.Span,spans:laika.ast.Span*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/Inserted$.html#apply(text:String,texts:String*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.SpanContainerCompanion.empty", "link" : "laika\/ast\/Inserted$.html#empty:SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Inserted$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Inserted$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Inserted$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Inserted$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Inserted$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Inserted$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Inserted$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Inserted$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Inserted$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Inserted$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Inserted$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Inserted$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Inserted$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Inserted$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Inserted$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Inserted$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Inserted$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Inserted$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Inserted$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Inserted", "member" : "laika.ast.Inserted.withOptions", "link" : "laika\/ast\/Inserted.html#withOptions(options:laika.ast.Options):laika.ast.Inserted", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Span]): Inserted", "member" : "laika.ast.Inserted.withContent", "link" : "laika\/ast\/Inserted.html#withContent(newContent:Seq[laika.ast.Span]):laika.ast.Inserted", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Inserted.Self", "link" : "laika\/ast\/Inserted.html#Self=laika.ast.Inserted", "kind" : "type"}, {"member" : "laika.ast.Inserted#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Inserted.options", "link" : "laika\/ast\/Inserted.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Span]", "member" : "laika.ast.Inserted.content", "link" : "laika\/ast\/Inserted.html#content:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "extractText", "tail" : "(): String", "member" : "laika.ast.SpanContainer.extractText", "link" : "laika\/ast\/Inserted.html#extractText:String", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.SpanContainer.rewriteChildren", "link" : "laika\/ast\/Inserted.html#rewriteChildren(rules:laika.ast.RewriteRules):SpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/Inserted.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/Inserted.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/Inserted.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/Inserted.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/Inserted.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Inserted.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Inserted.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Inserted.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Inserted.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Inserted.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Inserted.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Inserted.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Inserted.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Inserted.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Inserted.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Inserted.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Inserted.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Inserted.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Inserted.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Inserted.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Inserted.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Inserted.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Inserted.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Inserted.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Inserted.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Inserted.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Inserted.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Inserted.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Inserted.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Inserted.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Inserted.html", "kind" : "case class"}, {"name" : "laika.ast.InternalLinkTarget", "shortDescription" : "Points to the following block or span element, making it a target for links.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): InternalLinkTarget", "member" : "laika.ast.InternalLinkTarget.withOptions", "link" : "laika\/ast\/InternalLinkTarget.html#withOptions(options:laika.ast.Options):laika.ast.InternalLinkTarget", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.InternalLinkTarget.Self", "link" : "laika\/ast\/InternalLinkTarget.html#Self=laika.ast.InternalLinkTarget", "kind" : "type"}, {"member" : "laika.ast.InternalLinkTarget#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.InternalLinkTarget.options", "link" : "laika\/ast\/InternalLinkTarget.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/InternalLinkTarget.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/InternalLinkTarget.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/InternalLinkTarget.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/InternalLinkTarget.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/InternalLinkTarget.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/InternalLinkTarget.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/InternalLinkTarget.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/InternalLinkTarget.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/InternalLinkTarget.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/InternalLinkTarget.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/InternalLinkTarget.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/InternalLinkTarget.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/InternalLinkTarget.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/InternalLinkTarget.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/InternalLinkTarget.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/InternalLinkTarget.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InternalLinkTarget.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InternalLinkTarget.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InternalLinkTarget.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/InternalLinkTarget.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/InternalLinkTarget.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/InternalLinkTarget.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/InternalLinkTarget.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/InternalLinkTarget.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/InternalLinkTarget.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/InternalLinkTarget.html", "kind" : "case class"}, {"name" : "laika.ast.InternalTarget", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/InternalTarget.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/InternalTarget.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/InternalTarget.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/InternalTarget.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/InternalTarget.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/InternalTarget.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/InternalTarget.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InternalTarget.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InternalTarget.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InternalTarget.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/InternalTarget.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/InternalTarget.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/InternalTarget.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/InternalTarget.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/InternalTarget.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/InternalTarget.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/InternalTarget.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/InternalTarget.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/InternalTarget.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "relativeTo", "tail" : "(refPath: Path): ResolvedInternalTarget", "member" : "laika.ast.InternalTarget.relativeTo", "link" : "laika\/ast\/InternalTarget.html#relativeTo(refPath:laika.ast.Path):laika.ast.ResolvedInternalTarget", "kind" : "abstract def"}, {"label" : "render", "tail" : "(internalTargetsAbsolute: Boolean): String", "member" : "laika.ast.Target.render", "link" : "laika\/ast\/InternalTarget.html#render(internalTargetsAbsolute:Boolean):String", "kind" : "abstract def"}], "shortDescription" : "Represents a target within the virtual tree that can be referred to by links.", "object" : "laika\/ast\/InternalTarget$.html", "members_object" : [{"label" : "apply", "tail" : "(path: PathBase): InternalTarget", "member" : "laika.ast.InternalTarget.apply", "link" : "laika\/ast\/InternalTarget$.html#apply(path:laika.ast.PathBase):laika.ast.InternalTarget", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/InternalTarget$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/InternalTarget$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/InternalTarget$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/InternalTarget$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/InternalTarget$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/InternalTarget$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/InternalTarget$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InternalTarget$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InternalTarget$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InternalTarget$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/InternalTarget$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/InternalTarget$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/InternalTarget$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/InternalTarget$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/InternalTarget$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/InternalTarget$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/InternalTarget$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/InternalTarget$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/InternalTarget$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/ast\/InternalTarget.html", "kind" : "trait"}, {"name" : "laika.ast.Invalid", "members_trait" : [{"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Invalid.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Invalid.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Invalid.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Invalid.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Invalid.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Invalid.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Invalid.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Invalid.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Invalid.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/Invalid.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/Invalid.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Invalid.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Invalid.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Invalid.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Invalid.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Invalid.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Invalid.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Invalid.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Invalid.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Invalid.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Invalid.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Invalid.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Invalid.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Invalid.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Invalid.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Invalid.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Invalid.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Invalid.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Invalid.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Invalid.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "fallback", "tail" : "(): FallbackElement", "member" : "laika.ast.Invalid.fallback", "link" : "laika\/ast\/Invalid.html#fallback:Invalid.this.FallbackElement", "kind" : "abstract def"}, {"label" : "message", "tail" : "(): RuntimeMessage", "member" : "laika.ast.Invalid.message", "link" : "laika\/ast\/Invalid.html#message:laika.ast.RuntimeMessage", "kind" : "abstract def"}, {"label" : "source", "tail" : "(): SourceFragment", "member" : "laika.ast.Invalid.source", "link" : "laika\/ast\/Invalid.html#source:laika.parse.SourceFragment", "kind" : "abstract def"}, {"member" : "laika.ast.Invalid.FallbackElement", "error" : "unsupported entity"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/Invalid.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/Invalid.html#options:laika.ast.Options", "kind" : "abstract def"}, {"member" : "laika.ast.Customizable.Self", "error" : "unsupported entity"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/Invalid.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/Invalid.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/Invalid.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "Represents an invalid element.", "trait" : "laika\/ast\/Invalid.html", "kind" : "trait"}, {"name" : "laika.ast.InvalidBlock", "shortDescription" : "Groups a block that could not be successfully parsed with a runtime message.", "object" : "laika\/ast\/InvalidBlock$.html", "members_object" : [{"label" : "apply", "tail" : "(message: RuntimeMessage, source: SourceFragment): InvalidBlock", "member" : "laika.ast.InvalidBlock.apply", "link" : "laika\/ast\/InvalidBlock$.html#apply(message:laika.ast.RuntimeMessage,source:laika.parse.SourceFragment):laika.ast.InvalidBlock", "kind" : "def"}, {"label" : "apply", "tail" : "(message: String, source: SourceFragment): InvalidBlock", "member" : "laika.ast.InvalidBlock.apply", "link" : "laika\/ast\/InvalidBlock$.html#apply(message:String,source:laika.parse.SourceFragment):laika.ast.InvalidBlock", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/InvalidBlock$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/InvalidBlock$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/InvalidBlock$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/InvalidBlock$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/InvalidBlock$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/InvalidBlock$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/InvalidBlock$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InvalidBlock$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InvalidBlock$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InvalidBlock$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/InvalidBlock$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/InvalidBlock$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/InvalidBlock$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/InvalidBlock$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/InvalidBlock$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/InvalidBlock$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/InvalidBlock$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/InvalidBlock$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/InvalidBlock$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): InvalidBlock", "member" : "laika.ast.InvalidBlock.withOptions", "link" : "laika\/ast\/InvalidBlock.html#withOptions(options:laika.ast.Options):laika.ast.InvalidBlock", "kind" : "def"}, {"label" : "FallbackElement", "tail" : "", "member" : "laika.ast.InvalidBlock.FallbackElement", "link" : "laika\/ast\/InvalidBlock.html#FallbackElement=laika.ast.Block", "kind" : "type"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.InvalidBlock.Self", "link" : "laika\/ast\/InvalidBlock.html#Self=laika.ast.InvalidBlock", "kind" : "type"}, {"member" : "laika.ast.InvalidBlock#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.InvalidBlock.options", "link" : "laika\/ast\/InvalidBlock.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "fallback", "tail" : ": Block", "member" : "laika.ast.InvalidBlock.fallback", "link" : "laika\/ast\/InvalidBlock.html#fallback:laika.ast.Block", "kind" : "val"}, {"label" : "source", "tail" : ": SourceFragment", "member" : "laika.ast.InvalidBlock.source", "link" : "laika\/ast\/InvalidBlock.html#source:laika.parse.SourceFragment", "kind" : "val"}, {"label" : "message", "tail" : ": RuntimeMessage", "member" : "laika.ast.InvalidBlock.message", "link" : "laika\/ast\/InvalidBlock.html#message:laika.ast.RuntimeMessage", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/InvalidBlock.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/InvalidBlock.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/InvalidBlock.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/InvalidBlock.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/InvalidBlock.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/InvalidBlock.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/InvalidBlock.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/InvalidBlock.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/InvalidBlock.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/InvalidBlock.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/InvalidBlock.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/InvalidBlock.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/InvalidBlock.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/InvalidBlock.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/InvalidBlock.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/InvalidBlock.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InvalidBlock.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InvalidBlock.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InvalidBlock.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/InvalidBlock.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/InvalidBlock.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/InvalidBlock.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/InvalidBlock.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/InvalidBlock.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/InvalidBlock.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/InvalidBlock.html", "kind" : "case class"}, {"name" : "laika.ast.InvalidElement", "shortDescription" : "", "object" : "laika\/ast\/InvalidElement$.html", "members_object" : [{"label" : "apply", "tail" : "(message: String, source: SourceFragment): InvalidElement", "member" : "laika.ast.InvalidElement.apply", "link" : "laika\/ast\/InvalidElement$.html#apply(message:String,source:laika.parse.SourceFragment):laika.ast.InvalidElement", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/InvalidElement$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/InvalidElement$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/InvalidElement$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/InvalidElement$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/InvalidElement$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/InvalidElement$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/InvalidElement$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InvalidElement$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InvalidElement$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InvalidElement$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/InvalidElement$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/InvalidElement$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/InvalidElement$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/InvalidElement$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/InvalidElement$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/InvalidElement$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/InvalidElement$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/InvalidElement$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/InvalidElement$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "asTemplateSpan", "tail" : "(): TemplateSpan", "member" : "laika.ast.InvalidElement.asTemplateSpan", "link" : "laika\/ast\/InvalidElement.html#asTemplateSpan:laika.ast.TemplateSpan", "kind" : "def"}, {"label" : "asSpan", "tail" : "(): InvalidSpan", "member" : "laika.ast.InvalidElement.asSpan", "link" : "laika\/ast\/InvalidElement.html#asSpan:laika.ast.InvalidSpan", "kind" : "def"}, {"label" : "asBlock", "tail" : "(): InvalidBlock", "member" : "laika.ast.InvalidElement.asBlock", "link" : "laika\/ast\/InvalidElement.html#asBlock:laika.ast.InvalidBlock", "kind" : "def"}, {"member" : "laika.ast.InvalidElement#<init>", "error" : "unsupported entity"}, {"label" : "source", "tail" : ": SourceFragment", "member" : "laika.ast.InvalidElement.source", "link" : "laika\/ast\/InvalidElement.html#source:laika.parse.SourceFragment", "kind" : "val"}, {"label" : "message", "tail" : ": RuntimeMessage", "member" : "laika.ast.InvalidElement.message", "link" : "laika\/ast\/InvalidElement.html#message:laika.ast.RuntimeMessage", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/InvalidElement.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/InvalidElement.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/InvalidElement.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/InvalidElement.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/InvalidElement.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/InvalidElement.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/InvalidElement.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InvalidElement.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InvalidElement.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InvalidElement.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/InvalidElement.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/InvalidElement.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/InvalidElement.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/InvalidElement.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/InvalidElement.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/InvalidElement.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/InvalidElement.html", "kind" : "case class"}, {"name" : "laika.ast.InvalidSpan", "shortDescription" : "Groups a span that could not be successfully parsed with a runtime message.", "object" : "laika\/ast\/InvalidSpan$.html", "members_object" : [{"label" : "apply", "tail" : "(message: RuntimeMessage, source: SourceFragment): InvalidSpan", "member" : "laika.ast.InvalidSpan.apply", "link" : "laika\/ast\/InvalidSpan$.html#apply(message:laika.ast.RuntimeMessage,source:laika.parse.SourceFragment):laika.ast.InvalidSpan", "kind" : "def"}, {"label" : "apply", "tail" : "(message: String, source: SourceFragment): InvalidSpan", "member" : "laika.ast.InvalidSpan.apply", "link" : "laika\/ast\/InvalidSpan$.html#apply(message:String,source:laika.parse.SourceFragment):laika.ast.InvalidSpan", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/InvalidSpan$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/InvalidSpan$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/InvalidSpan$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/InvalidSpan$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/InvalidSpan$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/InvalidSpan$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/InvalidSpan$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InvalidSpan$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InvalidSpan$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InvalidSpan$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/InvalidSpan$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/InvalidSpan$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/InvalidSpan$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/InvalidSpan$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/InvalidSpan$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/InvalidSpan$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/InvalidSpan$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/InvalidSpan$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/InvalidSpan$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): InvalidSpan", "member" : "laika.ast.InvalidSpan.withOptions", "link" : "laika\/ast\/InvalidSpan.html#withOptions(options:laika.ast.Options):laika.ast.InvalidSpan", "kind" : "def"}, {"label" : "FallbackElement", "tail" : "", "member" : "laika.ast.InvalidSpan.FallbackElement", "link" : "laika\/ast\/InvalidSpan.html#FallbackElement=laika.ast.Span", "kind" : "type"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.InvalidSpan.Self", "link" : "laika\/ast\/InvalidSpan.html#Self=laika.ast.InvalidSpan", "kind" : "type"}, {"member" : "laika.ast.InvalidSpan#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.InvalidSpan.options", "link" : "laika\/ast\/InvalidSpan.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "fallback", "tail" : ": Span", "member" : "laika.ast.InvalidSpan.fallback", "link" : "laika\/ast\/InvalidSpan.html#fallback:laika.ast.Span", "kind" : "val"}, {"label" : "source", "tail" : ": SourceFragment", "member" : "laika.ast.InvalidSpan.source", "link" : "laika\/ast\/InvalidSpan.html#source:laika.parse.SourceFragment", "kind" : "val"}, {"label" : "message", "tail" : ": RuntimeMessage", "member" : "laika.ast.InvalidSpan.message", "link" : "laika\/ast\/InvalidSpan.html#message:laika.ast.RuntimeMessage", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/InvalidSpan.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/InvalidSpan.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/InvalidSpan.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/InvalidSpan.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/InvalidSpan.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/InvalidSpan.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/InvalidSpan.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/InvalidSpan.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/InvalidSpan.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/InvalidSpan.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/InvalidSpan.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/InvalidSpan.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/InvalidSpan.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/InvalidSpan.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/InvalidSpan.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/InvalidSpan.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InvalidSpan.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InvalidSpan.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/InvalidSpan.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/InvalidSpan.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/InvalidSpan.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/InvalidSpan.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/InvalidSpan.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/InvalidSpan.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/InvalidSpan.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/InvalidSpan.html", "kind" : "case class"}, {"name" : "laika.ast.Length", "shortDescription" : "Encapsulates size information with a CSS-compatible length unit.", "members_case class" : [{"label" : "displayValue", "tail" : "(): String", "member" : "laika.ast.Length.displayValue", "link" : "laika\/ast\/Length.html#displayValue:String", "kind" : "def"}, {"label" : "scale", "tail" : "(percent: Double): Length", "member" : "laika.ast.Length.scale", "link" : "laika\/ast\/Length.html#scale(percent:Double):laika.ast.Length", "kind" : "def"}, {"member" : "laika.ast.Length#<init>", "error" : "unsupported entity"}, {"label" : "unit", "tail" : ": LengthUnit", "member" : "laika.ast.Length.unit", "link" : "laika\/ast\/Length.html#unit:laika.ast.LengthUnit", "kind" : "val"}, {"label" : "amount", "tail" : ": Double", "member" : "laika.ast.Length.amount", "link" : "laika\/ast\/Length.html#amount:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Length.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Length.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Length.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Length.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Length.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Length.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Length.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Length.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Length.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Length.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Length.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Length.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Length.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Length.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Length.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Length.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Length.html", "kind" : "case class"}, {"name" : "laika.ast.LengthUnit", "shortDescription" : "A base for builder of CSS-compatible length units.", "object" : "laika\/ast\/LengthUnit$.html", "members_class" : [{"label" : "apply", "tail" : "(amount: Double): Length", "member" : "laika.ast.LengthUnit.apply", "link" : "laika\/ast\/LengthUnit.html#apply(amount:Double):laika.ast.Length", "kind" : "def"}, {"label" : "displayValue", "tail" : ": String", "member" : "laika.ast.LengthUnit.displayValue", "link" : "laika\/ast\/LengthUnit.html#displayValue:String", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "laika\/ast\/LengthUnit.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (Length) ⇒ A): (Double) ⇒ A", "member" : "scala.Function1.andThen", "link" : "laika\/ast\/LengthUnit.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ Double): (A) ⇒ Length", "member" : "scala.Function1.compose", "link" : "laika\/ast\/LengthUnit.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/LengthUnit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/LengthUnit.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/LengthUnit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/LengthUnit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/LengthUnit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/LengthUnit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/LengthUnit.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LengthUnit.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LengthUnit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LengthUnit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/LengthUnit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/LengthUnit.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/LengthUnit.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/LengthUnit.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/LengthUnit.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/LengthUnit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/LengthUnit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/LengthUnit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "fromString", "tail" : "(value: String): Option[LengthUnit]", "member" : "laika.ast.LengthUnit.fromString", "link" : "laika\/ast\/LengthUnit$.html#fromString(value:String):Option[laika.ast.LengthUnit]", "kind" : "def"}, {"label" : "percent", "tail" : "", "member" : "laika.ast.LengthUnit.percent", "link" : "laika\/ast\/LengthUnit$.html#percent", "kind" : "object"}, {"label" : "vmax", "tail" : "", "member" : "laika.ast.LengthUnit.vmax", "link" : "laika\/ast\/LengthUnit$.html#vmax", "kind" : "object"}, {"label" : "vmin", "tail" : "", "member" : "laika.ast.LengthUnit.vmin", "link" : "laika\/ast\/LengthUnit$.html#vmin", "kind" : "object"}, {"label" : "vw", "tail" : "", "member" : "laika.ast.LengthUnit.vw", "link" : "laika\/ast\/LengthUnit$.html#vw", "kind" : "object"}, {"label" : "vh", "tail" : "", "member" : "laika.ast.LengthUnit.vh", "link" : "laika\/ast\/LengthUnit$.html#vh", "kind" : "object"}, {"label" : "rem", "tail" : "", "member" : "laika.ast.LengthUnit.rem", "link" : "laika\/ast\/LengthUnit$.html#rem", "kind" : "object"}, {"label" : "ex", "tail" : "", "member" : "laika.ast.LengthUnit.ex", "link" : "laika\/ast\/LengthUnit$.html#ex", "kind" : "object"}, {"label" : "em", "tail" : "", "member" : "laika.ast.LengthUnit.em", "link" : "laika\/ast\/LengthUnit$.html#em", "kind" : "object"}, {"label" : "ch", "tail" : "", "member" : "laika.ast.LengthUnit.ch", "link" : "laika\/ast\/LengthUnit$.html#ch", "kind" : "object"}, {"label" : "pt", "tail" : "", "member" : "laika.ast.LengthUnit.pt", "link" : "laika\/ast\/LengthUnit$.html#pt", "kind" : "object"}, {"label" : "pc", "tail" : "", "member" : "laika.ast.LengthUnit.pc", "link" : "laika\/ast\/LengthUnit$.html#pc", "kind" : "object"}, {"label" : "in", "tail" : "", "member" : "laika.ast.LengthUnit.in", "link" : "laika\/ast\/LengthUnit$.html#in", "kind" : "object"}, {"label" : "cm", "tail" : "", "member" : "laika.ast.LengthUnit.cm", "link" : "laika\/ast\/LengthUnit$.html#cm", "kind" : "object"}, {"label" : "mm", "tail" : "", "member" : "laika.ast.LengthUnit.mm", "link" : "laika\/ast\/LengthUnit$.html#mm", "kind" : "object"}, {"label" : "px", "tail" : "", "member" : "laika.ast.LengthUnit.px", "link" : "laika\/ast\/LengthUnit$.html#px", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/LengthUnit$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/LengthUnit$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/LengthUnit$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/LengthUnit$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/LengthUnit$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/LengthUnit$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/LengthUnit$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LengthUnit$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LengthUnit$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LengthUnit$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/LengthUnit$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/LengthUnit$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/LengthUnit$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/LengthUnit$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/LengthUnit$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/LengthUnit$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/LengthUnit$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/LengthUnit$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/LengthUnit$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/ast\/LengthUnit.html", "kind" : "class"}, {"name" : "laika.ast.LineBreak", "shortDescription" : "An explicit hard line break.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): LineBreak", "member" : "laika.ast.LineBreak.withOptions", "link" : "laika\/ast\/LineBreak.html#withOptions(options:laika.ast.Options):laika.ast.LineBreak", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.LineBreak.Self", "link" : "laika\/ast\/LineBreak.html#Self=laika.ast.LineBreak", "kind" : "type"}, {"member" : "laika.ast.LineBreak#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.LineBreak.options", "link" : "laika\/ast\/LineBreak.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/LineBreak.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/LineBreak.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/LineBreak.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/LineBreak.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/LineBreak.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/LineBreak.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/LineBreak.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/LineBreak.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/LineBreak.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/LineBreak.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/LineBreak.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/LineBreak.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/LineBreak.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/LineBreak.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/LineBreak.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/LineBreak.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LineBreak.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LineBreak.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LineBreak.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/LineBreak.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/LineBreak.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/LineBreak.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/LineBreak.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/LineBreak.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/LineBreak.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/LineBreak.html", "kind" : "case class"}, {"name" : "laika.ast.Link", "members_trait" : [{"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Link.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Link.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Link.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Link.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Link.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Link.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Link.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Link.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Link.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/Link.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/Link.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Link.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Link.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Link.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Link.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Link.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Link.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Link.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Link.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Link.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Link.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Link.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Link.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Link.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Link.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Link.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Link.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Link.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Link.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Link.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "laika.ast.Link.Self", "error" : "unsupported entity"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/Link.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/Link.html#options:laika.ast.Options", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/Link.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/Link.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/Link.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "The base type for all link elements.", "trait" : "laika\/ast\/Link.html", "kind" : "trait"}, {"name" : "laika.ast.LinkAlias", "shortDescription" : "A link target pointing to another link target, acting like an alias.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): LinkAlias", "member" : "laika.ast.LinkAlias.withOptions", "link" : "laika\/ast\/LinkAlias.html#withOptions(options:laika.ast.Options):laika.ast.LinkAlias", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.LinkAlias.Self", "link" : "laika\/ast\/LinkAlias.html#Self=laika.ast.LinkAlias", "kind" : "type"}, {"member" : "laika.ast.LinkAlias#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.LinkAlias.options", "link" : "laika\/ast\/LinkAlias.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "target", "tail" : ": String", "member" : "laika.ast.LinkAlias.target", "link" : "laika\/ast\/LinkAlias.html#target:String", "kind" : "val"}, {"label" : "id", "tail" : ": String", "member" : "laika.ast.LinkAlias.id", "link" : "laika\/ast\/LinkAlias.html#id:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/LinkAlias.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/LinkAlias.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/LinkAlias.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/LinkAlias.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/LinkAlias.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/LinkAlias.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/LinkAlias.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/LinkAlias.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/LinkAlias.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/LinkAlias.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/LinkAlias.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/LinkAlias.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/LinkAlias.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/LinkAlias.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/LinkAlias.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/LinkAlias.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LinkAlias.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LinkAlias.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LinkAlias.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/LinkAlias.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/LinkAlias.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/LinkAlias.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/LinkAlias.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/LinkAlias.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/LinkAlias.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/LinkAlias.html", "kind" : "case class"}, {"name" : "laika.ast.LinkDefinition", "shortDescription" : "An internal or external link target that can be referenced by id, usually only part of the raw document tree and thenremoved by the rewrite rule that resolves link and image references.", "object" : "laika\/ast\/LinkDefinition$.html", "members_object" : [{"label" : "create", "tail" : "(id: String, url: String, title: Option[String]): Block with Span", "member" : "laika.ast.LinkDefinition.create", "link" : "laika\/ast\/LinkDefinition$.html#create(id:String,url:String,title:Option[String]):laika.ast.Blockwithlaika.ast.Span", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/LinkDefinition$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/LinkDefinition$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/LinkDefinition$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/LinkDefinition$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/LinkDefinition$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/LinkDefinition$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/LinkDefinition$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LinkDefinition$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LinkDefinition$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LinkDefinition$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/LinkDefinition$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/LinkDefinition$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/LinkDefinition$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/LinkDefinition$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/LinkDefinition$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/LinkDefinition$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/LinkDefinition$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/LinkDefinition$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/LinkDefinition$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): LinkDefinition", "member" : "laika.ast.LinkDefinition.withOptions", "link" : "laika\/ast\/LinkDefinition.html#withOptions(options:laika.ast.Options):laika.ast.LinkDefinition", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.LinkDefinition.Self", "link" : "laika\/ast\/LinkDefinition.html#Self=laika.ast.LinkDefinition", "kind" : "type"}, {"member" : "laika.ast.LinkDefinition#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.LinkDefinition.options", "link" : "laika\/ast\/LinkDefinition.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "title", "tail" : ": Option[String]", "member" : "laika.ast.LinkDefinition.title", "link" : "laika\/ast\/LinkDefinition.html#title:Option[String]", "kind" : "val"}, {"label" : "target", "tail" : ": Target", "member" : "laika.ast.LinkDefinition.target", "link" : "laika\/ast\/LinkDefinition.html#target:laika.ast.Target", "kind" : "val"}, {"label" : "id", "tail" : ": String", "member" : "laika.ast.LinkDefinition.id", "link" : "laika\/ast\/LinkDefinition.html#id:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/LinkDefinition.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/LinkDefinition.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/LinkDefinition.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/LinkDefinition.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/LinkDefinition.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/LinkDefinition.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/LinkDefinition.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/LinkDefinition.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/LinkDefinition.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/LinkDefinition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/LinkDefinition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/LinkDefinition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/LinkDefinition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/LinkDefinition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/LinkDefinition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/LinkDefinition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LinkDefinition.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LinkDefinition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LinkDefinition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/LinkDefinition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/LinkDefinition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/LinkDefinition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/LinkDefinition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/LinkDefinition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/LinkDefinition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/LinkDefinition.html", "kind" : "case class"}, {"name" : "laika.ast.LinkIdReference", "shortDescription" : "A reference to any kind of referencable object, e.g.", "object" : "laika\/ast\/LinkIdReference$.html", "members_object" : [{"label" : "apply", "tail" : "(ref: String, source: SourceFragment): Companion", "member" : "laika.ast.LinkIdReference.apply", "link" : "laika\/ast\/LinkIdReference$.html#apply(ref:String,source:laika.parse.SourceFragment):laika.ast.LinkIdReference.Companion", "kind" : "def"}, {"label" : "Companion", "tail" : "", "member" : "laika.ast.LinkIdReference.Companion", "link" : "laika\/ast\/LinkIdReference$.html#CompanionextendsSpanContainerCompanion", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/LinkIdReference$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/LinkIdReference$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/LinkIdReference$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/LinkIdReference$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/LinkIdReference$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/LinkIdReference$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/LinkIdReference$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LinkIdReference$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LinkIdReference$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LinkIdReference$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/LinkIdReference$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/LinkIdReference$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/LinkIdReference$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/LinkIdReference$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/LinkIdReference$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/LinkIdReference$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/LinkIdReference$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/LinkIdReference$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/LinkIdReference$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "unresolvedMessage", "tail" : ": String", "member" : "laika.ast.LinkIdReference.unresolvedMessage", "link" : "laika\/ast\/LinkIdReference.html#unresolvedMessage:String", "kind" : "lazy val"}, {"label" : "withOptions", "tail" : "(options: Options): LinkIdReference", "member" : "laika.ast.LinkIdReference.withOptions", "link" : "laika\/ast\/LinkIdReference.html#withOptions(options:laika.ast.Options):laika.ast.LinkIdReference", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Span]): LinkIdReference", "member" : "laika.ast.LinkIdReference.withContent", "link" : "laika\/ast\/LinkIdReference.html#withContent(newContent:Seq[laika.ast.Span]):laika.ast.LinkIdReference", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.LinkIdReference.Self", "link" : "laika\/ast\/LinkIdReference.html#Self=laika.ast.LinkIdReference", "kind" : "type"}, {"member" : "laika.ast.LinkIdReference#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.LinkIdReference.options", "link" : "laika\/ast\/LinkIdReference.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "source", "tail" : ": SourceFragment", "member" : "laika.ast.LinkIdReference.source", "link" : "laika\/ast\/LinkIdReference.html#source:laika.parse.SourceFragment", "kind" : "val"}, {"label" : "ref", "tail" : ": String", "member" : "laika.ast.LinkIdReference.ref", "link" : "laika\/ast\/LinkIdReference.html#ref:String", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Span]", "member" : "laika.ast.LinkIdReference.content", "link" : "laika\/ast\/LinkIdReference.html#content:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "extractText", "tail" : "(): String", "member" : "laika.ast.SpanContainer.extractText", "link" : "laika\/ast\/LinkIdReference.html#extractText:String", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.SpanContainer.rewriteChildren", "link" : "laika\/ast\/LinkIdReference.html#rewriteChildren(rules:laika.ast.RewriteRules):SpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/LinkIdReference.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/LinkIdReference.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/LinkIdReference.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/LinkIdReference.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/LinkIdReference.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/LinkIdReference.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/LinkIdReference.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/LinkIdReference.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/LinkIdReference.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/LinkIdReference.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/LinkIdReference.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/LinkIdReference.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/LinkIdReference.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/LinkIdReference.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/LinkIdReference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/LinkIdReference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/LinkIdReference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/LinkIdReference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/LinkIdReference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/LinkIdReference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/LinkIdReference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LinkIdReference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LinkIdReference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LinkIdReference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/LinkIdReference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/LinkIdReference.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/LinkIdReference.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/LinkIdReference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/LinkIdReference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/LinkIdReference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/LinkIdReference.html", "kind" : "case class"}, {"name" : "laika.ast.LinkPathReference", "shortDescription" : "A reference to content within the virtual input tree, the path pointing to the source path.", "members_case class" : [{"label" : "unresolvedMessage", "tail" : ": String", "member" : "laika.ast.LinkPathReference.unresolvedMessage", "link" : "laika\/ast\/LinkPathReference.html#unresolvedMessage:String", "kind" : "lazy val"}, {"label" : "resolve", "tail" : "(target: Target): Link", "member" : "laika.ast.LinkPathReference.resolve", "link" : "laika\/ast\/LinkPathReference.html#resolve(target:laika.ast.Target):laika.ast.Link", "kind" : "def"}, {"label" : "withOptions", "tail" : "(options: Options): LinkPathReference", "member" : "laika.ast.LinkPathReference.withOptions", "link" : "laika\/ast\/LinkPathReference.html#withOptions(options:laika.ast.Options):laika.ast.LinkPathReference", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Span]): LinkPathReference", "member" : "laika.ast.LinkPathReference.withContent", "link" : "laika\/ast\/LinkPathReference.html#withContent(newContent:Seq[laika.ast.Span]):laika.ast.LinkPathReference", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.LinkPathReference.Self", "link" : "laika\/ast\/LinkPathReference.html#Self=laika.ast.LinkPathReference", "kind" : "type"}, {"member" : "laika.ast.LinkPathReference#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.LinkPathReference.options", "link" : "laika\/ast\/LinkPathReference.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "title", "tail" : ": Option[String]", "member" : "laika.ast.LinkPathReference.title", "link" : "laika\/ast\/LinkPathReference.html#title:Option[String]", "kind" : "val"}, {"label" : "source", "tail" : ": SourceFragment", "member" : "laika.ast.LinkPathReference.source", "link" : "laika\/ast\/LinkPathReference.html#source:laika.parse.SourceFragment", "kind" : "val"}, {"label" : "path", "tail" : ": RelativePath", "member" : "laika.ast.LinkPathReference.path", "link" : "laika\/ast\/LinkPathReference.html#path:laika.ast.RelativePath", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Span]", "member" : "laika.ast.LinkPathReference.content", "link" : "laika\/ast\/LinkPathReference.html#content:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "extractText", "tail" : "(): String", "member" : "laika.ast.SpanContainer.extractText", "link" : "laika\/ast\/LinkPathReference.html#extractText:String", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.SpanContainer.rewriteChildren", "link" : "laika\/ast\/LinkPathReference.html#rewriteChildren(rules:laika.ast.RewriteRules):SpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/LinkPathReference.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/LinkPathReference.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/LinkPathReference.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/LinkPathReference.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/LinkPathReference.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/LinkPathReference.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/LinkPathReference.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/LinkPathReference.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/LinkPathReference.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/LinkPathReference.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/LinkPathReference.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/LinkPathReference.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/LinkPathReference.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/LinkPathReference.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/LinkPathReference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/LinkPathReference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/LinkPathReference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/LinkPathReference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/LinkPathReference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/LinkPathReference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/LinkPathReference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LinkPathReference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LinkPathReference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LinkPathReference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/LinkPathReference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/LinkPathReference.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/LinkPathReference.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/LinkPathReference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/LinkPathReference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/LinkPathReference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/LinkPathReference.html", "kind" : "case class"}, {"name" : "laika.ast.LinkTarget", "members_trait" : [{"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/LinkTarget.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/LinkTarget.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/LinkTarget.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/LinkTarget.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/LinkTarget.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/LinkTarget.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/LinkTarget.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/LinkTarget.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/LinkTarget.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/LinkTarget.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/LinkTarget.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/LinkTarget.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/LinkTarget.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/LinkTarget.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/LinkTarget.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/LinkTarget.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/LinkTarget.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/LinkTarget.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LinkTarget.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LinkTarget.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LinkTarget.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/LinkTarget.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/LinkTarget.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/LinkTarget.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/LinkTarget.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/LinkTarget.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/LinkTarget.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/LinkTarget.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/LinkTarget.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/LinkTarget.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "laika.ast.LinkTarget.Self", "error" : "unsupported entity"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/LinkTarget.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/LinkTarget.html#options:laika.ast.Options", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/LinkTarget.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/LinkTarget.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/LinkTarget.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "The base type for all link targets.", "trait" : "laika\/ast\/LinkTarget.html", "kind" : "trait"}, {"name" : "laika.ast.ListContainer", "members_trait" : [{"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/ListContainer.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/ListContainer.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/ListContainer.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/ListContainer.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/ListContainer.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/ListContainer.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/ListContainer.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/ListContainer.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/ListContainer.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/ListContainer.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/ListContainer.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/ListContainer.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/ListContainer.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/ListContainer.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/ListContainer.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/ListContainer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/ListContainer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/ListContainer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/ListContainer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/ListContainer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/ListContainer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/ListContainer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ListContainer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ListContainer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ListContainer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/ListContainer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/ListContainer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/ListContainer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/ListContainer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/ListContainer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/ListContainer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/ListContainer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/ListContainer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "content", "tail" : "(): Seq[ListItem]", "member" : "laika.ast.Container.content", "link" : "laika\/ast\/ListContainer.html#content:T", "kind" : "abstract def"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/ListContainer.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/ListContainer.html#options:laika.ast.Options", "kind" : "abstract def"}, {"member" : "laika.ast.Customizable.Self", "error" : "unsupported entity"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/ListContainer.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/ListContainer.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/ListContainer.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "A container of list items.", "trait" : "laika\/ast\/ListContainer.html", "kind" : "trait"}, {"name" : "laika.ast.ListItem", "members_trait" : [{"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/ListItem.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/ListItem.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/ListItem.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/ListItem.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/ListItem.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/ListItem.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/ListItem.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/ListItem.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/ListItem.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/ListItem.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/ListItem.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/ListItem.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/ListItem.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/ListItem.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/ListItem.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/ListItem.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/ListItem.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/ListItem.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ListItem.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ListItem.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ListItem.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/ListItem.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/ListItem.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/ListItem.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/ListItem.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/ListItem.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/ListItem.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/ListItem.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/ListItem.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/ListItem.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "laika.ast.ListItem.Self", "error" : "unsupported entity"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/ListItem.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/ListItem.html#options:laika.ast.Options", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/ListItem.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/ListItem.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/ListItem.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "The base type for all list items.", "trait" : "laika\/ast\/ListItem.html", "kind" : "trait"}, {"name" : "laika.ast.Literal", "shortDescription" : "A span containing plain, unparsed text.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Literal", "member" : "laika.ast.Literal.withOptions", "link" : "laika\/ast\/Literal.html#withOptions(options:laika.ast.Options):laika.ast.Literal", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Literal.Self", "link" : "laika\/ast\/Literal.html#Self=laika.ast.Literal", "kind" : "type"}, {"member" : "laika.ast.Literal#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Literal.options", "link" : "laika\/ast\/Literal.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": String", "member" : "laika.ast.Literal.content", "link" : "laika\/ast\/Literal.html#content:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Literal.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Literal.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Literal.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Literal.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Literal.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Literal.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Literal.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Literal.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Literal.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Literal.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Literal.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Literal.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Literal.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Literal.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Literal.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Literal.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Literal.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Literal.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Literal.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Literal.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Literal.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Literal.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Literal.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Literal.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Literal.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Literal.html", "kind" : "case class"}, {"name" : "laika.ast.LiteralBlock", "shortDescription" : "A literal block with unparsed text content.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): LiteralBlock", "member" : "laika.ast.LiteralBlock.withOptions", "link" : "laika\/ast\/LiteralBlock.html#withOptions(options:laika.ast.Options):laika.ast.LiteralBlock", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.LiteralBlock.Self", "link" : "laika\/ast\/LiteralBlock.html#Self=laika.ast.LiteralBlock", "kind" : "type"}, {"member" : "laika.ast.LiteralBlock#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.LiteralBlock.options", "link" : "laika\/ast\/LiteralBlock.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": String", "member" : "laika.ast.LiteralBlock.content", "link" : "laika\/ast\/LiteralBlock.html#content:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/LiteralBlock.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/LiteralBlock.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/LiteralBlock.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/LiteralBlock.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/LiteralBlock.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/LiteralBlock.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/LiteralBlock.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/LiteralBlock.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/LiteralBlock.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/LiteralBlock.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/LiteralBlock.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/LiteralBlock.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/LiteralBlock.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/LiteralBlock.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/LiteralBlock.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/LiteralBlock.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LiteralBlock.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LiteralBlock.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LiteralBlock.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/LiteralBlock.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/LiteralBlock.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/LiteralBlock.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/LiteralBlock.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/LiteralBlock.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/LiteralBlock.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/LiteralBlock.html", "kind" : "case class"}, {"name" : "laika.ast.LocalLink", "members_trait" : [{"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/LocalLink.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/LocalLink.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/LocalLink.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/LocalLink.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/LocalLink.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/LocalLink.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/LocalLink.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/LocalLink.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/LocalLink.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/LocalLink.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/LocalLink.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/LocalLink.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/LocalLink.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/LocalLink.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/LocalLink.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/LocalLink.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/LocalLink.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/LocalLink.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LocalLink.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LocalLink.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/LocalLink.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/LocalLink.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/LocalLink.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/LocalLink.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/LocalLink.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/LocalLink.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/LocalLink.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/LocalLink.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/LocalLink.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/LocalLink.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "refId", "tail" : "(): String", "member" : "laika.ast.LocalLink.refId", "link" : "laika\/ast\/LocalLink.html#refId:String", "kind" : "abstract def"}, {"member" : "laika.ast.LocalLink.Self", "error" : "unsupported entity"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/LocalLink.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/LocalLink.html#options:laika.ast.Options", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/LocalLink.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/LocalLink.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/LocalLink.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "A local link that always points to a target within the same document.", "trait" : "laika\/ast\/LocalLink.html", "kind" : "trait"}, {"name" : "laika.ast.MarkupContextReference", "shortDescription" : "A context reference specifically for use in markup documents.", "members_case class" : [{"label" : "unresolvedMessage", "tail" : ": String", "member" : "laika.ast.MarkupContextReference.unresolvedMessage", "link" : "laika\/ast\/MarkupContextReference.html#unresolvedMessage:String", "kind" : "lazy val"}, {"label" : "withOptions", "tail" : "(options: Options): MarkupContextReference", "member" : "laika.ast.MarkupContextReference.withOptions", "link" : "laika\/ast\/MarkupContextReference.html#withOptions(options:laika.ast.Options):laika.ast.MarkupContextReference", "kind" : "def"}, {"label" : "result", "tail" : "(value: ConfigResult[Option[ConfigValue]]): Span", "member" : "laika.ast.MarkupContextReference.result", "link" : "laika\/ast\/MarkupContextReference.html#result(value:laika.config.Config.ConfigResult[Option[laika.config.ConfigValue]]):laika.ast.Span", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.MarkupContextReference.Self", "link" : "laika\/ast\/MarkupContextReference.html#Self=laika.ast.MarkupContextReference", "kind" : "type"}, {"member" : "laika.ast.MarkupContextReference#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.MarkupContextReference.options", "link" : "laika\/ast\/MarkupContextReference.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "source", "tail" : ": SourceFragment", "member" : "laika.ast.MarkupContextReference.source", "link" : "laika\/ast\/MarkupContextReference.html#source:laika.parse.SourceFragment", "kind" : "val"}, {"label" : "required", "tail" : ": Boolean", "member" : "laika.ast.MarkupContextReference.required", "link" : "laika\/ast\/MarkupContextReference.html#required:Boolean", "kind" : "val"}, {"label" : "ref", "tail" : ": Key", "member" : "laika.ast.MarkupContextReference.ref", "link" : "laika\/ast\/MarkupContextReference.html#ref:laika.config.Key", "kind" : "val"}, {"label" : "invalidType", "tail" : "(value: ConfigValue): InvalidSpan", "member" : "laika.ast.ContextReference.invalidType", "link" : "laika\/ast\/MarkupContextReference.html#invalidType(value:laika.config.ConfigValue):laika.ast.InvalidSpan", "kind" : "def"}, {"label" : "invalid", "tail" : "(cError: ConfigError): InvalidSpan", "member" : "laika.ast.ContextReference.invalid", "link" : "laika\/ast\/MarkupContextReference.html#invalid(cError:laika.config.ConfigError):laika.ast.InvalidSpan", "kind" : "def"}, {"label" : "missing", "tail" : "(): InvalidSpan", "member" : "laika.ast.ContextReference.missing", "link" : "laika\/ast\/MarkupContextReference.html#missing:laika.ast.InvalidSpan", "kind" : "def"}, {"label" : "resolve", "tail" : "(cursor: DocumentCursor): Span", "member" : "laika.ast.ContextReference.resolve", "link" : "laika\/ast\/MarkupContextReference.html#resolve(cursor:laika.ast.DocumentCursor):laika.ast.Span", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/MarkupContextReference.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/MarkupContextReference.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/MarkupContextReference.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/MarkupContextReference.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/MarkupContextReference.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/MarkupContextReference.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/MarkupContextReference.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/MarkupContextReference.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/MarkupContextReference.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/MarkupContextReference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/MarkupContextReference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/MarkupContextReference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/MarkupContextReference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/MarkupContextReference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/MarkupContextReference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/MarkupContextReference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/MarkupContextReference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/MarkupContextReference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/MarkupContextReference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/MarkupContextReference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/MarkupContextReference.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/MarkupContextReference.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/MarkupContextReference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/MarkupContextReference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/MarkupContextReference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/MarkupContextReference.html", "kind" : "case class"}, {"name" : "laika.ast.MessageFilter", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/MessageFilter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/MessageFilter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/MessageFilter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/MessageFilter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/MessageFilter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/MessageFilter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/MessageFilter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/MessageFilter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/MessageFilter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/MessageFilter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/MessageFilter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/MessageFilter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/MessageFilter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/MessageFilter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/MessageFilter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/MessageFilter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/MessageFilter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/MessageFilter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/MessageFilter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(message: RuntimeMessage): Boolean", "member" : "laika.ast.MessageFilter.apply", "link" : "laika\/ast\/MessageFilter.html#apply(message:laika.ast.RuntimeMessage):Boolean", "kind" : "abstract def"}], "shortDescription" : "A filter for runtime messages that meet a specified minimum message level.", "object" : "laika\/ast\/MessageFilter$.html", "members_object" : [{"label" : "Fatal", "tail" : ": MessageFilter", "member" : "laika.ast.MessageFilter.Fatal", "link" : "laika\/ast\/MessageFilter$.html#Fatal:laika.ast.MessageFilter", "kind" : "val"}, {"label" : "Error", "tail" : ": MessageFilter", "member" : "laika.ast.MessageFilter.Error", "link" : "laika\/ast\/MessageFilter$.html#Error:laika.ast.MessageFilter", "kind" : "val"}, {"label" : "Warning", "tail" : ": MessageFilter", "member" : "laika.ast.MessageFilter.Warning", "link" : "laika\/ast\/MessageFilter$.html#Warning:laika.ast.MessageFilter", "kind" : "val"}, {"label" : "Info", "tail" : ": MessageFilter", "member" : "laika.ast.MessageFilter.Info", "link" : "laika\/ast\/MessageFilter$.html#Info:laika.ast.MessageFilter", "kind" : "val"}, {"label" : "Debug", "tail" : ": MessageFilter", "member" : "laika.ast.MessageFilter.Debug", "link" : "laika\/ast\/MessageFilter$.html#Debug:laika.ast.MessageFilter", "kind" : "val"}, {"label" : "None", "tail" : "", "member" : "laika.ast.MessageFilter.None", "link" : "laika\/ast\/MessageFilter$.html#None", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/MessageFilter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/MessageFilter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/MessageFilter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/MessageFilter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/MessageFilter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/MessageFilter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/MessageFilter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/MessageFilter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/MessageFilter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/MessageFilter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/MessageFilter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/MessageFilter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/MessageFilter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/MessageFilter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/MessageFilter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/MessageFilter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/MessageFilter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/MessageFilter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/MessageFilter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/ast\/MessageFilter.html", "kind" : "trait"}, {"name" : "laika.ast.MessageLevel", "shortDescription" : "Signals the severity of a runtime message.", "object" : "laika\/ast\/MessageLevel$.html", "members_class" : [{"label" : "compare", "tail" : "(that: MessageLevel): Int", "member" : "laika.ast.MessageLevel.compare", "link" : "laika\/ast\/MessageLevel.html#compare(that:laika.ast.MessageLevel):Int", "kind" : "def"}, {"label" : "compareTo", "tail" : "(that: MessageLevel): Int", "member" : "scala.math.Ordered.compareTo", "link" : "laika\/ast\/MessageLevel.html#compareTo(that:A):Int", "kind" : "def"}, {"label" : ">=", "tail" : "(that: MessageLevel): Boolean", "member" : "scala.math.Ordered.>=", "link" : "laika\/ast\/MessageLevel.html#>=(that:A):Boolean", "kind" : "def"}, {"label" : "<=", "tail" : "(that: MessageLevel): Boolean", "member" : "scala.math.Ordered.<=", "link" : "laika\/ast\/MessageLevel.html#<=(that:A):Boolean", "kind" : "def"}, {"label" : ">", "tail" : "(that: MessageLevel): Boolean", "member" : "scala.math.Ordered.>", "link" : "laika\/ast\/MessageLevel.html#>(that:A):Boolean", "kind" : "def"}, {"label" : "<", "tail" : "(that: MessageLevel): Boolean", "member" : "scala.math.Ordered.<", "link" : "laika\/ast\/MessageLevel.html#<(that:A):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/MessageLevel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/MessageLevel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/MessageLevel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/MessageLevel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/MessageLevel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/MessageLevel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/MessageLevel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/MessageLevel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/MessageLevel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/MessageLevel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/MessageLevel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/MessageLevel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/MessageLevel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/MessageLevel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/MessageLevel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/MessageLevel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/MessageLevel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/MessageLevel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/MessageLevel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Fatal", "tail" : "", "member" : "laika.ast.MessageLevel.Fatal", "link" : "laika\/ast\/MessageLevel$.html#Fatal", "kind" : "object"}, {"label" : "Error", "tail" : "", "member" : "laika.ast.MessageLevel.Error", "link" : "laika\/ast\/MessageLevel$.html#Error", "kind" : "object"}, {"label" : "Warning", "tail" : "", "member" : "laika.ast.MessageLevel.Warning", "link" : "laika\/ast\/MessageLevel$.html#Warning", "kind" : "object"}, {"label" : "Info", "tail" : "", "member" : "laika.ast.MessageLevel.Info", "link" : "laika\/ast\/MessageLevel$.html#Info", "kind" : "object"}, {"label" : "Debug", "tail" : "", "member" : "laika.ast.MessageLevel.Debug", "link" : "laika\/ast\/MessageLevel$.html#Debug", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/MessageLevel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/MessageLevel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/MessageLevel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/MessageLevel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/MessageLevel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/MessageLevel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/MessageLevel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/MessageLevel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/MessageLevel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/MessageLevel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/MessageLevel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/MessageLevel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/MessageLevel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/MessageLevel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/MessageLevel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/MessageLevel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/MessageLevel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/MessageLevel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/MessageLevel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/ast\/MessageLevel.html", "kind" : "class"}, {"name" : "laika.ast.Navigatable", "members_trait" : [{"label" : "name", "tail" : ": String", "member" : "laika.ast.Navigatable.name", "link" : "laika\/ast\/Navigatable.html#name:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Navigatable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Navigatable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Navigatable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Navigatable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Navigatable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Navigatable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Navigatable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Navigatable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Navigatable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Navigatable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Navigatable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Navigatable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Navigatable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Navigatable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Navigatable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Navigatable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Navigatable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Navigatable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Navigatable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "path", "tail" : "(): Path", "member" : "laika.ast.Navigatable.path", "link" : "laika\/ast\/Navigatable.html#path:laika.ast.Path", "kind" : "abstract def"}], "shortDescription" : "A navigatable object is anything that has an associated path.", "trait" : "laika\/ast\/Navigatable.html", "kind" : "trait"}, {"name" : "laika.ast.NavigationBuilderContext", "shortDescription" : "The context of a navigation builder that can get passed down in recursive calls to thevarious types that have an asNavigationItem method.", "members_case class" : [{"label" : "newNavigationItem", "tail" : "(title: SpanSequence, target: Path, children: Seq[NavigationItem], targetFormats: TargetFormats): NavigationItem", "member" : "laika.ast.NavigationBuilderContext.newNavigationItem", "link" : "laika\/ast\/NavigationBuilderContext.html#newNavigationItem(title:laika.ast.SpanSequence,target:laika.ast.Path,children:Seq[laika.ast.NavigationItem],targetFormats:laika.rewrite.nav.TargetFormats):laika.ast.NavigationItem", "kind" : "def"}, {"label" : "newNavigationItem", "tail" : "(title: SpanSequence, target: Option[DocumentNavigation], children: Seq[NavigationItem], targetFormats: TargetFormats): NavigationItem", "member" : "laika.ast.NavigationBuilderContext.newNavigationItem", "link" : "laika\/ast\/NavigationBuilderContext.html#newNavigationItem(title:laika.ast.SpanSequence,target:Option[laika.ast.DocumentNavigation],children:Seq[laika.ast.NavigationItem],targetFormats:laika.rewrite.nav.TargetFormats):laika.ast.NavigationItem", "kind" : "def"}, {"label" : "isComplete", "tail" : ": Boolean", "member" : "laika.ast.NavigationBuilderContext.isComplete", "link" : "laika\/ast\/NavigationBuilderContext.html#isComplete:Boolean", "kind" : "val"}, {"label" : "nextLevel", "tail" : ": NavigationBuilderContext", "member" : "laika.ast.NavigationBuilderContext.nextLevel", "link" : "laika\/ast\/NavigationBuilderContext.html#nextLevel:laika.ast.NavigationBuilderContext", "kind" : "lazy val"}, {"member" : "laika.ast.NavigationBuilderContext#<init>", "error" : "unsupported entity"}, {"label" : "excludeSelf", "tail" : ": Boolean", "member" : "laika.ast.NavigationBuilderContext.excludeSelf", "link" : "laika\/ast\/NavigationBuilderContext.html#excludeSelf:Boolean", "kind" : "val"}, {"label" : "excludeSections", "tail" : ": Boolean", "member" : "laika.ast.NavigationBuilderContext.excludeSections", "link" : "laika\/ast\/NavigationBuilderContext.html#excludeSections:Boolean", "kind" : "val"}, {"label" : "currentLevel", "tail" : ": Int", "member" : "laika.ast.NavigationBuilderContext.currentLevel", "link" : "laika\/ast\/NavigationBuilderContext.html#currentLevel:Int", "kind" : "val"}, {"label" : "maxLevels", "tail" : ": Int", "member" : "laika.ast.NavigationBuilderContext.maxLevels", "link" : "laika\/ast\/NavigationBuilderContext.html#maxLevels:Int", "kind" : "val"}, {"label" : "itemStyles", "tail" : ": Set[String]", "member" : "laika.ast.NavigationBuilderContext.itemStyles", "link" : "laika\/ast\/NavigationBuilderContext.html#itemStyles:Set[String]", "kind" : "val"}, {"label" : "refPath", "tail" : ": Path", "member" : "laika.ast.NavigationBuilderContext.refPath", "link" : "laika\/ast\/NavigationBuilderContext.html#refPath:laika.ast.Path", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/NavigationBuilderContext.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/NavigationBuilderContext.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/NavigationBuilderContext.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/NavigationBuilderContext.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/NavigationBuilderContext.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/NavigationBuilderContext.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/NavigationBuilderContext.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/NavigationBuilderContext.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/NavigationBuilderContext.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/NavigationBuilderContext.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/NavigationBuilderContext.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/NavigationBuilderContext.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/NavigationBuilderContext.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/NavigationBuilderContext.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/NavigationBuilderContext.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/NavigationBuilderContext.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/NavigationBuilderContext.html", "kind" : "case class"}, {"name" : "laika.ast.NavigationItem", "shortDescription" : "Represents a navigation entry with an optional target link and optional child items.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): NavigationItem", "member" : "laika.ast.NavigationItem.withOptions", "link" : "laika\/ast\/NavigationItem.html#withOptions(options:laika.ast.Options):laika.ast.NavigationItem", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): NavigationItem", "member" : "laika.ast.NavigationItem.rewriteChildren", "link" : "laika\/ast\/NavigationItem.html#rewriteChildren(rules:laika.ast.RewriteRules):laika.ast.NavigationItem", "kind" : "def"}, {"label" : "firstChildLink", "tail" : "(): Option[NavigationLink]", "member" : "laika.ast.NavigationItem.firstChildLink", "link" : "laika\/ast\/NavigationItem.html#firstChildLink:Option[laika.ast.NavigationLink]", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.NavigationItem.Self", "link" : "laika\/ast\/NavigationItem.html#Self=laika.ast.NavigationItem", "kind" : "type"}, {"member" : "laika.ast.NavigationItem#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.NavigationItem.options", "link" : "laika\/ast\/NavigationItem.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "targetFormats", "tail" : ": TargetFormats", "member" : "laika.ast.NavigationItem.targetFormats", "link" : "laika\/ast\/NavigationItem.html#targetFormats:laika.rewrite.nav.TargetFormats", "kind" : "val"}, {"label" : "link", "tail" : ": Option[NavigationLink]", "member" : "laika.ast.NavigationItem.link", "link" : "laika\/ast\/NavigationItem.html#link:Option[laika.ast.NavigationLink]", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[NavigationItem]", "member" : "laika.ast.NavigationItem.content", "link" : "laika\/ast\/NavigationItem.html#content:Seq[laika.ast.NavigationItem]", "kind" : "val"}, {"label" : "title", "tail" : ": SpanSequence", "member" : "laika.ast.NavigationItem.title", "link" : "laika\/ast\/NavigationItem.html#title:laika.ast.SpanSequence", "kind" : "val"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/NavigationItem.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/NavigationItem.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/NavigationItem.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/NavigationItem.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/NavigationItem.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/NavigationItem.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/NavigationItem.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/NavigationItem.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/NavigationItem.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/NavigationItem.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/NavigationItem.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/NavigationItem.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/NavigationItem.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/NavigationItem.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/NavigationItem.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/NavigationItem.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/NavigationItem.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/NavigationItem.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/NavigationItem.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/NavigationItem.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/NavigationItem.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/NavigationItem.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/NavigationItem.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/NavigationItem.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/NavigationItem.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/NavigationItem.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/NavigationItem.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/NavigationItem.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/NavigationItem.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/NavigationItem.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/NavigationItem.html", "kind" : "case class"}, {"name" : "laika.ast.NavigationLink", "shortDescription" : "Represents a book navigation entry that links to content in the document tree.", "members_case class" : [{"member" : "laika.ast.NavigationLink#<init>", "error" : "unsupported entity"}, {"label" : "targetFormats", "tail" : ": TargetFormats", "member" : "laika.ast.NavigationLink.targetFormats", "link" : "laika\/ast\/NavigationLink.html#targetFormats:laika.rewrite.nav.TargetFormats", "kind" : "val"}, {"label" : "selfLink", "tail" : ": Boolean", "member" : "laika.ast.NavigationLink.selfLink", "link" : "laika\/ast\/NavigationLink.html#selfLink:Boolean", "kind" : "val"}, {"label" : "target", "tail" : ": Target", "member" : "laika.ast.NavigationLink.target", "link" : "laika\/ast\/NavigationLink.html#target:laika.ast.Target", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/NavigationLink.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/NavigationLink.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/NavigationLink.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/NavigationLink.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/NavigationLink.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/NavigationLink.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/NavigationLink.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/NavigationLink.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/NavigationLink.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/NavigationLink.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/NavigationLink.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/NavigationLink.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/NavigationLink.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/NavigationLink.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/NavigationLink.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/NavigationLink.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/NavigationLink.html", "kind" : "case class"}, {"name" : "laika.ast.NavigationList", "shortDescription" : "The root node of a navigation structure", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): NavigationList", "member" : "laika.ast.NavigationList.withOptions", "link" : "laika\/ast\/NavigationList.html#withOptions(options:laika.ast.Options):laika.ast.NavigationList", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): NavigationList", "member" : "laika.ast.NavigationList.rewriteChildren", "link" : "laika\/ast\/NavigationList.html#rewriteChildren(rules:laika.ast.RewriteRules):laika.ast.NavigationList", "kind" : "def"}, {"label" : "forFormat", "tail" : "(format: String): NavigationList", "member" : "laika.ast.NavigationList.forFormat", "link" : "laika\/ast\/NavigationList.html#forFormat(format:String):laika.ast.NavigationList", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.NavigationList.Self", "link" : "laika\/ast\/NavigationList.html#Self=laika.ast.NavigationList", "kind" : "type"}, {"member" : "laika.ast.NavigationList#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.NavigationList.options", "link" : "laika\/ast\/NavigationList.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[NavigationItem]", "member" : "laika.ast.NavigationList.content", "link" : "laika\/ast\/NavigationList.html#content:Seq[laika.ast.NavigationItem]", "kind" : "val"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/NavigationList.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/NavigationList.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/NavigationList.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/NavigationList.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/NavigationList.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/NavigationList.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/NavigationList.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/NavigationList.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/NavigationList.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/NavigationList.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/NavigationList.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/NavigationList.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/NavigationList.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/NavigationList.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/NavigationList.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/NavigationList.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/NavigationList.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/NavigationList.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/NavigationList.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/NavigationList.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/NavigationList.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/NavigationList.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/NavigationList.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/NavigationList.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/NavigationList.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/NavigationList.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/NavigationList.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/NavigationList.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/NavigationList.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/NavigationList.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/NavigationList.html", "kind" : "case class"}, {"name" : "laika.ast.NoOpt", "shortDescription" : "Empty Options implementation.", "object" : "laika\/ast\/NoOpt$.html", "members_object" : [{"label" : "+", "tail" : "(other: Options): Options", "member" : "laika.ast.NoOpt.+", "link" : "laika\/ast\/NoOpt$.html#+(other:laika.ast.Options):laika.ast.Options", "kind" : "def"}, {"label" : "styles", "tail" : ": Set[String]", "member" : "laika.ast.NoOpt.styles", "link" : "laika\/ast\/NoOpt$.html#styles:Set[String]", "kind" : "val"}, {"label" : "id", "tail" : ": Option[String]", "member" : "laika.ast.NoOpt.id", "link" : "laika\/ast\/NoOpt$.html#id:Option[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/NoOpt$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/NoOpt$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/NoOpt$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/NoOpt$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/NoOpt$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/NoOpt$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/NoOpt$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/NoOpt$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/NoOpt$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/NoOpt$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/NoOpt$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/NoOpt$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/NoOpt$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/NoOpt$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/NoOpt$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/NoOpt$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/NoOpt$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.ast.NumericLabel", "shortDescription" : "Explicit numeric label.", "members_case class" : [{"member" : "laika.ast.NumericLabel#<init>", "error" : "unsupported entity"}, {"label" : "number", "tail" : ": Int", "member" : "laika.ast.NumericLabel.number", "link" : "laika\/ast\/NumericLabel.html#number:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/NumericLabel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/NumericLabel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/NumericLabel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/NumericLabel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/NumericLabel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/NumericLabel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/NumericLabel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/NumericLabel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/NumericLabel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/NumericLabel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/NumericLabel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/NumericLabel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/NumericLabel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/NumericLabel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/NumericLabel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/NumericLabel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/NumericLabel.html", "kind" : "case class"}, {"name" : "laika.ast.Options", "shortDescription" : "Options for customizable elements.", "object" : "laika\/ast\/Options$.html", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Options.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Options.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Options.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Options.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Options.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Options.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Options.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Options.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Options.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Options.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Options.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Options.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Options.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Options.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Options.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Options.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Options.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Options.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Options.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "+", "tail" : "(other: Options): Options", "member" : "laika.ast.Options.+", "link" : "laika\/ast\/Options.html#+(other:laika.ast.Options):laika.ast.Options", "kind" : "abstract def"}, {"label" : "styles", "tail" : "(): Set[String]", "member" : "laika.ast.Options.styles", "link" : "laika\/ast\/Options.html#styles:Set[String]", "kind" : "abstract def"}, {"label" : "id", "tail" : "(): Option[String]", "member" : "laika.ast.Options.id", "link" : "laika\/ast\/Options.html#id:Option[String]", "kind" : "abstract def"}], "members_object" : [{"label" : "apply", "tail" : "(id: Option[String], styles: Set[String]): Options", "member" : "laika.ast.Options.apply", "link" : "laika\/ast\/Options$.html#apply(id:Option[String],styles:Set[String]):laika.ast.Options", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Options$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Options$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Options$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Options$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Options$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Options$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Options$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Options$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Options$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Options$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Options$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Options$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Options$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Options$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Options$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Options$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Options$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Options$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Options$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/ast\/Options.html", "kind" : "class"}, {"name" : "laika.ast.PageBreak", "shortDescription" : "An explicit hard page break.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): PageBreak", "member" : "laika.ast.PageBreak.withOptions", "link" : "laika\/ast\/PageBreak.html#withOptions(options:laika.ast.Options):laika.ast.PageBreak", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.PageBreak.Self", "link" : "laika\/ast\/PageBreak.html#Self=laika.ast.PageBreak", "kind" : "type"}, {"member" : "laika.ast.PageBreak#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.PageBreak.options", "link" : "laika\/ast\/PageBreak.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/PageBreak.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/PageBreak.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/PageBreak.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/PageBreak.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/PageBreak.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/PageBreak.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/PageBreak.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/PageBreak.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/PageBreak.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/PageBreak.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/PageBreak.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/PageBreak.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/PageBreak.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/PageBreak.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/PageBreak.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/PageBreak.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/PageBreak.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/PageBreak.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/PageBreak.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/PageBreak.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/PageBreak.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/PageBreak.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/PageBreak.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/PageBreak.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/PageBreak.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/PageBreak.html", "kind" : "case class"}, {"name" : "laika.ast.Paragraph", "shortDescription" : "A paragraph consisting of span elements.", "object" : "laika\/ast\/Paragraph$.html", "members_object" : [{"label" : "createSpanContainer", "tail" : "(spans: Seq[Span]): Paragraph", "member" : "laika.ast.Paragraph.createSpanContainer", "link" : "laika\/ast\/Paragraph$.html#createSpanContainer(spans:Seq[laika.ast.Span]):laika.ast.Paragraph", "kind" : "def"}, {"label" : "ContainerType", "tail" : "", "member" : "laika.ast.Paragraph.ContainerType", "link" : "laika\/ast\/Paragraph$.html#ContainerType=laika.ast.Paragraph", "kind" : "type"}, {"label" : "apply", "tail" : "(span: Span, spans: Span*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/Paragraph$.html#apply(span:laika.ast.Span,spans:laika.ast.Span*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/Paragraph$.html#apply(text:String,texts:String*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.SpanContainerCompanion.empty", "link" : "laika\/ast\/Paragraph$.html#empty:SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Paragraph$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Paragraph$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Paragraph$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Paragraph$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Paragraph$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Paragraph$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Paragraph$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Paragraph$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Paragraph$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Paragraph$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Paragraph$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Paragraph$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Paragraph$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Paragraph$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Paragraph$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Paragraph$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Paragraph$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Paragraph$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Paragraph$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Paragraph", "member" : "laika.ast.Paragraph.withOptions", "link" : "laika\/ast\/Paragraph.html#withOptions(options:laika.ast.Options):laika.ast.Paragraph", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Span]): Paragraph", "member" : "laika.ast.Paragraph.withContent", "link" : "laika\/ast\/Paragraph.html#withContent(newContent:Seq[laika.ast.Span]):laika.ast.Paragraph", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Paragraph.Self", "link" : "laika\/ast\/Paragraph.html#Self=laika.ast.Paragraph", "kind" : "type"}, {"member" : "laika.ast.Paragraph#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Paragraph.options", "link" : "laika\/ast\/Paragraph.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Span]", "member" : "laika.ast.Paragraph.content", "link" : "laika\/ast\/Paragraph.html#content:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "extractText", "tail" : "(): String", "member" : "laika.ast.SpanContainer.extractText", "link" : "laika\/ast\/Paragraph.html#extractText:String", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.SpanContainer.rewriteChildren", "link" : "laika\/ast\/Paragraph.html#rewriteChildren(rules:laika.ast.RewriteRules):SpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/Paragraph.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/Paragraph.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/Paragraph.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/Paragraph.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/Paragraph.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Paragraph.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Paragraph.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Paragraph.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Paragraph.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Paragraph.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Paragraph.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Paragraph.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Paragraph.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Paragraph.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Paragraph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Paragraph.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Paragraph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Paragraph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Paragraph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Paragraph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Paragraph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Paragraph.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Paragraph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Paragraph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Paragraph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Paragraph.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Paragraph.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Paragraph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Paragraph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Paragraph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Paragraph.html", "kind" : "case class"}, {"name" : "laika.ast.ParentSelector", "shortDescription" : "Represents a parent selector and indicates whether it is an immediate parent or an ancestor anywhere in the hierarchy.", "members_case class" : [{"member" : "laika.ast.ParentSelector#<init>", "error" : "unsupported entity"}, {"label" : "immediate", "tail" : ": Boolean", "member" : "laika.ast.ParentSelector.immediate", "link" : "laika\/ast\/ParentSelector.html#immediate:Boolean", "kind" : "val"}, {"label" : "selector", "tail" : ": StyleSelector", "member" : "laika.ast.ParentSelector.selector", "link" : "laika\/ast\/ParentSelector.html#selector:laika.ast.StyleSelector", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/ParentSelector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/ParentSelector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/ParentSelector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/ParentSelector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/ParentSelector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/ParentSelector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/ParentSelector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ParentSelector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ParentSelector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ParentSelector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/ParentSelector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/ParentSelector.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/ParentSelector.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/ParentSelector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/ParentSelector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/ParentSelector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/ParentSelector.html", "kind" : "case class"}, {"name" : "laika.ast.ParsedLink", "shortDescription" : "", "object" : "laika\/ast\/ParsedLink$.html", "members_object" : [{"label" : "create", "tail" : "(linkText: Seq[Span], url: String, source: SourceFragment, title: Option[String]): Span", "member" : "laika.ast.ParsedLink.create", "link" : "laika\/ast\/ParsedLink$.html#create(linkText:Seq[laika.ast.Span],url:String,source:laika.parse.SourceFragment,title:Option[String]):laika.ast.Span", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/ParsedLink$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/ParsedLink$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/ParsedLink$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/ParsedLink$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/ParsedLink$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/ParsedLink$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/ParsedLink$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ParsedLink$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ParsedLink$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ParsedLink$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/ParsedLink$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/ParsedLink$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/ParsedLink$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/ParsedLink$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/ParsedLink$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/ParsedLink$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/ParsedLink$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/ParsedLink$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/ParsedLink$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.ast.ParsedLiteralBlock", "shortDescription" : "A literal block with parsed text content.", "object" : "laika\/ast\/ParsedLiteralBlock$.html", "members_object" : [{"label" : "createSpanContainer", "tail" : "(spans: Seq[Span]): ParsedLiteralBlock", "member" : "laika.ast.ParsedLiteralBlock.createSpanContainer", "link" : "laika\/ast\/ParsedLiteralBlock$.html#createSpanContainer(spans:Seq[laika.ast.Span]):laika.ast.ParsedLiteralBlock", "kind" : "def"}, {"label" : "ContainerType", "tail" : "", "member" : "laika.ast.ParsedLiteralBlock.ContainerType", "link" : "laika\/ast\/ParsedLiteralBlock$.html#ContainerType=laika.ast.ParsedLiteralBlock", "kind" : "type"}, {"label" : "apply", "tail" : "(span: Span, spans: Span*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/ParsedLiteralBlock$.html#apply(span:laika.ast.Span,spans:laika.ast.Span*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/ParsedLiteralBlock$.html#apply(text:String,texts:String*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.SpanContainerCompanion.empty", "link" : "laika\/ast\/ParsedLiteralBlock$.html#empty:SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/ParsedLiteralBlock$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/ParsedLiteralBlock$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/ParsedLiteralBlock$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/ParsedLiteralBlock$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/ParsedLiteralBlock$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/ParsedLiteralBlock$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/ParsedLiteralBlock$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ParsedLiteralBlock$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ParsedLiteralBlock$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ParsedLiteralBlock$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/ParsedLiteralBlock$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/ParsedLiteralBlock$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/ParsedLiteralBlock$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/ParsedLiteralBlock$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/ParsedLiteralBlock$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/ParsedLiteralBlock$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/ParsedLiteralBlock$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/ParsedLiteralBlock$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/ParsedLiteralBlock$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): ParsedLiteralBlock", "member" : "laika.ast.ParsedLiteralBlock.withOptions", "link" : "laika\/ast\/ParsedLiteralBlock.html#withOptions(options:laika.ast.Options):laika.ast.ParsedLiteralBlock", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Span]): ParsedLiteralBlock", "member" : "laika.ast.ParsedLiteralBlock.withContent", "link" : "laika\/ast\/ParsedLiteralBlock.html#withContent(newContent:Seq[laika.ast.Span]):laika.ast.ParsedLiteralBlock", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.ParsedLiteralBlock.Self", "link" : "laika\/ast\/ParsedLiteralBlock.html#Self=laika.ast.ParsedLiteralBlock", "kind" : "type"}, {"member" : "laika.ast.ParsedLiteralBlock#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.ParsedLiteralBlock.options", "link" : "laika\/ast\/ParsedLiteralBlock.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Span]", "member" : "laika.ast.ParsedLiteralBlock.content", "link" : "laika\/ast\/ParsedLiteralBlock.html#content:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "extractText", "tail" : "(): String", "member" : "laika.ast.SpanContainer.extractText", "link" : "laika\/ast\/ParsedLiteralBlock.html#extractText:String", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.SpanContainer.rewriteChildren", "link" : "laika\/ast\/ParsedLiteralBlock.html#rewriteChildren(rules:laika.ast.RewriteRules):SpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/ParsedLiteralBlock.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/ParsedLiteralBlock.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/ParsedLiteralBlock.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/ParsedLiteralBlock.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/ParsedLiteralBlock.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/ParsedLiteralBlock.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/ParsedLiteralBlock.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/ParsedLiteralBlock.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/ParsedLiteralBlock.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/ParsedLiteralBlock.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/ParsedLiteralBlock.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/ParsedLiteralBlock.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/ParsedLiteralBlock.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/ParsedLiteralBlock.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/ParsedLiteralBlock.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/ParsedLiteralBlock.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/ParsedLiteralBlock.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/ParsedLiteralBlock.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/ParsedLiteralBlock.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/ParsedLiteralBlock.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/ParsedLiteralBlock.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ParsedLiteralBlock.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ParsedLiteralBlock.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ParsedLiteralBlock.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/ParsedLiteralBlock.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/ParsedLiteralBlock.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/ParsedLiteralBlock.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/ParsedLiteralBlock.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/ParsedLiteralBlock.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/ParsedLiteralBlock.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/ParsedLiteralBlock.html", "kind" : "case class"}, {"name" : "laika.ast.Path", "members_trait" : [{"label" : "relative", "tail" : "(): RelativePath", "member" : "laika.ast.Path.relative", "link" : "laika\/ast\/Path.html#relative:laika.ast.RelativePath", "kind" : "def"}, {"label" : "\/", "tail" : "(name: String): Path", "member" : "laika.ast.Path.\/", "link" : "laika\/ast\/Path.html#\/(name:String):laika.ast.Path", "kind" : "def"}, {"label" : "withoutFragment", "tail" : "(): Path", "member" : "laika.ast.Path.withoutFragment", "link" : "laika\/ast\/Path.html#withoutFragment:laika.ast.Path", "kind" : "def"}, {"label" : "withoutSuffix", "tail" : "(): Path", "member" : "laika.ast.Path.withoutSuffix", "link" : "laika\/ast\/Path.html#withoutSuffix:laika.ast.Path", "kind" : "def"}, {"label" : "withFragment", "tail" : "(fragment: String): Path", "member" : "laika.ast.Path.withFragment", "link" : "laika\/ast\/Path.html#withFragment(fragment:String):laika.ast.Path", "kind" : "def"}, {"label" : "withSuffix", "tail" : "(suffix: String): Path", "member" : "laika.ast.Path.withSuffix", "link" : "laika\/ast\/Path.html#withSuffix(suffix:String):laika.ast.Path", "kind" : "def"}, {"label" : "withBasename", "tail" : "(name: String): Path", "member" : "laika.ast.Path.withBasename", "link" : "laika\/ast\/Path.html#withBasename(name:String):laika.ast.Path", "kind" : "def"}, {"label" : "basename", "tail" : "(): String", "member" : "laika.ast.PathBase.basename", "link" : "laika\/ast\/Path.html#basename:String", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/Path.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/Path.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Path.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Path.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Path.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Path.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Path.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Path.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Path.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Path.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Path.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Path.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Path.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Path.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Path.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Path.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Path.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Path.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Path.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Path.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Path.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "isSubPath", "tail" : "(other: Path): Boolean", "member" : "laika.ast.Path.isSubPath", "link" : "laika\/ast\/Path.html#isSubPath(other:laika.ast.Path):Boolean", "kind" : "abstract def"}, {"label" : "relativeTo", "tail" : "(refPath: Path): RelativePath", "member" : "laika.ast.Path.relativeTo", "link" : "laika\/ast\/Path.html#relativeTo(refPath:laika.ast.Path):laika.ast.RelativePath", "kind" : "abstract def"}, {"label" : "\/", "tail" : "(path: RelativePath): Path", "member" : "laika.ast.Path.\/", "link" : "laika\/ast\/Path.html#\/(path:laika.ast.RelativePath):laika.ast.Path", "kind" : "abstract def"}, {"label" : "depth", "tail" : "(): Int", "member" : "laika.ast.Path.depth", "link" : "laika\/ast\/Path.html#depth:Int", "kind" : "abstract def"}, {"label" : "parent", "tail" : "(): Path", "member" : "laika.ast.Path.parent", "link" : "laika\/ast\/Path.html#parent:laika.ast.Path", "kind" : "abstract def"}, {"label" : "fragment", "tail" : "(): Option[String]", "member" : "laika.ast.PathBase.fragment", "link" : "laika\/ast\/Path.html#fragment:Option[String]", "kind" : "abstract def"}, {"label" : "suffix", "tail" : "(): Option[String]", "member" : "laika.ast.PathBase.suffix", "link" : "laika\/ast\/Path.html#suffix:Option[String]", "kind" : "abstract def"}, {"label" : "name", "tail" : "(): String", "member" : "laika.ast.PathBase.name", "link" : "laika\/ast\/Path.html#name:String", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/Path.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/Path.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/Path.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "Represents a path inside a virtual tree of documents.", "object" : "laika\/ast\/Path$.html", "members_object" : [{"label" : "apply", "tail" : "(segments: List[String]): Path", "member" : "laika.ast.Path.apply", "link" : "laika\/ast\/Path$.html#apply(segments:List[String]):laika.ast.Path", "kind" : "def"}, {"label" : "parse", "tail" : "(str: String): Path", "member" : "laika.ast.Path.parse", "link" : "laika\/ast\/Path$.html#parse(str:String):laika.ast.Path", "kind" : "def"}, {"label" : "Root", "tail" : "", "member" : "laika.ast.Path.Root", "link" : "laika\/ast\/Path$.html#Root", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Path$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Path$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Path$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Path$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Path$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Path$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Path$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Path$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Path$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Path$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Path$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Path$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Path$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Path$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Path$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Path$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Path$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Path$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Path$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/ast\/Path.html", "kind" : "trait"}, {"name" : "laika.ast.PathBase", "members_trait" : [{"label" : "basename", "tail" : "(): String", "member" : "laika.ast.PathBase.basename", "link" : "laika\/ast\/PathBase.html#basename:String", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/PathBase.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/PathBase.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/PathBase.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/PathBase.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/PathBase.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/PathBase.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/PathBase.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/PathBase.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/PathBase.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/PathBase.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/PathBase.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/PathBase.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/PathBase.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/PathBase.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/PathBase.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/PathBase.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/PathBase.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/PathBase.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/PathBase.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/PathBase.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/PathBase.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "fragment", "tail" : "(): Option[String]", "member" : "laika.ast.PathBase.fragment", "link" : "laika\/ast\/PathBase.html#fragment:Option[String]", "kind" : "abstract def"}, {"label" : "suffix", "tail" : "(): Option[String]", "member" : "laika.ast.PathBase.suffix", "link" : "laika\/ast\/PathBase.html#suffix:Option[String]", "kind" : "abstract def"}, {"label" : "name", "tail" : "(): String", "member" : "laika.ast.PathBase.name", "link" : "laika\/ast\/PathBase.html#name:String", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/PathBase.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/PathBase.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/PathBase.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "The abstract base for absolute and relative paths.", "object" : "laika\/ast\/PathBase$.html", "members_object" : [{"label" : "parse", "tail" : "(path: String): PathBase", "member" : "laika.ast.PathBase.parse", "link" : "laika\/ast\/PathBase$.html#parse(path:String):laika.ast.PathBase", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/PathBase$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/PathBase$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/PathBase$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/PathBase$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/PathBase$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/PathBase$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/PathBase$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/PathBase$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/PathBase$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/PathBase$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/PathBase$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/PathBase$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/PathBase$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/PathBase$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/PathBase$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/PathBase$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/PathBase$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/PathBase$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/PathBase$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/ast\/PathBase.html", "kind" : "trait"}, {"name" : "laika.ast.PathReference", "members_trait" : [{"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/PathReference.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/PathReference.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/PathReference.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/PathReference.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/PathReference.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/PathReference.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/PathReference.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/PathReference.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/PathReference.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/PathReference.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/PathReference.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/PathReference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/PathReference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/PathReference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/PathReference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/PathReference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/PathReference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/PathReference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/PathReference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/PathReference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/PathReference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/PathReference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/PathReference.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/PathReference.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/PathReference.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/PathReference.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/PathReference.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/PathReference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/PathReference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/PathReference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "resolve", "tail" : "(target: Target): Link", "member" : "laika.ast.PathReference.resolve", "link" : "laika\/ast\/PathReference.html#resolve(target:laika.ast.Target):laika.ast.Link", "kind" : "abstract def"}, {"label" : "path", "tail" : "(): RelativePath", "member" : "laika.ast.PathReference.path", "link" : "laika\/ast\/PathReference.html#path:laika.ast.RelativePath", "kind" : "abstract def"}, {"member" : "laika.ast.Reference.Self", "error" : "unsupported entity"}, {"label" : "unresolvedMessage", "tail" : "(): String", "member" : "laika.ast.Unresolved.unresolvedMessage", "link" : "laika\/ast\/PathReference.html#unresolvedMessage:String", "kind" : "abstract def"}, {"label" : "source", "tail" : "(): SourceFragment", "member" : "laika.ast.Unresolved.source", "link" : "laika\/ast\/PathReference.html#source:laika.parse.SourceFragment", "kind" : "abstract def"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/PathReference.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/PathReference.html#options:laika.ast.Options", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/PathReference.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/PathReference.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/PathReference.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "A reference to content within the virtual input tree, the path pointing to the source path.", "trait" : "laika\/ast\/PathReference.html", "kind" : "trait"}, {"name" : "laika.ast.QuotedBlock", "shortDescription" : "A quoted block consisting of a list of blocks that may contain other nested quoted blocks and an attribution which may be empty.", "object" : "laika\/ast\/QuotedBlock$.html", "members_object" : [{"label" : "createBlockContainer", "tail" : "(blocks: Seq[Block]): QuotedBlock", "member" : "laika.ast.QuotedBlock.createBlockContainer", "link" : "laika\/ast\/QuotedBlock$.html#createBlockContainer(blocks:Seq[laika.ast.Block]):laika.ast.QuotedBlock", "kind" : "def"}, {"label" : "ContainerType", "tail" : "", "member" : "laika.ast.QuotedBlock.ContainerType", "link" : "laika\/ast\/QuotedBlock$.html#ContainerType=laika.ast.QuotedBlock", "kind" : "type"}, {"label" : "apply", "tail" : "(block: Block, blocks: Block*): ContainerType", "member" : "laika.ast.BlockContainerCompanion.apply", "link" : "laika\/ast\/QuotedBlock$.html#apply(block:laika.ast.Block,blocks:laika.ast.Block*):BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "createSpanContainer", "tail" : "(spans: Seq[Span]): ContainerType", "member" : "laika.ast.BlockContainerCompanion.createSpanContainer", "link" : "laika\/ast\/QuotedBlock$.html#createSpanContainer(spans:Seq[laika.ast.Span]):BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.BlockContainerCompanion.empty", "link" : "laika\/ast\/QuotedBlock$.html#empty:BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(span: Span, spans: Span*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/QuotedBlock$.html#apply(span:laika.ast.Span,spans:laika.ast.Span*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/QuotedBlock$.html#apply(text:String,texts:String*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/QuotedBlock$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/QuotedBlock$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/QuotedBlock$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/QuotedBlock$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/QuotedBlock$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/QuotedBlock$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/QuotedBlock$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/QuotedBlock$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/QuotedBlock$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/QuotedBlock$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/QuotedBlock$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/QuotedBlock$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/QuotedBlock$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/QuotedBlock$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/QuotedBlock$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/QuotedBlock$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/QuotedBlock$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/QuotedBlock$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/QuotedBlock$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): QuotedBlock", "member" : "laika.ast.QuotedBlock.withOptions", "link" : "laika\/ast\/QuotedBlock.html#withOptions(options:laika.ast.Options):laika.ast.QuotedBlock", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Block]): QuotedBlock", "member" : "laika.ast.QuotedBlock.withContent", "link" : "laika\/ast\/QuotedBlock.html#withContent(newContent:Seq[laika.ast.Block]):laika.ast.QuotedBlock", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): QuotedBlock", "member" : "laika.ast.QuotedBlock.rewriteChildren", "link" : "laika\/ast\/QuotedBlock.html#rewriteChildren(rules:laika.ast.RewriteRules):laika.ast.QuotedBlock", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.QuotedBlock.Self", "link" : "laika\/ast\/QuotedBlock.html#Self=laika.ast.QuotedBlock", "kind" : "type"}, {"member" : "laika.ast.QuotedBlock#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.QuotedBlock.options", "link" : "laika\/ast\/QuotedBlock.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "attribution", "tail" : ": Seq[Span]", "member" : "laika.ast.QuotedBlock.attribution", "link" : "laika\/ast\/QuotedBlock.html#attribution:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Block]", "member" : "laika.ast.QuotedBlock.content", "link" : "laika\/ast\/QuotedBlock.html#content:Seq[laika.ast.Block]", "kind" : "val"}, {"label" : "rewriteBlocks", "tail" : "(rules: RewriteRule[Block]): Self", "member" : "laika.ast.BlockContainer.rewriteBlocks", "link" : "laika\/ast\/QuotedBlock.html#rewriteBlocks(rules:laika.ast.RewriteRule[laika.ast.Block]):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/QuotedBlock.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/QuotedBlock.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/QuotedBlock.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/QuotedBlock.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/QuotedBlock.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/QuotedBlock.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/QuotedBlock.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/QuotedBlock.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/QuotedBlock.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/QuotedBlock.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/QuotedBlock.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/QuotedBlock.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/QuotedBlock.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/QuotedBlock.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/QuotedBlock.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/QuotedBlock.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/QuotedBlock.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/QuotedBlock.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/QuotedBlock.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/QuotedBlock.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/QuotedBlock.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/QuotedBlock.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/QuotedBlock.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/QuotedBlock.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/QuotedBlock.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/QuotedBlock.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/QuotedBlock.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/QuotedBlock.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/QuotedBlock.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/QuotedBlock.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/QuotedBlock.html", "kind" : "case class"}, {"name" : "laika.ast.RawContent", "shortDescription" : "Raw content that is usually specific to the specified output formats.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): RawContent", "member" : "laika.ast.RawContent.withOptions", "link" : "laika\/ast\/RawContent.html#withOptions(options:laika.ast.Options):laika.ast.RawContent", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.RawContent.Self", "link" : "laika\/ast\/RawContent.html#Self=laika.ast.RawContent", "kind" : "type"}, {"member" : "laika.ast.RawContent#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.RawContent.options", "link" : "laika\/ast\/RawContent.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": String", "member" : "laika.ast.RawContent.content", "link" : "laika\/ast\/RawContent.html#content:String", "kind" : "val"}, {"label" : "formats", "tail" : ": NonEmptySet[String]", "member" : "laika.ast.RawContent.formats", "link" : "laika\/ast\/RawContent.html#formats:cats.data.NonEmptySet[String]", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/RawContent.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/RawContent.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/RawContent.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/RawContent.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/RawContent.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/RawContent.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/RawContent.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/RawContent.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/RawContent.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/RawContent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/RawContent.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/RawContent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/RawContent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/RawContent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/RawContent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/RawContent.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RawContent.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RawContent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RawContent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/RawContent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/RawContent.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/RawContent.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/RawContent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/RawContent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/RawContent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/RawContent.html", "kind" : "case class"}, {"name" : "laika.ast.RawLink", "shortDescription" : "A raw link element without associated content (text or image).", "object" : "laika\/ast\/RawLink$.html", "members_object" : [{"label" : "external", "tail" : "(url: String): RawLink", "member" : "laika.ast.RawLink.external", "link" : "laika\/ast\/RawLink$.html#external(url:String):laika.ast.RawLink", "kind" : "def"}, {"label" : "internal", "tail" : "(path: PathBase): RawLink", "member" : "laika.ast.RawLink.internal", "link" : "laika\/ast\/RawLink$.html#internal(path:laika.ast.PathBase):laika.ast.RawLink", "kind" : "def"}, {"label" : "internal", "tail" : "(path: String): RawLink", "member" : "laika.ast.RawLink.internal", "link" : "laika\/ast\/RawLink$.html#internal(path:String):laika.ast.RawLink", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/RawLink$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/RawLink$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/RawLink$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/RawLink$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/RawLink$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/RawLink$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/RawLink$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RawLink$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RawLink$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RawLink$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/RawLink$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/RawLink$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/RawLink$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/RawLink$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/RawLink$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/RawLink$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/RawLink$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/RawLink$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/RawLink$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): RawLink", "member" : "laika.ast.RawLink.withOptions", "link" : "laika\/ast\/RawLink.html#withOptions(options:laika.ast.Options):laika.ast.RawLink", "kind" : "def"}, {"label" : "withTarget", "tail" : "(newTarget: Target): RawLink", "member" : "laika.ast.RawLink.withTarget", "link" : "laika\/ast\/RawLink.html#withTarget(newTarget:laika.ast.Target):laika.ast.RawLink", "kind" : "def"}, {"label" : "supportsExternalTargets", "tail" : ": Boolean", "member" : "laika.ast.RawLink.supportsExternalTargets", "link" : "laika\/ast\/RawLink.html#supportsExternalTargets:Boolean", "kind" : "val"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.RawLink.Self", "link" : "laika\/ast\/RawLink.html#Self=laika.ast.RawLink", "kind" : "type"}, {"member" : "laika.ast.RawLink#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.RawLink.options", "link" : "laika\/ast\/RawLink.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "target", "tail" : ": Target", "member" : "laika.ast.RawLink.target", "link" : "laika\/ast\/RawLink.html#target:laika.ast.Target", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/RawLink.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/RawLink.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/RawLink.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/RawLink.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/RawLink.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/RawLink.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/RawLink.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/RawLink.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/RawLink.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/RawLink.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/RawLink.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/RawLink.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/RawLink.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/RawLink.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/RawLink.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/RawLink.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RawLink.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RawLink.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RawLink.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/RawLink.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/RawLink.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/RawLink.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/RawLink.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/RawLink.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/RawLink.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/RawLink.html", "kind" : "case class"}, {"name" : "laika.ast.Reference", "members_trait" : [{"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Reference.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Reference.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Reference.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Reference.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Reference.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Reference.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Reference.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Reference.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Reference.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/Reference.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/Reference.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Reference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Reference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Reference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Reference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Reference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Reference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Reference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Reference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Reference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Reference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Reference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Reference.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Reference.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Reference.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Reference.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Reference.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Reference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Reference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Reference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "laika.ast.Reference.Self", "error" : "unsupported entity"}, {"label" : "unresolvedMessage", "tail" : "(): String", "member" : "laika.ast.Unresolved.unresolvedMessage", "link" : "laika\/ast\/Reference.html#unresolvedMessage:String", "kind" : "abstract def"}, {"label" : "source", "tail" : "(): SourceFragment", "member" : "laika.ast.Unresolved.source", "link" : "laika\/ast\/Reference.html#source:laika.parse.SourceFragment", "kind" : "abstract def"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/Reference.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/Reference.html#options:laika.ast.Options", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/Reference.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/Reference.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/Reference.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "The base type for all reference elements.", "trait" : "laika\/ast\/Reference.html", "kind" : "trait"}, {"name" : "laika.ast.RelativeInternalTarget", "shortDescription" : "Represents a target defined by a relative path;the absolute path of such a target needs to be resolved later in the context of the containing document and its path.", "members_case class" : [{"label" : "render", "tail" : "(internalTargetsAbsolute: Boolean): String", "member" : "laika.ast.RelativeInternalTarget.render", "link" : "laika\/ast\/RelativeInternalTarget.html#render(internalTargetsAbsolute:Boolean):String", "kind" : "def"}, {"label" : "relativeTo", "tail" : "(refPath: Path): ResolvedInternalTarget", "member" : "laika.ast.RelativeInternalTarget.relativeTo", "link" : "laika\/ast\/RelativeInternalTarget.html#relativeTo(refPath:laika.ast.Path):laika.ast.ResolvedInternalTarget", "kind" : "def"}, {"member" : "laika.ast.RelativeInternalTarget#<init>", "error" : "unsupported entity"}, {"label" : "path", "tail" : ": RelativePath", "member" : "laika.ast.RelativeInternalTarget.path", "link" : "laika\/ast\/RelativeInternalTarget.html#path:laika.ast.RelativePath", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/RelativeInternalTarget.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/RelativeInternalTarget.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/RelativeInternalTarget.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/RelativeInternalTarget.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/RelativeInternalTarget.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/RelativeInternalTarget.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/RelativeInternalTarget.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RelativeInternalTarget.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RelativeInternalTarget.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RelativeInternalTarget.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/RelativeInternalTarget.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/RelativeInternalTarget.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/RelativeInternalTarget.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/RelativeInternalTarget.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/RelativeInternalTarget.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/RelativeInternalTarget.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/RelativeInternalTarget.html", "kind" : "case class"}, {"name" : "laika.ast.RelativePath", "members_trait" : [{"label" : "withoutFragment", "tail" : "(): RelativePath", "member" : "laika.ast.RelativePath.withoutFragment", "link" : "laika\/ast\/RelativePath.html#withoutFragment:laika.ast.RelativePath", "kind" : "def"}, {"label" : "withoutSuffix", "tail" : "(): RelativePath", "member" : "laika.ast.RelativePath.withoutSuffix", "link" : "laika\/ast\/RelativePath.html#withoutSuffix:laika.ast.RelativePath", "kind" : "def"}, {"label" : "withFragment", "tail" : "(fragment: String): RelativePath", "member" : "laika.ast.RelativePath.withFragment", "link" : "laika\/ast\/RelativePath.html#withFragment(fragment:String):laika.ast.RelativePath", "kind" : "def"}, {"label" : "withSuffix", "tail" : "(newSuffix: String): RelativePath", "member" : "laika.ast.RelativePath.withSuffix", "link" : "laika\/ast\/RelativePath.html#withSuffix(newSuffix:String):laika.ast.RelativePath", "kind" : "def"}, {"label" : "withBasename", "tail" : "(name: String): RelativePath", "member" : "laika.ast.RelativePath.withBasename", "link" : "laika\/ast\/RelativePath.html#withBasename(name:String):laika.ast.RelativePath", "kind" : "def"}, {"label" : "\/", "tail" : "(name: String): RelativePath", "member" : "laika.ast.RelativePath.\/", "link" : "laika\/ast\/RelativePath.html#\/(name:String):laika.ast.RelativePath", "kind" : "def"}, {"label" : "basename", "tail" : "(): String", "member" : "laika.ast.PathBase.basename", "link" : "laika\/ast\/RelativePath.html#basename:String", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/RelativePath.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/RelativePath.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/RelativePath.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/RelativePath.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/RelativePath.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/RelativePath.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/RelativePath.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/RelativePath.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/RelativePath.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RelativePath.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RelativePath.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RelativePath.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/RelativePath.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/RelativePath.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/RelativePath.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/RelativePath.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/RelativePath.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/RelativePath.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/RelativePath.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/RelativePath.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/RelativePath.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "\/", "tail" : "(path: RelativePath): RelativePath", "member" : "laika.ast.RelativePath.\/", "link" : "laika\/ast\/RelativePath.html#\/(path:laika.ast.RelativePath):laika.ast.RelativePath", "kind" : "abstract def"}, {"label" : "parentLevels", "tail" : "(): Int", "member" : "laika.ast.RelativePath.parentLevels", "link" : "laika\/ast\/RelativePath.html#parentLevels:Int", "kind" : "abstract def"}, {"label" : "name", "tail" : "(): String", "member" : "laika.ast.RelativePath.name", "link" : "laika\/ast\/RelativePath.html#name:String", "kind" : "abstract def"}, {"label" : "parent", "tail" : "(): RelativePath", "member" : "laika.ast.RelativePath.parent", "link" : "laika\/ast\/RelativePath.html#parent:laika.ast.RelativePath", "kind" : "abstract def"}, {"label" : "fragment", "tail" : "(): Option[String]", "member" : "laika.ast.PathBase.fragment", "link" : "laika\/ast\/RelativePath.html#fragment:Option[String]", "kind" : "abstract def"}, {"label" : "suffix", "tail" : "(): Option[String]", "member" : "laika.ast.PathBase.suffix", "link" : "laika\/ast\/RelativePath.html#suffix:Option[String]", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/RelativePath.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/RelativePath.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/RelativePath.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "", "object" : "laika\/ast\/RelativePath$.html", "members_object" : [{"label" : "parse", "tail" : "(str: String): RelativePath", "member" : "laika.ast.RelativePath.parse", "link" : "laika\/ast\/RelativePath$.html#parse(str:String):laika.ast.RelativePath", "kind" : "def"}, {"label" : "Parent", "tail" : "", "member" : "laika.ast.RelativePath.Parent", "link" : "laika\/ast\/RelativePath$.html#ParentextendsRelativePathwithProductwithSerializable", "kind" : "case class"}, {"label" : "CurrentDocument", "tail" : "", "member" : "laika.ast.RelativePath.CurrentDocument", "link" : "laika\/ast\/RelativePath$.html#CurrentDocument", "kind" : "object"}, {"label" : "CurrentDocument", "tail" : "", "member" : "laika.ast.RelativePath.CurrentDocument", "link" : "laika\/ast\/RelativePath$.html#CurrentDocumentextendsRelativePathwithProductwithSerializable", "kind" : "case class"}, {"label" : "CurrentTree", "tail" : "", "member" : "laika.ast.RelativePath.CurrentTree", "link" : "laika\/ast\/RelativePath$.html#CurrentTree", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/RelativePath$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/RelativePath$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/RelativePath$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/RelativePath$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/RelativePath$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/RelativePath$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/RelativePath$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RelativePath$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RelativePath$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RelativePath$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/RelativePath$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/RelativePath$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/RelativePath$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/RelativePath$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/RelativePath$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/RelativePath$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/RelativePath$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/RelativePath$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/RelativePath$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/ast\/RelativePath.html", "kind" : "trait"}, {"name" : "laika.ast.Remove", "shortDescription" : "Indicates that the element a rewrite rule had been applied to should be removed from the document AST.", "object" : "laika\/ast\/Remove$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Remove$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Remove$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Remove$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Remove$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Remove$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Remove$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Remove$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Remove$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Remove$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Remove$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Remove$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Remove$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Remove$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Remove$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Remove$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Remove$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Remove$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.ast.Replace", "shortDescription" : "Indicates that the element a rewrite rule had been applied to should be replaced with this new value.", "members_case class" : [{"member" : "laika.ast.Replace#<init>", "error" : "unsupported entity"}, {"label" : "newValue", "tail" : ": T", "member" : "laika.ast.Replace.newValue", "link" : "laika\/ast\/Replace.html#newValue:T", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Replace.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Replace.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Replace.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Replace.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Replace.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Replace.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Replace.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Replace.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Replace.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Replace.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Replace.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Replace.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Replace.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Replace.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Replace.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Replace.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Replace.html", "kind" : "case class"}, {"name" : "laika.ast.ResolvedInternalTarget", "shortDescription" : "Represents a resolved internal target where both the absolute and relative path are known,the latter relative to the document that referred to the target.", "members_case class" : [{"label" : "render", "tail" : "(internalTargetsAbsolute: Boolean): String", "member" : "laika.ast.ResolvedInternalTarget.render", "link" : "laika\/ast\/ResolvedInternalTarget.html#render(internalTargetsAbsolute:Boolean):String", "kind" : "def"}, {"label" : "relativeTo", "tail" : "(refPath: Path): ResolvedInternalTarget", "member" : "laika.ast.ResolvedInternalTarget.relativeTo", "link" : "laika\/ast\/ResolvedInternalTarget.html#relativeTo(refPath:laika.ast.Path):laika.ast.ResolvedInternalTarget", "kind" : "def"}, {"member" : "laika.ast.ResolvedInternalTarget#<init>", "error" : "unsupported entity"}, {"label" : "internalFormats", "tail" : ": TargetFormats", "member" : "laika.ast.ResolvedInternalTarget.internalFormats", "link" : "laika\/ast\/ResolvedInternalTarget.html#internalFormats:laika.rewrite.nav.TargetFormats", "kind" : "val"}, {"label" : "relativePath", "tail" : ": RelativePath", "member" : "laika.ast.ResolvedInternalTarget.relativePath", "link" : "laika\/ast\/ResolvedInternalTarget.html#relativePath:laika.ast.RelativePath", "kind" : "val"}, {"label" : "absolutePath", "tail" : ": Path", "member" : "laika.ast.ResolvedInternalTarget.absolutePath", "link" : "laika\/ast\/ResolvedInternalTarget.html#absolutePath:laika.ast.Path", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/ResolvedInternalTarget.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/ResolvedInternalTarget.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/ResolvedInternalTarget.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/ResolvedInternalTarget.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/ResolvedInternalTarget.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/ResolvedInternalTarget.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/ResolvedInternalTarget.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ResolvedInternalTarget.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ResolvedInternalTarget.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/ResolvedInternalTarget.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/ResolvedInternalTarget.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/ResolvedInternalTarget.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/ResolvedInternalTarget.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/ResolvedInternalTarget.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/ResolvedInternalTarget.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/ResolvedInternalTarget.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/ResolvedInternalTarget.html", "kind" : "case class"}, {"name" : "laika.ast.Retain", "shortDescription" : "Indicates that the element a rewrite rule had been applied to should be kept in the document AST unchanged.", "object" : "laika\/ast\/Retain$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Retain$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Retain$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Retain$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Retain$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Retain$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Retain$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Retain$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Retain$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Retain$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Retain$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Retain$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Retain$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Retain$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Retain$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Retain$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Retain$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Retain$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.ast.Reverse", "shortDescription" : "", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Reverse", "member" : "laika.ast.Reverse.withOptions", "link" : "laika\/ast\/Reverse.html#withOptions(options:laika.ast.Options):laika.ast.Reverse", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Reverse.Self", "link" : "laika\/ast\/Reverse.html#Self=laika.ast.Reverse", "kind" : "type"}, {"member" : "laika.ast.Reverse#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Reverse.options", "link" : "laika\/ast\/Reverse.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "fallback", "tail" : ": Span", "member" : "laika.ast.Reverse.fallback", "link" : "laika\/ast\/Reverse.html#fallback:laika.ast.Span", "kind" : "val"}, {"label" : "target", "tail" : ": Span", "member" : "laika.ast.Reverse.target", "link" : "laika\/ast\/Reverse.html#target:laika.ast.Span", "kind" : "val"}, {"label" : "length", "tail" : ": Int", "member" : "laika.ast.Reverse.length", "link" : "laika\/ast\/Reverse.html#length:Int", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Reverse.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Reverse.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Reverse.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Reverse.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Reverse.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Reverse.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Reverse.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Reverse.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Reverse.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Reverse.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Reverse.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Reverse.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Reverse.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Reverse.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Reverse.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Reverse.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Reverse.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Reverse.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Reverse.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Reverse.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Reverse.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Reverse.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Reverse.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Reverse.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Reverse.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Reverse.html", "kind" : "case class"}, {"name" : "laika.ast.RewritableContainer", "members_trait" : [{"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/RewritableContainer.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/RewritableContainer.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/RewritableContainer.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/RewritableContainer.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/RewritableContainer.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/RewritableContainer.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/RewritableContainer.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/RewritableContainer.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/RewritableContainer.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/RewritableContainer.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/RewritableContainer.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/RewritableContainer.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/RewritableContainer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/RewritableContainer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/RewritableContainer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/RewritableContainer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/RewritableContainer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/RewritableContainer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/RewritableContainer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RewritableContainer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RewritableContainer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RewritableContainer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/RewritableContainer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/RewritableContainer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/RewritableContainer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/RewritableContainer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/RewritableContainer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/RewritableContainer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/RewritableContainer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/RewritableContainer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/RewritableContainer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.RewritableContainer.rewriteChildren", "link" : "laika\/ast\/RewritableContainer.html#rewriteChildren(rules:laika.ast.RewriteRules):RewritableContainer.this.Self", "kind" : "abstract def"}, {"member" : "laika.ast.RewritableContainer.Self", "error" : "unsupported entity"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/RewritableContainer.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/RewritableContainer.html#options:laika.ast.Options", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/RewritableContainer.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/RewritableContainer.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/RewritableContainer.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "A generic container of child elements which can haverewrite rules applied to them in recursive tree rewriting.", "trait" : "laika\/ast\/RewritableContainer.html", "kind" : "trait"}, {"name" : "laika.ast.RewriteAction", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/RewriteAction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/RewriteAction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/RewriteAction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/RewriteAction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/RewriteAction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/RewriteAction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/RewriteAction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RewriteAction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RewriteAction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RewriteAction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/RewriteAction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/RewriteAction.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/RewriteAction.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/RewriteAction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/RewriteAction.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/RewriteAction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/RewriteAction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/RewriteAction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/RewriteAction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Describes the action to be performed for a particular node in the document AST.", "trait" : "laika\/ast\/RewriteAction.html", "kind" : "trait"}, {"name" : "laika.ast.RewriteRules", "shortDescription" : "A set of rewrite rules describing a set of modifications to be applied to an AST of a document.", "object" : "laika\/ast\/RewriteRules$.html", "members_object" : [{"label" : "defaultsFor", "tail" : "(root: DocumentTreeRoot, slugBuilder: (String) ⇒ String): Seq[(DocumentCursor) ⇒ RewriteRules]", "member" : "laika.ast.RewriteRules.defaultsFor", "link" : "laika\/ast\/RewriteRules$.html#defaultsFor(root:laika.ast.DocumentTreeRoot,slugBuilder:String=>String):Seq[laika.ast.DocumentCursor=>laika.ast.RewriteRules]", "kind" : "def"}, {"label" : "chainFactories", "tail" : "(rules: Seq[(DocumentCursor) ⇒ RewriteRules]): (DocumentCursor) ⇒ RewriteRules", "member" : "laika.ast.RewriteRules.chainFactories", "link" : "laika\/ast\/RewriteRules$.html#chainFactories(rules:Seq[laika.ast.DocumentCursor=>laika.ast.RewriteRules]):laika.ast.DocumentCursor=>laika.ast.RewriteRules", "kind" : "def"}, {"label" : "ChainedRewriteRules", "tail" : "", "member" : "laika.ast.RewriteRules.ChainedRewriteRules", "link" : "laika\/ast\/RewriteRules$.html#ChainedRewriteRules[T]extendsT=>laika.ast.RewriteAction[T]withProductwithSerializable", "kind" : "case class"}, {"label" : "forTemplates", "tail" : "(rule: RewriteRule[TemplateSpan]): RewriteRules", "member" : "laika.ast.RewriteRules.forTemplates", "link" : "laika\/ast\/RewriteRules$.html#forTemplates(rule:laika.ast.RewriteRule[laika.ast.TemplateSpan]):laika.ast.RewriteRules", "kind" : "def"}, {"label" : "forBlocks", "tail" : "(rule: RewriteRule[Block]): RewriteRules", "member" : "laika.ast.RewriteRules.forBlocks", "link" : "laika\/ast\/RewriteRules$.html#forBlocks(rule:laika.ast.RewriteRule[laika.ast.Block]):laika.ast.RewriteRules", "kind" : "def"}, {"label" : "forSpans", "tail" : "(rule: RewriteRule[Span]): RewriteRules", "member" : "laika.ast.RewriteRules.forSpans", "link" : "laika\/ast\/RewriteRules$.html#forSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):laika.ast.RewriteRules", "kind" : "def"}, {"label" : "empty", "tail" : "(): RewriteRules", "member" : "laika.ast.RewriteRules.empty", "link" : "laika\/ast\/RewriteRules$.html#empty:laika.ast.RewriteRules", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/RewriteRules$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/RewriteRules$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/RewriteRules$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/RewriteRules$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/RewriteRules$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/RewriteRules$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/RewriteRules$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RewriteRules$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RewriteRules$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RewriteRules$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/RewriteRules$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/RewriteRules$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/RewriteRules$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/RewriteRules$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/RewriteRules$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/RewriteRules$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/RewriteRules$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/RewriteRules$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/RewriteRules$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "rewriteTemplateSpans", "tail" : "(spans: Seq[TemplateSpan]): Seq[TemplateSpan]", "member" : "laika.ast.RewriteRules.rewriteTemplateSpans", "link" : "laika\/ast\/RewriteRules.html#rewriteTemplateSpans(spans:Seq[laika.ast.TemplateSpan]):Seq[laika.ast.TemplateSpan]", "kind" : "def"}, {"label" : "rewriteBlocks", "tail" : "(blocks: Seq[Block]): Seq[Block]", "member" : "laika.ast.RewriteRules.rewriteBlocks", "link" : "laika\/ast\/RewriteRules.html#rewriteBlocks(blocks:Seq[laika.ast.Block]):Seq[laika.ast.Block]", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(spans: Seq[Span]): Seq[Span]", "member" : "laika.ast.RewriteRules.rewriteSpans", "link" : "laika\/ast\/RewriteRules.html#rewriteSpans(spans:Seq[laika.ast.Span]):Seq[laika.ast.Span]", "kind" : "def"}, {"label" : "rewriteTemplateSpan", "tail" : "(span: TemplateSpan): TemplateSpan", "member" : "laika.ast.RewriteRules.rewriteTemplateSpan", "link" : "laika\/ast\/RewriteRules.html#rewriteTemplateSpan(span:laika.ast.TemplateSpan):laika.ast.TemplateSpan", "kind" : "def"}, {"label" : "rewriteBlock", "tail" : "(block: Block): Block", "member" : "laika.ast.RewriteRules.rewriteBlock", "link" : "laika\/ast\/RewriteRules.html#rewriteBlock(block:laika.ast.Block):laika.ast.Block", "kind" : "def"}, {"label" : "rewriteSpan", "tail" : "(span: Span): Span", "member" : "laika.ast.RewriteRules.rewriteSpan", "link" : "laika\/ast\/RewriteRules.html#rewriteSpan(span:laika.ast.Span):laika.ast.Span", "kind" : "def"}, {"label" : "rewriteElement", "tail" : "(element: Element): Element", "member" : "laika.ast.RewriteRules.rewriteElement", "link" : "laika\/ast\/RewriteRules.html#rewriteElement(element:laika.ast.Element):laika.ast.Element", "kind" : "def"}, {"label" : "++", "tail" : "(other: RewriteRules): RewriteRules", "member" : "laika.ast.RewriteRules.++", "link" : "laika\/ast\/RewriteRules.html#++(other:laika.ast.RewriteRules):laika.ast.RewriteRules", "kind" : "def"}, {"member" : "laika.ast.RewriteRules#<init>", "error" : "unsupported entity"}, {"label" : "templateRules", "tail" : ": Seq[RewriteRule[TemplateSpan]]", "member" : "laika.ast.RewriteRules.templateRules", "link" : "laika\/ast\/RewriteRules.html#templateRules:Seq[laika.ast.RewriteRule[laika.ast.TemplateSpan]]", "kind" : "val"}, {"label" : "blockRules", "tail" : ": Seq[RewriteRule[Block]]", "member" : "laika.ast.RewriteRules.blockRules", "link" : "laika\/ast\/RewriteRules.html#blockRules:Seq[laika.ast.RewriteRule[laika.ast.Block]]", "kind" : "val"}, {"label" : "spanRules", "tail" : ": Seq[RewriteRule[Span]]", "member" : "laika.ast.RewriteRules.spanRules", "link" : "laika\/ast\/RewriteRules.html#spanRules:Seq[laika.ast.RewriteRule[laika.ast.Span]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/RewriteRules.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/RewriteRules.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/RewriteRules.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/RewriteRules.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/RewriteRules.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/RewriteRules.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/RewriteRules.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RewriteRules.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RewriteRules.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RewriteRules.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/RewriteRules.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/RewriteRules.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/RewriteRules.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/RewriteRules.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/RewriteRules.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/RewriteRules.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/RewriteRules.html", "kind" : "case class"}, {"name" : "laika.ast.RomanNumerals", "shortDescription" : "Converts Roman numerals to integers and vice versa.", "object" : "laika\/ast\/RomanNumerals$.html", "members_object" : [{"label" : "romanToInt", "tail" : "(roman: String): Either[String, Int]", "member" : "laika.ast.RomanNumerals.romanToInt", "link" : "laika\/ast\/RomanNumerals$.html#romanToInt(roman:String):Either[String,Int]", "kind" : "def"}, {"label" : "intToRoman", "tail" : "(value: Int): String", "member" : "laika.ast.RomanNumerals.intToRoman", "link" : "laika\/ast\/RomanNumerals$.html#intToRoman(value:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/RomanNumerals$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/RomanNumerals$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/RomanNumerals$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/RomanNumerals$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/RomanNumerals$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/RomanNumerals$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/RomanNumerals$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RomanNumerals$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RomanNumerals$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RomanNumerals$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/RomanNumerals$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/RomanNumerals$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/RomanNumerals$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/RomanNumerals$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/RomanNumerals$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/RomanNumerals$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/RomanNumerals$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/RomanNumerals$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/RomanNumerals$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.ast.RootCursor", "shortDescription" : "Cursor for the root node of a document tree, providing access to allchild cursors of this tree and allowing to trigger rewriteoperations.", "members_case class" : [{"label" : "treeConfig", "tail" : "(path: Path): Config", "member" : "laika.ast.RootCursor.treeConfig", "link" : "laika\/ast\/RootCursor.html#treeConfig(path:laika.ast.Path):laika.config.Config", "kind" : "def"}, {"label" : "rewriteTarget", "tail" : "(rules: (DocumentCursor) ⇒ RewriteRules): DocumentTreeRoot", "member" : "laika.ast.RootCursor.rewriteTarget", "link" : "laika\/ast\/RootCursor.html#rewriteTarget(rules:laika.ast.DocumentCursor=>laika.ast.RewriteRules):laika.ast.DocumentTreeRoot", "kind" : "def"}, {"label" : "allDocuments", "tail" : ": Seq[DocumentCursor]", "member" : "laika.ast.RootCursor.allDocuments", "link" : "laika\/ast\/RootCursor.html#allDocuments:Seq[laika.ast.DocumentCursor]", "kind" : "lazy val"}, {"label" : "coverDocument", "tail" : ": Option[DocumentCursor]", "member" : "laika.ast.RootCursor.coverDocument", "link" : "laika\/ast\/RootCursor.html#coverDocument:Option[laika.ast.DocumentCursor]", "kind" : "lazy val"}, {"label" : "tree", "tail" : ": TreeCursor", "member" : "laika.ast.RootCursor.tree", "link" : "laika\/ast\/RootCursor.html#tree:laika.ast.TreeCursor", "kind" : "val"}, {"label" : "config", "tail" : ": Config", "member" : "laika.ast.RootCursor.config", "link" : "laika\/ast\/RootCursor.html#config:laika.config.Config", "kind" : "val"}, {"label" : "Target", "tail" : "", "member" : "laika.ast.RootCursor.Target", "link" : "laika\/ast\/RootCursor.html#Target=laika.ast.DocumentTreeRoot", "kind" : "type"}, {"member" : "laika.ast.RootCursor#<init>", "error" : "unsupported entity"}, {"label" : "targetFormat", "tail" : ": Option[String]", "member" : "laika.ast.RootCursor.targetFormat", "link" : "laika\/ast\/RootCursor.html#targetFormat:Option[String]", "kind" : "val"}, {"label" : "target", "tail" : ": DocumentTreeRoot", "member" : "laika.ast.RootCursor.target", "link" : "laika\/ast\/RootCursor.html#target:laika.ast.DocumentTreeRoot", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/RootCursor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/RootCursor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/RootCursor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/RootCursor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/RootCursor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/RootCursor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/RootCursor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RootCursor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RootCursor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RootCursor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/RootCursor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/RootCursor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/RootCursor.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/RootCursor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/RootCursor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/RootCursor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/RootCursor.html", "kind" : "case class"}, {"name" : "laika.ast.RootElement", "shortDescription" : "The root element of a document tree.", "object" : "laika\/ast\/RootElement$.html", "members_object" : [{"label" : "createBlockContainer", "tail" : "(blocks: Seq[Block]): RootElement", "member" : "laika.ast.RootElement.createBlockContainer", "link" : "laika\/ast\/RootElement$.html#createBlockContainer(blocks:Seq[laika.ast.Block]):laika.ast.RootElement", "kind" : "def"}, {"label" : "ContainerType", "tail" : "", "member" : "laika.ast.RootElement.ContainerType", "link" : "laika\/ast\/RootElement$.html#ContainerType=laika.ast.RootElement", "kind" : "type"}, {"label" : "apply", "tail" : "(block: Block, blocks: Block*): ContainerType", "member" : "laika.ast.BlockContainerCompanion.apply", "link" : "laika\/ast\/RootElement$.html#apply(block:laika.ast.Block,blocks:laika.ast.Block*):BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "createSpanContainer", "tail" : "(spans: Seq[Span]): ContainerType", "member" : "laika.ast.BlockContainerCompanion.createSpanContainer", "link" : "laika\/ast\/RootElement$.html#createSpanContainer(spans:Seq[laika.ast.Span]):BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.BlockContainerCompanion.empty", "link" : "laika\/ast\/RootElement$.html#empty:BlockContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(span: Span, spans: Span*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/RootElement$.html#apply(span:laika.ast.Span,spans:laika.ast.Span*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/RootElement$.html#apply(text:String,texts:String*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/RootElement$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/RootElement$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/RootElement$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/RootElement$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/RootElement$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/RootElement$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/RootElement$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RootElement$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RootElement$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RootElement$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/RootElement$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/RootElement$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/RootElement$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/RootElement$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/RootElement$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/RootElement$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/RootElement$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/RootElement$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/RootElement$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): RootElement", "member" : "laika.ast.RootElement.withOptions", "link" : "laika\/ast\/RootElement.html#withOptions(options:laika.ast.Options):laika.ast.RootElement", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Block]): RootElement", "member" : "laika.ast.RootElement.withContent", "link" : "laika\/ast\/RootElement.html#withContent(newContent:Seq[laika.ast.Block]):laika.ast.RootElement", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.RootElement.Self", "link" : "laika\/ast\/RootElement.html#Self=laika.ast.RootElement", "kind" : "type"}, {"member" : "laika.ast.RootElement#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.RootElement.options", "link" : "laika\/ast\/RootElement.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Block]", "member" : "laika.ast.RootElement.content", "link" : "laika\/ast\/RootElement.html#content:Seq[laika.ast.Block]", "kind" : "val"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.BlockContainer.rewriteChildren", "link" : "laika\/ast\/RootElement.html#rewriteChildren(rules:laika.ast.RewriteRules):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteBlocks", "tail" : "(rules: RewriteRule[Block]): Self", "member" : "laika.ast.BlockContainer.rewriteBlocks", "link" : "laika\/ast\/RootElement.html#rewriteBlocks(rules:laika.ast.RewriteRule[laika.ast.Block]):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/RootElement.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/RootElement.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/RootElement.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/RootElement.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/RootElement.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/RootElement.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/RootElement.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/RootElement.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/RootElement.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/RootElement.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/RootElement.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/RootElement.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/RootElement.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/RootElement.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/RootElement.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/RootElement.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/RootElement.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/RootElement.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/RootElement.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/RootElement.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/RootElement.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RootElement.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RootElement.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RootElement.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/RootElement.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/RootElement.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/RootElement.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/RootElement.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/RootElement.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/RootElement.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/RootElement.html", "kind" : "case class"}, {"name" : "laika.ast.Row", "shortDescription" : "A single table row.", "object" : "laika\/ast\/Row$.html", "members_object" : [{"label" : "apply", "tail" : "(cell: Cell, cells: Cell*): Row", "member" : "laika.ast.Row.apply", "link" : "laika\/ast\/Row$.html#apply(cell:laika.ast.Cell,cells:laika.ast.Cell*):laika.ast.Row", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Row$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Row$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Row$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Row$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Row$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Row$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Row$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Row$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Row$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Row$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Row$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Row$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Row$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Row$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Row$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Row$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Row$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Row$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Row$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Row", "member" : "laika.ast.Row.withOptions", "link" : "laika\/ast\/Row.html#withOptions(options:laika.ast.Options):laika.ast.Row", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Row", "member" : "laika.ast.Row.rewriteChildren", "link" : "laika\/ast\/Row.html#rewriteChildren(rules:laika.ast.RewriteRules):laika.ast.Row", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Row.Self", "link" : "laika\/ast\/Row.html#Self=laika.ast.Row", "kind" : "type"}, {"member" : "laika.ast.Row#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Row.options", "link" : "laika\/ast\/Row.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Cell]", "member" : "laika.ast.Row.content", "link" : "laika\/ast\/Row.html#content:Seq[laika.ast.Cell]", "kind" : "val"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/Row.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/Row.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/Row.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/Row.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/Row.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Row.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Row.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Row.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Row.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Row.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Row.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Row.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Row.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Row.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Row.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Row.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Row.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Row.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Row.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Row.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Row.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Row.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Row.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Row.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Row.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Row.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Row.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Row.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Row.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Row.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Row.html", "kind" : "case class"}, {"name" : "laika.ast.Rule", "shortDescription" : "A horizontal rule.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Rule", "member" : "laika.ast.Rule.withOptions", "link" : "laika\/ast\/Rule.html#withOptions(options:laika.ast.Options):laika.ast.Rule", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Rule.Self", "link" : "laika\/ast\/Rule.html#Self=laika.ast.Rule", "kind" : "type"}, {"member" : "laika.ast.Rule#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Rule.options", "link" : "laika\/ast\/Rule.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Rule.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Rule.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Rule.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Rule.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Rule.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Rule.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Rule.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Rule.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Rule.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Rule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Rule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Rule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Rule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Rule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Rule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Rule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Rule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Rule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Rule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Rule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Rule.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Rule.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Rule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Rule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Rule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Rule.html", "kind" : "case class"}, {"name" : "laika.ast.RuntimeMessage", "shortDescription" : "Message generated by the parser, a directive or a rewrite rule.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): RuntimeMessage", "member" : "laika.ast.RuntimeMessage.withOptions", "link" : "laika\/ast\/RuntimeMessage.html#withOptions(options:laika.ast.Options):laika.ast.RuntimeMessage", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.RuntimeMessage.Self", "link" : "laika\/ast\/RuntimeMessage.html#Self=laika.ast.RuntimeMessage", "kind" : "type"}, {"member" : "laika.ast.RuntimeMessage#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.RuntimeMessage.options", "link" : "laika\/ast\/RuntimeMessage.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": String", "member" : "laika.ast.RuntimeMessage.content", "link" : "laika\/ast\/RuntimeMessage.html#content:String", "kind" : "val"}, {"label" : "level", "tail" : ": MessageLevel", "member" : "laika.ast.RuntimeMessage.level", "link" : "laika\/ast\/RuntimeMessage.html#level:laika.ast.MessageLevel", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/RuntimeMessage.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/RuntimeMessage.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/RuntimeMessage.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/RuntimeMessage.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/RuntimeMessage.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/RuntimeMessage.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/RuntimeMessage.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/RuntimeMessage.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/RuntimeMessage.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/RuntimeMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/RuntimeMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/RuntimeMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/RuntimeMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/RuntimeMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/RuntimeMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/RuntimeMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RuntimeMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RuntimeMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/RuntimeMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/RuntimeMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/RuntimeMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/RuntimeMessage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/RuntimeMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/RuntimeMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/RuntimeMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/RuntimeMessage.html", "kind" : "case class"}, {"name" : "laika.ast.Section", "shortDescription" : "A section of the document, consisting of a header and content in the form of a list of Block elements.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Section", "member" : "laika.ast.Section.withOptions", "link" : "laika\/ast\/Section.html#withOptions(options:laika.ast.Options):laika.ast.Section", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Block]): Section", "member" : "laika.ast.Section.withContent", "link" : "laika\/ast\/Section.html#withContent(newContent:Seq[laika.ast.Block]):laika.ast.Section", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Section", "member" : "laika.ast.Section.rewriteChildren", "link" : "laika\/ast\/Section.html#rewriteChildren(rules:laika.ast.RewriteRules):laika.ast.Section", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Section.Self", "link" : "laika\/ast\/Section.html#Self=laika.ast.Section", "kind" : "type"}, {"member" : "laika.ast.Section#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Section.options", "link" : "laika\/ast\/Section.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Block]", "member" : "laika.ast.Section.content", "link" : "laika\/ast\/Section.html#content:Seq[laika.ast.Block]", "kind" : "val"}, {"label" : "header", "tail" : ": Header", "member" : "laika.ast.Section.header", "link" : "laika\/ast\/Section.html#header:laika.ast.Header", "kind" : "val"}, {"label" : "rewriteBlocks", "tail" : "(rules: RewriteRule[Block]): Self", "member" : "laika.ast.BlockContainer.rewriteBlocks", "link" : "laika\/ast\/Section.html#rewriteBlocks(rules:laika.ast.RewriteRule[laika.ast.Block]):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/Section.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/Section.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/Section.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/Section.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/Section.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Section.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Section.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Section.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Section.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Section.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Section.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Section.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Section.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Section.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Section.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Section.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Section.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Section.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Section.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Section.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Section.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Section.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Section.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Section.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Section.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Section.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Section.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Section.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Section.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Section.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Section.html", "kind" : "case class"}, {"name" : "laika.ast.SectionInfo", "shortDescription" : "Captures information about a document section, without its content.", "members_case class" : [{"label" : "asNavigationItem", "tail" : "(docPath: Path, context: NavigationBuilderContext): NavigationItem", "member" : "laika.ast.SectionInfo.asNavigationItem", "link" : "laika\/ast\/SectionInfo.html#asNavigationItem(docPath:laika.ast.Path,context:laika.ast.NavigationBuilderContext):laika.ast.NavigationItem", "kind" : "def"}, {"label" : "withOptions", "tail" : "(options: Options): SectionInfo", "member" : "laika.ast.SectionInfo.withOptions", "link" : "laika\/ast\/SectionInfo.html#withOptions(options:laika.ast.Options):laika.ast.SectionInfo", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.SectionInfo.Self", "link" : "laika\/ast\/SectionInfo.html#Self=laika.ast.SectionInfo", "kind" : "type"}, {"member" : "laika.ast.SectionInfo#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.SectionInfo.options", "link" : "laika\/ast\/SectionInfo.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[SectionInfo]", "member" : "laika.ast.SectionInfo.content", "link" : "laika\/ast\/SectionInfo.html#content:Seq[laika.ast.SectionInfo]", "kind" : "val"}, {"label" : "title", "tail" : ": SpanSequence", "member" : "laika.ast.SectionInfo.title", "link" : "laika\/ast\/SectionInfo.html#title:laika.ast.SpanSequence", "kind" : "val"}, {"label" : "id", "tail" : ": String", "member" : "laika.ast.SectionInfo.id", "link" : "laika\/ast\/SectionInfo.html#id:String", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/SectionInfo.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/SectionInfo.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/SectionInfo.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/SectionInfo.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/SectionInfo.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/SectionInfo.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/SectionInfo.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/SectionInfo.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/SectionInfo.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/SectionInfo.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/SectionInfo.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/SectionInfo.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/SectionInfo.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/SectionInfo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/SectionInfo.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/SectionInfo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/SectionInfo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/SectionInfo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/SectionInfo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/SectionInfo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SectionInfo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SectionInfo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SectionInfo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/SectionInfo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/SectionInfo.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/SectionInfo.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/SectionInfo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/SectionInfo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/SectionInfo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/SectionInfo.html", "kind" : "case class"}, {"name" : "laika.ast.SectionNumber", "shortDescription" : "Represents a section number, usually used in header elements when autonumbering is applied.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): SectionNumber", "member" : "laika.ast.SectionNumber.withOptions", "link" : "laika\/ast\/SectionNumber.html#withOptions(options:laika.ast.Options):laika.ast.SectionNumber", "kind" : "def"}, {"label" : "child", "tail" : "(childPosition: Int): SectionNumber", "member" : "laika.ast.SectionNumber.child", "link" : "laika\/ast\/SectionNumber.html#child(childPosition:Int):laika.ast.SectionNumber", "kind" : "def"}, {"label" : "content", "tail" : ": String", "member" : "laika.ast.SectionNumber.content", "link" : "laika\/ast\/SectionNumber.html#content:String", "kind" : "val"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.SectionNumber.Self", "link" : "laika\/ast\/SectionNumber.html#Self=laika.ast.SectionNumber", "kind" : "type"}, {"member" : "laika.ast.SectionNumber#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.SectionNumber.options", "link" : "laika\/ast\/SectionNumber.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "position", "tail" : ": Seq[Int]", "member" : "laika.ast.SectionNumber.position", "link" : "laika\/ast\/SectionNumber.html#position:Seq[Int]", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/SectionNumber.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/SectionNumber.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/SectionNumber.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/SectionNumber.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/SectionNumber.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/SectionNumber.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/SectionNumber.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/SectionNumber.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/SectionNumber.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/SectionNumber.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/SectionNumber.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/SectionNumber.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/SectionNumber.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/SectionNumber.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/SectionNumber.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/SectionNumber.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SectionNumber.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SectionNumber.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SectionNumber.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/SectionNumber.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/SectionNumber.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/SectionNumber.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/SectionNumber.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/SectionNumber.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/SectionNumber.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/SectionNumber.html", "kind" : "case class"}, {"name" : "laika.ast.SegmentedPath", "shortDescription" : "", "members_case class" : [{"label" : "pathPrefix", "tail" : ": String", "member" : "laika.ast.SegmentedPath.pathPrefix", "link" : "laika\/ast\/SegmentedPath.html#pathPrefix:String", "kind" : "val"}, {"label" : "withoutFragment", "tail" : "(): Path", "member" : "laika.ast.SegmentedPath.withoutFragment", "link" : "laika\/ast\/SegmentedPath.html#withoutFragment:laika.ast.Path", "kind" : "def"}, {"label" : "withoutSuffix", "tail" : "(): Path", "member" : "laika.ast.SegmentedPath.withoutSuffix", "link" : "laika\/ast\/SegmentedPath.html#withoutSuffix:laika.ast.Path", "kind" : "def"}, {"label" : "withFragment", "tail" : "(newFragment: String): Path", "member" : "laika.ast.SegmentedPath.withFragment", "link" : "laika\/ast\/SegmentedPath.html#withFragment(newFragment:String):laika.ast.Path", "kind" : "def"}, {"label" : "withSuffix", "tail" : "(newSuffix: String): Path", "member" : "laika.ast.SegmentedPath.withSuffix", "link" : "laika\/ast\/SegmentedPath.html#withSuffix(newSuffix:String):laika.ast.Path", "kind" : "def"}, {"label" : "withBasename", "tail" : "(name: String): Path", "member" : "laika.ast.SegmentedPath.withBasename", "link" : "laika\/ast\/SegmentedPath.html#withBasename(name:String):laika.ast.Path", "kind" : "def"}, {"label" : "isSubPath", "tail" : "(other: Path): Boolean", "member" : "laika.ast.SegmentedPath.isSubPath", "link" : "laika\/ast\/SegmentedPath.html#isSubPath(other:laika.ast.Path):Boolean", "kind" : "def"}, {"label" : "relativeTo", "tail" : "(path: Path): RelativePath", "member" : "laika.ast.SegmentedPath.relativeTo", "link" : "laika\/ast\/SegmentedPath.html#relativeTo(path:laika.ast.Path):laika.ast.RelativePath", "kind" : "def"}, {"label" : "\/", "tail" : "(path: RelativePath): Path", "member" : "laika.ast.SegmentedPath.\/", "link" : "laika\/ast\/SegmentedPath.html#\/(path:laika.ast.RelativePath):laika.ast.Path", "kind" : "def"}, {"label" : "parent", "tail" : ": Path", "member" : "laika.ast.SegmentedPath.parent", "link" : "laika\/ast\/SegmentedPath.html#parent:laika.ast.Path", "kind" : "lazy val"}, {"label" : "depth", "tail" : ": Int", "member" : "laika.ast.SegmentedPath.depth", "link" : "laika\/ast\/SegmentedPath.html#depth:Int", "kind" : "val"}, {"member" : "laika.ast.SegmentedPath#<init>", "error" : "unsupported entity"}, {"label" : "fragment", "tail" : ": Option[String]", "member" : "laika.ast.SegmentedPath.fragment", "link" : "laika\/ast\/SegmentedPath.html#fragment:Option[String]", "kind" : "val"}, {"label" : "suffix", "tail" : ": Option[String]", "member" : "laika.ast.SegmentedPath.suffix", "link" : "laika\/ast\/SegmentedPath.html#suffix:Option[String]", "kind" : "val"}, {"label" : "segments", "tail" : ": NonEmptyChain[String]", "member" : "laika.ast.SegmentedPath.segments", "link" : "laika\/ast\/SegmentedPath.html#segments:cats.data.NonEmptyChain[String]", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.SegmentedPathBase.toString", "link" : "laika\/ast\/SegmentedPath.html#toString():String", "kind" : "def"}, {"label" : "basename", "tail" : ": String", "member" : "laika.ast.SegmentedPathBase.basename", "link" : "laika\/ast\/SegmentedPath.html#basename:String", "kind" : "lazy val"}, {"label" : "name", "tail" : ": String", "member" : "laika.ast.SegmentedPathBase.name", "link" : "laika\/ast\/SegmentedPath.html#name:String", "kind" : "lazy val"}, {"label" : "relative", "tail" : "(): RelativePath", "member" : "laika.ast.Path.relative", "link" : "laika\/ast\/SegmentedPath.html#relative:laika.ast.RelativePath", "kind" : "def"}, {"label" : "\/", "tail" : "(name: String): Path", "member" : "laika.ast.Path.\/", "link" : "laika\/ast\/SegmentedPath.html#\/(name:String):laika.ast.Path", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/SegmentedPath.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/SegmentedPath.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/SegmentedPath.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/SegmentedPath.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/SegmentedPath.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/SegmentedPath.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/SegmentedPath.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SegmentedPath.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SegmentedPath.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SegmentedPath.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/SegmentedPath.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/SegmentedPath.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/SegmentedPath.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/SegmentedPath.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/SegmentedPath.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/SegmentedPath.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/SegmentedPath.html", "kind" : "case class"}, {"name" : "laika.ast.SegmentedPathBase", "members_trait" : [{"label" : "toString", "tail" : "(): String", "member" : "laika.ast.SegmentedPathBase.toString", "link" : "laika\/ast\/SegmentedPathBase.html#toString():String", "kind" : "def"}, {"label" : "basename", "tail" : ": String", "member" : "laika.ast.SegmentedPathBase.basename", "link" : "laika\/ast\/SegmentedPathBase.html#basename:String", "kind" : "lazy val"}, {"label" : "name", "tail" : ": String", "member" : "laika.ast.SegmentedPathBase.name", "link" : "laika\/ast\/SegmentedPathBase.html#name:String", "kind" : "lazy val"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/SegmentedPathBase.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/SegmentedPathBase.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/SegmentedPathBase.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/SegmentedPathBase.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/SegmentedPathBase.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/SegmentedPathBase.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/SegmentedPathBase.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/SegmentedPathBase.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/SegmentedPathBase.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SegmentedPathBase.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SegmentedPathBase.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SegmentedPathBase.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/SegmentedPathBase.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/SegmentedPathBase.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/SegmentedPathBase.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/SegmentedPathBase.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/SegmentedPathBase.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/SegmentedPathBase.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/SegmentedPathBase.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/SegmentedPathBase.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "pathPrefix", "tail" : "(): String", "member" : "laika.ast.SegmentedPathBase.pathPrefix", "link" : "laika\/ast\/SegmentedPathBase.html#pathPrefix:String", "kind" : "abstract def"}, {"label" : "segments", "tail" : "(): NonEmptyChain[String]", "member" : "laika.ast.SegmentedPathBase.segments", "link" : "laika\/ast\/SegmentedPathBase.html#segments:cats.data.NonEmptyChain[String]", "kind" : "abstract def"}, {"label" : "fragment", "tail" : "(): Option[String]", "member" : "laika.ast.PathBase.fragment", "link" : "laika\/ast\/SegmentedPathBase.html#fragment:Option[String]", "kind" : "abstract def"}, {"label" : "suffix", "tail" : "(): Option[String]", "member" : "laika.ast.PathBase.suffix", "link" : "laika\/ast\/SegmentedPathBase.html#suffix:Option[String]", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/SegmentedPathBase.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/SegmentedPathBase.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/SegmentedPathBase.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "The common base for absolute and relative paths that contain one or more path segments.", "object" : "laika\/ast\/SegmentedPathBase$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/SegmentedPathBase$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/SegmentedPathBase$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/SegmentedPathBase$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/SegmentedPathBase$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/SegmentedPathBase$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/SegmentedPathBase$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/SegmentedPathBase$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SegmentedPathBase$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SegmentedPathBase$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SegmentedPathBase$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/SegmentedPathBase$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/SegmentedPathBase$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/SegmentedPathBase$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/SegmentedPathBase$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/SegmentedPathBase$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/SegmentedPathBase$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/SegmentedPathBase$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/SegmentedPathBase$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/SegmentedPathBase$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/ast\/SegmentedPathBase.html", "kind" : "trait"}, {"name" : "laika.ast.SegmentedRelativePath", "shortDescription" : "", "members_case class" : [{"label" : "pathPrefix", "tail" : ": String", "member" : "laika.ast.SegmentedRelativePath.pathPrefix", "link" : "laika\/ast\/SegmentedRelativePath.html#pathPrefix:String", "kind" : "val"}, {"label" : "withoutFragment", "tail" : "(): RelativePath", "member" : "laika.ast.SegmentedRelativePath.withoutFragment", "link" : "laika\/ast\/SegmentedRelativePath.html#withoutFragment:laika.ast.RelativePath", "kind" : "def"}, {"label" : "withoutSuffix", "tail" : "(): RelativePath", "member" : "laika.ast.SegmentedRelativePath.withoutSuffix", "link" : "laika\/ast\/SegmentedRelativePath.html#withoutSuffix:laika.ast.RelativePath", "kind" : "def"}, {"label" : "withFragment", "tail" : "(newFragment: String): RelativePath", "member" : "laika.ast.SegmentedRelativePath.withFragment", "link" : "laika\/ast\/SegmentedRelativePath.html#withFragment(newFragment:String):laika.ast.RelativePath", "kind" : "def"}, {"label" : "withSuffix", "tail" : "(newSuffix: String): RelativePath", "member" : "laika.ast.SegmentedRelativePath.withSuffix", "link" : "laika\/ast\/SegmentedRelativePath.html#withSuffix(newSuffix:String):laika.ast.RelativePath", "kind" : "def"}, {"label" : "withBasename", "tail" : "(name: String): RelativePath", "member" : "laika.ast.SegmentedRelativePath.withBasename", "link" : "laika\/ast\/SegmentedRelativePath.html#withBasename(name:String):laika.ast.RelativePath", "kind" : "def"}, {"label" : "\/", "tail" : "(path: RelativePath): RelativePath", "member" : "laika.ast.SegmentedRelativePath.\/", "link" : "laika\/ast\/SegmentedRelativePath.html#\/(path:laika.ast.RelativePath):laika.ast.RelativePath", "kind" : "def"}, {"label" : "parent", "tail" : ": RelativePath", "member" : "laika.ast.SegmentedRelativePath.parent", "link" : "laika\/ast\/SegmentedRelativePath.html#parent:laika.ast.RelativePath", "kind" : "lazy val"}, {"member" : "laika.ast.SegmentedRelativePath#<init>", "error" : "unsupported entity"}, {"label" : "parentLevels", "tail" : ": Int", "member" : "laika.ast.SegmentedRelativePath.parentLevels", "link" : "laika\/ast\/SegmentedRelativePath.html#parentLevels:Int", "kind" : "val"}, {"label" : "fragment", "tail" : ": Option[String]", "member" : "laika.ast.SegmentedRelativePath.fragment", "link" : "laika\/ast\/SegmentedRelativePath.html#fragment:Option[String]", "kind" : "val"}, {"label" : "suffix", "tail" : ": Option[String]", "member" : "laika.ast.SegmentedRelativePath.suffix", "link" : "laika\/ast\/SegmentedRelativePath.html#suffix:Option[String]", "kind" : "val"}, {"label" : "segments", "tail" : ": NonEmptyChain[String]", "member" : "laika.ast.SegmentedRelativePath.segments", "link" : "laika\/ast\/SegmentedRelativePath.html#segments:cats.data.NonEmptyChain[String]", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.SegmentedPathBase.toString", "link" : "laika\/ast\/SegmentedRelativePath.html#toString():String", "kind" : "def"}, {"label" : "basename", "tail" : ": String", "member" : "laika.ast.SegmentedPathBase.basename", "link" : "laika\/ast\/SegmentedRelativePath.html#basename:String", "kind" : "lazy val"}, {"label" : "name", "tail" : ": String", "member" : "laika.ast.SegmentedPathBase.name", "link" : "laika\/ast\/SegmentedRelativePath.html#name:String", "kind" : "lazy val"}, {"label" : "\/", "tail" : "(name: String): RelativePath", "member" : "laika.ast.RelativePath.\/", "link" : "laika\/ast\/SegmentedRelativePath.html#\/(name:String):laika.ast.RelativePath", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/SegmentedRelativePath.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/SegmentedRelativePath.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/SegmentedRelativePath.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/SegmentedRelativePath.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/SegmentedRelativePath.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/SegmentedRelativePath.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/SegmentedRelativePath.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SegmentedRelativePath.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SegmentedRelativePath.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SegmentedRelativePath.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/SegmentedRelativePath.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/SegmentedRelativePath.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/SegmentedRelativePath.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/SegmentedRelativePath.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/SegmentedRelativePath.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/SegmentedRelativePath.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/SegmentedRelativePath.html", "kind" : "case class"}, {"name" : "laika.ast.Selection", "shortDescription" : "Represents a selection of choices (alternatives) that represent the same content in different ways,e.g.", "members_case class" : [{"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Selection", "member" : "laika.ast.Selection.rewriteChildren", "link" : "laika\/ast\/Selection.html#rewriteChildren(rules:laika.ast.RewriteRules):laika.ast.Selection", "kind" : "def"}, {"label" : "withOptions", "tail" : "(options: Options): Selection", "member" : "laika.ast.Selection.withOptions", "link" : "laika\/ast\/Selection.html#withOptions(options:laika.ast.Options):laika.ast.Selection", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Selection.Self", "link" : "laika\/ast\/Selection.html#Self=laika.ast.Selection", "kind" : "type"}, {"member" : "laika.ast.Selection#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Selection.options", "link" : "laika\/ast\/Selection.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "choices", "tail" : ": Seq[Choice]", "member" : "laika.ast.Selection.choices", "link" : "laika\/ast\/Selection.html#choices:Seq[laika.ast.Choice]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "laika.ast.Selection.name", "link" : "laika\/ast\/Selection.html#name:String", "kind" : "val"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/Selection.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Selection.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Selection.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Selection.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Selection.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Selection.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Selection.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Selection.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Selection.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Selection.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Selection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Selection.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Selection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Selection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Selection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Selection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Selection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Selection.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Selection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Selection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Selection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Selection.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Selection.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Selection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Selection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Selection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Selection.html", "kind" : "case class"}, {"name" : "laika.ast.SomeOpt", "shortDescription" : "Options implementation for non-empty instances.", "members_case class" : [{"label" : "+", "tail" : "(other: Options): Options", "member" : "laika.ast.SomeOpt.+", "link" : "laika\/ast\/SomeOpt.html#+(other:laika.ast.Options):laika.ast.Options", "kind" : "def"}, {"member" : "laika.ast.SomeOpt#<init>", "error" : "unsupported entity"}, {"label" : "styles", "tail" : ": Set[String]", "member" : "laika.ast.SomeOpt.styles", "link" : "laika\/ast\/SomeOpt.html#styles:Set[String]", "kind" : "val"}, {"label" : "id", "tail" : ": Option[String]", "member" : "laika.ast.SomeOpt.id", "link" : "laika\/ast\/SomeOpt.html#id:Option[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/SomeOpt.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/SomeOpt.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/SomeOpt.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/SomeOpt.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/SomeOpt.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/SomeOpt.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/SomeOpt.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SomeOpt.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SomeOpt.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SomeOpt.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/SomeOpt.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/SomeOpt.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/SomeOpt.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/SomeOpt.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/SomeOpt.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/SomeOpt.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/SomeOpt.html", "kind" : "case class"}, {"name" : "laika.ast.Span", "members_trait" : [{"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Span.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Span.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Span.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Span.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Span.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Span.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Span.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Span.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Span.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/Span.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/Span.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Span.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Span.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Span.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Span.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Span.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Span.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Span.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Span.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Span.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Span.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Span.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Span.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Span.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Span.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Span.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Span.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Span.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Span.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Span.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "laika.ast.Span.Self", "error" : "unsupported entity"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/Span.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/Span.html#options:laika.ast.Options", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/Span.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/Span.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/Span.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "The base type for all inline elements.", "trait" : "laika\/ast\/Span.html", "kind" : "trait"}, {"name" : "laika.ast.SpanContainer", "members_trait" : [{"label" : "extractText", "tail" : "(): String", "member" : "laika.ast.SpanContainer.extractText", "link" : "laika\/ast\/SpanContainer.html#extractText:String", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.SpanContainer.rewriteChildren", "link" : "laika\/ast\/SpanContainer.html#rewriteChildren(rules:laika.ast.RewriteRules):SpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/SpanContainer.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/SpanContainer.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/SpanContainer.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/SpanContainer.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/SpanContainer.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/SpanContainer.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/SpanContainer.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/SpanContainer.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/SpanContainer.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/SpanContainer.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/SpanContainer.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/SpanContainer.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/SpanContainer.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/SpanContainer.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/SpanContainer.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/SpanContainer.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/SpanContainer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/SpanContainer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/SpanContainer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/SpanContainer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/SpanContainer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/SpanContainer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/SpanContainer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SpanContainer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SpanContainer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SpanContainer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/SpanContainer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/SpanContainer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/SpanContainer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/SpanContainer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/SpanContainer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/SpanContainer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/SpanContainer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/SpanContainer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Span]): Self", "member" : "laika.ast.SpanContainer.withContent", "link" : "laika\/ast\/SpanContainer.html#withContent(newContent:Seq[laika.ast.Span]):SpanContainer.this.Self", "kind" : "abstract def"}, {"member" : "laika.ast.SpanContainer.Self", "error" : "unsupported entity"}, {"label" : "content", "tail" : "(): Seq[Span]", "member" : "laika.ast.Container.content", "link" : "laika\/ast\/SpanContainer.html#content:T", "kind" : "abstract def"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/SpanContainer.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/SpanContainer.html#options:laika.ast.Options", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/SpanContainer.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/SpanContainer.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/SpanContainer.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "A container of other Span elements.", "trait" : "laika\/ast\/SpanContainer.html", "kind" : "trait"}, {"name" : "laika.ast.SpanContainerCompanion", "members_trait" : [{"label" : "apply", "tail" : "(span: Span, spans: Span*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/SpanContainerCompanion.html#apply(span:laika.ast.Span,spans:laika.ast.Span*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/SpanContainerCompanion.html#apply(text:String,texts:String*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.SpanContainerCompanion.empty", "link" : "laika\/ast\/SpanContainerCompanion.html#empty:SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/SpanContainerCompanion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/SpanContainerCompanion.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/SpanContainerCompanion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/SpanContainerCompanion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/SpanContainerCompanion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/SpanContainerCompanion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/SpanContainerCompanion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SpanContainerCompanion.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SpanContainerCompanion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SpanContainerCompanion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/SpanContainerCompanion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/SpanContainerCompanion.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/SpanContainerCompanion.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/SpanContainerCompanion.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/SpanContainerCompanion.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/SpanContainerCompanion.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/SpanContainerCompanion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/SpanContainerCompanion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/SpanContainerCompanion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createSpanContainer", "tail" : "(spans: Seq[Span]): ContainerType", "member" : "laika.ast.SpanContainerCompanion.createSpanContainer", "link" : "laika\/ast\/SpanContainerCompanion.html#createSpanContainer(spans:Seq[laika.ast.Span]):SpanContainerCompanion.this.ContainerType", "kind" : "abstract def"}, {"member" : "laika.ast.SpanContainerCompanion.ContainerType", "error" : "unsupported entity"}], "shortDescription" : "Common methods for simple span containers (without additional parameters).", "trait" : "laika\/ast\/SpanContainerCompanion.html", "kind" : "trait"}, {"name" : "laika.ast.SpanLink", "shortDescription" : "An link element, with the span content representing the text (description) of the link.", "object" : "laika\/ast\/SpanLink$.html", "members_object" : [{"label" : "apply", "tail" : "(target: Target): Companion", "member" : "laika.ast.SpanLink.apply", "link" : "laika\/ast\/SpanLink$.html#apply(target:laika.ast.Target):laika.ast.SpanLink.Companion", "kind" : "def"}, {"label" : "external", "tail" : "(url: String): Companion", "member" : "laika.ast.SpanLink.external", "link" : "laika\/ast\/SpanLink$.html#external(url:String):laika.ast.SpanLink.Companion", "kind" : "def"}, {"label" : "internal", "tail" : "(path: PathBase): Companion", "member" : "laika.ast.SpanLink.internal", "link" : "laika\/ast\/SpanLink$.html#internal(path:laika.ast.PathBase):laika.ast.SpanLink.Companion", "kind" : "def"}, {"label" : "internal", "tail" : "(path: String): Companion", "member" : "laika.ast.SpanLink.internal", "link" : "laika\/ast\/SpanLink$.html#internal(path:String):laika.ast.SpanLink.Companion", "kind" : "def"}, {"label" : "Companion", "tail" : "", "member" : "laika.ast.SpanLink.Companion", "link" : "laika\/ast\/SpanLink$.html#CompanionextendsSpanContainerCompanion", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/SpanLink$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/SpanLink$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/SpanLink$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/SpanLink$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/SpanLink$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/SpanLink$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/SpanLink$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SpanLink$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SpanLink$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SpanLink$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/SpanLink$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/SpanLink$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/SpanLink$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/SpanLink$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/SpanLink$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/SpanLink$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/SpanLink$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/SpanLink$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/SpanLink$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): SpanLink", "member" : "laika.ast.SpanLink.withOptions", "link" : "laika\/ast\/SpanLink.html#withOptions(options:laika.ast.Options):laika.ast.SpanLink", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Span]): SpanLink", "member" : "laika.ast.SpanLink.withContent", "link" : "laika\/ast\/SpanLink.html#withContent(newContent:Seq[laika.ast.Span]):laika.ast.SpanLink", "kind" : "def"}, {"label" : "withTarget", "tail" : "(newTarget: Target): SpanLink", "member" : "laika.ast.SpanLink.withTarget", "link" : "laika\/ast\/SpanLink.html#withTarget(newTarget:laika.ast.Target):laika.ast.SpanLink", "kind" : "def"}, {"label" : "supportsExternalTargets", "tail" : ": Boolean", "member" : "laika.ast.SpanLink.supportsExternalTargets", "link" : "laika\/ast\/SpanLink.html#supportsExternalTargets:Boolean", "kind" : "val"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.SpanLink.Self", "link" : "laika\/ast\/SpanLink.html#Self=laika.ast.SpanLink", "kind" : "type"}, {"member" : "laika.ast.SpanLink#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.SpanLink.options", "link" : "laika\/ast\/SpanLink.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "title", "tail" : ": Option[String]", "member" : "laika.ast.SpanLink.title", "link" : "laika\/ast\/SpanLink.html#title:Option[String]", "kind" : "val"}, {"label" : "target", "tail" : ": Target", "member" : "laika.ast.SpanLink.target", "link" : "laika\/ast\/SpanLink.html#target:laika.ast.Target", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Span]", "member" : "laika.ast.SpanLink.content", "link" : "laika\/ast\/SpanLink.html#content:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "extractText", "tail" : "(): String", "member" : "laika.ast.SpanContainer.extractText", "link" : "laika\/ast\/SpanLink.html#extractText:String", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.SpanContainer.rewriteChildren", "link" : "laika\/ast\/SpanLink.html#rewriteChildren(rules:laika.ast.RewriteRules):SpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/SpanLink.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/SpanLink.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/SpanLink.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/SpanLink.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/SpanLink.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/SpanLink.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/SpanLink.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/SpanLink.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/SpanLink.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/SpanLink.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/SpanLink.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/SpanLink.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/SpanLink.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/SpanLink.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/SpanLink.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/SpanLink.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/SpanLink.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/SpanLink.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/SpanLink.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/SpanLink.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/SpanLink.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SpanLink.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SpanLink.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SpanLink.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/SpanLink.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/SpanLink.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/SpanLink.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/SpanLink.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/SpanLink.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/SpanLink.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/SpanLink.html", "kind" : "case class"}, {"name" : "laika.ast.SpanResolver", "members_trait" : [{"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/SpanResolver.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/SpanResolver.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/SpanResolver.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/SpanResolver.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/SpanResolver.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/SpanResolver.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/SpanResolver.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/SpanResolver.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/SpanResolver.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/SpanResolver.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/SpanResolver.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/SpanResolver.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/SpanResolver.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/SpanResolver.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/SpanResolver.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/SpanResolver.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/SpanResolver.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/SpanResolver.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SpanResolver.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SpanResolver.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SpanResolver.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/SpanResolver.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/SpanResolver.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/SpanResolver.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/SpanResolver.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/SpanResolver.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/SpanResolver.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/SpanResolver.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/SpanResolver.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/SpanResolver.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "resolve", "tail" : "(cursor: DocumentCursor): Span", "member" : "laika.ast.SpanResolver.resolve", "link" : "laika\/ast\/SpanResolver.html#resolve(cursor:laika.ast.DocumentCursor):laika.ast.Span", "kind" : "abstract def"}, {"label" : "unresolvedMessage", "tail" : "(): String", "member" : "laika.ast.Unresolved.unresolvedMessage", "link" : "laika\/ast\/SpanResolver.html#unresolvedMessage:String", "kind" : "abstract def"}, {"label" : "source", "tail" : "(): SourceFragment", "member" : "laika.ast.Unresolved.source", "link" : "laika\/ast\/SpanResolver.html#source:laika.parse.SourceFragment", "kind" : "abstract def"}, {"member" : "laika.ast.Span.Self", "error" : "unsupported entity"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/SpanResolver.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/SpanResolver.html#options:laika.ast.Options", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/SpanResolver.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/SpanResolver.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/SpanResolver.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "Represents a placeholder inline element that needs to be resolved in a rewrite step.", "trait" : "laika\/ast\/SpanResolver.html", "kind" : "trait"}, {"name" : "laika.ast.SpanSequence", "shortDescription" : "A generic container element containing a list of spans.", "object" : "laika\/ast\/SpanSequence$.html", "members_object" : [{"label" : "createSpanContainer", "tail" : "(spans: Seq[Span]): SpanSequence", "member" : "laika.ast.SpanSequence.createSpanContainer", "link" : "laika\/ast\/SpanSequence$.html#createSpanContainer(spans:Seq[laika.ast.Span]):laika.ast.SpanSequence", "kind" : "def"}, {"label" : "ContainerType", "tail" : "", "member" : "laika.ast.SpanSequence.ContainerType", "link" : "laika\/ast\/SpanSequence$.html#ContainerType=laika.ast.SpanSequence", "kind" : "type"}, {"label" : "apply", "tail" : "(span: Span, spans: Span*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/SpanSequence$.html#apply(span:laika.ast.Span,spans:laika.ast.Span*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/SpanSequence$.html#apply(text:String,texts:String*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.SpanContainerCompanion.empty", "link" : "laika\/ast\/SpanSequence$.html#empty:SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/SpanSequence$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/SpanSequence$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/SpanSequence$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/SpanSequence$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/SpanSequence$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/SpanSequence$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/SpanSequence$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SpanSequence$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SpanSequence$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SpanSequence$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/SpanSequence$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/SpanSequence$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/SpanSequence$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/SpanSequence$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/SpanSequence$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/SpanSequence$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/SpanSequence$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/SpanSequence$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/SpanSequence$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): SpanSequence", "member" : "laika.ast.SpanSequence.withOptions", "link" : "laika\/ast\/SpanSequence.html#withOptions(options:laika.ast.Options):laika.ast.SpanSequence", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Span]): SpanSequence", "member" : "laika.ast.SpanSequence.withContent", "link" : "laika\/ast\/SpanSequence.html#withContent(newContent:Seq[laika.ast.Span]):laika.ast.SpanSequence", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.SpanSequence.Self", "link" : "laika\/ast\/SpanSequence.html#Self=laika.ast.SpanSequence", "kind" : "type"}, {"member" : "laika.ast.SpanSequence#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.SpanSequence.options", "link" : "laika\/ast\/SpanSequence.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Span]", "member" : "laika.ast.SpanSequence.content", "link" : "laika\/ast\/SpanSequence.html#content:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "extractText", "tail" : "(): String", "member" : "laika.ast.SpanContainer.extractText", "link" : "laika\/ast\/SpanSequence.html#extractText:String", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.SpanContainer.rewriteChildren", "link" : "laika\/ast\/SpanSequence.html#rewriteChildren(rules:laika.ast.RewriteRules):SpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/SpanSequence.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/SpanSequence.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/SpanSequence.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/SpanSequence.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/SpanSequence.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/SpanSequence.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/SpanSequence.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/SpanSequence.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/SpanSequence.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/SpanSequence.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/SpanSequence.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/SpanSequence.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/SpanSequence.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/SpanSequence.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/SpanSequence.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/SpanSequence.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/SpanSequence.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/SpanSequence.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/SpanSequence.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/SpanSequence.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/SpanSequence.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SpanSequence.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SpanSequence.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/SpanSequence.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/SpanSequence.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/SpanSequence.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/SpanSequence.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/SpanSequence.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/SpanSequence.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/SpanSequence.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/SpanSequence.html", "kind" : "case class"}, {"name" : "laika.ast.Specificity", "shortDescription" : "Represents the specificity of a style selector or predicate.", "members_case class" : [{"label" : "compare", "tail" : "(other: Specificity): Int", "member" : "laika.ast.Specificity.compare", "link" : "laika\/ast\/Specificity.html#compare(other:laika.ast.Specificity):Int", "kind" : "def"}, {"label" : "+", "tail" : "(other: Specificity): Specificity", "member" : "laika.ast.Specificity.+", "link" : "laika\/ast\/Specificity.html#+(other:laika.ast.Specificity):laika.ast.Specificity", "kind" : "def"}, {"member" : "laika.ast.Specificity#<init>", "error" : "unsupported entity"}, {"label" : "order", "tail" : ": Int", "member" : "laika.ast.Specificity.order", "link" : "laika\/ast\/Specificity.html#order:Int", "kind" : "val"}, {"label" : "types", "tail" : ": Int", "member" : "laika.ast.Specificity.types", "link" : "laika\/ast\/Specificity.html#types:Int", "kind" : "val"}, {"label" : "classes", "tail" : ": Int", "member" : "laika.ast.Specificity.classes", "link" : "laika\/ast\/Specificity.html#classes:Int", "kind" : "val"}, {"label" : "ids", "tail" : ": Int", "member" : "laika.ast.Specificity.ids", "link" : "laika\/ast\/Specificity.html#ids:Int", "kind" : "val"}, {"label" : "compareTo", "tail" : "(that: Specificity): Int", "member" : "scala.math.Ordered.compareTo", "link" : "laika\/ast\/Specificity.html#compareTo(that:A):Int", "kind" : "def"}, {"label" : ">=", "tail" : "(that: Specificity): Boolean", "member" : "scala.math.Ordered.>=", "link" : "laika\/ast\/Specificity.html#>=(that:A):Boolean", "kind" : "def"}, {"label" : "<=", "tail" : "(that: Specificity): Boolean", "member" : "scala.math.Ordered.<=", "link" : "laika\/ast\/Specificity.html#<=(that:A):Boolean", "kind" : "def"}, {"label" : ">", "tail" : "(that: Specificity): Boolean", "member" : "scala.math.Ordered.>", "link" : "laika\/ast\/Specificity.html#>(that:A):Boolean", "kind" : "def"}, {"label" : "<", "tail" : "(that: Specificity): Boolean", "member" : "scala.math.Ordered.<", "link" : "laika\/ast\/Specificity.html#<(that:A):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Specificity.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Specificity.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Specificity.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Specificity.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Specificity.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Specificity.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Specificity.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Specificity.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Specificity.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Specificity.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Specificity.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Specificity.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Specificity.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Specificity.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Specificity.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Specificity.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Specificity.html", "kind" : "case class"}, {"name" : "laika.ast.StaticDocument", "shortDescription" : "A pure descriptor for a static document, without the actual bytes.", "object" : "laika\/ast\/StaticDocument$.html", "members_object" : [{"label" : "apply", "tail" : "(path: Path, format: String, formats: String*): StaticDocument", "member" : "laika.ast.StaticDocument.apply", "link" : "laika\/ast\/StaticDocument$.html#apply(path:laika.ast.Path,format:String,formats:String*):laika.ast.StaticDocument", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/StaticDocument$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/StaticDocument$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/StaticDocument$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/StaticDocument$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/StaticDocument$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/StaticDocument$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/StaticDocument$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StaticDocument$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StaticDocument$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StaticDocument$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/StaticDocument$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/StaticDocument$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/StaticDocument$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/StaticDocument$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/StaticDocument$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/StaticDocument$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/StaticDocument$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/StaticDocument$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/StaticDocument$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "laika.ast.StaticDocument#<init>", "error" : "unsupported entity"}, {"label" : "formats", "tail" : ": TargetFormats", "member" : "laika.ast.StaticDocument.formats", "link" : "laika\/ast\/StaticDocument.html#formats:laika.rewrite.nav.TargetFormats", "kind" : "val"}, {"label" : "path", "tail" : ": Path", "member" : "laika.ast.StaticDocument.path", "link" : "laika\/ast\/StaticDocument.html#path:laika.ast.Path", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/StaticDocument.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/StaticDocument.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/StaticDocument.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/StaticDocument.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/StaticDocument.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/StaticDocument.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/StaticDocument.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StaticDocument.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StaticDocument.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StaticDocument.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/StaticDocument.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/StaticDocument.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/StaticDocument.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/StaticDocument.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/StaticDocument.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/StaticDocument.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/StaticDocument.html", "kind" : "case class"}, {"name" : "laika.ast.StringBullet", "shortDescription" : "Bullet format based on a simple string.", "members_case class" : [{"member" : "laika.ast.StringBullet#<init>", "error" : "unsupported entity"}, {"label" : "bullet", "tail" : ": String", "member" : "laika.ast.StringBullet.bullet", "link" : "laika\/ast\/StringBullet.html#bullet:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/StringBullet.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/StringBullet.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/StringBullet.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/StringBullet.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/StringBullet.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/StringBullet.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/StringBullet.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StringBullet.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StringBullet.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StringBullet.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/StringBullet.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/StringBullet.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/StringBullet.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/StringBullet.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/StringBullet.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/StringBullet.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/StringBullet.html", "kind" : "case class"}, {"name" : "laika.ast.Strong", "shortDescription" : "A span of strong inline elements that may contain nested spans.", "object" : "laika\/ast\/Strong$.html", "members_object" : [{"label" : "createSpanContainer", "tail" : "(spans: Seq[Span]): Strong", "member" : "laika.ast.Strong.createSpanContainer", "link" : "laika\/ast\/Strong$.html#createSpanContainer(spans:Seq[laika.ast.Span]):laika.ast.Strong", "kind" : "def"}, {"label" : "ContainerType", "tail" : "", "member" : "laika.ast.Strong.ContainerType", "link" : "laika\/ast\/Strong$.html#ContainerType=laika.ast.Strong", "kind" : "type"}, {"label" : "apply", "tail" : "(span: Span, spans: Span*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/Strong$.html#apply(span:laika.ast.Span,spans:laika.ast.Span*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/Strong$.html#apply(text:String,texts:String*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.SpanContainerCompanion.empty", "link" : "laika\/ast\/Strong$.html#empty:SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Strong$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Strong$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Strong$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Strong$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Strong$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Strong$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Strong$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Strong$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Strong$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Strong$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Strong$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Strong$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Strong$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Strong$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Strong$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Strong$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Strong$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Strong$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Strong$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Strong", "member" : "laika.ast.Strong.withOptions", "link" : "laika\/ast\/Strong.html#withOptions(options:laika.ast.Options):laika.ast.Strong", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Span]): Strong", "member" : "laika.ast.Strong.withContent", "link" : "laika\/ast\/Strong.html#withContent(newContent:Seq[laika.ast.Span]):laika.ast.Strong", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Strong.Self", "link" : "laika\/ast\/Strong.html#Self=laika.ast.Strong", "kind" : "type"}, {"member" : "laika.ast.Strong#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Strong.options", "link" : "laika\/ast\/Strong.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Span]", "member" : "laika.ast.Strong.content", "link" : "laika\/ast\/Strong.html#content:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "extractText", "tail" : "(): String", "member" : "laika.ast.SpanContainer.extractText", "link" : "laika\/ast\/Strong.html#extractText:String", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.SpanContainer.rewriteChildren", "link" : "laika\/ast\/Strong.html#rewriteChildren(rules:laika.ast.RewriteRules):SpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/Strong.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/Strong.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/Strong.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/Strong.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/Strong.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Strong.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Strong.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Strong.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Strong.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Strong.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Strong.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Strong.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Strong.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Strong.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Strong.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Strong.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Strong.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Strong.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Strong.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Strong.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Strong.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Strong.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Strong.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Strong.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Strong.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Strong.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Strong.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Strong.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Strong.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Strong.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Strong.html", "kind" : "case class"}, {"name" : "laika.ast.Style", "shortDescription" : "Constants for style names wrapped in Options instances which are commonly used by Laika's core parsers and rewrite rules.", "object" : "laika\/ast\/Style$.html", "members_object" : [{"label" : "noHighlight", "tail" : ": Options", "member" : "laika.ast.Style.noHighlight", "link" : "laika\/ast\/Style$.html#noHighlight:laika.ast.Options", "kind" : "val"}, {"label" : "runtimeMessage", "tail" : ": Options", "member" : "laika.ast.Style.runtimeMessage", "link" : "laika\/ast\/Style$.html#runtimeMessage:laika.ast.Options", "kind" : "val"}, {"label" : "figure", "tail" : ": Options", "member" : "laika.ast.Style.figure", "link" : "laika\/ast\/Style$.html#figure:laika.ast.Options", "kind" : "val"}, {"label" : "legend", "tail" : ": Options", "member" : "laika.ast.Style.legend", "link" : "laika\/ast\/Style$.html#legend:laika.ast.Options", "kind" : "val"}, {"label" : "caption", "tail" : ": Options", "member" : "laika.ast.Style.caption", "link" : "laika\/ast\/Style$.html#caption:laika.ast.Options", "kind" : "val"}, {"label" : "attribution", "tail" : ": Options", "member" : "laika.ast.Style.attribution", "link" : "laika\/ast\/Style$.html#attribution:laika.ast.Options", "kind" : "val"}, {"label" : "label", "tail" : ": Options", "member" : "laika.ast.Style.label", "link" : "laika\/ast\/Style$.html#label:laika.ast.Options", "kind" : "val"}, {"label" : "footnoteLabel", "tail" : ": Options", "member" : "laika.ast.Style.footnoteLabel", "link" : "laika\/ast\/Style$.html#footnoteLabel:laika.ast.Options", "kind" : "val"}, {"label" : "footnote", "tail" : ": Options", "member" : "laika.ast.Style.footnote", "link" : "laika\/ast\/Style$.html#footnote:laika.ast.Options", "kind" : "val"}, {"label" : "citation", "tail" : ": Options", "member" : "laika.ast.Style.citation", "link" : "laika\/ast\/Style$.html#citation:laika.ast.Options", "kind" : "val"}, {"label" : "keepTogether", "tail" : ": Options", "member" : "laika.ast.Style.keepTogether", "link" : "laika\/ast\/Style$.html#keepTogether:laika.ast.Options", "kind" : "val"}, {"label" : "alignRight", "tail" : ": Options", "member" : "laika.ast.Style.alignRight", "link" : "laika\/ast\/Style$.html#alignRight:laika.ast.Options", "kind" : "val"}, {"label" : "alignLeft", "tail" : ": Options", "member" : "laika.ast.Style.alignLeft", "link" : "laika\/ast\/Style$.html#alignLeft:laika.ast.Options", "kind" : "val"}, {"label" : "alignCenter", "tail" : ": Options", "member" : "laika.ast.Style.alignCenter", "link" : "laika\/ast\/Style$.html#alignCenter:laika.ast.Options", "kind" : "val"}, {"label" : "level", "tail" : "(lev: Int): Options", "member" : "laika.ast.Style.level", "link" : "laika\/ast\/Style$.html#level(lev:Int):laika.ast.Options", "kind" : "def"}, {"label" : "bookmark", "tail" : ": Options", "member" : "laika.ast.Style.bookmark", "link" : "laika\/ast\/Style$.html#bookmark:laika.ast.Options", "kind" : "val"}, {"label" : "breadcrumb", "tail" : ": Options", "member" : "laika.ast.Style.breadcrumb", "link" : "laika\/ast\/Style$.html#breadcrumb:laika.ast.Options", "kind" : "val"}, {"label" : "active", "tail" : ": Options", "member" : "laika.ast.Style.active", "link" : "laika\/ast\/Style$.html#active:laika.ast.Options", "kind" : "val"}, {"label" : "navList", "tail" : ": Options", "member" : "laika.ast.Style.navList", "link" : "laika\/ast\/Style$.html#navList:laika.ast.Options", "kind" : "val"}, {"label" : "navHeader", "tail" : ": Options", "member" : "laika.ast.Style.navHeader", "link" : "laika\/ast\/Style$.html#navHeader:laika.ast.Options", "kind" : "val"}, {"label" : "nav", "tail" : ": Options", "member" : "laika.ast.Style.nav", "link" : "laika\/ast\/Style$.html#nav:laika.ast.Options", "kind" : "val"}, {"label" : "sectionNumber", "tail" : ": Options", "member" : "laika.ast.Style.sectionNumber", "link" : "laika\/ast\/Style$.html#sectionNumber:laika.ast.Options", "kind" : "val"}, {"label" : "section", "tail" : ": Options", "member" : "laika.ast.Style.section", "link" : "laika\/ast\/Style$.html#section:laika.ast.Options", "kind" : "val"}, {"label" : "title", "tail" : ": Options", "member" : "laika.ast.Style.title", "link" : "laika\/ast\/Style$.html#title:laika.ast.Options", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Style$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Style$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Style$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Style$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Style$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Style$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Style$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Style$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Style$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Style$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Style$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Style$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Style$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Style$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Style$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Style$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Style$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Style$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Style$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.ast.StyleDeclaration", "shortDescription" : "Represents a single style declaration.", "object" : "laika\/ast\/StyleDeclaration$.html", "members_object" : [{"label" : "apply", "tail" : "(predicate: StylePredicate, styles: (String, String)*): StyleDeclaration", "member" : "laika.ast.StyleDeclaration.apply", "link" : "laika\/ast\/StyleDeclaration$.html#apply(predicate:laika.ast.StylePredicate,styles:(String,String)*):laika.ast.StyleDeclaration", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function2.toString", "link" : "laika\/ast\/StyleDeclaration$.html#toString():String", "kind" : "def"}, {"label" : "tupled", "tail" : "(): ((StyleSelector, Map[String, String])) ⇒ StyleDeclaration", "member" : "scala.Function2.tupled", "link" : "laika\/ast\/StyleDeclaration$.html#tupled:((T1,T2))=>R", "kind" : "def"}, {"label" : "curried", "tail" : "(): (StyleSelector) ⇒ (Map[String, String]) ⇒ StyleDeclaration", "member" : "scala.Function2.curried", "link" : "laika\/ast\/StyleDeclaration$.html#curried:T1=>(T2=>R)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/StyleDeclaration$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/StyleDeclaration$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/StyleDeclaration$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/StyleDeclaration$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/StyleDeclaration$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/StyleDeclaration$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/StyleDeclaration$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StyleDeclaration$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StyleDeclaration$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StyleDeclaration$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/StyleDeclaration$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/StyleDeclaration$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/StyleDeclaration$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/StyleDeclaration$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/StyleDeclaration$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/StyleDeclaration$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/StyleDeclaration$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/StyleDeclaration$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "increaseOrderBy", "tail" : "(amount: Int): StyleDeclaration", "member" : "laika.ast.StyleDeclaration.increaseOrderBy", "link" : "laika\/ast\/StyleDeclaration.html#increaseOrderBy(amount:Int):laika.ast.StyleDeclaration", "kind" : "def"}, {"label" : "appliesTo", "tail" : "(element: Element, parents: Seq[Element]): Boolean", "member" : "laika.ast.StyleDeclaration.appliesTo", "link" : "laika\/ast\/StyleDeclaration.html#appliesTo(element:laika.ast.Element,parents:Seq[laika.ast.Element]):Boolean", "kind" : "def"}, {"member" : "laika.ast.StyleDeclaration#<init>", "error" : "unsupported entity"}, {"label" : "styles", "tail" : ": Map[String, String]", "member" : "laika.ast.StyleDeclaration.styles", "link" : "laika\/ast\/StyleDeclaration.html#styles:Map[String,String]", "kind" : "val"}, {"label" : "selector", "tail" : ": StyleSelector", "member" : "laika.ast.StyleDeclaration.selector", "link" : "laika\/ast\/StyleDeclaration.html#selector:laika.ast.StyleSelector", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/StyleDeclaration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/StyleDeclaration.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/StyleDeclaration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/StyleDeclaration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/StyleDeclaration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/StyleDeclaration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/StyleDeclaration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StyleDeclaration.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StyleDeclaration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StyleDeclaration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/StyleDeclaration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/StyleDeclaration.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/StyleDeclaration.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/StyleDeclaration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/StyleDeclaration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/StyleDeclaration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/StyleDeclaration.html", "kind" : "case class"}, {"name" : "laika.ast.StyleDeclarationSet", "shortDescription" : "Represents a set of one or more style declarations.", "object" : "laika\/ast\/StyleDeclarationSet$.html", "members_object" : [{"label" : "forPath", "tail" : "(path: Path, styles: Set[StyleDeclaration]): StyleDeclarationSet", "member" : "laika.ast.StyleDeclarationSet.forPath", "link" : "laika\/ast\/StyleDeclarationSet$.html#forPath(path:laika.ast.Path,styles:Set[laika.ast.StyleDeclaration]):laika.ast.StyleDeclarationSet", "kind" : "def"}, {"label" : "apply", "tail" : "(path: Path, styles: StyleDeclaration*): StyleDeclarationSet", "member" : "laika.ast.StyleDeclarationSet.apply", "link" : "laika\/ast\/StyleDeclarationSet$.html#apply(path:laika.ast.Path,styles:laika.ast.StyleDeclaration*):laika.ast.StyleDeclarationSet", "kind" : "def"}, {"label" : "empty", "tail" : ": StyleDeclarationSet", "member" : "laika.ast.StyleDeclarationSet.empty", "link" : "laika\/ast\/StyleDeclarationSet$.html#empty:laika.ast.StyleDeclarationSet", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function3.toString", "link" : "laika\/ast\/StyleDeclarationSet$.html#toString():String", "kind" : "def"}, {"label" : "tupled", "tail" : "(): ((Set[Path], Set[StyleDeclaration], Precedence)) ⇒ StyleDeclarationSet", "member" : "scala.Function3.tupled", "link" : "laika\/ast\/StyleDeclarationSet$.html#tupled:((T1,T2,T3))=>R", "kind" : "def"}, {"label" : "curried", "tail" : "(): (Set[Path]) ⇒ (Set[StyleDeclaration]) ⇒ (Precedence) ⇒ StyleDeclarationSet", "member" : "scala.Function3.curried", "link" : "laika\/ast\/StyleDeclarationSet$.html#curried:T1=>(T2=>(T3=>R))", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/StyleDeclarationSet$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/StyleDeclarationSet$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/StyleDeclarationSet$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/StyleDeclarationSet$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/StyleDeclarationSet$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/StyleDeclarationSet$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/StyleDeclarationSet$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StyleDeclarationSet$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StyleDeclarationSet$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StyleDeclarationSet$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/StyleDeclarationSet$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/StyleDeclarationSet$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/StyleDeclarationSet$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/StyleDeclarationSet$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/StyleDeclarationSet$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/StyleDeclarationSet$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/StyleDeclarationSet$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/StyleDeclarationSet$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "++", "tail" : "(set: StyleDeclarationSet): StyleDeclarationSet", "member" : "laika.ast.StyleDeclarationSet.++", "link" : "laika\/ast\/StyleDeclarationSet.html#++(set:laika.ast.StyleDeclarationSet):laika.ast.StyleDeclarationSet", "kind" : "def"}, {"label" : "collectStyles", "tail" : "(target: Element, parents: Seq[Element]): Map[String, String]", "member" : "laika.ast.StyleDeclarationSet.collectStyles", "link" : "laika\/ast\/StyleDeclarationSet.html#collectStyles(target:laika.ast.Element,parents:Seq[laika.ast.Element]):Map[String,String]", "kind" : "def"}, {"member" : "laika.ast.StyleDeclarationSet#<init>", "error" : "unsupported entity"}, {"label" : "precedence", "tail" : ": Precedence", "member" : "laika.ast.StyleDeclarationSet.precedence", "link" : "laika\/ast\/StyleDeclarationSet.html#precedence:laika.bundle.Precedence", "kind" : "val"}, {"label" : "styles", "tail" : ": Set[StyleDeclaration]", "member" : "laika.ast.StyleDeclarationSet.styles", "link" : "laika\/ast\/StyleDeclarationSet.html#styles:Set[laika.ast.StyleDeclaration]", "kind" : "val"}, {"label" : "paths", "tail" : ": Set[Path]", "member" : "laika.ast.StyleDeclarationSet.paths", "link" : "laika\/ast\/StyleDeclarationSet.html#paths:Set[laika.ast.Path]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/StyleDeclarationSet.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/StyleDeclarationSet.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/StyleDeclarationSet.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/StyleDeclarationSet.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/StyleDeclarationSet.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/StyleDeclarationSet.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/StyleDeclarationSet.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StyleDeclarationSet.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StyleDeclarationSet.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StyleDeclarationSet.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/StyleDeclarationSet.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/StyleDeclarationSet.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/StyleDeclarationSet.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/StyleDeclarationSet.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/StyleDeclarationSet.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/StyleDeclarationSet.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/StyleDeclarationSet.html", "kind" : "case class"}, {"name" : "laika.ast.StylePredicate", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/StylePredicate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/StylePredicate.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/StylePredicate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/StylePredicate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/StylePredicate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/StylePredicate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/StylePredicate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StylePredicate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StylePredicate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StylePredicate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/StylePredicate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/StylePredicate.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/StylePredicate.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/StylePredicate.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/StylePredicate.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/StylePredicate.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/StylePredicate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/StylePredicate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/StylePredicate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "evaluate", "tail" : "(element: Element): Boolean", "member" : "laika.ast.StylePredicate.evaluate", "link" : "laika\/ast\/StylePredicate.html#evaluate(element:laika.ast.Element):Boolean", "kind" : "abstract def"}, {"label" : "specificity", "tail" : "(): Specificity", "member" : "laika.ast.StylePredicate.specificity", "link" : "laika\/ast\/StylePredicate.html#specificity:laika.ast.Specificity", "kind" : "abstract def"}], "shortDescription" : "Represents a single predicate which ispart of the selector for a style declaration.", "object" : "laika\/ast\/StylePredicate$.html", "members_object" : [{"label" : "StyleName", "tail" : "", "member" : "laika.ast.StylePredicate.StyleName", "link" : "laika\/ast\/StylePredicate$.html#StyleNameextendsStylePredicatewithProductwithSerializable", "kind" : "case class"}, {"label" : "Id", "tail" : "", "member" : "laika.ast.StylePredicate.Id", "link" : "laika\/ast\/StylePredicate$.html#IdextendsStylePredicatewithProductwithSerializable", "kind" : "case class"}, {"label" : "ElementType", "tail" : "", "member" : "laika.ast.StylePredicate.ElementType", "link" : "laika\/ast\/StylePredicate$.html#ElementTypeextendsStylePredicatewithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/StylePredicate$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/StylePredicate$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/StylePredicate$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/StylePredicate$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/StylePredicate$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/StylePredicate$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/StylePredicate$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StylePredicate$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StylePredicate$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StylePredicate$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/StylePredicate$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/StylePredicate$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/StylePredicate$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/StylePredicate$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/StylePredicate$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/StylePredicate$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/StylePredicate$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/StylePredicate$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/StylePredicate$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/ast\/StylePredicate.html", "kind" : "trait"}, {"name" : "laika.ast.Styles", "shortDescription" : "Factory and extractor for an Options instance with style names.", "object" : "laika\/ast\/Styles$.html", "members_object" : [{"label" : "unapplySeq", "tail" : "(value: Options): Option[Seq[String]]", "member" : "laika.ast.Styles.unapplySeq", "link" : "laika\/ast\/Styles$.html#unapplySeq(value:laika.ast.Options):Option[Seq[String]]", "kind" : "def"}, {"label" : "apply", "tail" : "(values: Set[String]): Options", "member" : "laika.ast.Styles.apply", "link" : "laika\/ast\/Styles$.html#apply(values:Set[String]):laika.ast.Options", "kind" : "def"}, {"label" : "apply", "tail" : "(values: String*): Options", "member" : "laika.ast.Styles.apply", "link" : "laika\/ast\/Styles$.html#apply(values:String*):laika.ast.Options", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Styles$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Styles$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Styles$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Styles$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Styles$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Styles$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Styles$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Styles$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Styles$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Styles$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Styles$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Styles$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Styles$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Styles$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Styles$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Styles$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Styles$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Styles$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Styles$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.ast.StyleSelector", "shortDescription" : "Responsible for determining whether a style declaration should be applied to a target element,basing its decision on a set of predicates.", "members_case class" : [{"label" : "matches", "tail" : "(target: Element, parents: Seq[Element]): Boolean", "member" : "laika.ast.StyleSelector.matches", "link" : "laika\/ast\/StyleSelector.html#matches(target:laika.ast.Element,parents:Seq[laika.ast.Element]):Boolean", "kind" : "def"}, {"label" : "specificity", "tail" : "(): Specificity", "member" : "laika.ast.StyleSelector.specificity", "link" : "laika\/ast\/StyleSelector.html#specificity:laika.ast.Specificity", "kind" : "def"}, {"member" : "laika.ast.StyleSelector#<init>", "error" : "unsupported entity"}, {"label" : "order", "tail" : ": Int", "member" : "laika.ast.StyleSelector.order", "link" : "laika\/ast\/StyleSelector.html#order:Int", "kind" : "val"}, {"label" : "parent", "tail" : ": Option[ParentSelector]", "member" : "laika.ast.StyleSelector.parent", "link" : "laika\/ast\/StyleSelector.html#parent:Option[laika.ast.ParentSelector]", "kind" : "val"}, {"label" : "predicates", "tail" : ": Set[StylePredicate]", "member" : "laika.ast.StyleSelector.predicates", "link" : "laika\/ast\/StyleSelector.html#predicates:Set[laika.ast.StylePredicate]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/StyleSelector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/StyleSelector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/StyleSelector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/StyleSelector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/StyleSelector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/StyleSelector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/StyleSelector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StyleSelector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StyleSelector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/StyleSelector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/StyleSelector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/StyleSelector.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/StyleSelector.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/StyleSelector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/StyleSelector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/StyleSelector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/StyleSelector.html", "kind" : "case class"}, {"name" : "laika.ast.Table", "shortDescription" : "A table consisting of a head and a body part and optional caption and column specification.", "object" : "laika\/ast\/Table$.html", "members_object" : [{"label" : "apply", "tail" : "(row: Row, rows: Row*): Table", "member" : "laika.ast.Table.apply", "link" : "laika\/ast\/Table$.html#apply(row:laika.ast.Row,rows:laika.ast.Row*):laika.ast.Table", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Table$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Table$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Table$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Table$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Table$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Table$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Table$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Table$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Table$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Table$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Table$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Table$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Table$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Table$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Table$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Table$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Table$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Table$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Table$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Table", "member" : "laika.ast.Table.withOptions", "link" : "laika\/ast\/Table.html#withOptions(options:laika.ast.Options):laika.ast.Table", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.Table.toString", "link" : "laika\/ast\/Table.html#toString():String", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Table", "member" : "laika.ast.Table.rewriteChildren", "link" : "laika\/ast\/Table.html#rewriteChildren(rules:laika.ast.RewriteRules):laika.ast.Table", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Table.Self", "link" : "laika\/ast\/Table.html#Self=laika.ast.Table", "kind" : "type"}, {"member" : "laika.ast.Table#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Table.options", "link" : "laika\/ast\/Table.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "columns", "tail" : ": Columns", "member" : "laika.ast.Table.columns", "link" : "laika\/ast\/Table.html#columns:laika.ast.Columns", "kind" : "val"}, {"label" : "caption", "tail" : ": Caption", "member" : "laika.ast.Table.caption", "link" : "laika\/ast\/Table.html#caption:laika.ast.Caption", "kind" : "val"}, {"label" : "body", "tail" : ": TableBody", "member" : "laika.ast.Table.body", "link" : "laika\/ast\/Table.html#body:laika.ast.TableBody", "kind" : "val"}, {"label" : "head", "tail" : ": TableHead", "member" : "laika.ast.Table.head", "link" : "laika\/ast\/Table.html#head:laika.ast.TableHead", "kind" : "val"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/Table.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/Table.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/Table.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/Table.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Table.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Table.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Table.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Table.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Table.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Table.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Table.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Table.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Table.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Table.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Table.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Table.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Table.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Table.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Table.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Table.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Table.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Table.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Table.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Table.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Table.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Table.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Table.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Table.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Table.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Table.html", "kind" : "case class"}, {"name" : "laika.ast.TableBody", "shortDescription" : "Contains the body rows of a table.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): TableBody", "member" : "laika.ast.TableBody.withOptions", "link" : "laika\/ast\/TableBody.html#withOptions(options:laika.ast.Options):laika.ast.TableBody", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): TableBody", "member" : "laika.ast.TableBody.rewriteChildren", "link" : "laika\/ast\/TableBody.html#rewriteChildren(rules:laika.ast.RewriteRules):laika.ast.TableBody", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.TableBody.Self", "link" : "laika\/ast\/TableBody.html#Self=laika.ast.TableBody", "kind" : "type"}, {"member" : "laika.ast.TableBody#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.TableBody.options", "link" : "laika\/ast\/TableBody.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Row]", "member" : "laika.ast.TableBody.content", "link" : "laika\/ast\/TableBody.html#content:Seq[laika.ast.Row]", "kind" : "val"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/TableBody.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/TableBody.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/TableBody.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/TableBody.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/TableBody.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/TableBody.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/TableBody.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/TableBody.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/TableBody.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TableBody.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TableBody.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/TableBody.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/TableBody.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/TableBody.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TableBody.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TableBody.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TableBody.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TableBody.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TableBody.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TableBody.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TableBody.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TableBody.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TableBody.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TableBody.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TableBody.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TableBody.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TableBody.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TableBody.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TableBody.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TableBody.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/TableBody.html", "kind" : "case class"}, {"name" : "laika.ast.TableContainer", "members_trait" : [{"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/TableContainer.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/TableContainer.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/TableContainer.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/TableContainer.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/TableContainer.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/TableContainer.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/TableContainer.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/TableContainer.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TableContainer.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TableContainer.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/TableContainer.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/TableContainer.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/TableContainer.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/TableContainer.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/TableContainer.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TableContainer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TableContainer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TableContainer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TableContainer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TableContainer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TableContainer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TableContainer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TableContainer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TableContainer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TableContainer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TableContainer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TableContainer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TableContainer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/TableContainer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/TableContainer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TableContainer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TableContainer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TableContainer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "laika.ast.TableContainer.Self", "error" : "unsupported entity"}, {"label" : "content", "tail" : "(): Seq[TableElement]", "member" : "laika.ast.Container.content", "link" : "laika\/ast\/TableContainer.html#content:T", "kind" : "abstract def"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/TableContainer.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/TableContainer.html#options:laika.ast.Options", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/TableContainer.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/TableContainer.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/TableContainer.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "A container of table elements.", "trait" : "laika\/ast\/TableContainer.html", "kind" : "trait"}, {"name" : "laika.ast.TableElement", "members_trait" : [{"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/TableElement.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/TableElement.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/TableElement.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/TableElement.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TableElement.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TableElement.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/TableElement.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/TableElement.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/TableElement.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/TableElement.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/TableElement.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TableElement.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TableElement.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TableElement.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TableElement.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TableElement.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TableElement.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TableElement.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TableElement.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TableElement.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TableElement.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TableElement.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TableElement.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/TableElement.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TableElement.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/TableElement.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/TableElement.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TableElement.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TableElement.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TableElement.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "laika.ast.TableElement.Self", "error" : "unsupported entity"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/TableElement.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/TableElement.html#options:laika.ast.Options", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/TableElement.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/TableElement.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/TableElement.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "A table element, like a row, cell or column.", "trait" : "laika\/ast\/TableElement.html", "kind" : "trait"}, {"name" : "laika.ast.TableHead", "shortDescription" : "Contains the header rows of a table.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): TableHead", "member" : "laika.ast.TableHead.withOptions", "link" : "laika\/ast\/TableHead.html#withOptions(options:laika.ast.Options):laika.ast.TableHead", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): TableHead", "member" : "laika.ast.TableHead.rewriteChildren", "link" : "laika\/ast\/TableHead.html#rewriteChildren(rules:laika.ast.RewriteRules):laika.ast.TableHead", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.TableHead.Self", "link" : "laika\/ast\/TableHead.html#Self=laika.ast.TableHead", "kind" : "type"}, {"member" : "laika.ast.TableHead#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.TableHead.options", "link" : "laika\/ast\/TableHead.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Row]", "member" : "laika.ast.TableHead.content", "link" : "laika\/ast\/TableHead.html#content:Seq[laika.ast.Row]", "kind" : "val"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/TableHead.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/TableHead.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/TableHead.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/TableHead.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/TableHead.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/TableHead.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/TableHead.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/TableHead.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/TableHead.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TableHead.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TableHead.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/TableHead.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/TableHead.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/TableHead.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TableHead.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TableHead.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TableHead.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TableHead.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TableHead.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TableHead.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TableHead.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TableHead.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TableHead.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TableHead.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TableHead.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TableHead.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TableHead.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TableHead.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TableHead.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TableHead.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/TableHead.html", "kind" : "case class"}, {"name" : "laika.ast.Target", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Target.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Target.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Target.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Target.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Target.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Target.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Target.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Target.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Target.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Target.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Target.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Target.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Target.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Target.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Target.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Target.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Target.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Target.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Target.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "render", "tail" : "(internalTargetsAbsolute: Boolean): String", "member" : "laika.ast.Target.render", "link" : "laika\/ast\/Target.html#render(internalTargetsAbsolute:Boolean):String", "kind" : "abstract def"}], "shortDescription" : "Represents a target that can be referred to by links, either within the virtual tree or external.", "object" : "laika\/ast\/Target$.html", "members_object" : [{"label" : "parse", "tail" : "(url: String): Target", "member" : "laika.ast.Target.parse", "link" : "laika\/ast\/Target$.html#parse(url:String):laika.ast.Target", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Target$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Target$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Target$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Target$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Target$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Target$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Target$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Target$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Target$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Target$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Target$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Target$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Target$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Target$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Target$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Target$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Target$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Target$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Target$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/ast\/Target.html", "kind" : "trait"}, {"name" : "laika.ast.TargetFormat", "shortDescription" : "An element that only gets rendered for a specific output format.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): TargetFormat", "member" : "laika.ast.TargetFormat.withOptions", "link" : "laika\/ast\/TargetFormat.html#withOptions(options:laika.ast.Options):laika.ast.TargetFormat", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.TargetFormat.Self", "link" : "laika\/ast\/TargetFormat.html#Self=laika.ast.TargetFormat", "kind" : "type"}, {"member" : "laika.ast.TargetFormat#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.TargetFormat.options", "link" : "laika\/ast\/TargetFormat.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "element", "tail" : ": Element", "member" : "laika.ast.TargetFormat.element", "link" : "laika\/ast\/TargetFormat.html#element:laika.ast.Element", "kind" : "val"}, {"label" : "formats", "tail" : ": NonEmptySet[String]", "member" : "laika.ast.TargetFormat.formats", "link" : "laika\/ast\/TargetFormat.html#formats:cats.data.NonEmptySet[String]", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/TargetFormat.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/TargetFormat.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/TargetFormat.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/TargetFormat.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TargetFormat.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TargetFormat.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/TargetFormat.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/TargetFormat.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/TargetFormat.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TargetFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TargetFormat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TargetFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TargetFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TargetFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TargetFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TargetFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TargetFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TargetFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TargetFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TargetFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TargetFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TargetFormat.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TargetFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TargetFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TargetFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/TargetFormat.html", "kind" : "case class"}, {"name" : "laika.ast.TemplateContextReference", "shortDescription" : "A context reference specifically for use in template documents.", "members_case class" : [{"label" : "unresolvedMessage", "tail" : ": String", "member" : "laika.ast.TemplateContextReference.unresolvedMessage", "link" : "laika\/ast\/TemplateContextReference.html#unresolvedMessage:String", "kind" : "lazy val"}, {"label" : "withOptions", "tail" : "(options: Options): TemplateContextReference", "member" : "laika.ast.TemplateContextReference.withOptions", "link" : "laika\/ast\/TemplateContextReference.html#withOptions(options:laika.ast.Options):laika.ast.TemplateContextReference", "kind" : "def"}, {"label" : "result", "tail" : "(value: ConfigResult[Option[ConfigValue]]): TemplateSpan", "member" : "laika.ast.TemplateContextReference.result", "link" : "laika\/ast\/TemplateContextReference.html#result(value:laika.config.Config.ConfigResult[Option[laika.config.ConfigValue]]):laika.ast.TemplateSpan", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.TemplateContextReference.Self", "link" : "laika\/ast\/TemplateContextReference.html#Self=laika.ast.TemplateContextReference", "kind" : "type"}, {"member" : "laika.ast.TemplateContextReference#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.TemplateContextReference.options", "link" : "laika\/ast\/TemplateContextReference.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "source", "tail" : ": SourceFragment", "member" : "laika.ast.TemplateContextReference.source", "link" : "laika\/ast\/TemplateContextReference.html#source:laika.parse.SourceFragment", "kind" : "val"}, {"label" : "required", "tail" : ": Boolean", "member" : "laika.ast.TemplateContextReference.required", "link" : "laika\/ast\/TemplateContextReference.html#required:Boolean", "kind" : "val"}, {"label" : "ref", "tail" : ": Key", "member" : "laika.ast.TemplateContextReference.ref", "link" : "laika\/ast\/TemplateContextReference.html#ref:laika.config.Key", "kind" : "val"}, {"label" : "invalidType", "tail" : "(value: ConfigValue): InvalidSpan", "member" : "laika.ast.ContextReference.invalidType", "link" : "laika\/ast\/TemplateContextReference.html#invalidType(value:laika.config.ConfigValue):laika.ast.InvalidSpan", "kind" : "def"}, {"label" : "invalid", "tail" : "(cError: ConfigError): InvalidSpan", "member" : "laika.ast.ContextReference.invalid", "link" : "laika\/ast\/TemplateContextReference.html#invalid(cError:laika.config.ConfigError):laika.ast.InvalidSpan", "kind" : "def"}, {"label" : "missing", "tail" : "(): InvalidSpan", "member" : "laika.ast.ContextReference.missing", "link" : "laika\/ast\/TemplateContextReference.html#missing:laika.ast.InvalidSpan", "kind" : "def"}, {"label" : "resolve", "tail" : "(cursor: DocumentCursor): Span", "member" : "laika.ast.ContextReference.resolve", "link" : "laika\/ast\/TemplateContextReference.html#resolve(cursor:laika.ast.DocumentCursor):laika.ast.Span", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/TemplateContextReference.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/TemplateContextReference.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/TemplateContextReference.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/TemplateContextReference.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TemplateContextReference.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TemplateContextReference.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/TemplateContextReference.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/TemplateContextReference.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/TemplateContextReference.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TemplateContextReference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TemplateContextReference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TemplateContextReference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TemplateContextReference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TemplateContextReference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TemplateContextReference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TemplateContextReference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateContextReference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateContextReference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateContextReference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TemplateContextReference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TemplateContextReference.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TemplateContextReference.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TemplateContextReference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TemplateContextReference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TemplateContextReference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/TemplateContextReference.html", "kind" : "case class"}, {"name" : "laika.ast.TemplateDocument", "shortDescription" : "A template document containing the element tree of a parsed template and its extracted configuration section (if present).", "members_case class" : [{"label" : "applyTo", "tail" : "(document: Document): Either[ConfigError, Document]", "member" : "laika.ast.TemplateDocument.applyTo", "link" : "laika\/ast\/TemplateDocument.html#applyTo(document:laika.ast.Document):Either[laika.config.ConfigError,laika.ast.Document]", "kind" : "def"}, {"member" : "laika.ast.TemplateDocument#<init>", "error" : "unsupported entity"}, {"label" : "config", "tail" : ": ConfigParser", "member" : "laika.ast.TemplateDocument.config", "link" : "laika\/ast\/TemplateDocument.html#config:laika.config.ConfigParser", "kind" : "val"}, {"label" : "content", "tail" : ": TemplateRoot", "member" : "laika.ast.TemplateDocument.content", "link" : "laika\/ast\/TemplateDocument.html#content:laika.ast.TemplateRoot", "kind" : "val"}, {"label" : "path", "tail" : ": Path", "member" : "laika.ast.TemplateDocument.path", "link" : "laika\/ast\/TemplateDocument.html#path:laika.ast.Path", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "laika.ast.Navigatable.name", "link" : "laika\/ast\/TemplateDocument.html#name:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TemplateDocument.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TemplateDocument.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TemplateDocument.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TemplateDocument.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TemplateDocument.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TemplateDocument.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TemplateDocument.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateDocument.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateDocument.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateDocument.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TemplateDocument.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TemplateDocument.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TemplateDocument.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TemplateDocument.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TemplateDocument.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TemplateDocument.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/TemplateDocument.html", "kind" : "case class"}, {"name" : "laika.ast.TemplateElement", "shortDescription" : "Wraps a generic element that otherwise could not be placed directly into a template document tree.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): TemplateElement", "member" : "laika.ast.TemplateElement.withOptions", "link" : "laika\/ast\/TemplateElement.html#withOptions(options:laika.ast.Options):laika.ast.TemplateElement", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): TemplateElement", "member" : "laika.ast.TemplateElement.rewriteChildren", "link" : "laika\/ast\/TemplateElement.html#rewriteChildren(rules:laika.ast.RewriteRules):laika.ast.TemplateElement", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.TemplateElement.Self", "link" : "laika\/ast\/TemplateElement.html#Self=laika.ast.TemplateElement", "kind" : "type"}, {"member" : "laika.ast.TemplateElement#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.TemplateElement.options", "link" : "laika\/ast\/TemplateElement.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "indent", "tail" : ": Int", "member" : "laika.ast.TemplateElement.indent", "link" : "laika\/ast\/TemplateElement.html#indent:Int", "kind" : "val"}, {"label" : "element", "tail" : ": Element", "member" : "laika.ast.TemplateElement.element", "link" : "laika\/ast\/TemplateElement.html#element:laika.ast.Element", "kind" : "val"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/TemplateElement.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/TemplateElement.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/TemplateElement.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/TemplateElement.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/TemplateElement.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/TemplateElement.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/TemplateElement.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/TemplateElement.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TemplateElement.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TemplateElement.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/TemplateElement.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/TemplateElement.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/TemplateElement.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TemplateElement.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TemplateElement.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TemplateElement.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TemplateElement.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TemplateElement.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TemplateElement.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TemplateElement.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateElement.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateElement.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateElement.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TemplateElement.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TemplateElement.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TemplateElement.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TemplateElement.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TemplateElement.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TemplateElement.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/TemplateElement.html", "kind" : "case class"}, {"name" : "laika.ast.TemplateRoot", "shortDescription" : "The root element of a template document tree.", "object" : "laika\/ast\/TemplateRoot$.html", "members_object" : [{"label" : "fallback", "tail" : ": TemplateRoot", "member" : "laika.ast.TemplateRoot.fallback", "link" : "laika\/ast\/TemplateRoot$.html#fallback:laika.ast.TemplateRoot", "kind" : "val"}, {"label" : "createSpanContainer", "tail" : "(spans: Seq[TemplateSpan]): ContainerType", "member" : "laika.ast.TemplateRoot.createSpanContainer", "link" : "laika\/ast\/TemplateRoot$.html#createSpanContainer(spans:Seq[laika.ast.TemplateSpan]):laika.ast.TemplateRoot.ContainerType", "kind" : "def"}, {"label" : "ContainerType", "tail" : "", "member" : "laika.ast.TemplateRoot.ContainerType", "link" : "laika\/ast\/TemplateRoot$.html#ContainerType=laika.ast.TemplateRoot", "kind" : "type"}, {"label" : "apply", "tail" : "(span: TemplateSpan, spans: TemplateSpan*): ContainerType", "member" : "laika.ast.TemplateSpanContainerCompanion.apply", "link" : "laika\/ast\/TemplateRoot$.html#apply(span:laika.ast.TemplateSpan,spans:laika.ast.TemplateSpan*):TemplateSpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.TemplateSpanContainerCompanion.apply", "link" : "laika\/ast\/TemplateRoot$.html#apply(text:String,texts:String*):TemplateSpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.TemplateSpanContainerCompanion.empty", "link" : "laika\/ast\/TemplateRoot$.html#empty:TemplateSpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TemplateRoot$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TemplateRoot$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TemplateRoot$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TemplateRoot$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TemplateRoot$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TemplateRoot$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TemplateRoot$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateRoot$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateRoot$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateRoot$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TemplateRoot$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TemplateRoot$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/TemplateRoot$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TemplateRoot$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/TemplateRoot$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/TemplateRoot$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TemplateRoot$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TemplateRoot$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TemplateRoot$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): TemplateRoot", "member" : "laika.ast.TemplateRoot.withOptions", "link" : "laika\/ast\/TemplateRoot.html#withOptions(options:laika.ast.Options):laika.ast.TemplateRoot", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[TemplateSpan]): TemplateRoot", "member" : "laika.ast.TemplateRoot.withContent", "link" : "laika\/ast\/TemplateRoot.html#withContent(newContent:Seq[laika.ast.TemplateSpan]):laika.ast.TemplateRoot", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.TemplateRoot.Self", "link" : "laika\/ast\/TemplateRoot.html#Self=laika.ast.TemplateRoot", "kind" : "type"}, {"member" : "laika.ast.TemplateRoot#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.TemplateRoot.options", "link" : "laika\/ast\/TemplateRoot.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[TemplateSpan]", "member" : "laika.ast.TemplateRoot.content", "link" : "laika\/ast\/TemplateRoot.html#content:Seq[laika.ast.TemplateSpan]", "kind" : "val"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.TemplateSpanContainer.rewriteChildren", "link" : "laika\/ast\/TemplateRoot.html#rewriteChildren(rules:laika.ast.RewriteRules):TemplateSpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteTemplateSpans", "tail" : "(rules: RewriteRule[TemplateSpan]): Self", "member" : "laika.ast.TemplateSpanContainer.rewriteTemplateSpans", "link" : "laika\/ast\/TemplateRoot.html#rewriteTemplateSpans(rules:laika.ast.RewriteRule[laika.ast.TemplateSpan]):TemplateSpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/TemplateRoot.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/TemplateRoot.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/TemplateRoot.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/TemplateRoot.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/TemplateRoot.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/TemplateRoot.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/TemplateRoot.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/TemplateRoot.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/TemplateRoot.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TemplateRoot.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TemplateRoot.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/TemplateRoot.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/TemplateRoot.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/TemplateRoot.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TemplateRoot.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TemplateRoot.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TemplateRoot.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TemplateRoot.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TemplateRoot.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TemplateRoot.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TemplateRoot.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateRoot.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateRoot.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateRoot.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TemplateRoot.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TemplateRoot.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TemplateRoot.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TemplateRoot.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TemplateRoot.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TemplateRoot.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/TemplateRoot.html", "kind" : "case class"}, {"name" : "laika.ast.TemplateSpan", "members_trait" : [{"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/TemplateSpan.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/TemplateSpan.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/TemplateSpan.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/TemplateSpan.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TemplateSpan.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TemplateSpan.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/TemplateSpan.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/TemplateSpan.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/TemplateSpan.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/TemplateSpan.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/TemplateSpan.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TemplateSpan.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TemplateSpan.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TemplateSpan.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TemplateSpan.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TemplateSpan.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TemplateSpan.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TemplateSpan.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateSpan.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateSpan.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateSpan.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TemplateSpan.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TemplateSpan.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/TemplateSpan.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TemplateSpan.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/TemplateSpan.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/TemplateSpan.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TemplateSpan.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TemplateSpan.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TemplateSpan.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "laika.ast.Span.Self", "error" : "unsupported entity"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/TemplateSpan.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/TemplateSpan.html#options:laika.ast.Options", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/TemplateSpan.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/TemplateSpan.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/TemplateSpan.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "The base type for all inline elements that can be found in a template.", "trait" : "laika\/ast\/TemplateSpan.html", "kind" : "trait"}, {"name" : "laika.ast.TemplateSpanContainer", "members_trait" : [{"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.TemplateSpanContainer.rewriteChildren", "link" : "laika\/ast\/TemplateSpanContainer.html#rewriteChildren(rules:laika.ast.RewriteRules):TemplateSpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteTemplateSpans", "tail" : "(rules: RewriteRule[TemplateSpan]): Self", "member" : "laika.ast.TemplateSpanContainer.rewriteTemplateSpans", "link" : "laika\/ast\/TemplateSpanContainer.html#rewriteTemplateSpans(rules:laika.ast.RewriteRule[laika.ast.TemplateSpan]):TemplateSpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/TemplateSpanContainer.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/TemplateSpanContainer.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/TemplateSpanContainer.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/TemplateSpanContainer.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/TemplateSpanContainer.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/TemplateSpanContainer.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/TemplateSpanContainer.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/TemplateSpanContainer.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/TemplateSpanContainer.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TemplateSpanContainer.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TemplateSpanContainer.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/TemplateSpanContainer.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/TemplateSpanContainer.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/TemplateSpanContainer.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/TemplateSpanContainer.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/TemplateSpanContainer.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TemplateSpanContainer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TemplateSpanContainer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TemplateSpanContainer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TemplateSpanContainer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TemplateSpanContainer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TemplateSpanContainer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TemplateSpanContainer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateSpanContainer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateSpanContainer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateSpanContainer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TemplateSpanContainer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TemplateSpanContainer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TemplateSpanContainer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/TemplateSpanContainer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/TemplateSpanContainer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TemplateSpanContainer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TemplateSpanContainer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TemplateSpanContainer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withContent", "tail" : "(newContent: Seq[TemplateSpan]): Self", "member" : "laika.ast.TemplateSpanContainer.withContent", "link" : "laika\/ast\/TemplateSpanContainer.html#withContent(newContent:Seq[laika.ast.TemplateSpan]):TemplateSpanContainer.this.Self", "kind" : "abstract def"}, {"member" : "laika.ast.TemplateSpanContainer.Self", "error" : "unsupported entity"}, {"label" : "content", "tail" : "(): Seq[TemplateSpan]", "member" : "laika.ast.Container.content", "link" : "laika\/ast\/TemplateSpanContainer.html#content:T", "kind" : "abstract def"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/TemplateSpanContainer.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/TemplateSpanContainer.html#options:laika.ast.Options", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/TemplateSpanContainer.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/TemplateSpanContainer.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/TemplateSpanContainer.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "A container of other TemplateSpan elements.", "trait" : "laika\/ast\/TemplateSpanContainer.html", "kind" : "trait"}, {"name" : "laika.ast.TemplateSpanContainerCompanion", "members_trait" : [{"label" : "apply", "tail" : "(span: TemplateSpan, spans: TemplateSpan*): ContainerType", "member" : "laika.ast.TemplateSpanContainerCompanion.apply", "link" : "laika\/ast\/TemplateSpanContainerCompanion.html#apply(span:laika.ast.TemplateSpan,spans:laika.ast.TemplateSpan*):TemplateSpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.TemplateSpanContainerCompanion.apply", "link" : "laika\/ast\/TemplateSpanContainerCompanion.html#apply(text:String,texts:String*):TemplateSpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.TemplateSpanContainerCompanion.empty", "link" : "laika\/ast\/TemplateSpanContainerCompanion.html#empty:TemplateSpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TemplateSpanContainerCompanion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TemplateSpanContainerCompanion.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TemplateSpanContainerCompanion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TemplateSpanContainerCompanion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TemplateSpanContainerCompanion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TemplateSpanContainerCompanion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TemplateSpanContainerCompanion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateSpanContainerCompanion.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateSpanContainerCompanion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateSpanContainerCompanion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TemplateSpanContainerCompanion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TemplateSpanContainerCompanion.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/TemplateSpanContainerCompanion.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TemplateSpanContainerCompanion.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/TemplateSpanContainerCompanion.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/TemplateSpanContainerCompanion.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TemplateSpanContainerCompanion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TemplateSpanContainerCompanion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TemplateSpanContainerCompanion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createSpanContainer", "tail" : "(spans: Seq[TemplateSpan]): ContainerType", "member" : "laika.ast.TemplateSpanContainerCompanion.createSpanContainer", "link" : "laika\/ast\/TemplateSpanContainerCompanion.html#createSpanContainer(spans:Seq[laika.ast.TemplateSpan]):TemplateSpanContainerCompanion.this.ContainerType", "kind" : "abstract def"}, {"member" : "laika.ast.TemplateSpanContainerCompanion.ContainerType", "error" : "unsupported entity"}], "shortDescription" : "Common methods for simple template span containers (without additional parameters).", "trait" : "laika\/ast\/TemplateSpanContainerCompanion.html", "kind" : "trait"}, {"name" : "laika.ast.TemplateSpanSequence", "shortDescription" : "A generic container element containing a list of template spans.", "object" : "laika\/ast\/TemplateSpanSequence$.html", "members_object" : [{"label" : "createSpanContainer", "tail" : "(spans: Seq[TemplateSpan]): ContainerType", "member" : "laika.ast.TemplateSpanSequence.createSpanContainer", "link" : "laika\/ast\/TemplateSpanSequence$.html#createSpanContainer(spans:Seq[laika.ast.TemplateSpan]):laika.ast.TemplateSpanSequence.ContainerType", "kind" : "def"}, {"label" : "ContainerType", "tail" : "", "member" : "laika.ast.TemplateSpanSequence.ContainerType", "link" : "laika\/ast\/TemplateSpanSequence$.html#ContainerType=laika.ast.TemplateSpanSequence", "kind" : "type"}, {"label" : "apply", "tail" : "(span: TemplateSpan, spans: TemplateSpan*): ContainerType", "member" : "laika.ast.TemplateSpanContainerCompanion.apply", "link" : "laika\/ast\/TemplateSpanSequence$.html#apply(span:laika.ast.TemplateSpan,spans:laika.ast.TemplateSpan*):TemplateSpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.TemplateSpanContainerCompanion.apply", "link" : "laika\/ast\/TemplateSpanSequence$.html#apply(text:String,texts:String*):TemplateSpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.TemplateSpanContainerCompanion.empty", "link" : "laika\/ast\/TemplateSpanSequence$.html#empty:TemplateSpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TemplateSpanSequence$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TemplateSpanSequence$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TemplateSpanSequence$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TemplateSpanSequence$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TemplateSpanSequence$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TemplateSpanSequence$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TemplateSpanSequence$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateSpanSequence$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateSpanSequence$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateSpanSequence$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TemplateSpanSequence$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TemplateSpanSequence$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/TemplateSpanSequence$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TemplateSpanSequence$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/TemplateSpanSequence$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/TemplateSpanSequence$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TemplateSpanSequence$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TemplateSpanSequence$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TemplateSpanSequence$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): TemplateSpanSequence", "member" : "laika.ast.TemplateSpanSequence.withOptions", "link" : "laika\/ast\/TemplateSpanSequence.html#withOptions(options:laika.ast.Options):laika.ast.TemplateSpanSequence", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[TemplateSpan]): TemplateSpanSequence", "member" : "laika.ast.TemplateSpanSequence.withContent", "link" : "laika\/ast\/TemplateSpanSequence.html#withContent(newContent:Seq[laika.ast.TemplateSpan]):laika.ast.TemplateSpanSequence", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.TemplateSpanSequence.Self", "link" : "laika\/ast\/TemplateSpanSequence.html#Self=laika.ast.TemplateSpanSequence", "kind" : "type"}, {"member" : "laika.ast.TemplateSpanSequence#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.TemplateSpanSequence.options", "link" : "laika\/ast\/TemplateSpanSequence.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[TemplateSpan]", "member" : "laika.ast.TemplateSpanSequence.content", "link" : "laika\/ast\/TemplateSpanSequence.html#content:Seq[laika.ast.TemplateSpan]", "kind" : "val"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.TemplateSpanContainer.rewriteChildren", "link" : "laika\/ast\/TemplateSpanSequence.html#rewriteChildren(rules:laika.ast.RewriteRules):TemplateSpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteTemplateSpans", "tail" : "(rules: RewriteRule[TemplateSpan]): Self", "member" : "laika.ast.TemplateSpanContainer.rewriteTemplateSpans", "link" : "laika\/ast\/TemplateSpanSequence.html#rewriteTemplateSpans(rules:laika.ast.RewriteRule[laika.ast.TemplateSpan]):TemplateSpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/TemplateSpanSequence.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/TemplateSpanSequence.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/TemplateSpanSequence.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/TemplateSpanSequence.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/TemplateSpanSequence.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/TemplateSpanSequence.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/TemplateSpanSequence.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/TemplateSpanSequence.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/TemplateSpanSequence.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TemplateSpanSequence.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TemplateSpanSequence.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/TemplateSpanSequence.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/TemplateSpanSequence.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/TemplateSpanSequence.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TemplateSpanSequence.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TemplateSpanSequence.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TemplateSpanSequence.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TemplateSpanSequence.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TemplateSpanSequence.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TemplateSpanSequence.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TemplateSpanSequence.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateSpanSequence.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateSpanSequence.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateSpanSequence.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TemplateSpanSequence.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TemplateSpanSequence.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TemplateSpanSequence.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TemplateSpanSequence.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TemplateSpanSequence.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TemplateSpanSequence.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/TemplateSpanSequence.html", "kind" : "case class"}, {"name" : "laika.ast.TemplateString", "shortDescription" : "A simple string element, representing the parts of a template that are not detected as special markup constructs and treated as raw text.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): TemplateString", "member" : "laika.ast.TemplateString.withOptions", "link" : "laika\/ast\/TemplateString.html#withOptions(options:laika.ast.Options):laika.ast.TemplateString", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.TemplateString.Self", "link" : "laika\/ast\/TemplateString.html#Self=laika.ast.TemplateString", "kind" : "type"}, {"member" : "laika.ast.TemplateString#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.TemplateString.options", "link" : "laika\/ast\/TemplateString.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": String", "member" : "laika.ast.TemplateString.content", "link" : "laika\/ast\/TemplateString.html#content:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/TemplateString.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/TemplateString.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/TemplateString.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/TemplateString.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TemplateString.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TemplateString.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/TemplateString.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/TemplateString.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/TemplateString.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TemplateString.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TemplateString.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TemplateString.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TemplateString.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TemplateString.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TemplateString.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TemplateString.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateString.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateString.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TemplateString.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TemplateString.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TemplateString.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TemplateString.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TemplateString.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TemplateString.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TemplateString.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/TemplateString.html", "kind" : "case class"}, {"name" : "laika.ast.Text", "shortDescription" : "A simple text element.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Text", "member" : "laika.ast.Text.withOptions", "link" : "laika\/ast\/Text.html#withOptions(options:laika.ast.Options):laika.ast.Text", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Text.Self", "link" : "laika\/ast\/Text.html#Self=laika.ast.Text", "kind" : "type"}, {"member" : "laika.ast.Text#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Text.options", "link" : "laika\/ast\/Text.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": String", "member" : "laika.ast.Text.content", "link" : "laika\/ast\/Text.html#content:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Text.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Text.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Text.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Text.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Text.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Text.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Text.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Text.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Text.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Text.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Text.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Text.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Text.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Text.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Text.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Text.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Text.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Text.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Text.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Text.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Text.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Text.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Text.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Text.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Text.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Text.html", "kind" : "case class"}, {"name" : "laika.ast.TextContainer", "members_trait" : [{"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/TextContainer.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/TextContainer.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/TextContainer.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/TextContainer.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TextContainer.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TextContainer.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/TextContainer.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/TextContainer.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/TextContainer.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/TextContainer.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/TextContainer.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TextContainer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TextContainer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TextContainer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TextContainer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TextContainer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TextContainer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TextContainer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TextContainer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TextContainer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TextContainer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TextContainer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TextContainer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/TextContainer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TextContainer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/TextContainer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/TextContainer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TextContainer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TextContainer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TextContainer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "content", "tail" : "(): String", "member" : "laika.ast.Container.content", "link" : "laika\/ast\/TextContainer.html#content:T", "kind" : "abstract def"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/TextContainer.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/TextContainer.html#options:laika.ast.Options", "kind" : "abstract def"}, {"member" : "laika.ast.Customizable.Self", "error" : "unsupported entity"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/TextContainer.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/TextContainer.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/TextContainer.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "A container for plain text.", "trait" : "laika\/ast\/TextContainer.html", "kind" : "trait"}, {"name" : "laika.ast.TextDocumentType", "shortDescription" : "Base type for all document type descriptors for text input.", "members_class" : [{"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/TextDocumentType.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/TextDocumentType.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TextDocumentType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TextDocumentType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TextDocumentType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TextDocumentType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TextDocumentType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TextDocumentType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TextDocumentType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TextDocumentType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TextDocumentType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TextDocumentType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TextDocumentType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TextDocumentType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/TextDocumentType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TextDocumentType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/TextDocumentType.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/TextDocumentType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TextDocumentType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TextDocumentType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TextDocumentType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/TextDocumentType.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/TextDocumentType.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/TextDocumentType.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "class" : "laika\/ast\/TextDocumentType.html", "kind" : "class"}, {"name" : "laika.ast.Title", "shortDescription" : "The (optional) title of the document.", "object" : "laika\/ast\/Title$.html", "members_object" : [{"label" : "createSpanContainer", "tail" : "(spans: Seq[Span]): Title", "member" : "laika.ast.Title.createSpanContainer", "link" : "laika\/ast\/Title$.html#createSpanContainer(spans:Seq[laika.ast.Span]):laika.ast.Title", "kind" : "def"}, {"label" : "ContainerType", "tail" : "", "member" : "laika.ast.Title.ContainerType", "link" : "laika\/ast\/Title$.html#ContainerType=laika.ast.Title", "kind" : "type"}, {"label" : "apply", "tail" : "(span: Span, spans: Span*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/Title$.html#apply(span:laika.ast.Span,spans:laika.ast.Span*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/ast\/Title$.html#apply(text:String,texts:String*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.SpanContainerCompanion.empty", "link" : "laika\/ast\/Title$.html#empty:SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Title$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Title$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Title$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Title$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Title$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Title$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Title$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Title$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Title$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Title$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Title$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Title$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Title$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Title$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Title$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Title$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Title$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Title$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Title$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Title", "member" : "laika.ast.Title.withOptions", "link" : "laika\/ast\/Title.html#withOptions(options:laika.ast.Options):laika.ast.Title", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Span]): Title", "member" : "laika.ast.Title.withContent", "link" : "laika\/ast\/Title.html#withContent(newContent:Seq[laika.ast.Span]):laika.ast.Title", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.Title.Self", "link" : "laika\/ast\/Title.html#Self=laika.ast.Title", "kind" : "type"}, {"member" : "laika.ast.Title#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.Title.options", "link" : "laika\/ast\/Title.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Span]", "member" : "laika.ast.Title.content", "link" : "laika\/ast\/Title.html#content:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "extractText", "tail" : "(): String", "member" : "laika.ast.SpanContainer.extractText", "link" : "laika\/ast\/Title.html#extractText:String", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.SpanContainer.rewriteChildren", "link" : "laika\/ast\/Title.html#rewriteChildren(rules:laika.ast.RewriteRules):SpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/Title.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/Title.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/Title.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/Title.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/Title.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Title.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Title.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Title.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Title.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Title.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Title.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Title.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Title.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Title.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Title.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Title.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Title.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Title.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Title.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Title.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Title.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Title.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Title.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Title.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Title.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Title.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Title.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Title.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Title.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Title.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/Title.html", "kind" : "case class"}, {"name" : "laika.ast.TitledBlock", "shortDescription" : "Generic block element with a title.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): TitledBlock", "member" : "laika.ast.TitledBlock.withOptions", "link" : "laika\/ast\/TitledBlock.html#withOptions(options:laika.ast.Options):laika.ast.TitledBlock", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Block]): TitledBlock", "member" : "laika.ast.TitledBlock.withContent", "link" : "laika\/ast\/TitledBlock.html#withContent(newContent:Seq[laika.ast.Block]):laika.ast.TitledBlock", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): TitledBlock", "member" : "laika.ast.TitledBlock.rewriteChildren", "link" : "laika\/ast\/TitledBlock.html#rewriteChildren(rules:laika.ast.RewriteRules):laika.ast.TitledBlock", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.ast.TitledBlock.Self", "link" : "laika\/ast\/TitledBlock.html#Self=laika.ast.TitledBlock", "kind" : "type"}, {"member" : "laika.ast.TitledBlock#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.ast.TitledBlock.options", "link" : "laika\/ast\/TitledBlock.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Block]", "member" : "laika.ast.TitledBlock.content", "link" : "laika\/ast\/TitledBlock.html#content:Seq[laika.ast.Block]", "kind" : "val"}, {"label" : "title", "tail" : ": Seq[Span]", "member" : "laika.ast.TitledBlock.title", "link" : "laika\/ast\/TitledBlock.html#title:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "rewriteBlocks", "tail" : "(rules: RewriteRule[Block]): Self", "member" : "laika.ast.BlockContainer.rewriteBlocks", "link" : "laika\/ast\/TitledBlock.html#rewriteBlocks(rules:laika.ast.RewriteRule[laika.ast.Block]):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/ast\/TitledBlock.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/ast\/TitledBlock.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/ast\/TitledBlock.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/ast\/TitledBlock.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/ast\/TitledBlock.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/TitledBlock.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/TitledBlock.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/TitledBlock.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/TitledBlock.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TitledBlock.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/TitledBlock.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/TitledBlock.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/TitledBlock.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/TitledBlock.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TitledBlock.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TitledBlock.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TitledBlock.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TitledBlock.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TitledBlock.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TitledBlock.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TitledBlock.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TitledBlock.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TitledBlock.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TitledBlock.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TitledBlock.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TitledBlock.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TitledBlock.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TitledBlock.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TitledBlock.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TitledBlock.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/TitledBlock.html", "kind" : "case class"}, {"name" : "laika.ast.TreeBuilder", "shortDescription" : "Generically builds a tree structure out of a flat sequence of elements with a Path property thatsignifies the position in the tree.", "object" : "laika\/ast\/TreeBuilder$.html", "members_object" : [{"label" : "build", "tail" : "(content: Seq[C], buildNode: (Path, Seq[C]) ⇒ T): T", "member" : "laika.ast.TreeBuilder.build", "link" : "laika\/ast\/TreeBuilder$.html#build[C<:laika.ast.Navigatable,T<:C](content:Seq[C],buildNode:(laika.ast.Path,Seq[C])=>T):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TreeBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TreeBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TreeBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TreeBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TreeBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TreeBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TreeBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TreeBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TreeBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TreeBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TreeBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TreeBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/TreeBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TreeBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/TreeBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/TreeBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TreeBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TreeBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TreeBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.ast.TreeContent", "members_trait" : [{"label" : "targetFormats", "tail" : "(): TargetFormats", "member" : "laika.ast.TreeContent.targetFormats", "link" : "laika\/ast\/TreeContent.html#targetFormats:laika.rewrite.nav.TargetFormats", "kind" : "def"}, {"label" : "titleFromConfig", "tail" : "(): Option[SpanSequence]", "member" : "laika.ast.TreeContent.titleFromConfig", "link" : "laika\/ast\/TreeContent.html#titleFromConfig:Option[laika.ast.SpanSequence]", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "laika.ast.Navigatable.name", "link" : "laika\/ast\/TreeContent.html#name:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TreeContent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TreeContent.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TreeContent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TreeContent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TreeContent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TreeContent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TreeContent.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TreeContent.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TreeContent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TreeContent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TreeContent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TreeContent.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/TreeContent.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TreeContent.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/TreeContent.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/TreeContent.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TreeContent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TreeContent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TreeContent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "invalidElements", "tail" : "(filter: MessageFilter): Seq[Invalid]", "member" : "laika.ast.TreeContent.invalidElements", "link" : "laika\/ast\/TreeContent.html#invalidElements(filter:laika.ast.MessageFilter):Seq[laika.ast.Invalid]", "kind" : "abstract def"}, {"label" : "runtimeMessages", "tail" : "(filter: MessageFilter): Seq[RuntimeMessage]", "member" : "laika.ast.TreeContent.runtimeMessages", "link" : "laika\/ast\/TreeContent.html#runtimeMessages(filter:laika.ast.MessageFilter):Seq[laika.ast.RuntimeMessage]", "kind" : "abstract def"}, {"label" : "asNavigationItem", "tail" : "(context: NavigationBuilderContext): NavigationItem", "member" : "laika.ast.TreeContent.asNavigationItem", "link" : "laika\/ast\/TreeContent.html#asNavigationItem(context:laika.ast.NavigationBuilderContext):laika.ast.NavigationItem", "kind" : "abstract def"}, {"label" : "configScope", "tail" : "(): Scope", "member" : "laika.ast.TreeContent.configScope", "link" : "laika\/ast\/TreeContent.html#configScope:laika.config.Origin.Scope", "kind" : "abstract def"}, {"label" : "position", "tail" : "(): TreePosition", "member" : "laika.ast.TreeContent.position", "link" : "laika\/ast\/TreeContent.html#position:laika.ast.TreePosition", "kind" : "abstract def"}, {"label" : "config", "tail" : "(): Config", "member" : "laika.ast.TreeContent.config", "link" : "laika\/ast\/TreeContent.html#config:laika.config.Config", "kind" : "abstract def"}, {"label" : "title", "tail" : "(): Option[SpanSequence]", "member" : "laika.ast.TreeContent.title", "link" : "laika\/ast\/TreeContent.html#title:Option[laika.ast.SpanSequence]", "kind" : "abstract def"}, {"label" : "path", "tail" : "(): Path", "member" : "laika.ast.Navigatable.path", "link" : "laika\/ast\/TreeContent.html#path:laika.ast.Path", "kind" : "abstract def"}], "shortDescription" : "A titled, positional element in the document tree.", "trait" : "laika\/ast\/TreeContent.html", "kind" : "trait"}, {"name" : "laika.ast.TreeCursor", "shortDescription" : "Cursor for an entire document tree, providing access to allchild cursors of this tree and allowing to trigger rewriteoperations.", "object" : "laika\/ast\/TreeCursor$.html", "members_object" : [{"label" : "apply", "tail" : "(root: DocumentTree, format: Option[String]): TreeCursor", "member" : "laika.ast.TreeCursor.apply", "link" : "laika\/ast\/TreeCursor$.html#apply(root:laika.ast.DocumentTree,format:Option[String]):laika.ast.TreeCursor", "kind" : "def"}, {"label" : "apply", "tail" : "(root: RootCursor): TreeCursor", "member" : "laika.ast.TreeCursor.apply", "link" : "laika\/ast\/TreeCursor$.html#apply(root:laika.ast.RootCursor):laika.ast.TreeCursor", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TreeCursor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TreeCursor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TreeCursor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TreeCursor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TreeCursor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TreeCursor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TreeCursor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TreeCursor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TreeCursor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TreeCursor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TreeCursor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TreeCursor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/TreeCursor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TreeCursor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/TreeCursor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/TreeCursor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TreeCursor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TreeCursor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TreeCursor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "rewriteTarget", "tail" : "(rules: (DocumentCursor) ⇒ RewriteRules): DocumentTree", "member" : "laika.ast.TreeCursor.rewriteTarget", "link" : "laika\/ast\/TreeCursor.html#rewriteTarget(rules:laika.ast.DocumentCursor=>laika.ast.RewriteRules):laika.ast.DocumentTree", "kind" : "def"}, {"label" : "allDocuments", "tail" : ": Seq[DocumentCursor]", "member" : "laika.ast.TreeCursor.allDocuments", "link" : "laika\/ast\/TreeCursor.html#allDocuments:Seq[laika.ast.DocumentCursor]", "kind" : "lazy val"}, {"label" : "children", "tail" : ": Seq[Cursor]", "member" : "laika.ast.TreeCursor.children", "link" : "laika\/ast\/TreeCursor.html#children:Seq[laika.ast.Cursor]", "kind" : "lazy val"}, {"label" : "titleDocument", "tail" : ": Option[DocumentCursor]", "member" : "laika.ast.TreeCursor.titleDocument", "link" : "laika\/ast\/TreeCursor.html#titleDocument:Option[laika.ast.DocumentCursor]", "kind" : "lazy val"}, {"label" : "path", "tail" : ": Path", "member" : "laika.ast.TreeCursor.path", "link" : "laika\/ast\/TreeCursor.html#path:laika.ast.Path", "kind" : "val"}, {"label" : "Target", "tail" : "", "member" : "laika.ast.TreeCursor.Target", "link" : "laika\/ast\/TreeCursor.html#Target=laika.ast.DocumentTree", "kind" : "type"}, {"member" : "laika.ast.TreeCursor#<init>", "error" : "unsupported entity"}, {"label" : "position", "tail" : ": TreePosition", "member" : "laika.ast.TreeCursor.position", "link" : "laika\/ast\/TreeCursor.html#position:laika.ast.TreePosition", "kind" : "val"}, {"label" : "config", "tail" : ": Config", "member" : "laika.ast.TreeCursor.config", "link" : "laika\/ast\/TreeCursor.html#config:laika.config.Config", "kind" : "val"}, {"label" : "root", "tail" : ": RootCursor", "member" : "laika.ast.TreeCursor.root", "link" : "laika\/ast\/TreeCursor.html#root:laika.ast.RootCursor", "kind" : "val"}, {"label" : "parent", "tail" : ": Option[TreeCursor]", "member" : "laika.ast.TreeCursor.parent", "link" : "laika\/ast\/TreeCursor.html#parent:Option[laika.ast.TreeCursor]", "kind" : "val"}, {"label" : "target", "tail" : ": DocumentTree", "member" : "laika.ast.TreeCursor.target", "link" : "laika\/ast\/TreeCursor.html#target:laika.ast.DocumentTree", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TreeCursor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TreeCursor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TreeCursor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TreeCursor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TreeCursor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TreeCursor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TreeCursor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TreeCursor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TreeCursor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TreeCursor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TreeCursor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TreeCursor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TreeCursor.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TreeCursor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TreeCursor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TreeCursor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/TreeCursor.html", "kind" : "case class"}, {"name" : "laika.ast.TreePosition", "shortDescription" : "The position of an element within a document tree.", "object" : "laika\/ast\/TreePosition$.html", "members_class" : [{"label" : "equals", "tail" : "(obj: Any): Boolean", "member" : "laika.ast.TreePosition.equals", "link" : "laika\/ast\/TreePosition.html#equals(obj:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "laika.ast.TreePosition.hashCode", "link" : "laika\/ast\/TreePosition.html#hashCode():Int", "kind" : "def"}, {"label" : "compare", "tail" : "(other: TreePosition): Int", "member" : "laika.ast.TreePosition.compare", "link" : "laika\/ast\/TreePosition.html#compare(other:laika.ast.TreePosition):Int", "kind" : "def"}, {"label" : "forChild", "tail" : "(childPos: Int): TreePosition", "member" : "laika.ast.TreePosition.forChild", "link" : "laika\/ast\/TreePosition.html#forChild(childPos:Int):laika.ast.TreePosition", "kind" : "def"}, {"label" : "depth", "tail" : "(): Int", "member" : "laika.ast.TreePosition.depth", "link" : "laika\/ast\/TreePosition.html#depth:Int", "kind" : "def"}, {"label" : "toSpan", "tail" : "(): Span", "member" : "laika.ast.TreePosition.toSpan", "link" : "laika\/ast\/TreePosition.html#toSpan:laika.ast.Span", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.TreePosition.toString", "link" : "laika\/ast\/TreePosition.html#toString():String", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Int]", "member" : "laika.ast.TreePosition.toSeq", "link" : "laika\/ast\/TreePosition.html#toSeq:Seq[Int]", "kind" : "def"}, {"label" : "compareTo", "tail" : "(that: TreePosition): Int", "member" : "scala.math.Ordered.compareTo", "link" : "laika\/ast\/TreePosition.html#compareTo(that:A):Int", "kind" : "def"}, {"label" : ">=", "tail" : "(that: TreePosition): Boolean", "member" : "scala.math.Ordered.>=", "link" : "laika\/ast\/TreePosition.html#>=(that:A):Boolean", "kind" : "def"}, {"label" : "<=", "tail" : "(that: TreePosition): Boolean", "member" : "scala.math.Ordered.<=", "link" : "laika\/ast\/TreePosition.html#<=(that:A):Boolean", "kind" : "def"}, {"label" : ">", "tail" : "(that: TreePosition): Boolean", "member" : "scala.math.Ordered.>", "link" : "laika\/ast\/TreePosition.html#>(that:A):Boolean", "kind" : "def"}, {"label" : "<", "tail" : "(that: TreePosition): Boolean", "member" : "scala.math.Ordered.<", "link" : "laika\/ast\/TreePosition.html#<(that:A):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TreePosition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TreePosition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TreePosition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TreePosition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TreePosition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TreePosition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TreePosition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TreePosition.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TreePosition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TreePosition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TreePosition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TreePosition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TreePosition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TreePosition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TreePosition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TreePosition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "orphan", "tail" : ": TreePosition", "member" : "laika.ast.TreePosition.orphan", "link" : "laika\/ast\/TreePosition$.html#orphan:laika.ast.TreePosition", "kind" : "val"}, {"label" : "root", "tail" : ": TreePosition", "member" : "laika.ast.TreePosition.root", "link" : "laika\/ast\/TreePosition$.html#root:laika.ast.TreePosition", "kind" : "val"}, {"label" : "apply", "tail" : "(pos: Seq[Int]): TreePosition", "member" : "laika.ast.TreePosition.apply", "link" : "laika\/ast\/TreePosition$.html#apply(pos:Seq[Int]):laika.ast.TreePosition", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TreePosition$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TreePosition$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TreePosition$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TreePosition$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TreePosition$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TreePosition$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TreePosition$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TreePosition$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TreePosition$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TreePosition$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TreePosition$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TreePosition$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/TreePosition$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TreePosition$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/TreePosition$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/TreePosition$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TreePosition$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TreePosition$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TreePosition$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/ast\/TreePosition.html", "kind" : "class"}, {"name" : "laika.ast.TreeStructure", "members_trait" : [{"label" : "invalidElements", "tail" : "(filter: MessageFilter): Seq[Invalid]", "member" : "laika.ast.TreeStructure.invalidElements", "link" : "laika\/ast\/TreeStructure.html#invalidElements(filter:laika.ast.MessageFilter):Seq[laika.ast.Invalid]", "kind" : "def"}, {"label" : "runtimeMessages", "tail" : "(filter: MessageFilter): Seq[RuntimeMessage]", "member" : "laika.ast.TreeStructure.runtimeMessages", "link" : "laika\/ast\/TreeStructure.html#runtimeMessages(filter:laika.ast.MessageFilter):Seq[laika.ast.RuntimeMessage]", "kind" : "def"}, {"label" : "asNavigationItem", "tail" : "(context: NavigationBuilderContext): NavigationItem", "member" : "laika.ast.TreeStructure.asNavigationItem", "link" : "laika\/ast\/TreeStructure.html#asNavigationItem(context:laika.ast.NavigationBuilderContext):laika.ast.NavigationItem", "kind" : "def"}, {"label" : "selectSubtree", "tail" : "(path: RelativePath): Option[DocumentTree]", "member" : "laika.ast.TreeStructure.selectSubtree", "link" : "laika\/ast\/TreeStructure.html#selectSubtree(path:laika.ast.RelativePath):Option[laika.ast.DocumentTree]", "kind" : "def"}, {"label" : "selectSubtree", "tail" : "(path: String): Option[DocumentTree]", "member" : "laika.ast.TreeStructure.selectSubtree", "link" : "laika\/ast\/TreeStructure.html#selectSubtree(path:String):Option[laika.ast.DocumentTree]", "kind" : "def"}, {"label" : "withDefaultTemplate", "tail" : "(template: TemplateRoot, formatSuffix: String): DocumentTree", "member" : "laika.ast.TreeStructure.withDefaultTemplate", "link" : "laika\/ast\/TreeStructure.html#withDefaultTemplate(template:laika.ast.TemplateRoot,formatSuffix:String):laika.ast.DocumentTree", "kind" : "def"}, {"label" : "getDefaultTemplate", "tail" : "(formatSuffix: String): Option[TemplateDocument]", "member" : "laika.ast.TreeStructure.getDefaultTemplate", "link" : "laika\/ast\/TreeStructure.html#getDefaultTemplate(formatSuffix:String):Option[laika.ast.TemplateDocument]", "kind" : "def"}, {"label" : "selectTemplate", "tail" : "(path: RelativePath): Option[TemplateDocument]", "member" : "laika.ast.TreeStructure.selectTemplate", "link" : "laika\/ast\/TreeStructure.html#selectTemplate(path:laika.ast.RelativePath):Option[laika.ast.TemplateDocument]", "kind" : "def"}, {"label" : "selectTemplate", "tail" : "(path: String): Option[TemplateDocument]", "member" : "laika.ast.TreeStructure.selectTemplate", "link" : "laika\/ast\/TreeStructure.html#selectTemplate(path:String):Option[laika.ast.TemplateDocument]", "kind" : "def"}, {"label" : "selectDocument", "tail" : "(path: RelativePath): Option[Document]", "member" : "laika.ast.TreeStructure.selectDocument", "link" : "laika\/ast\/TreeStructure.html#selectDocument(path:laika.ast.RelativePath):Option[laika.ast.Document]", "kind" : "def"}, {"label" : "selectDocument", "tail" : "(path: String): Option[Document]", "member" : "laika.ast.TreeStructure.selectDocument", "link" : "laika\/ast\/TreeStructure.html#selectDocument(path:String):Option[laika.ast.Document]", "kind" : "def"}, {"label" : "isEmpty", "tail" : ": Boolean", "member" : "laika.ast.TreeStructure.isEmpty", "link" : "laika\/ast\/TreeStructure.html#isEmpty:Boolean", "kind" : "lazy val"}, {"label" : "allDocuments", "tail" : ": Seq[Document]", "member" : "laika.ast.TreeStructure.allDocuments", "link" : "laika\/ast\/TreeStructure.html#allDocuments:Seq[laika.ast.Document]", "kind" : "lazy val"}, {"label" : "title", "tail" : ": Option[SpanSequence]", "member" : "laika.ast.TreeStructure.title", "link" : "laika\/ast\/TreeStructure.html#title:Option[laika.ast.SpanSequence]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/TreeStructure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/TreeStructure.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/TreeStructure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/TreeStructure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/TreeStructure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/TreeStructure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/TreeStructure.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TreeStructure.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TreeStructure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/TreeStructure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/TreeStructure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/TreeStructure.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/TreeStructure.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/TreeStructure.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/TreeStructure.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/TreeStructure.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/TreeStructure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/TreeStructure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/TreeStructure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "templates", "tail" : "(): Seq[TemplateDocument]", "member" : "laika.ast.TreeStructure.templates", "link" : "laika\/ast\/TreeStructure.html#templates:Seq[laika.ast.TemplateDocument]", "kind" : "abstract def"}, {"label" : "titleDocument", "tail" : "(): Option[Document]", "member" : "laika.ast.TreeStructure.titleDocument", "link" : "laika\/ast\/TreeStructure.html#titleDocument:Option[laika.ast.Document]", "kind" : "abstract def"}, {"label" : "content", "tail" : "(): Seq[TreeContent]", "member" : "laika.ast.TreeStructure.content", "link" : "laika\/ast\/TreeStructure.html#content:Seq[laika.ast.TreeContent]", "kind" : "abstract def"}, {"label" : "targetTree", "tail" : "(): DocumentTree", "member" : "laika.ast.TreeStructure.targetTree", "link" : "laika\/ast\/TreeStructure.html#targetTree:laika.ast.DocumentTree", "kind" : "abstract def"}], "shortDescription" : "The structure of a document tree.", "trait" : "laika\/ast\/TreeStructure.html", "kind" : "trait"}, {"name" : "laika.ast.Unresolved", "members_trait" : [{"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/ast\/Unresolved.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/ast\/Unresolved.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/ast\/Unresolved.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/ast\/Unresolved.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Unresolved.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/ast\/Unresolved.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/ast\/Unresolved.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/ast\/Unresolved.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/ast\/Unresolved.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/ast\/Unresolved.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/ast\/Unresolved.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/Unresolved.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/Unresolved.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/Unresolved.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/Unresolved.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/Unresolved.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/Unresolved.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/Unresolved.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Unresolved.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Unresolved.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/Unresolved.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/Unresolved.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/Unresolved.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/ast\/Unresolved.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/Unresolved.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/ast\/Unresolved.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/ast\/Unresolved.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/Unresolved.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/Unresolved.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/Unresolved.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "unresolvedMessage", "tail" : "(): String", "member" : "laika.ast.Unresolved.unresolvedMessage", "link" : "laika\/ast\/Unresolved.html#unresolvedMessage:String", "kind" : "abstract def"}, {"label" : "source", "tail" : "(): SourceFragment", "member" : "laika.ast.Unresolved.source", "link" : "laika\/ast\/Unresolved.html#source:laika.parse.SourceFragment", "kind" : "abstract def"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/ast\/Unresolved.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/ast\/Unresolved.html#options:laika.ast.Options", "kind" : "abstract def"}, {"member" : "laika.ast.Customizable.Self", "error" : "unsupported entity"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/ast\/Unresolved.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/ast\/Unresolved.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/ast\/Unresolved.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "Represents an element that needs to be resolved in an AST transformation step.", "trait" : "laika\/ast\/Unresolved.html", "kind" : "trait"}, {"name" : "laika.ast.UnresolvedDocument", "shortDescription" : "A temporary structure usually not exposed to user code.", "members_case class" : [{"member" : "laika.ast.UnresolvedDocument#<init>", "error" : "unsupported entity"}, {"label" : "config", "tail" : ": ConfigParser", "member" : "laika.ast.UnresolvedDocument.config", "link" : "laika\/ast\/UnresolvedDocument.html#config:laika.config.ConfigParser", "kind" : "val"}, {"label" : "document", "tail" : ": Document", "member" : "laika.ast.UnresolvedDocument.document", "link" : "laika\/ast\/UnresolvedDocument.html#document:laika.ast.Document", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/UnresolvedDocument.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/UnresolvedDocument.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/UnresolvedDocument.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/UnresolvedDocument.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/UnresolvedDocument.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/UnresolvedDocument.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/UnresolvedDocument.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/UnresolvedDocument.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/UnresolvedDocument.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/UnresolvedDocument.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/UnresolvedDocument.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/UnresolvedDocument.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/UnresolvedDocument.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/UnresolvedDocument.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/UnresolvedDocument.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/UnresolvedDocument.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/UnresolvedDocument.html", "kind" : "case class"}, {"name" : "laika.ast.~", "shortDescription" : "A wrapper for two result values.", "members_case class" : [{"member" : "laika.ast.~#<init>", "error" : "unsupported entity"}, {"label" : "_2", "tail" : ": B", "member" : "laika.ast.~._2", "link" : "laika\/ast\/package$$$tilde.html#_2:B", "kind" : "val"}, {"label" : "_1", "tail" : ": A", "member" : "laika.ast.~._1", "link" : "laika\/ast\/package$$$tilde.html#_1:A", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/ast\/package$$$tilde.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/ast\/package$$$tilde.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/ast\/package$$$tilde.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/ast\/package$$$tilde.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/ast\/package$$$tilde.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/ast\/package$$$tilde.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/ast\/package$$$tilde.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/package$$$tilde.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/package$$$tilde.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/ast\/package$$$tilde.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/ast\/package$$$tilde.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/ast\/package$$$tilde.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/ast\/package$$$tilde.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/ast\/package$$$tilde.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/ast\/package$$$tilde.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/ast\/package$$$tilde.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/ast\/package$$$tilde.html", "kind" : "case class"}], "laika.format" : [{"name" : "laika.format.AST", "shortDescription" : "A renderer for AST output (a formatted Abstract Syntax Tree), primarily useful for debugging purposes.", "object" : "laika\/format\/AST$.html", "members_object" : [{"label" : "Overrides", "tail" : "", "member" : "laika.factory.RenderFormat.Overrides", "link" : "laika\/factory\/RenderFormat.html#OverridesextendsRenderOverrideswithProductwithSerializable", "kind" : "case class"}, {"label" : "formatterFactory", "tail" : ": (RenderContext[TextFormatter]) ⇒ TextFormatter", "member" : "laika.format.AST.formatterFactory", "link" : "laika\/format\/AST$.html#formatterFactory:laika.factory.RenderContext[laika.render.TextFormatter]=>laika.render.TextFormatter", "kind" : "val"}, {"label" : "defaultRenderer", "tail" : ": (TextFormatter, Element) ⇒ String", "member" : "laika.format.AST.defaultRenderer", "link" : "laika\/format\/AST$.html#defaultRenderer:(laika.render.TextFormatter,laika.ast.Element)=>String", "kind" : "val"}, {"label" : "fileSuffix", "tail" : ": String", "member" : "laika.format.AST.fileSuffix", "link" : "laika\/format\/AST$.html#fileSuffix:String", "kind" : "val"}, {"label" : "CustomRenderFunction", "tail" : "", "member" : "laika.factory.RenderFormat.CustomRenderFunction", "link" : "laika\/format\/AST$.html#CustomRenderFunction[FMT]=PartialFunction[(FMT,laika.ast.Element),String]", "kind" : "type"}, {"label" : "description", "tail" : "(): String", "member" : "laika.factory.Format.description", "link" : "laika\/format\/AST$.html#description:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/format\/AST$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/format\/AST$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/format\/AST$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/format\/AST$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/format\/AST$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/format\/AST$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/format\/AST$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/format\/AST$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/format\/AST$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/format\/AST$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/format\/AST$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/format\/AST$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/format\/AST$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/format\/AST$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/format\/AST$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/format\/AST$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/format\/AST$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.format.EPUB", "shortDescription" : "A post processor for EPUB output, based on an interim HTML renderer.", "object" : "laika\/format\/EPUB$.html", "members_object" : [{"label" : "postProcessor", "tail" : "(): BinaryPostProcessorBuilder", "member" : "laika.format.EPUB.postProcessor", "link" : "laika\/format\/EPUB$.html#postProcessor:laika.factory.BinaryPostProcessorBuilder", "kind" : "def"}, {"label" : "prepareTree", "tail" : "(root: DocumentTreeRoot): Either[Throwable, DocumentTreeRoot]", "member" : "laika.format.EPUB.prepareTree", "link" : "laika\/format\/EPUB$.html#prepareTree(root:laika.ast.DocumentTreeRoot):Either[Throwable,laika.ast.DocumentTreeRoot]", "kind" : "def"}, {"label" : "BookConfig", "tail" : "", "member" : "laika.format.EPUB.BookConfig", "link" : "laika\/format\/EPUB$.html#BookConfig", "kind" : "object"}, {"label" : "BookConfig", "tail" : "", "member" : "laika.format.EPUB.BookConfig", "link" : "laika\/format\/EPUB$.html#BookConfigextendsProductwithSerializable", "kind" : "case class"}, {"label" : "interimFormat", "tail" : ": RenderFormat[HTMLFormatter]", "member" : "laika.format.EPUB.interimFormat", "link" : "laika\/format\/EPUB$.html#interimFormat:laika.factory.RenderFormat[laika.render.HTMLFormatter]", "kind" : "val"}, {"label" : "XHTML", "tail" : "", "member" : "laika.format.EPUB.XHTML", "link" : "laika\/format\/EPUB$.html#XHTML", "kind" : "object"}, {"label" : "description", "tail" : "(): String", "member" : "laika.factory.Format.description", "link" : "laika\/format\/EPUB$.html#description:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/format\/EPUB$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/format\/EPUB$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/format\/EPUB$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/format\/EPUB$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/format\/EPUB$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/format\/EPUB$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/format\/EPUB$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/format\/EPUB$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/format\/EPUB$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/format\/EPUB$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/format\/EPUB$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/format\/EPUB$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/format\/EPUB$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/format\/EPUB$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/format\/EPUB$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/format\/EPUB$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/format\/EPUB$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.format.HTML", "shortDescription" : "A render format for HTML output.", "object" : "laika\/format\/HTML$.html", "members_object" : [{"label" : "Overrides", "tail" : "", "member" : "laika.factory.RenderFormat.Overrides", "link" : "laika\/factory\/RenderFormat.html#OverridesextendsRenderOverrideswithProductwithSerializable", "kind" : "case class"}, {"label" : "formatterFactory", "tail" : ": (RenderContext[HTMLFormatter]) ⇒ HTMLFormatter", "member" : "laika.format.HTML.formatterFactory", "link" : "laika\/format\/HTML$.html#formatterFactory:laika.factory.RenderContext[laika.render.HTMLFormatter]=>laika.render.HTMLFormatter", "kind" : "val"}, {"label" : "defaultRenderer", "tail" : ": (HTMLFormatter, Element) ⇒ String", "member" : "laika.format.HTML.defaultRenderer", "link" : "laika\/format\/HTML$.html#defaultRenderer:(laika.render.HTMLFormatter,laika.ast.Element)=>String", "kind" : "val"}, {"label" : "fileSuffix", "tail" : ": String", "member" : "laika.format.HTML.fileSuffix", "link" : "laika\/format\/HTML$.html#fileSuffix:String", "kind" : "val"}, {"label" : "CustomRenderFunction", "tail" : "", "member" : "laika.factory.RenderFormat.CustomRenderFunction", "link" : "laika\/format\/HTML$.html#CustomRenderFunction[FMT]=PartialFunction[(FMT,laika.ast.Element),String]", "kind" : "type"}, {"label" : "description", "tail" : "(): String", "member" : "laika.factory.Format.description", "link" : "laika\/format\/HTML$.html#description:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/format\/HTML$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/format\/HTML$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/format\/HTML$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/format\/HTML$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/format\/HTML$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/format\/HTML$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/format\/HTML$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/format\/HTML$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/format\/HTML$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/format\/HTML$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/format\/HTML$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/format\/HTML$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/format\/HTML$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/format\/HTML$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/format\/HTML$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/format\/HTML$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/format\/HTML$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.format.Markdown", "shortDescription" : "A parser for Markdown text.", "object" : "laika\/format\/Markdown$.html", "members_object" : [{"label" : "createBlockListParser", "tail" : "(parser: Parser[Block]): Parser[Seq[Block]]", "member" : "laika.format.Markdown.createBlockListParser", "link" : "laika\/format\/Markdown$.html#createBlockListParser(parser:laika.parse.Parser[laika.ast.Block]):laika.parse.Parser[Seq[laika.ast.Block]]", "kind" : "def"}, {"label" : "extensions", "tail" : ": Seq[ExtensionBundle]", "member" : "laika.format.Markdown.extensions", "link" : "laika\/format\/Markdown$.html#extensions:Seq[laika.bundle.ExtensionBundle]", "kind" : "val"}, {"label" : "escapedChar", "tail" : ": Parser[String]", "member" : "laika.format.Markdown.escapedChar", "link" : "laika\/format\/Markdown$.html#escapedChar:laika.parse.Parser[String]", "kind" : "lazy val"}, {"label" : "spanParsers", "tail" : ": Seq[SpanParserBuilder]", "member" : "laika.format.Markdown.spanParsers", "link" : "laika\/format\/Markdown$.html#spanParsers:Seq[laika.bundle.SpanParserBuilder]", "kind" : "val"}, {"label" : "blockParsers", "tail" : ": Seq[BlockParserBuilder]", "member" : "laika.format.Markdown.blockParsers", "link" : "laika\/format\/Markdown$.html#blockParsers:Seq[laika.bundle.BlockParserBuilder]", "kind" : "val"}, {"label" : "fileSuffixes", "tail" : ": Set[String]", "member" : "laika.format.Markdown.fileSuffixes", "link" : "laika\/format\/Markdown$.html#fileSuffixes:Set[String]", "kind" : "val"}, {"label" : "description", "tail" : "(): String", "member" : "laika.factory.Format.description", "link" : "laika\/format\/Markdown$.html#description:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/format\/Markdown$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/format\/Markdown$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/format\/Markdown$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/format\/Markdown$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/format\/Markdown$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/format\/Markdown$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/format\/Markdown$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/format\/Markdown$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/format\/Markdown$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/format\/Markdown$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/format\/Markdown$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/format\/Markdown$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/format\/Markdown$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/format\/Markdown$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/format\/Markdown$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/format\/Markdown$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/format\/Markdown$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.format.PDF", "shortDescription" : "A post processor for PDF output, based on an interim XSL-FO renderer.", "object" : "laika\/format\/PDF$.html", "members_object" : [{"label" : "BookConfig", "tail" : "", "member" : "laika.format.PDF.BookConfig", "link" : "laika\/format\/PDF$.html#BookConfig", "kind" : "object"}, {"label" : "BookConfig", "tail" : "", "member" : "laika.format.PDF.BookConfig", "link" : "laika\/format\/PDF$.html#BookConfigextendsProductwithSerializable", "kind" : "case class"}, {"label" : "postProcessor", "tail" : "(): BinaryPostProcessorBuilder", "member" : "laika.format.PDF.postProcessor", "link" : "laika\/format\/PDF$.html#postProcessor:laika.factory.BinaryPostProcessorBuilder", "kind" : "def"}, {"label" : "prepareTree", "tail" : "(root: DocumentTreeRoot): Either[Throwable, DocumentTreeRoot]", "member" : "laika.format.PDF.prepareTree", "link" : "laika\/format\/PDF$.html#prepareTree(root:laika.ast.DocumentTreeRoot):Either[Throwable,laika.ast.DocumentTreeRoot]", "kind" : "def"}, {"label" : "interimFormat", "tail" : ": RenderFormat[FOFormatter]", "member" : "laika.format.PDF.interimFormat", "link" : "laika\/format\/PDF$.html#interimFormat:laika.factory.RenderFormat[laika.render.FOFormatter]", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "laika.format.PDF.description", "link" : "laika\/format\/PDF$.html#description:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/format\/PDF$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/format\/PDF$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/format\/PDF$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/format\/PDF$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/format\/PDF$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/format\/PDF$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/format\/PDF$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/format\/PDF$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/format\/PDF$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/format\/PDF$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/format\/PDF$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/format\/PDF$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/format\/PDF$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/format\/PDF$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/format\/PDF$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/format\/PDF$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/format\/PDF$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/format\/PDF$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/format\/PDF$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.format.ReStructuredText", "shortDescription" : "A parser for text written in reStructuredText markup.", "object" : "laika\/format\/ReStructuredText$.html", "members_object" : [{"label" : "createBlockListParser", "tail" : "(parser: Parser[Block]): Parser[Seq[Block]]", "member" : "laika.format.ReStructuredText.createBlockListParser", "link" : "laika\/format\/ReStructuredText$.html#createBlockListParser(parser:laika.parse.Parser[laika.ast.Block]):laika.parse.Parser[Seq[laika.ast.Block]]", "kind" : "def"}, {"label" : "extensions", "tail" : ": Seq[ExtensionBundle]", "member" : "laika.format.ReStructuredText.extensions", "link" : "laika\/format\/ReStructuredText$.html#extensions:Seq[laika.bundle.ExtensionBundle]", "kind" : "val"}, {"label" : "BundledDefaults", "tail" : "", "member" : "laika.format.ReStructuredText.BundledDefaults", "link" : "laika\/format\/ReStructuredText$.html#BundledDefaults", "kind" : "object"}, {"label" : "escapedChar", "tail" : ": Parser[String]", "member" : "laika.format.ReStructuredText.escapedChar", "link" : "laika\/format\/ReStructuredText$.html#escapedChar:laika.parse.Parser[String]", "kind" : "lazy val"}, {"label" : "spanParsers", "tail" : ": Seq[SpanParserBuilder]", "member" : "laika.format.ReStructuredText.spanParsers", "link" : "laika\/format\/ReStructuredText$.html#spanParsers:Seq[laika.bundle.SpanParserBuilder]", "kind" : "val"}, {"label" : "blockParsers", "tail" : ": Seq[BlockParserBuilder]", "member" : "laika.format.ReStructuredText.blockParsers", "link" : "laika\/format\/ReStructuredText$.html#blockParsers:Seq[laika.bundle.BlockParserBuilder]", "kind" : "val"}, {"label" : "fileSuffixes", "tail" : ": Set[String]", "member" : "laika.format.ReStructuredText.fileSuffixes", "link" : "laika\/format\/ReStructuredText$.html#fileSuffixes:Set[String]", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "laika.format.ReStructuredText.description", "link" : "laika\/format\/ReStructuredText$.html#description:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/format\/ReStructuredText$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/format\/ReStructuredText$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/format\/ReStructuredText$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/format\/ReStructuredText$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/format\/ReStructuredText$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/format\/ReStructuredText$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/format\/ReStructuredText$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/format\/ReStructuredText$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/format\/ReStructuredText$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/format\/ReStructuredText$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/format\/ReStructuredText$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/format\/ReStructuredText$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/format\/ReStructuredText$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/format\/ReStructuredText$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/format\/ReStructuredText$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/format\/ReStructuredText$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/format\/ReStructuredText$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.format.XSLFO", "shortDescription" : "A renderer for XSL-FO output.", "object" : "laika\/format\/XSLFO$.html", "members_object" : [{"label" : "Overrides", "tail" : "", "member" : "laika.factory.RenderFormat.Overrides", "link" : "laika\/factory\/RenderFormat.html#OverridesextendsRenderOverrideswithProductwithSerializable", "kind" : "case class"}, {"label" : "formatterFactory", "tail" : ": (RenderContext[FOFormatter]) ⇒ FOFormatter", "member" : "laika.format.XSLFO.formatterFactory", "link" : "laika\/format\/XSLFO$.html#formatterFactory:laika.factory.RenderContext[laika.render.FOFormatter]=>laika.render.FOFormatter", "kind" : "val"}, {"label" : "defaultRenderer", "tail" : ": (FOFormatter, Element) ⇒ String", "member" : "laika.format.XSLFO.defaultRenderer", "link" : "laika\/format\/XSLFO$.html#defaultRenderer:(laika.render.FOFormatter,laika.ast.Element)=>String", "kind" : "val"}, {"label" : "fileSuffix", "tail" : ": String", "member" : "laika.format.XSLFO.fileSuffix", "link" : "laika\/format\/XSLFO$.html#fileSuffix:String", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "laika.format.XSLFO.description", "link" : "laika\/format\/XSLFO$.html#description:String", "kind" : "val"}, {"label" : "CustomRenderFunction", "tail" : "", "member" : "laika.factory.RenderFormat.CustomRenderFunction", "link" : "laika\/format\/XSLFO$.html#CustomRenderFunction[FMT]=PartialFunction[(FMT,laika.ast.Element),String]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/format\/XSLFO$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/format\/XSLFO$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/format\/XSLFO$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/format\/XSLFO$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/format\/XSLFO$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/format\/XSLFO$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/format\/XSLFO$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/format\/XSLFO$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/format\/XSLFO$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/format\/XSLFO$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/format\/XSLFO$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/format\/XSLFO$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/format\/XSLFO$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/format\/XSLFO$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/format\/XSLFO$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/format\/XSLFO$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/format\/XSLFO$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/format\/XSLFO$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/format\/XSLFO$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "laika.factory" : [{"name" : "laika.factory.BinaryPostProcessor", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/factory\/BinaryPostProcessor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/factory\/BinaryPostProcessor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/factory\/BinaryPostProcessor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/factory\/BinaryPostProcessor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/factory\/BinaryPostProcessor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/factory\/BinaryPostProcessor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/factory\/BinaryPostProcessor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/factory\/BinaryPostProcessor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/factory\/BinaryPostProcessor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/factory\/BinaryPostProcessor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/factory\/BinaryPostProcessor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/factory\/BinaryPostProcessor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/factory\/BinaryPostProcessor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/factory\/BinaryPostProcessor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/factory\/BinaryPostProcessor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/factory\/BinaryPostProcessor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/factory\/BinaryPostProcessor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/factory\/BinaryPostProcessor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/factory\/BinaryPostProcessor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(result: RenderedTreeRoot[F], output: BinaryOutput[F], config: OperationConfig)(arg0: Sync[F], arg1: Runtime[F]): F[Unit]", "member" : "laika.factory.BinaryPostProcessor.process", "link" : "laika\/factory\/BinaryPostProcessor.html#process[F[_]](result:laika.io.model.RenderedTreeRoot[F],output:laika.io.model.BinaryOutput[F],config:laika.api.builder.OperationConfig)(implicitevidence$1:cats.effect.Sync[F],implicitevidence$2:laika.io.runtime.Runtime[F]):F[Unit]", "kind" : "abstract def"}], "shortDescription" : "Post processor for the result output of a renderer.", "trait" : "laika\/factory\/BinaryPostProcessor.html", "kind" : "trait"}, {"name" : "laika.factory.BinaryPostProcessorBuilder", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/factory\/BinaryPostProcessorBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/factory\/BinaryPostProcessorBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/factory\/BinaryPostProcessorBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/factory\/BinaryPostProcessorBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/factory\/BinaryPostProcessorBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/factory\/BinaryPostProcessorBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/factory\/BinaryPostProcessorBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/factory\/BinaryPostProcessorBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/factory\/BinaryPostProcessorBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/factory\/BinaryPostProcessorBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/factory\/BinaryPostProcessorBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/factory\/BinaryPostProcessorBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/factory\/BinaryPostProcessorBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/factory\/BinaryPostProcessorBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/factory\/BinaryPostProcessorBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/factory\/BinaryPostProcessorBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/factory\/BinaryPostProcessorBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/factory\/BinaryPostProcessorBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/factory\/BinaryPostProcessorBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "build", "tail" : "(config: Config, theme: Theme[F])(arg0: Sync[F]): Resource[F, BinaryPostProcessor]", "member" : "laika.factory.BinaryPostProcessorBuilder.build", "link" : "laika\/factory\/BinaryPostProcessorBuilder.html#build[F[_]](config:laika.config.Config,theme:laika.theme.Theme[F])(implicitevidence$3:cats.effect.Sync[F]):cats.effect.Resource[F,laika.factory.BinaryPostProcessor]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "laika\/factory\/BinaryPostProcessorBuilder.html", "kind" : "trait"}, {"name" : "laika.factory.Format", "members_trait" : [{"label" : "description", "tail" : "(): String", "member" : "laika.factory.Format.description", "link" : "laika\/factory\/Format.html#description:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/factory\/Format.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/factory\/Format.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/factory\/Format.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/factory\/Format.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/factory\/Format.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/factory\/Format.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/factory\/Format.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/factory\/Format.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/factory\/Format.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/factory\/Format.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/factory\/Format.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/factory\/Format.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/factory\/Format.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/factory\/Format.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/factory\/Format.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/factory\/Format.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/factory\/Format.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/factory\/Format.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/factory\/Format.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Base trait for all types of input and output formats.", "trait" : "laika\/factory\/Format.html", "kind" : "trait"}, {"name" : "laika.factory.MarkupFormat", "members_trait" : [{"label" : "createBlockListParser", "tail" : "(parser: Parser[Block]): Parser[Seq[Block]]", "member" : "laika.factory.MarkupFormat.createBlockListParser", "link" : "laika\/factory\/MarkupFormat.html#createBlockListParser(parser:laika.parse.Parser[laika.ast.Block]):laika.parse.Parser[Seq[laika.ast.Block]]", "kind" : "def"}, {"label" : "escapedChar", "tail" : "(): Parser[String]", "member" : "laika.factory.MarkupFormat.escapedChar", "link" : "laika\/factory\/MarkupFormat.html#escapedChar:laika.parse.Parser[String]", "kind" : "def"}, {"label" : "description", "tail" : "(): String", "member" : "laika.factory.Format.description", "link" : "laika\/factory\/MarkupFormat.html#description:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/factory\/MarkupFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/factory\/MarkupFormat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/factory\/MarkupFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/factory\/MarkupFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/factory\/MarkupFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/factory\/MarkupFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/factory\/MarkupFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/factory\/MarkupFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/factory\/MarkupFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/factory\/MarkupFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/factory\/MarkupFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/factory\/MarkupFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/factory\/MarkupFormat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/factory\/MarkupFormat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/factory\/MarkupFormat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/factory\/MarkupFormat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/factory\/MarkupFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/factory\/MarkupFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/factory\/MarkupFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "extensions", "tail" : "(): Seq[ExtensionBundle]", "member" : "laika.factory.MarkupFormat.extensions", "link" : "laika\/factory\/MarkupFormat.html#extensions:Seq[laika.bundle.ExtensionBundle]", "kind" : "abstract def"}, {"label" : "spanParsers", "tail" : "(): Seq[SpanParserBuilder]", "member" : "laika.factory.MarkupFormat.spanParsers", "link" : "laika\/factory\/MarkupFormat.html#spanParsers:Seq[laika.bundle.SpanParserBuilder]", "kind" : "abstract def"}, {"label" : "blockParsers", "tail" : "(): Seq[BlockParserBuilder]", "member" : "laika.factory.MarkupFormat.blockParsers", "link" : "laika\/factory\/MarkupFormat.html#blockParsers:Seq[laika.bundle.BlockParserBuilder]", "kind" : "abstract def"}, {"label" : "fileSuffixes", "tail" : "(): Set[String]", "member" : "laika.factory.MarkupFormat.fileSuffixes", "link" : "laika\/factory\/MarkupFormat.html#fileSuffixes:Set[String]", "kind" : "abstract def"}], "shortDescription" : "Responsible for creating parser instances for a specific markup format.", "trait" : "laika\/factory\/MarkupFormat.html", "kind" : "trait"}, {"name" : "laika.factory.RenderContext", "shortDescription" : "Provides the context for a single render operation.", "members_case class" : [{"label" : "indentation", "tail" : ": Indentation", "member" : "laika.factory.RenderContext.indentation", "link" : "laika\/factory\/RenderContext.html#indentation:laika.render.Indentation", "kind" : "val"}, {"member" : "laika.factory.RenderContext#<init>", "error" : "unsupported entity"}, {"label" : "config", "tail" : ": RenderConfig", "member" : "laika.factory.RenderContext.config", "link" : "laika\/factory\/RenderContext.html#config:laika.api.builder.RenderConfig", "kind" : "val"}, {"label" : "pathTranslator", "tail" : ": PathTranslator", "member" : "laika.factory.RenderContext.pathTranslator", "link" : "laika\/factory\/RenderContext.html#pathTranslator:laika.rewrite.nav.PathTranslator", "kind" : "val"}, {"label" : "path", "tail" : ": Path", "member" : "laika.factory.RenderContext.path", "link" : "laika\/factory\/RenderContext.html#path:laika.ast.Path", "kind" : "val"}, {"label" : "styles", "tail" : ": StyleDeclarationSet", "member" : "laika.factory.RenderContext.styles", "link" : "laika\/factory\/RenderContext.html#styles:laika.ast.StyleDeclarationSet", "kind" : "val"}, {"label" : "root", "tail" : ": Element", "member" : "laika.factory.RenderContext.root", "link" : "laika\/factory\/RenderContext.html#root:laika.ast.Element", "kind" : "val"}, {"label" : "renderChild", "tail" : ": (FMT, Element) ⇒ String", "member" : "laika.factory.RenderContext.renderChild", "link" : "laika\/factory\/RenderContext.html#renderChild:(FMT,laika.ast.Element)=>String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/factory\/RenderContext.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/factory\/RenderContext.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/factory\/RenderContext.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/factory\/RenderContext.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/factory\/RenderContext.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/factory\/RenderContext.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/factory\/RenderContext.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/factory\/RenderContext.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/factory\/RenderContext.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/factory\/RenderContext.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/factory\/RenderContext.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/factory\/RenderContext.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/factory\/RenderContext.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/factory\/RenderContext.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/factory\/RenderContext.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/factory\/RenderContext.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/factory\/RenderContext.html", "kind" : "case class"}, {"name" : "laika.factory.RenderFormat", "members_trait" : [{"label" : "Overrides", "tail" : "", "member" : "laika.factory.RenderFormat.Overrides", "link" : "laika\/factory\/RenderFormat.html#OverridesextendsRenderOverrideswithProductwithSerializable", "kind" : "case class"}, {"label" : "CustomRenderFunction", "tail" : "", "member" : "laika.factory.RenderFormat.CustomRenderFunction", "link" : "laika\/factory\/RenderFormat.html#CustomRenderFunction[FMT]=PartialFunction[(FMT,laika.ast.Element),String]", "kind" : "type"}, {"label" : "description", "tail" : "(): String", "member" : "laika.factory.Format.description", "link" : "laika\/factory\/RenderFormat.html#description:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/factory\/RenderFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/factory\/RenderFormat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/factory\/RenderFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/factory\/RenderFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/factory\/RenderFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/factory\/RenderFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/factory\/RenderFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/factory\/RenderFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/factory\/RenderFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/factory\/RenderFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/factory\/RenderFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/factory\/RenderFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/factory\/RenderFormat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/factory\/RenderFormat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/factory\/RenderFormat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/factory\/RenderFormat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/factory\/RenderFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/factory\/RenderFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/factory\/RenderFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "formatterFactory", "tail" : "(): (RenderContext[FMT]) ⇒ FMT", "member" : "laika.factory.RenderFormat.formatterFactory", "link" : "laika\/factory\/RenderFormat.html#formatterFactory:laika.factory.RenderContext[FMT]=>FMT", "kind" : "abstract def"}, {"label" : "defaultRenderer", "tail" : "(): (FMT, Element) ⇒ String", "member" : "laika.factory.RenderFormat.defaultRenderer", "link" : "laika\/factory\/RenderFormat.html#defaultRenderer:(FMT,laika.ast.Element)=>String", "kind" : "abstract def"}, {"label" : "fileSuffix", "tail" : "(): String", "member" : "laika.factory.RenderFormat.fileSuffix", "link" : "laika\/factory\/RenderFormat.html#fileSuffix:String", "kind" : "abstract def"}], "shortDescription" : "Responsible for creating renderer instances for a specific output format.", "trait" : "laika\/factory\/RenderFormat.html", "kind" : "trait"}, {"name" : "laika.factory.TwoPhaseRenderFormat", "members_trait" : [{"label" : "description", "tail" : "(): String", "member" : "laika.factory.Format.description", "link" : "laika\/factory\/TwoPhaseRenderFormat.html#description:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/factory\/TwoPhaseRenderFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/factory\/TwoPhaseRenderFormat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/factory\/TwoPhaseRenderFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/factory\/TwoPhaseRenderFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/factory\/TwoPhaseRenderFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/factory\/TwoPhaseRenderFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/factory\/TwoPhaseRenderFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/factory\/TwoPhaseRenderFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/factory\/TwoPhaseRenderFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/factory\/TwoPhaseRenderFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/factory\/TwoPhaseRenderFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/factory\/TwoPhaseRenderFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/factory\/TwoPhaseRenderFormat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/factory\/TwoPhaseRenderFormat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/factory\/TwoPhaseRenderFormat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/factory\/TwoPhaseRenderFormat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/factory\/TwoPhaseRenderFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/factory\/TwoPhaseRenderFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/factory\/TwoPhaseRenderFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "postProcessor", "tail" : "(): PP", "member" : "laika.factory.TwoPhaseRenderFormat.postProcessor", "link" : "laika\/factory\/TwoPhaseRenderFormat.html#postProcessor:PP", "kind" : "abstract def"}, {"label" : "prepareTree", "tail" : "(tree: DocumentTreeRoot): Either[Throwable, DocumentTreeRoot]", "member" : "laika.factory.TwoPhaseRenderFormat.prepareTree", "link" : "laika\/factory\/TwoPhaseRenderFormat.html#prepareTree(tree:laika.ast.DocumentTreeRoot):Either[Throwable,laika.ast.DocumentTreeRoot]", "kind" : "abstract def"}, {"label" : "interimFormat", "tail" : "(): RenderFormat[FMT]", "member" : "laika.factory.TwoPhaseRenderFormat.interimFormat", "link" : "laika\/factory\/TwoPhaseRenderFormat.html#interimFormat:laika.factory.RenderFormat[FMT]", "kind" : "abstract def"}], "shortDescription" : "Render format based on a render phase for an interim result and a post processor.", "trait" : "laika\/factory\/TwoPhaseRenderFormat.html", "kind" : "trait"}], "laika.io.ops" : [{"name" : "laika.io.ops.BinaryOutputOps", "members_trait" : [{"label" : "toStream", "tail" : "(stream: F[OutputStream], autoClose: Boolean): Result", "member" : "laika.io.ops.BinaryOutputOps.toStream", "link" : "laika\/io\/ops\/BinaryOutputOps.html#toStream(stream:F[java.io.OutputStream],autoClose:Boolean):BinaryOutputOps.this.Result", "kind" : "def"}, {"label" : "toFile", "tail" : "(file: File): Result", "member" : "laika.io.ops.BinaryOutputOps.toFile", "link" : "laika\/io\/ops\/BinaryOutputOps.html#toFile(file:java.io.File):BinaryOutputOps.this.Result", "kind" : "def"}, {"label" : "toFile", "tail" : "(name: String): Result", "member" : "laika.io.ops.BinaryOutputOps.toFile", "link" : "laika\/io\/ops\/BinaryOutputOps.html#toFile(name:String):BinaryOutputOps.this.Result", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/ops\/BinaryOutputOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/ops\/BinaryOutputOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/ops\/BinaryOutputOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/ops\/BinaryOutputOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/ops\/BinaryOutputOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/ops\/BinaryOutputOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/ops\/BinaryOutputOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/ops\/BinaryOutputOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/ops\/BinaryOutputOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/ops\/BinaryOutputOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/ops\/BinaryOutputOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/ops\/BinaryOutputOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/ops\/BinaryOutputOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/ops\/BinaryOutputOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/ops\/BinaryOutputOps.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/ops\/BinaryOutputOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/ops\/BinaryOutputOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/ops\/BinaryOutputOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/ops\/BinaryOutputOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toOutput", "tail" : "(output: BinaryOutput[F]): Result", "member" : "laika.io.ops.BinaryOutputOps.toOutput", "link" : "laika\/io\/ops\/BinaryOutputOps.html#toOutput(output:laika.io.model.BinaryOutput[F]):BinaryOutputOps.this.Result", "kind" : "abstract def"}, {"label" : "F", "tail" : "(): Sync[F]", "member" : "laika.io.ops.BinaryOutputOps.F", "link" : "laika\/io\/ops\/BinaryOutputOps.html#F:cats.effect.Sync[F]", "kind" : "abstract def"}, {"member" : "laika.io.ops.BinaryOutputOps.Result", "error" : "unsupported entity"}], "shortDescription" : "API for specifying the output for a binary format like EPUB or PDF.", "trait" : "laika\/io\/ops\/BinaryOutputOps.html", "kind" : "trait"}, {"name" : "laika.io.ops.InputOps", "members_trait" : [{"label" : "fromWorkingDirectory", "tail" : "(exclude: FileFilter)(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromWorkingDirectory", "link" : "laika\/io\/ops\/InputOps.html#fromWorkingDirectory(exclude:InputOps.this.FileFilter)(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "fromDirectories", "tail" : "(roots: Seq[File], exclude: FileFilter)(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromDirectories", "link" : "laika\/io\/ops\/InputOps.html#fromDirectories(roots:Seq[java.io.File],exclude:InputOps.this.FileFilter)(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "fromDirectories", "tail" : "(roots: Seq[File])(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromDirectories", "link" : "laika\/io\/ops\/InputOps.html#fromDirectories(roots:Seq[java.io.File])(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "fromDirectory", "tail" : "(dir: File, exclude: FileFilter)(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromDirectory", "link" : "laika\/io\/ops\/InputOps.html#fromDirectory(dir:java.io.File,exclude:InputOps.this.FileFilter)(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "fromDirectory", "tail" : "(dir: File)(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromDirectory", "link" : "laika\/io\/ops\/InputOps.html#fromDirectory(dir:java.io.File)(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "fromDirectory", "tail" : "(name: String, exclude: FileFilter)(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromDirectory", "link" : "laika\/io\/ops\/InputOps.html#fromDirectory(name:String,exclude:InputOps.this.FileFilter)(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "fromDirectory", "tail" : "(name: String)(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromDirectory", "link" : "laika\/io\/ops\/InputOps.html#fromDirectory(name:String)(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "FileFilter", "tail" : "", "member" : "laika.io.ops.InputOps.FileFilter", "link" : "laika\/io\/ops\/InputOps.html#FileFilter=java.io.File=>Boolean", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/ops\/InputOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/ops\/InputOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/ops\/InputOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/ops\/InputOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/ops\/InputOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/ops\/InputOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/ops\/InputOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/ops\/InputOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/ops\/InputOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/ops\/InputOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/ops\/InputOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/ops\/InputOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/ops\/InputOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/ops\/InputOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/ops\/InputOps.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/ops\/InputOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/ops\/InputOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/ops\/InputOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/ops\/InputOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "fromInput", "tail" : "(input: InputTreeBuilder[F]): Result", "member" : "laika.io.ops.InputOps.fromInput", "link" : "laika\/io\/ops\/InputOps.html#fromInput(input:laika.io.model.InputTreeBuilder[F]):InputOps.this.Result", "kind" : "abstract def"}, {"label" : "config", "tail" : "(): OperationConfig", "member" : "laika.io.ops.InputOps.config", "link" : "laika\/io\/ops\/InputOps.html#config:laika.api.builder.OperationConfig", "kind" : "abstract def"}, {"member" : "laika.io.ops.InputOps.Result", "error" : "unsupported entity"}, {"label" : "F", "tail" : "(): Sync[F]", "member" : "laika.io.ops.InputOps.F", "link" : "laika\/io\/ops\/InputOps.html#F:cats.effect.Sync[F]", "kind" : "abstract def"}], "shortDescription" : "API for specifying the tree of character inputs for a parsing operation.", "trait" : "laika\/io\/ops\/InputOps.html", "kind" : "trait"}, {"name" : "laika.io.ops.IOBuilderOps", "shortDescription" : "Builder step that allows to choose between sequential and parallel execution and specify the effect type.", "members_class" : [{"label" : "parallel", "tail" : "(parallelism: Int)(arg0: Sync[F], arg1: ContextShift[F], arg2: Parallel[F]): T[F]", "member" : "laika.io.ops.IOBuilderOps.parallel", "link" : "laika\/io\/ops\/IOBuilderOps.html#parallel[F[_]](parallelism:Int)(implicitevidence$6:cats.effect.Sync[F],implicitevidence$7:cats.effect.ContextShift[F],implicitevidence$8:cats.Parallel[F]):T[F]", "kind" : "def"}, {"label" : "parallel", "tail" : "(arg0: Sync[F], arg1: ContextShift[F], arg2: Parallel[F]): T[F]", "member" : "laika.io.ops.IOBuilderOps.parallel", "link" : "laika\/io\/ops\/IOBuilderOps.html#parallel[F[_]](implicitevidence$3:cats.effect.Sync[F],implicitevidence$4:cats.effect.ContextShift[F],implicitevidence$5:cats.Parallel[F]):T[F]", "kind" : "def"}, {"label" : "sequential", "tail" : "(arg0: Sync[F], arg1: ContextShift[F]): T[F]", "member" : "laika.io.ops.IOBuilderOps.sequential", "link" : "laika\/io\/ops\/IOBuilderOps.html#sequential[F[_]](implicitevidence$1:cats.effect.Sync[F],implicitevidence$2:cats.effect.ContextShift[F]):T[F]", "kind" : "def"}, {"member" : "laika.io.ops.IOBuilderOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/ops\/IOBuilderOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/ops\/IOBuilderOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/ops\/IOBuilderOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/ops\/IOBuilderOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/ops\/IOBuilderOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/ops\/IOBuilderOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/ops\/IOBuilderOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/ops\/IOBuilderOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/ops\/IOBuilderOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/ops\/IOBuilderOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/ops\/IOBuilderOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/ops\/IOBuilderOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/ops\/IOBuilderOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/ops\/IOBuilderOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/ops\/IOBuilderOps.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/ops\/IOBuilderOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/ops\/IOBuilderOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/ops\/IOBuilderOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/ops\/IOBuilderOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "build", "tail" : "(arg0: Sync[F], arg1: Runtime[F]): T[F]", "member" : "laika.io.ops.IOBuilderOps.build", "link" : "laika\/io\/ops\/IOBuilderOps.html#build[F[_]](implicitevidence$9:cats.effect.Sync[F],implicitevidence$10:laika.io.runtime.Runtime[F]):T[F]", "kind" : "abstract def"}], "class" : "laika\/io\/ops\/IOBuilderOps.html", "kind" : "class"}, {"name" : "laika.io.ops.TextOutputOps", "members_trait" : [{"label" : "toWorkingDirectory", "tail" : "(codec: Codec): Result", "member" : "laika.io.ops.TextOutputOps.toWorkingDirectory", "link" : "laika\/io\/ops\/TextOutputOps.html#toWorkingDirectory(implicitcodec:scala.io.Codec):TextOutputOps.this.Result", "kind" : "def"}, {"label" : "toDirectory", "tail" : "(dir: File)(codec: Codec): Result", "member" : "laika.io.ops.TextOutputOps.toDirectory", "link" : "laika\/io\/ops\/TextOutputOps.html#toDirectory(dir:java.io.File)(implicitcodec:scala.io.Codec):TextOutputOps.this.Result", "kind" : "def"}, {"label" : "toDirectory", "tail" : "(name: String)(codec: Codec): Result", "member" : "laika.io.ops.TextOutputOps.toDirectory", "link" : "laika\/io\/ops\/TextOutputOps.html#toDirectory(name:String)(implicitcodec:scala.io.Codec):TextOutputOps.this.Result", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/ops\/TextOutputOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/ops\/TextOutputOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/ops\/TextOutputOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/ops\/TextOutputOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/ops\/TextOutputOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/ops\/TextOutputOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/ops\/TextOutputOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/ops\/TextOutputOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/ops\/TextOutputOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/ops\/TextOutputOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/ops\/TextOutputOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/ops\/TextOutputOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/ops\/TextOutputOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/ops\/TextOutputOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/ops\/TextOutputOps.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/ops\/TextOutputOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/ops\/TextOutputOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/ops\/TextOutputOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/ops\/TextOutputOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toOutput", "tail" : "(tree: TreeOutput): Result", "member" : "laika.io.ops.TextOutputOps.toOutput", "link" : "laika\/io\/ops\/TextOutputOps.html#toOutput(tree:laika.io.model.TreeOutput):TextOutputOps.this.Result", "kind" : "abstract def"}, {"member" : "laika.io.ops.TextOutputOps.Result", "error" : "unsupported entity"}, {"label" : "F", "tail" : "(): Sync[F]", "member" : "laika.io.ops.TextOutputOps.F", "link" : "laika\/io\/ops\/TextOutputOps.html#F:cats.effect.Sync[F]", "kind" : "abstract def"}], "shortDescription" : "API for specifying the tree of character outputs for a rendering operation.", "trait" : "laika\/io\/ops\/TextOutputOps.html", "kind" : "trait"}, {"name" : "laika.io.ops.TreeMapperOps", "shortDescription" : "Operations for builders of transformers that allow to modify the treeor documents between parsing and rendering.", "members_class" : [{"label" : "mapTree", "tail" : "(f: (ParsedTree[F]) ⇒ ParsedTree[F]): MapRes", "member" : "laika.io.ops.TreeMapperOps.mapTree", "link" : "laika\/io\/ops\/TreeMapperOps.html#mapTree(f:laika.io.model.ParsedTree[F]=>laika.io.model.ParsedTree[F]):TreeMapperOps.this.MapRes", "kind" : "def"}, {"label" : "evalMapDocuments", "tail" : "(f: (Document) ⇒ F[Document]): MapRes", "member" : "laika.io.ops.TreeMapperOps.evalMapDocuments", "link" : "laika\/io\/ops\/TreeMapperOps.html#evalMapDocuments(f:laika.ast.Document=>F[laika.ast.Document]):TreeMapperOps.this.MapRes", "kind" : "def"}, {"label" : "mapDocuments", "tail" : "(f: (Document) ⇒ Document): MapRes", "member" : "laika.io.ops.TreeMapperOps.mapDocuments", "link" : "laika\/io\/ops\/TreeMapperOps.html#mapDocuments(f:laika.ast.Document=>laika.ast.Document):TreeMapperOps.this.MapRes", "kind" : "def"}, {"label" : "F", "tail" : ": Sync[F]", "member" : "laika.io.ops.TreeMapperOps.F", "link" : "laika\/io\/ops\/TreeMapperOps.html#F:cats.effect.Sync[F]", "kind" : "val"}, {"member" : "laika.io.ops.TreeMapperOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/ops\/TreeMapperOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/ops\/TreeMapperOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/ops\/TreeMapperOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/ops\/TreeMapperOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/ops\/TreeMapperOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/ops\/TreeMapperOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/ops\/TreeMapperOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/ops\/TreeMapperOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/ops\/TreeMapperOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/ops\/TreeMapperOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/ops\/TreeMapperOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/ops\/TreeMapperOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/ops\/TreeMapperOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/ops\/TreeMapperOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/ops\/TreeMapperOps.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/ops\/TreeMapperOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/ops\/TreeMapperOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/ops\/TreeMapperOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/ops\/TreeMapperOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "evalMapTree", "tail" : "(f: (ParsedTree[F]) ⇒ F[ParsedTree[F]]): MapRes", "member" : "laika.io.ops.TreeMapperOps.evalMapTree", "link" : "laika\/io\/ops\/TreeMapperOps.html#evalMapTree(f:laika.io.model.ParsedTree[F]=>F[laika.io.model.ParsedTree[F]]):TreeMapperOps.this.MapRes", "kind" : "abstract def"}, {"member" : "laika.io.ops.TreeMapperOps.MapRes", "error" : "unsupported entity"}], "class" : "laika\/io\/ops\/TreeMapperOps.html", "kind" : "class"}], "laika.collection" : [{"name" : "laika.collection.Stack", "shortDescription" : "Very minimal replacement for the SDK Stack implementation thatwas deprecated in Scala 2.12", "members_class" : [{"label" : "push", "tail" : "(elem: T): Unit", "member" : "laika.collection.Stack.push", "link" : "laika\/collection\/Stack.html#push(elem:T):Unit", "kind" : "def"}, {"label" : "pop", "tail" : "(): T", "member" : "laika.collection.Stack.pop", "link" : "laika\/collection\/Stack.html#pop:T", "kind" : "def"}, {"label" : "top", "tail" : "(): T", "member" : "laika.collection.Stack.top", "link" : "laika\/collection\/Stack.html#top:T", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "laika.collection.Stack.nonEmpty", "link" : "laika\/collection\/Stack.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "laika.collection.Stack.isEmpty", "link" : "laika\/collection\/Stack.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "elements", "tail" : "(): List[T]", "member" : "laika.collection.Stack.elements", "link" : "laika\/collection\/Stack.html#elements:List[T]", "kind" : "def"}, {"member" : "laika.collection.Stack#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/collection\/Stack.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/collection\/Stack.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/collection\/Stack.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/collection\/Stack.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/collection\/Stack.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/collection\/Stack.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/collection\/Stack.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/collection\/Stack.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/collection\/Stack.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/collection\/Stack.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/collection\/Stack.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/collection\/Stack.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/collection\/Stack.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/collection\/Stack.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/collection\/Stack.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/collection\/Stack.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/collection\/Stack.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/collection\/Stack.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/collection\/Stack.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/collection\/Stack.html", "kind" : "class"}, {"name" : "laika.collection.TransitionalCollectionOps", "shortDescription" : "Temporary extension methods for cross-building to Scala 2.12 and 2.13.", "object" : "laika\/collection\/TransitionalCollectionOps$.html", "members_object" : [{"label" : "Zip3Iterator", "tail" : "", "member" : "laika.collection.TransitionalCollectionOps.Zip3Iterator", "link" : "laika\/collection\/TransitionalCollectionOps$.html#Zip3Iterator[A,B,C]extendsIterator[(A,B,C)]withProductwithSerializable", "kind" : "case class"}, {"label" : "TransitionalMapOps", "tail" : "", "member" : "laika.collection.TransitionalCollectionOps.TransitionalMapOps", "link" : "laika\/collection\/TransitionalCollectionOps$.html#TransitionalMapOps[K,V]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/collection\/TransitionalCollectionOps$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/collection\/TransitionalCollectionOps$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/collection\/TransitionalCollectionOps$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/collection\/TransitionalCollectionOps$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/collection\/TransitionalCollectionOps$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/collection\/TransitionalCollectionOps$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/collection\/TransitionalCollectionOps$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/collection\/TransitionalCollectionOps$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/collection\/TransitionalCollectionOps$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/collection\/TransitionalCollectionOps$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/collection\/TransitionalCollectionOps$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/collection\/TransitionalCollectionOps$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/collection\/TransitionalCollectionOps$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/collection\/TransitionalCollectionOps$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/collection\/TransitionalCollectionOps$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/collection\/TransitionalCollectionOps$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/collection\/TransitionalCollectionOps$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/collection\/TransitionalCollectionOps$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/collection\/TransitionalCollectionOps$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "laika.directive.std" : [{"name" : "laika.directive.std.BreadcrumbDirectives", "shortDescription" : "Provides the implementation for the standard breadcrumb directives.", "object" : "laika\/directive\/std\/BreadcrumbDirectives$.html", "members_object" : [{"label" : "forBlocks", "tail" : ": Blocks.Directive", "member" : "laika.directive.std.BreadcrumbDirectives.forBlocks", "link" : "laika\/directive\/std\/BreadcrumbDirectives$.html#forBlocks:laika.directive.Blocks.Directive", "kind" : "lazy val"}, {"label" : "forTemplates", "tail" : ": Templates.Directive", "member" : "laika.directive.std.BreadcrumbDirectives.forTemplates", "link" : "laika\/directive\/std\/BreadcrumbDirectives$.html#forTemplates:laika.directive.Templates.Directive", "kind" : "lazy val"}, {"label" : "BreadcrumbBuilder", "tail" : "", "member" : "laika.directive.std.BreadcrumbDirectives.BreadcrumbBuilder", "link" : "laika\/directive\/std\/BreadcrumbDirectives$.html#BreadcrumbBuilderextendsElementwithBlockResolverwithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/directive\/std\/BreadcrumbDirectives$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/directive\/std\/BreadcrumbDirectives$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/directive\/std\/BreadcrumbDirectives$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/directive\/std\/BreadcrumbDirectives$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/directive\/std\/BreadcrumbDirectives$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/directive\/std\/BreadcrumbDirectives$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/directive\/std\/BreadcrumbDirectives$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/BreadcrumbDirectives$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/BreadcrumbDirectives$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/BreadcrumbDirectives$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/directive\/std\/BreadcrumbDirectives$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/directive\/std\/BreadcrumbDirectives$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/directive\/std\/BreadcrumbDirectives$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/directive\/std\/BreadcrumbDirectives$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/directive\/std\/BreadcrumbDirectives$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/directive\/std\/BreadcrumbDirectives$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/directive\/std\/BreadcrumbDirectives$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/directive\/std\/BreadcrumbDirectives$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/directive\/std\/BreadcrumbDirectives$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.directive.std.ControlFlowDirectives", "shortDescription" : "Provides the implementation for the standard control flow directives included in Laika.", "object" : "laika\/directive\/std\/ControlFlowDirectives$.html", "members_object" : [{"label" : "templateIf", "tail" : ": Templates.Directive", "member" : "laika.directive.std.ControlFlowDirectives.templateIf", "link" : "laika\/directive\/std\/ControlFlowDirectives$.html#templateIf:laika.directive.Templates.Directive", "kind" : "lazy val"}, {"label" : "templateFor", "tail" : ": Templates.Directive", "member" : "laika.directive.std.ControlFlowDirectives.templateFor", "link" : "laika\/directive\/std\/ControlFlowDirectives$.html#templateFor:laika.directive.Templates.Directive", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/directive\/std\/ControlFlowDirectives$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/directive\/std\/ControlFlowDirectives$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/directive\/std\/ControlFlowDirectives$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/directive\/std\/ControlFlowDirectives$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/directive\/std\/ControlFlowDirectives$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/directive\/std\/ControlFlowDirectives$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/directive\/std\/ControlFlowDirectives$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/ControlFlowDirectives$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/ControlFlowDirectives$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/ControlFlowDirectives$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/directive\/std\/ControlFlowDirectives$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/directive\/std\/ControlFlowDirectives$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/directive\/std\/ControlFlowDirectives$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/directive\/std\/ControlFlowDirectives$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/directive\/std\/ControlFlowDirectives$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/directive\/std\/ControlFlowDirectives$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/directive\/std\/ControlFlowDirectives$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/directive\/std\/ControlFlowDirectives$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/directive\/std\/ControlFlowDirectives$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.directive.std.HTMLHeadDirectives", "shortDescription" : "Provides the implementation for the standard directives for the head section in HTML templates.", "object" : "laika\/directive\/std\/HTMLHeadDirectives$.html", "members_object" : [{"label" : "linkJS", "tail" : ": Templates.Directive", "member" : "laika.directive.std.HTMLHeadDirectives.linkJS", "link" : "laika\/directive\/std\/HTMLHeadDirectives$.html#linkJS:laika.directive.Templates.Directive", "kind" : "lazy val"}, {"label" : "linkCSS", "tail" : ": Templates.Directive", "member" : "laika.directive.std.HTMLHeadDirectives.linkCSS", "link" : "laika\/directive\/std\/HTMLHeadDirectives$.html#linkCSS:laika.directive.Templates.Directive", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/directive\/std\/HTMLHeadDirectives$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/directive\/std\/HTMLHeadDirectives$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/directive\/std\/HTMLHeadDirectives$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/directive\/std\/HTMLHeadDirectives$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/directive\/std\/HTMLHeadDirectives$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/directive\/std\/HTMLHeadDirectives$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/directive\/std\/HTMLHeadDirectives$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/HTMLHeadDirectives$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/HTMLHeadDirectives$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/HTMLHeadDirectives$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/directive\/std\/HTMLHeadDirectives$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/directive\/std\/HTMLHeadDirectives$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/directive\/std\/HTMLHeadDirectives$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/directive\/std\/HTMLHeadDirectives$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/directive\/std\/HTMLHeadDirectives$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/directive\/std\/HTMLHeadDirectives$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/directive\/std\/HTMLHeadDirectives$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/directive\/std\/HTMLHeadDirectives$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/directive\/std\/HTMLHeadDirectives$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.directive.std.ImageDirectives", "shortDescription" : "Provides the implementation for the image directives included in Laika.", "object" : "laika\/directive\/std\/ImageDirectives$.html", "members_object" : [{"label" : "forSpans", "tail" : ": Spans.Directive", "member" : "laika.directive.std.ImageDirectives.forSpans", "link" : "laika\/directive\/std\/ImageDirectives$.html#forSpans:laika.directive.Spans.Directive", "kind" : "val"}, {"label" : "forBlocks", "tail" : ": Blocks.Directive", "member" : "laika.directive.std.ImageDirectives.forBlocks", "link" : "laika\/directive\/std\/ImageDirectives$.html#forBlocks:laika.directive.Blocks.Directive", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/directive\/std\/ImageDirectives$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/directive\/std\/ImageDirectives$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/directive\/std\/ImageDirectives$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/directive\/std\/ImageDirectives$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/directive\/std\/ImageDirectives$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/directive\/std\/ImageDirectives$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/directive\/std\/ImageDirectives$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/ImageDirectives$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/ImageDirectives$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/ImageDirectives$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/directive\/std\/ImageDirectives$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/directive\/std\/ImageDirectives$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/directive\/std\/ImageDirectives$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/directive\/std\/ImageDirectives$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/directive\/std\/ImageDirectives$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/directive\/std\/ImageDirectives$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/directive\/std\/ImageDirectives$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/directive\/std\/ImageDirectives$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/directive\/std\/ImageDirectives$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.directive.std.IncludeDirectives", "shortDescription" : "Provides the implementation for the standard include and embed directives.", "object" : "laika\/directive\/std\/IncludeDirectives$.html", "members_object" : [{"label" : "blockEmbed", "tail" : ": Blocks.Directive", "member" : "laika.directive.std.IncludeDirectives.blockEmbed", "link" : "laika\/directive\/std\/IncludeDirectives$.html#blockEmbed:laika.directive.Blocks.Directive", "kind" : "lazy val"}, {"label" : "blockInclude", "tail" : ": Blocks.Directive", "member" : "laika.directive.std.IncludeDirectives.blockInclude", "link" : "laika\/directive\/std\/IncludeDirectives$.html#blockInclude:laika.directive.Blocks.Directive", "kind" : "lazy val"}, {"label" : "templateEmbed", "tail" : ": Templates.Directive", "member" : "laika.directive.std.IncludeDirectives.templateEmbed", "link" : "laika\/directive\/std\/IncludeDirectives$.html#templateEmbed:laika.directive.Templates.Directive", "kind" : "lazy val"}, {"label" : "templateInclude", "tail" : ": Templates.Directive", "member" : "laika.directive.std.IncludeDirectives.templateInclude", "link" : "laika\/directive\/std\/IncludeDirectives$.html#templateInclude:laika.directive.Templates.Directive", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/directive\/std\/IncludeDirectives$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/directive\/std\/IncludeDirectives$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/directive\/std\/IncludeDirectives$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/directive\/std\/IncludeDirectives$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/directive\/std\/IncludeDirectives$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/directive\/std\/IncludeDirectives$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/directive\/std\/IncludeDirectives$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/IncludeDirectives$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/IncludeDirectives$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/IncludeDirectives$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/directive\/std\/IncludeDirectives$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/directive\/std\/IncludeDirectives$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/directive\/std\/IncludeDirectives$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/directive\/std\/IncludeDirectives$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/directive\/std\/IncludeDirectives$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/directive\/std\/IncludeDirectives$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/directive\/std\/IncludeDirectives$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/directive\/std\/IncludeDirectives$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/directive\/std\/IncludeDirectives$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.directive.std.LinkDirectives", "shortDescription" : "Provides the implementation for the link directives included in Laika.", "object" : "laika\/directive\/std\/LinkDirectives$.html", "members_object" : [{"label" : "source", "tail" : ": Directive", "member" : "laika.directive.std.LinkDirectives.source", "link" : "laika\/directive\/std\/LinkDirectives$.html#source:laika.directive.Links.Directive", "kind" : "lazy val"}, {"label" : "api", "tail" : ": Directive", "member" : "laika.directive.std.LinkDirectives.api", "link" : "laika\/directive\/std\/LinkDirectives$.html#api:laika.directive.Links.Directive", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/directive\/std\/LinkDirectives$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/directive\/std\/LinkDirectives$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/directive\/std\/LinkDirectives$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/directive\/std\/LinkDirectives$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/directive\/std\/LinkDirectives$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/directive\/std\/LinkDirectives$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/directive\/std\/LinkDirectives$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/LinkDirectives$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/LinkDirectives$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/LinkDirectives$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/directive\/std\/LinkDirectives$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/directive\/std\/LinkDirectives$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/directive\/std\/LinkDirectives$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/directive\/std\/LinkDirectives$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/directive\/std\/LinkDirectives$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/directive\/std\/LinkDirectives$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/directive\/std\/LinkDirectives$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/directive\/std\/LinkDirectives$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/directive\/std\/LinkDirectives$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.directive.std.NavigationTreeDirectives", "shortDescription" : "Implementation of the navigationTree directive for templates and markup blocks.", "object" : "laika\/directive\/std\/NavigationTreeDirectives$.html", "members_object" : [{"label" : "forBlocks", "tail" : ": Blocks.Directive", "member" : "laika.directive.std.NavigationTreeDirectives.forBlocks", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#forBlocks:laika.directive.Blocks.Directive", "kind" : "lazy val"}, {"label" : "forTemplates", "tail" : ": Templates.Directive", "member" : "laika.directive.std.NavigationTreeDirectives.forTemplates", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#forTemplates:laika.directive.Templates.Directive", "kind" : "lazy val"}, {"label" : "ManualNavigationNode", "tail" : "", "member" : "laika.directive.std.NavigationTreeDirectives.ManualNavigationNode", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#ManualNavigationNodeextendsNavigationTreeDirectives.NavigationNodeConfigwithProductwithSerializable", "kind" : "case class"}, {"label" : "GeneratedNavigationNode", "tail" : "", "member" : "laika.directive.std.NavigationTreeDirectives.GeneratedNavigationNode", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#GeneratedNavigationNodeextendsNavigationTreeDirectives.NavigationNodeConfigwithProductwithSerializable", "kind" : "case class"}, {"label" : "NavigationNodeConfig", "tail" : "", "member" : "laika.directive.std.NavigationTreeDirectives.NavigationNodeConfig", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#NavigationNodeConfig", "kind" : "object"}, {"label" : "NavigationNodeConfig", "tail" : "", "member" : "laika.directive.std.NavigationTreeDirectives.NavigationNodeConfig", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#NavigationNodeConfigextendsAnyRef", "kind" : "sealed trait"}, {"label" : "NavigationBuilderConfig", "tail" : "", "member" : "laika.directive.std.NavigationTreeDirectives.NavigationBuilderConfig", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#NavigationBuilderConfig", "kind" : "object"}, {"label" : "NavigationBuilderConfig", "tail" : "", "member" : "laika.directive.std.NavigationTreeDirectives.NavigationBuilderConfig", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#NavigationBuilderConfigextendsElementwithBlockResolverwithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/directive\/std\/NavigationTreeDirectives$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.directive.std.SelectDirective", "shortDescription" : "Implementation of the select directive for block elements in markup documents.", "object" : "laika\/directive\/std\/SelectDirective$.html", "members_object" : [{"label" : "forBlocks", "tail" : ": Blocks.Directive", "member" : "laika.directive.std.SelectDirective.forBlocks", "link" : "laika\/directive\/std\/SelectDirective$.html#forBlocks:laika.directive.Blocks.Directive", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/directive\/std\/SelectDirective$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/directive\/std\/SelectDirective$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/directive\/std\/SelectDirective$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/directive\/std\/SelectDirective$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/directive\/std\/SelectDirective$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/directive\/std\/SelectDirective$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/directive\/std\/SelectDirective$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/SelectDirective$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/SelectDirective$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/SelectDirective$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/directive\/std\/SelectDirective$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/directive\/std\/SelectDirective$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/directive\/std\/SelectDirective$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/directive\/std\/SelectDirective$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/directive\/std\/SelectDirective$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/directive\/std\/SelectDirective$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/directive\/std\/SelectDirective$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/directive\/std\/SelectDirective$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/directive\/std\/SelectDirective$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.directive.std.StandardDirectives", "shortDescription" : "Provides the implementation for the standard directives included in Laika.", "object" : "laika\/directive\/std\/StandardDirectives$.html", "members_object" : [{"label" : "linkDirectives", "tail" : ": Seq[Directive]", "member" : "laika.directive.std.StandardDirectives.linkDirectives", "link" : "laika\/directive\/std\/StandardDirectives$.html#linkDirectives:Seq[laika.directive.Links.Directive]", "kind" : "lazy val"}, {"label" : "templateDirectives", "tail" : ": Seq[Templates.Directive]", "member" : "laika.directive.std.StandardDirectives.templateDirectives", "link" : "laika\/directive\/std\/StandardDirectives$.html#templateDirectives:Seq[laika.directive.Templates.Directive]", "kind" : "lazy val"}, {"label" : "spanDirectives", "tail" : ": Seq[Spans.Directive]", "member" : "laika.directive.std.StandardDirectives.spanDirectives", "link" : "laika\/directive\/std\/StandardDirectives$.html#spanDirectives:Seq[laika.directive.Spans.Directive]", "kind" : "lazy val"}, {"label" : "blockDirectives", "tail" : ": Seq[Blocks.Directive]", "member" : "laika.directive.std.StandardDirectives.blockDirectives", "link" : "laika\/directive\/std\/StandardDirectives$.html#blockDirectives:Seq[laika.directive.Blocks.Directive]", "kind" : "lazy val"}, {"label" : "todoBlock", "tail" : ": Blocks.Directive", "member" : "laika.directive.std.StandardDirectives.todoBlock", "link" : "laika\/directive\/std\/StandardDirectives$.html#todoBlock:laika.directive.Blocks.Directive", "kind" : "val"}, {"label" : "todoSpan", "tail" : ": Spans.Directive", "member" : "laika.directive.std.StandardDirectives.todoSpan", "link" : "laika\/directive\/std\/StandardDirectives$.html#todoSpan:laika.directive.Spans.Directive", "kind" : "val"}, {"label" : "pageBreak", "tail" : ": Blocks.Directive", "member" : "laika.directive.std.StandardDirectives.pageBreak", "link" : "laika\/directive\/std\/StandardDirectives$.html#pageBreak:laika.directive.Blocks.Directive", "kind" : "lazy val"}, {"label" : "templateFragment", "tail" : ": Templates.Directive", "member" : "laika.directive.std.StandardDirectives.templateFragment", "link" : "laika\/directive\/std\/StandardDirectives$.html#templateFragment:laika.directive.Templates.Directive", "kind" : "lazy val"}, {"label" : "blockFragment", "tail" : ": Blocks.Directive", "member" : "laika.directive.std.StandardDirectives.blockFragment", "link" : "laika\/directive\/std\/StandardDirectives$.html#blockFragment:laika.directive.Blocks.Directive", "kind" : "lazy val"}, {"label" : "spanStyle", "tail" : ": Spans.Directive", "member" : "laika.directive.std.StandardDirectives.spanStyle", "link" : "laika\/directive\/std\/StandardDirectives$.html#spanStyle:laika.directive.Spans.Directive", "kind" : "lazy val"}, {"label" : "blockStyle", "tail" : ": Blocks.Directive", "member" : "laika.directive.std.StandardDirectives.blockStyle", "link" : "laika\/directive\/std\/StandardDirectives$.html#blockStyle:laika.directive.Blocks.Directive", "kind" : "lazy val"}, {"label" : "format", "tail" : ": Blocks.Directive", "member" : "laika.directive.std.StandardDirectives.format", "link" : "laika\/directive\/std\/StandardDirectives$.html#format:laika.directive.Blocks.Directive", "kind" : "lazy val"}, {"label" : "relativePath", "tail" : ": Templates.Directive", "member" : "laika.directive.std.StandardDirectives.relativePath", "link" : "laika\/directive\/std\/StandardDirectives$.html#relativePath:laika.directive.Templates.Directive", "kind" : "lazy val"}, {"label" : "callout", "tail" : ": Blocks.Directive", "member" : "laika.directive.std.StandardDirectives.callout", "link" : "laika\/directive\/std\/StandardDirectives$.html#callout:laika.directive.Blocks.Directive", "kind" : "lazy val"}, {"label" : "origin", "tail" : ": BundleOrigin", "member" : "laika.directive.std.StandardDirectives.origin", "link" : "laika\/directive\/std\/StandardDirectives$.html#origin:laika.bundle.BundleOrigin", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "laika.directive.std.StandardDirectives.description", "link" : "laika\/directive\/std\/StandardDirectives$.html#description:String", "kind" : "val"}, {"label" : "processExtension", "tail" : "(): PartialFunction[ExtensionBundle, ExtensionBundle]", "member" : "laika.directive.DirectiveRegistry.processExtension", "link" : "laika\/directive\/std\/StandardDirectives$.html#processExtension:PartialFunction[laika.bundle.ExtensionBundle,laika.bundle.ExtensionBundle]", "kind" : "def"}, {"label" : "acceptRawContent", "tail" : "(): Boolean", "member" : "laika.bundle.ExtensionBundle.acceptRawContent", "link" : "laika\/directive\/std\/StandardDirectives$.html#acceptRawContent:Boolean", "kind" : "def"}, {"label" : "useInStrictMode", "tail" : "(): Boolean", "member" : "laika.bundle.ExtensionBundle.useInStrictMode", "link" : "laika\/directive\/std\/StandardDirectives$.html#useInStrictMode:Boolean", "kind" : "def"}, {"label" : "withBase", "tail" : "(base: ExtensionBundle): ExtensionBundle", "member" : "laika.bundle.ExtensionBundle.withBase", "link" : "laika\/directive\/std\/StandardDirectives$.html#withBase(base:laika.bundle.ExtensionBundle):laika.bundle.ExtensionBundle", "kind" : "def"}, {"label" : "renderOverrides", "tail" : "(): Seq[RenderOverrides]", "member" : "laika.bundle.ExtensionBundle.renderOverrides", "link" : "laika\/directive\/std\/StandardDirectives$.html#renderOverrides:Seq[laika.bundle.RenderOverrides]", "kind" : "def"}, {"label" : "rewriteRules", "tail" : "(): Seq[(DocumentCursor) ⇒ RewriteRules]", "member" : "laika.bundle.ExtensionBundle.rewriteRules", "link" : "laika\/directive\/std\/StandardDirectives$.html#rewriteRules:Seq[laika.ast.DocumentCursor=>laika.ast.RewriteRules]", "kind" : "def"}, {"label" : "parsers", "tail" : "(): ParserBundle", "member" : "laika.bundle.ExtensionBundle.parsers", "link" : "laika\/directive\/std\/StandardDirectives$.html#parsers:laika.bundle.ParserBundle", "kind" : "def"}, {"label" : "slugBuilder", "tail" : "(): Option[(String) ⇒ String]", "member" : "laika.bundle.ExtensionBundle.slugBuilder", "link" : "laika\/directive\/std\/StandardDirectives$.html#slugBuilder:Option[String=>String]", "kind" : "def"}, {"label" : "docTypeMatcher", "tail" : "(): PartialFunction[Path, DocumentType]", "member" : "laika.bundle.ExtensionBundle.docTypeMatcher", "link" : "laika\/directive\/std\/StandardDirectives$.html#docTypeMatcher:PartialFunction[laika.ast.Path,laika.ast.DocumentType]", "kind" : "def"}, {"label" : "baseConfig", "tail" : "(): Config", "member" : "laika.bundle.ExtensionBundle.baseConfig", "link" : "laika\/directive\/std\/StandardDirectives$.html#baseConfig:laika.config.Config", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/directive\/std\/StandardDirectives$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/directive\/std\/StandardDirectives$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/directive\/std\/StandardDirectives$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/directive\/std\/StandardDirectives$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/directive\/std\/StandardDirectives$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/directive\/std\/StandardDirectives$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/directive\/std\/StandardDirectives$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/StandardDirectives$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/StandardDirectives$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/std\/StandardDirectives$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/directive\/std\/StandardDirectives$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/directive\/std\/StandardDirectives$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/directive\/std\/StandardDirectives$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/directive\/std\/StandardDirectives$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/directive\/std\/StandardDirectives$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/directive\/std\/StandardDirectives$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/directive\/std\/StandardDirectives$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/directive\/std\/StandardDirectives$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/directive\/std\/StandardDirectives$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "laika.parse.combinator" : [{"name" : "laika.parse.combinator.Parsers", "members_trait" : [{"label" : "TryOps", "tail" : "", "member" : "laika.parse.combinator.Parsers.TryOps", "link" : "laika\/parse\/combinator\/Parsers.html#TryOps[A]extendsAnyRef", "kind" : "implicit class"}, {"label" : "ParserException", "tail" : "", "member" : "laika.parse.combinator.Parsers.ParserException", "link" : "laika\/parse\/combinator\/Parsers.html#ParserExceptionextendsRuntimeExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "lazily", "tail" : "(p: ⇒ Parser[T]): Parser[T]", "member" : "laika.parse.combinator.Parsers.lazily", "link" : "laika\/parse\/combinator\/Parsers.html#lazily[T](p:=>laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "consumeAll", "tail" : "(p: Parser[T]): Parser[T]", "member" : "laika.parse.combinator.Parsers.consumeAll", "link" : "laika\/parse\/combinator\/Parsers.html#consumeAll[T](p:laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "failure", "tail" : "(msg: String): Parser[Nothing]", "member" : "laika.parse.combinator.Parsers.failure", "link" : "laika\/parse\/combinator\/Parsers.html#failure(msg:String):laika.parse.Parser[Nothing]", "kind" : "def"}, {"label" : "success", "tail" : "(v: T): Parser[T]", "member" : "laika.parse.combinator.Parsers.success", "link" : "laika\/parse\/combinator\/Parsers.html#success[T](v:T):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "lookBehind", "tail" : "(offset: Int, parser: ⇒ Parser[T]): Parser[T]", "member" : "laika.parse.combinator.Parsers.lookBehind", "link" : "laika\/parse\/combinator\/Parsers.html#lookBehind[T](offset:Int,parser:=>laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "lookAhead", "tail" : "(offset: Int, value: String): Parser[String]", "member" : "laika.parse.combinator.Parsers.lookAhead", "link" : "laika\/parse\/combinator\/Parsers.html#lookAhead(offset:Int,value:String):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "lookAhead", "tail" : "(offset: Int, p: Parser[T]): Parser[T]", "member" : "laika.parse.combinator.Parsers.lookAhead", "link" : "laika\/parse\/combinator\/Parsers.html#lookAhead[T](offset:Int,p:laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "lookAhead", "tail" : "(value: String): Parser[String]", "member" : "laika.parse.combinator.Parsers.lookAhead", "link" : "laika\/parse\/combinator\/Parsers.html#lookAhead(value:String):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "lookAhead", "tail" : "(p: Parser[T]): Parser[T]", "member" : "laika.parse.combinator.Parsers.lookAhead", "link" : "laika\/parse\/combinator\/Parsers.html#lookAhead[T](p:laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "not", "tail" : "(value: String): Parser[Unit]", "member" : "laika.parse.combinator.Parsers.not", "link" : "laika\/parse\/combinator\/Parsers.html#not(value:String):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "not", "tail" : "(p: Parser[T]): Parser[Unit]", "member" : "laika.parse.combinator.Parsers.not", "link" : "laika\/parse\/combinator\/Parsers.html#not[T](p:laika.parse.Parser[T]):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "opt", "tail" : "(value: String): Parser[Option[String]]", "member" : "laika.parse.combinator.Parsers.opt", "link" : "laika\/parse\/combinator\/Parsers.html#opt(value:String):laika.parse.Parser[Option[String]]", "kind" : "def"}, {"label" : "opt", "tail" : "(p: Parser[T]): Parser[Option[T]]", "member" : "laika.parse.combinator.Parsers.opt", "link" : "laika\/parse\/combinator\/Parsers.html#opt[T](p:laika.parse.Parser[T]):laika.parse.Parser[Option[T]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/combinator\/Parsers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/combinator\/Parsers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/combinator\/Parsers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/combinator\/Parsers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/combinator\/Parsers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/combinator\/Parsers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/combinator\/Parsers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/combinator\/Parsers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/combinator\/Parsers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/combinator\/Parsers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/combinator\/Parsers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/combinator\/Parsers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/combinator\/Parsers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/combinator\/Parsers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/combinator\/Parsers.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/combinator\/Parsers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/combinator\/Parsers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/combinator\/Parsers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/combinator\/Parsers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Generic base parsers which are not specifically tailored for parsing of text markup.", "object" : "laika\/parse\/combinator\/Parsers$.html", "members_object" : [{"label" : "TryOps", "tail" : "", "member" : "laika.parse.combinator.Parsers.TryOps", "link" : "laika\/parse\/combinator\/Parsers.html#TryOps[A]extendsAnyRef", "kind" : "implicit class"}, {"label" : "ParserException", "tail" : "", "member" : "laika.parse.combinator.Parsers.ParserException", "link" : "laika\/parse\/combinator\/Parsers.html#ParserExceptionextendsRuntimeExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "lazily", "tail" : "(p: ⇒ Parser[T]): Parser[T]", "member" : "laika.parse.combinator.Parsers.lazily", "link" : "laika\/parse\/combinator\/Parsers$.html#lazily[T](p:=>laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "consumeAll", "tail" : "(p: Parser[T]): Parser[T]", "member" : "laika.parse.combinator.Parsers.consumeAll", "link" : "laika\/parse\/combinator\/Parsers$.html#consumeAll[T](p:laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "failure", "tail" : "(msg: String): Parser[Nothing]", "member" : "laika.parse.combinator.Parsers.failure", "link" : "laika\/parse\/combinator\/Parsers$.html#failure(msg:String):laika.parse.Parser[Nothing]", "kind" : "def"}, {"label" : "success", "tail" : "(v: T): Parser[T]", "member" : "laika.parse.combinator.Parsers.success", "link" : "laika\/parse\/combinator\/Parsers$.html#success[T](v:T):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "lookBehind", "tail" : "(offset: Int, parser: ⇒ Parser[T]): Parser[T]", "member" : "laika.parse.combinator.Parsers.lookBehind", "link" : "laika\/parse\/combinator\/Parsers$.html#lookBehind[T](offset:Int,parser:=>laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "lookAhead", "tail" : "(offset: Int, value: String): Parser[String]", "member" : "laika.parse.combinator.Parsers.lookAhead", "link" : "laika\/parse\/combinator\/Parsers$.html#lookAhead(offset:Int,value:String):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "lookAhead", "tail" : "(offset: Int, p: Parser[T]): Parser[T]", "member" : "laika.parse.combinator.Parsers.lookAhead", "link" : "laika\/parse\/combinator\/Parsers$.html#lookAhead[T](offset:Int,p:laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "lookAhead", "tail" : "(value: String): Parser[String]", "member" : "laika.parse.combinator.Parsers.lookAhead", "link" : "laika\/parse\/combinator\/Parsers$.html#lookAhead(value:String):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "lookAhead", "tail" : "(p: Parser[T]): Parser[T]", "member" : "laika.parse.combinator.Parsers.lookAhead", "link" : "laika\/parse\/combinator\/Parsers$.html#lookAhead[T](p:laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "not", "tail" : "(value: String): Parser[Unit]", "member" : "laika.parse.combinator.Parsers.not", "link" : "laika\/parse\/combinator\/Parsers$.html#not(value:String):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "not", "tail" : "(p: Parser[T]): Parser[Unit]", "member" : "laika.parse.combinator.Parsers.not", "link" : "laika\/parse\/combinator\/Parsers$.html#not[T](p:laika.parse.Parser[T]):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "opt", "tail" : "(value: String): Parser[Option[String]]", "member" : "laika.parse.combinator.Parsers.opt", "link" : "laika\/parse\/combinator\/Parsers$.html#opt(value:String):laika.parse.Parser[Option[String]]", "kind" : "def"}, {"label" : "opt", "tail" : "(p: Parser[T]): Parser[Option[T]]", "member" : "laika.parse.combinator.Parsers.opt", "link" : "laika\/parse\/combinator\/Parsers$.html#opt[T](p:laika.parse.Parser[T]):laika.parse.Parser[Option[T]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/combinator\/Parsers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/combinator\/Parsers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/combinator\/Parsers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/combinator\/Parsers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/combinator\/Parsers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/combinator\/Parsers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/combinator\/Parsers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/combinator\/Parsers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/combinator\/Parsers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/combinator\/Parsers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/combinator\/Parsers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/combinator\/Parsers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/combinator\/Parsers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/combinator\/Parsers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/combinator\/Parsers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/combinator\/Parsers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/combinator\/Parsers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/combinator\/Parsers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/combinator\/Parsers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/parse\/combinator\/Parsers.html", "kind" : "trait"}, {"name" : "laika.parse.combinator.Repeat", "shortDescription" : "Parser implementation for repeatedly applying the specified base parser until it fails.", "members_class" : [{"label" : "parse", "tail" : "(source: SourceCursor): Parsed[List[T]]", "member" : "laika.parse.combinator.Repeat.parse", "link" : "laika\/parse\/combinator\/Repeat.html#parse(source:laika.parse.SourceCursor):laika.parse.Parsed[List[T]]", "kind" : "def"}, {"label" : "take", "tail" : "(num: Int): Repeat[T]", "member" : "laika.parse.combinator.Repeat.take", "link" : "laika\/parse\/combinator\/Repeat.html#take(num:Int):laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "max", "tail" : "(num: Int): Repeat[T]", "member" : "laika.parse.combinator.Repeat.max", "link" : "laika\/parse\/combinator\/Repeat.html#max(num:Int):laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "min", "tail" : "(num: Int): Repeat[T]", "member" : "laika.parse.combinator.Repeat.min", "link" : "laika\/parse\/combinator\/Repeat.html#min(num:Int):laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"member" : "laika.parse.combinator.Repeat#<init>", "error" : "unsupported entity"}, {"label" : "withSource", "tail" : "(): Parser[(List[T], String)]", "member" : "laika.parse.Parser.withSource", "link" : "laika\/parse\/combinator\/Repeat.html#withSource:laika.parse.Parser[(T,String)]", "kind" : "def"}, {"label" : "withContext", "tail" : "(): Parser[(List[T], SourceFragment)]", "member" : "laika.parse.Parser.withContext", "link" : "laika\/parse\/combinator\/Repeat.html#withContext:laika.parse.Parser[(T,laika.parse.SourceFragment)]", "kind" : "def"}, {"label" : "withPosition", "tail" : "(): Parser[(List[T], Position)]", "member" : "laika.parse.Parser.withPosition", "link" : "laika\/parse\/combinator\/Repeat.html#withPosition:laika.parse.Parser[(T,laika.parse.Position)]", "kind" : "def"}, {"label" : "count", "tail" : "(): Parser[Int]", "member" : "laika.parse.Parser.count", "link" : "laika\/parse\/combinator\/Repeat.html#count:laika.parse.Parser[Int]", "kind" : "def"}, {"label" : "source", "tail" : "(): Parser[String]", "member" : "laika.parse.Parser.source", "link" : "laika\/parse\/combinator\/Repeat.html#source:laika.parse.Parser[String]", "kind" : "def"}, {"label" : "cursor", "tail" : "(): Parser[SourceFragment]", "member" : "laika.parse.Parser.cursor", "link" : "laika\/parse\/combinator\/Repeat.html#cursor:laika.parse.Parser[laika.parse.SourceFragment]", "kind" : "def"}, {"label" : "withCursor", "tail" : "(): Parser[(List[T], SourceFragment)]", "member" : "laika.parse.Parser.withCursor", "link" : "laika\/parse\/combinator\/Repeat.html#withCursor:laika.parse.Parser[(T,laika.parse.SourceFragment)]", "kind" : "def"}, {"label" : "withFailureMessage", "tail" : "(msg: String): Parser[List[T]]", "member" : "laika.parse.Parser.withFailureMessage", "link" : "laika\/parse\/combinator\/Repeat.html#withFailureMessage(msg:String):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(pf: PartialFunction[Failure, Parser[U]]): Parser[U]", "member" : "laika.parse.Parser.recoverWith", "link" : "laika\/parse\/combinator\/Repeat.html#recoverWith[U>:T](pf:PartialFunction[laika.parse.Failure,laika.parse.Parser[U]]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "handleErrorWith", "tail" : "(f: (Failure) ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.handleErrorWith", "link" : "laika\/parse\/combinator\/Repeat.html#handleErrorWith[U>:T](f:laika.parse.Failure=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "repWith", "tail" : "(next: (U) ⇒ Parser[U]): Parser[List[U]]", "member" : "laika.parse.Parser.repWith", "link" : "laika\/parse\/combinator\/Repeat.html#repWith[U>:T](next:U=>laika.parse.Parser[U]):laika.parse.Parser[List[U]]", "kind" : "def"}, {"label" : "repUntil", "tail" : "(endCondition: Parser[U]): Parser[(List[List[T]], Option[U])]", "member" : "laika.parse.Parser.repUntil", "link" : "laika\/parse\/combinator\/Repeat.html#repUntil[U](endCondition:laika.parse.Parser[U]):laika.parse.Parser[(List[T],Option[U])]", "kind" : "def"}, {"label" : "?", "tail" : "(): Parser[Option[List[T]]]", "member" : "laika.parse.Parser.?", "link" : "laika\/parse\/combinator\/Repeat.html#?:laika.parse.Parser[Option[T]]", "kind" : "def"}, {"label" : "+", "tail" : "(): Repeat[List[T]]", "member" : "laika.parse.Parser.+", "link" : "laika\/parse\/combinator\/Repeat.html#+:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "*", "tail" : "(): Repeat[List[T]]", "member" : "laika.parse.Parser.*", "link" : "laika\/parse\/combinator\/Repeat.html#*:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(separator: String): Repeat[List[T]]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/combinator\/Repeat.html#rep(separator:String):laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(separator: Parser[Unit]): Repeat[List[T]]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/combinator\/Repeat.html#rep(separator:laika.parse.Parser[Unit]):laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(): Repeat[List[T]]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/combinator\/Repeat.html#rep:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : ">>", "tail" : "(fq: (List[T]) ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.>>", "link" : "laika\/parse\/combinator\/Repeat.html#>>[U](fq:T=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "evalMap", "tail" : "(f: (List[T]) ⇒ Either[String, U]): Parser[U]", "member" : "laika.parse.Parser.evalMap", "link" : "laika\/parse\/combinator\/Repeat.html#evalMap[U](f:T=>Either[String,U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[List[T], U], error: (List[T]) ⇒ String): Parser[U]", "member" : "laika.parse.Parser.collect", "link" : "laika\/parse\/combinator\/Repeat.html#collect[U](f:PartialFunction[T,U],error:T=>String):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "void", "tail" : "(): Parser[Unit]", "member" : "laika.parse.Parser.void", "link" : "laika\/parse\/combinator\/Repeat.html#void:laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "as", "tail" : "(v: ⇒ U): Parser[U]", "member" : "laika.parse.Parser.as", "link" : "laika\/parse\/combinator\/Repeat.html#as[U](v:=>U):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "^^", "tail" : "(f: (List[T]) ⇒ U): Parser[U]", "member" : "laika.parse.Parser.^^", "link" : "laika\/parse\/combinator\/Repeat.html#^^[U](f:T=>U):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "|", "tail" : "(value: String)(ev: <:<[List[T], String]): Parser[String]", "member" : "laika.parse.Parser.|", "link" : "laika\/parse\/combinator\/Repeat.html#|(value:String)(implicitev:T<:<String):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "|", "tail" : "(p: ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.|", "link" : "laika\/parse\/combinator\/Repeat.html#|[U>:T](p:=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "<~", "tail" : "(p: Parser[U]): Parser[List[T]]", "member" : "laika.parse.Parser.<~", "link" : "laika\/parse\/combinator\/Repeat.html#<~[U](p:laika.parse.Parser[U]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "<~", "tail" : "(value: String): Parser[List[T]]", "member" : "laika.parse.Parser.<~", "link" : "laika\/parse\/combinator\/Repeat.html#<~(value:String):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "~>", "tail" : "(p: Parser[U]): Parser[U]", "member" : "laika.parse.Parser.~>", "link" : "laika\/parse\/combinator\/Repeat.html#~>[U](p:laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "~>", "tail" : "(value: String): Parser[String]", "member" : "laika.parse.Parser.~>", "link" : "laika\/parse\/combinator\/Repeat.html#~>(value:String):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "~", "tail" : "(p: Parser[U]): Parser[~[List[T], U]]", "member" : "laika.parse.Parser.~", "link" : "laika\/parse\/combinator\/Repeat.html#~[U](p:laika.parse.Parser[U]):laika.parse.Parser[T~U]", "kind" : "def"}, {"label" : "~", "tail" : "(value: String): Parser[~[List[T], String]]", "member" : "laika.parse.Parser.~", "link" : "laika\/parse\/combinator\/Repeat.html#~(value:String):laika.parse.Parser[T~String]", "kind" : "def"}, {"label" : "orElse", "tail" : "(p0: ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.orElse", "link" : "laika\/parse\/combinator\/Repeat.html#orElse[U>:T](p0:=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (List[T]) ⇒ U): Parser[U]", "member" : "laika.parse.Parser.map", "link" : "laika\/parse\/combinator\/Repeat.html#map[U](f:T=>U):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (List[T]) ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.flatMap", "link" : "laika\/parse\/combinator\/Repeat.html#flatMap[U](f:T=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "parse", "tail" : "(in: String): Parsed[List[T]]", "member" : "laika.parse.Parser.parse", "link" : "laika\/parse\/combinator\/Repeat.html#parse(in:String):laika.parse.Parsed[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/combinator\/Repeat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/combinator\/Repeat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/combinator\/Repeat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/combinator\/Repeat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/combinator\/Repeat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/combinator\/Repeat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/combinator\/Repeat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/combinator\/Repeat.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/combinator\/Repeat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/combinator\/Repeat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/combinator\/Repeat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/combinator\/Repeat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/combinator\/Repeat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/combinator\/Repeat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/combinator\/Repeat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/combinator\/Repeat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/combinator\/Repeat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/combinator\/Repeat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/combinator\/Repeat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/parse\/combinator\/Repeat.html", "kind" : "class"}], "laika.api.builder" : [{"name" : "laika.api.builder.BundleFilter", "shortDescription" : "A filter that might deactivate or activate some of the bundles based on user configuration.", "members_case class" : [{"label" : "merge", "tail" : "(other: BundleFilter): BundleFilter", "member" : "laika.api.builder.BundleFilter.merge", "link" : "laika\/api\/builder\/BundleFilter.html#merge(other:laika.api.builder.BundleFilter):laika.api.builder.BundleFilter", "kind" : "def"}, {"label" : "apply", "tail" : "(bundle: ExtensionBundle): Boolean", "member" : "laika.api.builder.BundleFilter.apply", "link" : "laika\/api\/builder\/BundleFilter.html#apply(bundle:laika.bundle.ExtensionBundle):Boolean", "kind" : "def"}, {"member" : "laika.api.builder.BundleFilter#<init>", "error" : "unsupported entity"}, {"label" : "acceptRawContent", "tail" : ": Boolean", "member" : "laika.api.builder.BundleFilter.acceptRawContent", "link" : "laika\/api\/builder\/BundleFilter.html#acceptRawContent:Boolean", "kind" : "val"}, {"label" : "strict", "tail" : ": Boolean", "member" : "laika.api.builder.BundleFilter.strict", "link" : "laika\/api\/builder\/BundleFilter.html#strict:Boolean", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "laika\/api\/builder\/BundleFilter.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (Boolean) ⇒ A): (ExtensionBundle) ⇒ A", "member" : "scala.Function1.andThen", "link" : "laika\/api\/builder\/BundleFilter.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ ExtensionBundle): (A) ⇒ Boolean", "member" : "scala.Function1.compose", "link" : "laika\/api\/builder\/BundleFilter.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/api\/builder\/BundleFilter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/api\/builder\/BundleFilter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/api\/builder\/BundleFilter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/api\/builder\/BundleFilter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/api\/builder\/BundleFilter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/api\/builder\/BundleFilter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/api\/builder\/BundleFilter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/BundleFilter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/BundleFilter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/BundleFilter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/api\/builder\/BundleFilter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/api\/builder\/BundleFilter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/api\/builder\/BundleFilter.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/api\/builder\/BundleFilter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/api\/builder\/BundleFilter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/api\/builder\/BundleFilter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/api\/builder\/BundleFilter.html", "kind" : "case class"}, {"name" : "laika.api.builder.CommonBuilderOps", "members_trait" : [{"label" : "using", "tail" : "(bundles: ExtensionBundle*): ThisType", "member" : "laika.api.builder.CommonBuilderOps.using", "link" : "laika\/api\/builder\/CommonBuilderOps.html#using(bundles:laika.bundle.ExtensionBundle*):CommonBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/api\/builder\/CommonBuilderOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/api\/builder\/CommonBuilderOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/api\/builder\/CommonBuilderOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/api\/builder\/CommonBuilderOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/api\/builder\/CommonBuilderOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/api\/builder\/CommonBuilderOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/api\/builder\/CommonBuilderOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/CommonBuilderOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/CommonBuilderOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/CommonBuilderOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/api\/builder\/CommonBuilderOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/api\/builder\/CommonBuilderOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/api\/builder\/CommonBuilderOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/api\/builder\/CommonBuilderOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/api\/builder\/CommonBuilderOps.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/api\/builder\/CommonBuilderOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/api\/builder\/CommonBuilderOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/api\/builder\/CommonBuilderOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/api\/builder\/CommonBuilderOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "config", "tail" : "(): OperationConfig", "member" : "laika.api.builder.CommonBuilderOps.config", "link" : "laika\/api\/builder\/CommonBuilderOps.html#config:laika.api.builder.OperationConfig", "kind" : "abstract def"}, {"label" : "withConfig", "tail" : "(newConfig: OperationConfig): ThisType", "member" : "laika.api.builder.CommonBuilderOps.withConfig", "link" : "laika\/api\/builder\/CommonBuilderOps.html#withConfig(newConfig:laika.api.builder.OperationConfig):CommonBuilderOps.this.ThisType", "kind" : "abstract def"}, {"member" : "laika.api.builder.CommonBuilderOps.ThisType", "error" : "unsupported entity"}], "shortDescription" : "Base API for specifying configuration options that apply to allkinds of operations (Parser, Renderer and Transformer).", "trait" : "laika\/api\/builder\/CommonBuilderOps.html", "kind" : "trait"}, {"name" : "laika.api.builder.OperationConfig", "shortDescription" : "Represents the configuration for an operation based on extension bundles and several flags.", "object" : "laika\/api\/builder\/OperationConfig$.html", "members_object" : [{"label" : "empty", "tail" : ": OperationConfig", "member" : "laika.api.builder.OperationConfig.empty", "link" : "laika\/api\/builder\/OperationConfig$.html#empty:laika.api.builder.OperationConfig", "kind" : "val"}, {"label" : "default", "tail" : ": OperationConfig", "member" : "laika.api.builder.OperationConfig.default", "link" : "laika\/api\/builder\/OperationConfig$.html#default:laika.api.builder.OperationConfig", "kind" : "val"}, {"label" : "mergeBundles", "tail" : "(bundles: Seq[ExtensionBundle]): ExtensionBundle", "member" : "laika.api.builder.OperationConfig.mergeBundles", "link" : "laika\/api\/builder\/OperationConfig$.html#mergeBundles(bundles:Seq[laika.bundle.ExtensionBundle]):laika.bundle.ExtensionBundle", "kind" : "def"}, {"label" : "sortBundles", "tail" : "(bundles: Seq[ExtensionBundle]): Seq[ExtensionBundle]", "member" : "laika.api.builder.OperationConfig.sortBundles", "link" : "laika\/api\/builder\/OperationConfig$.html#sortBundles(bundles:Seq[laika.bundle.ExtensionBundle]):Seq[laika.bundle.ExtensionBundle]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/api\/builder\/OperationConfig$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/api\/builder\/OperationConfig$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/api\/builder\/OperationConfig$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/api\/builder\/OperationConfig$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/api\/builder\/OperationConfig$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/api\/builder\/OperationConfig$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/api\/builder\/OperationConfig$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/OperationConfig$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/OperationConfig$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/OperationConfig$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/api\/builder\/OperationConfig$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/api\/builder\/OperationConfig$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/api\/builder\/OperationConfig$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/api\/builder\/OperationConfig$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/api\/builder\/OperationConfig$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/api\/builder\/OperationConfig$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/api\/builder\/OperationConfig$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/api\/builder\/OperationConfig$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/api\/builder\/OperationConfig$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "merge", "tail" : "(other: OperationConfig): OperationConfig", "member" : "laika.api.builder.OperationConfig.merge", "link" : "laika\/api\/builder\/OperationConfig.html#merge(other:laika.api.builder.OperationConfig):laika.api.builder.OperationConfig", "kind" : "def"}, {"label" : "forRawContent", "tail" : "(): OperationConfig", "member" : "laika.api.builder.OperationConfig.forRawContent", "link" : "laika\/api\/builder\/OperationConfig.html#forRawContent:laika.api.builder.OperationConfig", "kind" : "def"}, {"label" : "forStrictMode", "tail" : "(): OperationConfig", "member" : "laika.api.builder.OperationConfig.forStrictMode", "link" : "laika\/api\/builder\/OperationConfig.html#forStrictMode:laika.api.builder.OperationConfig", "kind" : "def"}, {"label" : "withBundlesFor", "tail" : "(parser: MarkupFormat): OperationConfig", "member" : "laika.api.builder.OperationConfig.withBundlesFor", "link" : "laika\/api\/builder\/OperationConfig.html#withBundlesFor(parser:laika.factory.MarkupFormat):laika.api.builder.OperationConfig", "kind" : "def"}, {"label" : "withBundles", "tail" : "(bundles: Seq[ExtensionBundle]): OperationConfig", "member" : "laika.api.builder.OperationConfig.withBundles", "link" : "laika\/api\/builder\/OperationConfig.html#withBundles(bundles:Seq[laika.bundle.ExtensionBundle]):laika.api.builder.OperationConfig", "kind" : "def"}, {"label" : "renderOverridesFor", "tail" : "(format: RenderFormat[FMT]): Overrides", "member" : "laika.api.builder.OperationConfig.renderOverridesFor", "link" : "laika\/api\/builder\/OperationConfig.html#renderOverridesFor[FMT](format:laika.factory.RenderFormat[FMT]):format.Overrides", "kind" : "def"}, {"label" : "rewriteRulesFor", "tail" : "(doc: Document): RewriteRules", "member" : "laika.api.builder.OperationConfig.rewriteRulesFor", "link" : "laika\/api\/builder\/OperationConfig.html#rewriteRulesFor(doc:laika.ast.Document):laika.ast.RewriteRules", "kind" : "def"}, {"label" : "rewriteRulesFor", "tail" : "(root: DocumentTreeRoot): (DocumentCursor) ⇒ RewriteRules", "member" : "laika.api.builder.OperationConfig.rewriteRulesFor", "link" : "laika\/api\/builder\/OperationConfig.html#rewriteRulesFor(root:laika.ast.DocumentTreeRoot):laika.ast.DocumentCursor=>laika.ast.RewriteRules", "kind" : "def"}, {"label" : "slugBuilder", "tail" : ": (String) ⇒ String", "member" : "laika.api.builder.OperationConfig.slugBuilder", "link" : "laika\/api\/builder\/OperationConfig.html#slugBuilder:String=>String", "kind" : "lazy val"}, {"label" : "docTypeMatcher", "tail" : ": (Path) ⇒ DocumentType", "member" : "laika.api.builder.OperationConfig.docTypeMatcher", "link" : "laika\/api\/builder\/OperationConfig.html#docTypeMatcher:laika.ast.Path=>laika.ast.DocumentType", "kind" : "lazy val"}, {"label" : "templateParser", "tail" : ": Option[Parser[TemplateRoot]]", "member" : "laika.api.builder.OperationConfig.templateParser", "link" : "laika\/api\/builder\/OperationConfig.html#templateParser:Option[laika.parse.Parser[laika.ast.TemplateRoot]]", "kind" : "lazy val"}, {"label" : "styleSheetParser", "tail" : ": Parser[Set[StyleDeclaration]]", "member" : "laika.api.builder.OperationConfig.styleSheetParser", "link" : "laika\/api\/builder\/OperationConfig.html#styleSheetParser:laika.parse.Parser[Set[laika.ast.StyleDeclaration]]", "kind" : "lazy val"}, {"label" : "configProvider", "tail" : ": ConfigProvider", "member" : "laika.api.builder.OperationConfig.configProvider", "link" : "laika\/api\/builder\/OperationConfig.html#configProvider:laika.bundle.ConfigProvider", "kind" : "lazy val"}, {"label" : "markupExtensions", "tail" : ": MarkupExtensions", "member" : "laika.api.builder.OperationConfig.markupExtensions", "link" : "laika\/api\/builder\/OperationConfig.html#markupExtensions:laika.bundle.MarkupExtensions", "kind" : "lazy val"}, {"label" : "withConfigValue", "tail" : "(key: Key, value: T)(encoder: ConfigEncoder[T]): OperationConfig", "member" : "laika.api.builder.OperationConfig.withConfigValue", "link" : "laika\/api\/builder\/OperationConfig.html#withConfigValue[T](key:laika.config.Key,value:T)(implicitencoder:laika.config.ConfigEncoder[T]):laika.api.builder.OperationConfig", "kind" : "def"}, {"label" : "withConfigValue", "tail" : "(key: String, value: T)(encoder: ConfigEncoder[T]): OperationConfig", "member" : "laika.api.builder.OperationConfig.withConfigValue", "link" : "laika\/api\/builder\/OperationConfig.html#withConfigValue[T](key:String,value:T)(implicitencoder:laika.config.ConfigEncoder[T]):laika.api.builder.OperationConfig", "kind" : "def"}, {"label" : "withConfigValue", "tail" : "(value: T)(arg0: ConfigEncoder[T], arg1: DefaultKey[T]): OperationConfig", "member" : "laika.api.builder.OperationConfig.withConfigValue", "link" : "laika\/api\/builder\/OperationConfig.html#withConfigValue[T](value:T)(implicitevidence$1:laika.config.ConfigEncoder[T],implicitevidence$2:laika.config.DefaultKey[T]):laika.api.builder.OperationConfig", "kind" : "def"}, {"label" : "baseConfig", "tail" : ": Config", "member" : "laika.api.builder.OperationConfig.baseConfig", "link" : "laika\/api\/builder\/OperationConfig.html#baseConfig:laika.config.Config", "kind" : "lazy val"}, {"member" : "laika.api.builder.OperationConfig#<init>", "error" : "unsupported entity"}, {"label" : "renderFormatted", "tail" : ": Boolean", "member" : "laika.api.builder.OperationConfig.renderFormatted", "link" : "laika\/api\/builder\/OperationConfig.html#renderFormatted:Boolean", "kind" : "val"}, {"label" : "renderMessages", "tail" : ": MessageFilter", "member" : "laika.api.builder.OperationConfig.renderMessages", "link" : "laika\/api\/builder\/OperationConfig.html#renderMessages:laika.ast.MessageFilter", "kind" : "val"}, {"label" : "failOnMessages", "tail" : ": MessageFilter", "member" : "laika.api.builder.OperationConfig.failOnMessages", "link" : "laika\/api\/builder\/OperationConfig.html#failOnMessages:laika.ast.MessageFilter", "kind" : "val"}, {"label" : "configBuilder", "tail" : ": ConfigBuilder", "member" : "laika.api.builder.OperationConfig.configBuilder", "link" : "laika\/api\/builder\/OperationConfig.html#configBuilder:laika.config.ConfigBuilder", "kind" : "val"}, {"label" : "bundleFilter", "tail" : ": BundleFilter", "member" : "laika.api.builder.OperationConfig.bundleFilter", "link" : "laika\/api\/builder\/OperationConfig.html#bundleFilter:laika.api.builder.BundleFilter", "kind" : "val"}, {"label" : "bundles", "tail" : ": Seq[ExtensionBundle]", "member" : "laika.api.builder.OperationConfig.bundles", "link" : "laika\/api\/builder\/OperationConfig.html#bundles:Seq[laika.bundle.ExtensionBundle]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/api\/builder\/OperationConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/api\/builder\/OperationConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/api\/builder\/OperationConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/api\/builder\/OperationConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/api\/builder\/OperationConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/api\/builder\/OperationConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/api\/builder\/OperationConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/OperationConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/OperationConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/OperationConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/api\/builder\/OperationConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/api\/builder\/OperationConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/api\/builder\/OperationConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/api\/builder\/OperationConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/api\/builder\/OperationConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/api\/builder\/OperationConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/api\/builder\/OperationConfig.html", "kind" : "case class"}, {"name" : "laika.api.builder.ParserBuilder", "shortDescription" : "Builder API for Parser instances.", "members_class" : [{"label" : "build", "tail" : "(): MarkupParser", "member" : "laika.api.builder.ParserBuilder.build", "link" : "laika\/api\/builder\/ParserBuilder.html#build:laika.api.MarkupParser", "kind" : "def"}, {"label" : "withConfig", "tail" : "(newConfig: OperationConfig): ThisType", "member" : "laika.api.builder.ParserBuilder.withConfig", "link" : "laika\/api\/builder\/ParserBuilder.html#withConfig(newConfig:laika.api.builder.OperationConfig):ParserBuilder.this.ThisType", "kind" : "def"}, {"label" : "ThisType", "tail" : "", "member" : "laika.api.builder.ParserBuilder.ThisType", "link" : "laika\/api\/builder\/ParserBuilder.html#ThisType=laika.api.builder.ParserBuilder", "kind" : "type"}, {"label" : "docType", "tail" : ": TextDocumentType", "member" : "laika.api.builder.ParserBuilder.docType", "link" : "laika\/api\/builder\/ParserBuilder.html#docType:laika.ast.TextDocumentType", "kind" : "val"}, {"member" : "laika.api.builder.ParserBuilder#<init>", "error" : "unsupported entity"}, {"label" : "config", "tail" : ": OperationConfig", "member" : "laika.api.builder.ParserBuilder.config", "link" : "laika\/api\/builder\/ParserBuilder.html#config:laika.api.builder.OperationConfig", "kind" : "val"}, {"label" : "withConfigValue", "tail" : "(key: Key, value: T)(arg0: ConfigEncoder[T]): ThisType", "member" : "laika.api.builder.ParserBuilderOps.withConfigValue", "link" : "laika\/api\/builder\/ParserBuilder.html#withConfigValue[T](key:laika.config.Key,value:T)(implicitevidence$4:laika.config.ConfigEncoder[T]):ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "withConfigValue", "tail" : "(key: String, value: T)(arg0: ConfigEncoder[T]): ThisType", "member" : "laika.api.builder.ParserBuilderOps.withConfigValue", "link" : "laika\/api\/builder\/ParserBuilder.html#withConfigValue[T](key:String,value:T)(implicitevidence$3:laika.config.ConfigEncoder[T]):ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "withConfigValue", "tail" : "(value: T)(arg0: ConfigEncoder[T], arg1: DefaultKey[T]): ThisType", "member" : "laika.api.builder.ParserBuilderOps.withConfigValue", "link" : "laika\/api\/builder\/ParserBuilder.html#withConfigValue[T](value:T)(implicitevidence$1:laika.config.ConfigEncoder[T],implicitevidence$2:laika.config.DefaultKey[T]):ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "failOnMessages", "tail" : "(filter: MessageFilter): ThisType", "member" : "laika.api.builder.ParserBuilderOps.failOnMessages", "link" : "laika\/api\/builder\/ParserBuilder.html#failOnMessages(filter:laika.ast.MessageFilter):ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "withRawContent", "tail" : "(): ThisType", "member" : "laika.api.builder.ParserBuilderOps.withRawContent", "link" : "laika\/api\/builder\/ParserBuilder.html#withRawContent:ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "strict", "tail" : "(): ThisType", "member" : "laika.api.builder.ParserBuilderOps.strict", "link" : "laika\/api\/builder\/ParserBuilder.html#strict:ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "using", "tail" : "(bundles: ExtensionBundle*): ThisType", "member" : "laika.api.builder.CommonBuilderOps.using", "link" : "laika\/api\/builder\/ParserBuilder.html#using(bundles:laika.bundle.ExtensionBundle*):CommonBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/api\/builder\/ParserBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/api\/builder\/ParserBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/api\/builder\/ParserBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/api\/builder\/ParserBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/api\/builder\/ParserBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/api\/builder\/ParserBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/api\/builder\/ParserBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/ParserBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/ParserBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/ParserBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/api\/builder\/ParserBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/api\/builder\/ParserBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/api\/builder\/ParserBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/api\/builder\/ParserBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/api\/builder\/ParserBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/api\/builder\/ParserBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/api\/builder\/ParserBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/api\/builder\/ParserBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/api\/builder\/ParserBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/api\/builder\/ParserBuilder.html", "kind" : "class"}, {"name" : "laika.api.builder.ParserBuilderOps", "members_trait" : [{"label" : "withConfigValue", "tail" : "(key: Key, value: T)(arg0: ConfigEncoder[T]): ThisType", "member" : "laika.api.builder.ParserBuilderOps.withConfigValue", "link" : "laika\/api\/builder\/ParserBuilderOps.html#withConfigValue[T](key:laika.config.Key,value:T)(implicitevidence$4:laika.config.ConfigEncoder[T]):ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "withConfigValue", "tail" : "(key: String, value: T)(arg0: ConfigEncoder[T]): ThisType", "member" : "laika.api.builder.ParserBuilderOps.withConfigValue", "link" : "laika\/api\/builder\/ParserBuilderOps.html#withConfigValue[T](key:String,value:T)(implicitevidence$3:laika.config.ConfigEncoder[T]):ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "withConfigValue", "tail" : "(value: T)(arg0: ConfigEncoder[T], arg1: DefaultKey[T]): ThisType", "member" : "laika.api.builder.ParserBuilderOps.withConfigValue", "link" : "laika\/api\/builder\/ParserBuilderOps.html#withConfigValue[T](value:T)(implicitevidence$1:laika.config.ConfigEncoder[T],implicitevidence$2:laika.config.DefaultKey[T]):ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "failOnMessages", "tail" : "(filter: MessageFilter): ThisType", "member" : "laika.api.builder.ParserBuilderOps.failOnMessages", "link" : "laika\/api\/builder\/ParserBuilderOps.html#failOnMessages(filter:laika.ast.MessageFilter):ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "withRawContent", "tail" : "(): ThisType", "member" : "laika.api.builder.ParserBuilderOps.withRawContent", "link" : "laika\/api\/builder\/ParserBuilderOps.html#withRawContent:ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "strict", "tail" : "(): ThisType", "member" : "laika.api.builder.ParserBuilderOps.strict", "link" : "laika\/api\/builder\/ParserBuilderOps.html#strict:ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "using", "tail" : "(bundles: ExtensionBundle*): ThisType", "member" : "laika.api.builder.CommonBuilderOps.using", "link" : "laika\/api\/builder\/ParserBuilderOps.html#using(bundles:laika.bundle.ExtensionBundle*):CommonBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/api\/builder\/ParserBuilderOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/api\/builder\/ParserBuilderOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/api\/builder\/ParserBuilderOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/api\/builder\/ParserBuilderOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/api\/builder\/ParserBuilderOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/api\/builder\/ParserBuilderOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/api\/builder\/ParserBuilderOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/ParserBuilderOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/ParserBuilderOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/ParserBuilderOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/api\/builder\/ParserBuilderOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/api\/builder\/ParserBuilderOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/api\/builder\/ParserBuilderOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/api\/builder\/ParserBuilderOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/api\/builder\/ParserBuilderOps.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/api\/builder\/ParserBuilderOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/api\/builder\/ParserBuilderOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/api\/builder\/ParserBuilderOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/api\/builder\/ParserBuilderOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "config", "tail" : "(): OperationConfig", "member" : "laika.api.builder.CommonBuilderOps.config", "link" : "laika\/api\/builder\/ParserBuilderOps.html#config:laika.api.builder.OperationConfig", "kind" : "abstract def"}, {"label" : "withConfig", "tail" : "(newConfig: OperationConfig): ThisType", "member" : "laika.api.builder.CommonBuilderOps.withConfig", "link" : "laika\/api\/builder\/ParserBuilderOps.html#withConfig(newConfig:laika.api.builder.OperationConfig):CommonBuilderOps.this.ThisType", "kind" : "abstract def"}, {"member" : "laika.api.builder.CommonBuilderOps.ThisType", "error" : "unsupported entity"}], "shortDescription" : "API for specifying configuration options that apply to allkinds of operations that contain a parsing step (Parser and Transformer).", "trait" : "laika\/api\/builder\/ParserBuilderOps.html", "kind" : "trait"}, {"name" : "laika.api.builder.RenderConfig", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/api\/builder\/RenderConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/api\/builder\/RenderConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/api\/builder\/RenderConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/api\/builder\/RenderConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/api\/builder\/RenderConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/api\/builder\/RenderConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/api\/builder\/RenderConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/RenderConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/RenderConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/RenderConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/api\/builder\/RenderConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/api\/builder\/RenderConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/api\/builder\/RenderConfig.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/api\/builder\/RenderConfig.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/api\/builder\/RenderConfig.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/api\/builder\/RenderConfig.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/api\/builder\/RenderConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/api\/builder\/RenderConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/api\/builder\/RenderConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "renderFormatted", "tail" : "(): Boolean", "member" : "laika.api.builder.RenderConfig.renderFormatted", "link" : "laika\/api\/builder\/RenderConfig.html#renderFormatted:Boolean", "kind" : "abstract def"}, {"label" : "renderMessages", "tail" : "(): MessageFilter", "member" : "laika.api.builder.RenderConfig.renderMessages", "link" : "laika\/api\/builder\/RenderConfig.html#renderMessages:laika.ast.MessageFilter", "kind" : "abstract def"}], "shortDescription" : "Represents the subset of OperationConfig relevant for renderers.", "trait" : "laika\/api\/builder\/RenderConfig.html", "kind" : "trait"}, {"name" : "laika.api.builder.RendererBuilder", "shortDescription" : "Builder API for Renderer instances.", "members_class" : [{"label" : "build", "tail" : "(): Renderer", "member" : "laika.api.builder.RendererBuilder.build", "link" : "laika\/api\/builder\/RendererBuilder.html#build:laika.api.Renderer", "kind" : "def"}, {"label" : "withConfig", "tail" : "(newConfig: OperationConfig): ThisType", "member" : "laika.api.builder.RendererBuilder.withConfig", "link" : "laika\/api\/builder\/RendererBuilder.html#withConfig(newConfig:laika.api.builder.OperationConfig):RendererBuilder.this.ThisType", "kind" : "def"}, {"label" : "ThisType", "tail" : "", "member" : "laika.api.builder.RendererBuilder.ThisType", "link" : "laika\/api\/builder\/RendererBuilder.html#ThisType=laika.api.builder.RendererBuilder[FMT]", "kind" : "type"}, {"member" : "laika.api.builder.RendererBuilder#<init>", "error" : "unsupported entity"}, {"label" : "config", "tail" : ": OperationConfig", "member" : "laika.api.builder.RendererBuilder.config", "link" : "laika\/api\/builder\/RendererBuilder.html#config:laika.api.builder.OperationConfig", "kind" : "val"}, {"label" : "renderFormat", "tail" : ": RenderFormat[FMT]", "member" : "laika.api.builder.RendererBuilder.renderFormat", "link" : "laika\/api\/builder\/RendererBuilder.html#renderFormat:laika.factory.RenderFormat[FMT]", "kind" : "val"}, {"label" : "unformatted", "tail" : "(): ThisType", "member" : "laika.api.builder.RendererBuilderOps.unformatted", "link" : "laika\/api\/builder\/RendererBuilder.html#unformatted:RendererBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "renderMessages", "tail" : "(filter: MessageFilter): ThisType", "member" : "laika.api.builder.RendererBuilderOps.renderMessages", "link" : "laika\/api\/builder\/RendererBuilder.html#renderMessages(filter:laika.ast.MessageFilter):RendererBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "rendering", "tail" : "(customRenderer: PartialFunction[(FMT, Element), String]): ThisType", "member" : "laika.api.builder.RendererBuilderOps.rendering", "link" : "laika\/api\/builder\/RendererBuilder.html#rendering(customRenderer:PartialFunction[(FMT,laika.ast.Element),String]):RendererBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "using", "tail" : "(bundles: ExtensionBundle*): ThisType", "member" : "laika.api.builder.CommonBuilderOps.using", "link" : "laika\/api\/builder\/RendererBuilder.html#using(bundles:laika.bundle.ExtensionBundle*):CommonBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/api\/builder\/RendererBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/api\/builder\/RendererBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/api\/builder\/RendererBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/api\/builder\/RendererBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/api\/builder\/RendererBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/api\/builder\/RendererBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/api\/builder\/RendererBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/RendererBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/RendererBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/RendererBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/api\/builder\/RendererBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/api\/builder\/RendererBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/api\/builder\/RendererBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/api\/builder\/RendererBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/api\/builder\/RendererBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/api\/builder\/RendererBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/api\/builder\/RendererBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/api\/builder\/RendererBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/api\/builder\/RendererBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/api\/builder\/RendererBuilder.html", "kind" : "class"}, {"name" : "laika.api.builder.RendererBuilderOps", "members_trait" : [{"label" : "unformatted", "tail" : "(): ThisType", "member" : "laika.api.builder.RendererBuilderOps.unformatted", "link" : "laika\/api\/builder\/RendererBuilderOps.html#unformatted:RendererBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "renderMessages", "tail" : "(filter: MessageFilter): ThisType", "member" : "laika.api.builder.RendererBuilderOps.renderMessages", "link" : "laika\/api\/builder\/RendererBuilderOps.html#renderMessages(filter:laika.ast.MessageFilter):RendererBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "rendering", "tail" : "(customRenderer: PartialFunction[(FMT, Element), String]): ThisType", "member" : "laika.api.builder.RendererBuilderOps.rendering", "link" : "laika\/api\/builder\/RendererBuilderOps.html#rendering(customRenderer:PartialFunction[(FMT,laika.ast.Element),String]):RendererBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "using", "tail" : "(bundles: ExtensionBundle*): ThisType", "member" : "laika.api.builder.CommonBuilderOps.using", "link" : "laika\/api\/builder\/RendererBuilderOps.html#using(bundles:laika.bundle.ExtensionBundle*):CommonBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/api\/builder\/RendererBuilderOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/api\/builder\/RendererBuilderOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/api\/builder\/RendererBuilderOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/api\/builder\/RendererBuilderOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/api\/builder\/RendererBuilderOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/api\/builder\/RendererBuilderOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/api\/builder\/RendererBuilderOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/RendererBuilderOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/RendererBuilderOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/RendererBuilderOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/api\/builder\/RendererBuilderOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/api\/builder\/RendererBuilderOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/api\/builder\/RendererBuilderOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/api\/builder\/RendererBuilderOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/api\/builder\/RendererBuilderOps.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/api\/builder\/RendererBuilderOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/api\/builder\/RendererBuilderOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/api\/builder\/RendererBuilderOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/api\/builder\/RendererBuilderOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "renderFormat", "tail" : "(): RenderFormat[FMT]", "member" : "laika.api.builder.RendererBuilderOps.renderFormat", "link" : "laika\/api\/builder\/RendererBuilderOps.html#renderFormat:laika.factory.RenderFormat[FMT]", "kind" : "abstract def"}, {"label" : "config", "tail" : "(): OperationConfig", "member" : "laika.api.builder.CommonBuilderOps.config", "link" : "laika\/api\/builder\/RendererBuilderOps.html#config:laika.api.builder.OperationConfig", "kind" : "abstract def"}, {"label" : "withConfig", "tail" : "(newConfig: OperationConfig): ThisType", "member" : "laika.api.builder.CommonBuilderOps.withConfig", "link" : "laika\/api\/builder\/RendererBuilderOps.html#withConfig(newConfig:laika.api.builder.OperationConfig):CommonBuilderOps.this.ThisType", "kind" : "abstract def"}, {"member" : "laika.api.builder.CommonBuilderOps.ThisType", "error" : "unsupported entity"}], "shortDescription" : "API for specifying configuration options that apply to allkinds of operations that contain a rendering step (Renderer and Transformer).", "trait" : "laika\/api\/builder\/RendererBuilderOps.html", "kind" : "trait"}, {"name" : "laika.api.builder.TransformerBuilder", "shortDescription" : "Builder API for Transformer instances.", "members_class" : [{"label" : "build", "tail" : "(): Transformer", "member" : "laika.api.builder.TransformerBuilder.build", "link" : "laika\/api\/builder\/TransformerBuilder.html#build:laika.api.Transformer", "kind" : "def"}, {"label" : "withConfig", "tail" : "(newConfig: OperationConfig): ThisType", "member" : "laika.api.builder.TransformerBuilder.withConfig", "link" : "laika\/api\/builder\/TransformerBuilder.html#withConfig(newConfig:laika.api.builder.OperationConfig):TransformerBuilder.this.ThisType", "kind" : "def"}, {"label" : "docType", "tail" : ": TextDocumentType", "member" : "laika.api.builder.TransformerBuilder.docType", "link" : "laika\/api\/builder\/TransformerBuilder.html#docType:laika.ast.TextDocumentType", "kind" : "val"}, {"label" : "ThisType", "tail" : "", "member" : "laika.api.builder.TransformerBuilder.ThisType", "link" : "laika\/api\/builder\/TransformerBuilder.html#ThisType=laika.api.builder.TransformerBuilder[FMT]", "kind" : "type"}, {"member" : "laika.api.builder.TransformerBuilder#<init>", "error" : "unsupported entity"}, {"label" : "config", "tail" : ": OperationConfig", "member" : "laika.api.builder.TransformerBuilder.config", "link" : "laika\/api\/builder\/TransformerBuilder.html#config:laika.api.builder.OperationConfig", "kind" : "val"}, {"label" : "renderFormat", "tail" : ": RenderFormat[FMT]", "member" : "laika.api.builder.TransformerBuilder.renderFormat", "link" : "laika\/api\/builder\/TransformerBuilder.html#renderFormat:laika.factory.RenderFormat[FMT]", "kind" : "val"}, {"label" : "creatingRule", "tail" : "(newRules: (DocumentCursor) ⇒ RewriteRules): ThisType", "member" : "laika.api.builder.TransformerBuilderOps.creatingRule", "link" : "laika\/api\/builder\/TransformerBuilder.html#creatingRule(newRules:laika.ast.DocumentCursor=>laika.ast.RewriteRules):TransformerBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "usingTemplateRule", "tail" : "(rule: RewriteRule[TemplateSpan]): ThisType", "member" : "laika.api.builder.TransformerBuilderOps.usingTemplateRule", "link" : "laika\/api\/builder\/TransformerBuilder.html#usingTemplateRule(rule:laika.ast.RewriteRule[laika.ast.TemplateSpan]):TransformerBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "usingSpanRule", "tail" : "(rule: RewriteRule[Span]): ThisType", "member" : "laika.api.builder.TransformerBuilderOps.usingSpanRule", "link" : "laika\/api\/builder\/TransformerBuilder.html#usingSpanRule(rule:laika.ast.RewriteRule[laika.ast.Span]):TransformerBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "usingBlockRule", "tail" : "(rule: RewriteRule[Block]): ThisType", "member" : "laika.api.builder.TransformerBuilderOps.usingBlockRule", "link" : "laika\/api\/builder\/TransformerBuilder.html#usingBlockRule(rule:laika.ast.RewriteRule[laika.ast.Block]):TransformerBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "usingRules", "tail" : "(newRules: RewriteRules): ThisType", "member" : "laika.api.builder.TransformerBuilderOps.usingRules", "link" : "laika\/api\/builder\/TransformerBuilder.html#usingRules(newRules:laika.ast.RewriteRules):TransformerBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "unformatted", "tail" : "(): ThisType", "member" : "laika.api.builder.RendererBuilderOps.unformatted", "link" : "laika\/api\/builder\/TransformerBuilder.html#unformatted:RendererBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "renderMessages", "tail" : "(filter: MessageFilter): ThisType", "member" : "laika.api.builder.RendererBuilderOps.renderMessages", "link" : "laika\/api\/builder\/TransformerBuilder.html#renderMessages(filter:laika.ast.MessageFilter):RendererBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "rendering", "tail" : "(customRenderer: PartialFunction[(FMT, Element), String]): ThisType", "member" : "laika.api.builder.RendererBuilderOps.rendering", "link" : "laika\/api\/builder\/TransformerBuilder.html#rendering(customRenderer:PartialFunction[(FMT,laika.ast.Element),String]):RendererBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "withConfigValue", "tail" : "(key: Key, value: T)(arg0: ConfigEncoder[T]): ThisType", "member" : "laika.api.builder.ParserBuilderOps.withConfigValue", "link" : "laika\/api\/builder\/TransformerBuilder.html#withConfigValue[T](key:laika.config.Key,value:T)(implicitevidence$4:laika.config.ConfigEncoder[T]):ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "withConfigValue", "tail" : "(key: String, value: T)(arg0: ConfigEncoder[T]): ThisType", "member" : "laika.api.builder.ParserBuilderOps.withConfigValue", "link" : "laika\/api\/builder\/TransformerBuilder.html#withConfigValue[T](key:String,value:T)(implicitevidence$3:laika.config.ConfigEncoder[T]):ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "withConfigValue", "tail" : "(value: T)(arg0: ConfigEncoder[T], arg1: DefaultKey[T]): ThisType", "member" : "laika.api.builder.ParserBuilderOps.withConfigValue", "link" : "laika\/api\/builder\/TransformerBuilder.html#withConfigValue[T](value:T)(implicitevidence$1:laika.config.ConfigEncoder[T],implicitevidence$2:laika.config.DefaultKey[T]):ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "failOnMessages", "tail" : "(filter: MessageFilter): ThisType", "member" : "laika.api.builder.ParserBuilderOps.failOnMessages", "link" : "laika\/api\/builder\/TransformerBuilder.html#failOnMessages(filter:laika.ast.MessageFilter):ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "withRawContent", "tail" : "(): ThisType", "member" : "laika.api.builder.ParserBuilderOps.withRawContent", "link" : "laika\/api\/builder\/TransformerBuilder.html#withRawContent:ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "strict", "tail" : "(): ThisType", "member" : "laika.api.builder.ParserBuilderOps.strict", "link" : "laika\/api\/builder\/TransformerBuilder.html#strict:ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "using", "tail" : "(bundles: ExtensionBundle*): ThisType", "member" : "laika.api.builder.CommonBuilderOps.using", "link" : "laika\/api\/builder\/TransformerBuilder.html#using(bundles:laika.bundle.ExtensionBundle*):CommonBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/api\/builder\/TransformerBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/api\/builder\/TransformerBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/api\/builder\/TransformerBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/api\/builder\/TransformerBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/api\/builder\/TransformerBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/api\/builder\/TransformerBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/api\/builder\/TransformerBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/TransformerBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/TransformerBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/TransformerBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/api\/builder\/TransformerBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/api\/builder\/TransformerBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/api\/builder\/TransformerBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/api\/builder\/TransformerBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/api\/builder\/TransformerBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/api\/builder\/TransformerBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/api\/builder\/TransformerBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/api\/builder\/TransformerBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/api\/builder\/TransformerBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/api\/builder\/TransformerBuilder.html", "kind" : "class"}, {"name" : "laika.api.builder.TransformerBuilderOps", "members_trait" : [{"label" : "creatingRule", "tail" : "(newRules: (DocumentCursor) ⇒ RewriteRules): ThisType", "member" : "laika.api.builder.TransformerBuilderOps.creatingRule", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#creatingRule(newRules:laika.ast.DocumentCursor=>laika.ast.RewriteRules):TransformerBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "usingTemplateRule", "tail" : "(rule: RewriteRule[TemplateSpan]): ThisType", "member" : "laika.api.builder.TransformerBuilderOps.usingTemplateRule", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#usingTemplateRule(rule:laika.ast.RewriteRule[laika.ast.TemplateSpan]):TransformerBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "usingSpanRule", "tail" : "(rule: RewriteRule[Span]): ThisType", "member" : "laika.api.builder.TransformerBuilderOps.usingSpanRule", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#usingSpanRule(rule:laika.ast.RewriteRule[laika.ast.Span]):TransformerBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "usingBlockRule", "tail" : "(rule: RewriteRule[Block]): ThisType", "member" : "laika.api.builder.TransformerBuilderOps.usingBlockRule", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#usingBlockRule(rule:laika.ast.RewriteRule[laika.ast.Block]):TransformerBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "usingRules", "tail" : "(newRules: RewriteRules): ThisType", "member" : "laika.api.builder.TransformerBuilderOps.usingRules", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#usingRules(newRules:laika.ast.RewriteRules):TransformerBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "unformatted", "tail" : "(): ThisType", "member" : "laika.api.builder.RendererBuilderOps.unformatted", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#unformatted:RendererBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "renderMessages", "tail" : "(filter: MessageFilter): ThisType", "member" : "laika.api.builder.RendererBuilderOps.renderMessages", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#renderMessages(filter:laika.ast.MessageFilter):RendererBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "rendering", "tail" : "(customRenderer: PartialFunction[(FMT, Element), String]): ThisType", "member" : "laika.api.builder.RendererBuilderOps.rendering", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#rendering(customRenderer:PartialFunction[(FMT,laika.ast.Element),String]):RendererBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "withConfigValue", "tail" : "(key: Key, value: T)(arg0: ConfigEncoder[T]): ThisType", "member" : "laika.api.builder.ParserBuilderOps.withConfigValue", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#withConfigValue[T](key:laika.config.Key,value:T)(implicitevidence$4:laika.config.ConfigEncoder[T]):ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "withConfigValue", "tail" : "(key: String, value: T)(arg0: ConfigEncoder[T]): ThisType", "member" : "laika.api.builder.ParserBuilderOps.withConfigValue", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#withConfigValue[T](key:String,value:T)(implicitevidence$3:laika.config.ConfigEncoder[T]):ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "withConfigValue", "tail" : "(value: T)(arg0: ConfigEncoder[T], arg1: DefaultKey[T]): ThisType", "member" : "laika.api.builder.ParserBuilderOps.withConfigValue", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#withConfigValue[T](value:T)(implicitevidence$1:laika.config.ConfigEncoder[T],implicitevidence$2:laika.config.DefaultKey[T]):ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "failOnMessages", "tail" : "(filter: MessageFilter): ThisType", "member" : "laika.api.builder.ParserBuilderOps.failOnMessages", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#failOnMessages(filter:laika.ast.MessageFilter):ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "withRawContent", "tail" : "(): ThisType", "member" : "laika.api.builder.ParserBuilderOps.withRawContent", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#withRawContent:ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "strict", "tail" : "(): ThisType", "member" : "laika.api.builder.ParserBuilderOps.strict", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#strict:ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "using", "tail" : "(bundles: ExtensionBundle*): ThisType", "member" : "laika.api.builder.CommonBuilderOps.using", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#using(bundles:laika.bundle.ExtensionBundle*):CommonBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/api\/builder\/TransformerBuilderOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "renderFormat", "tail" : "(): RenderFormat[FMT]", "member" : "laika.api.builder.RendererBuilderOps.renderFormat", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#renderFormat:laika.factory.RenderFormat[FMT]", "kind" : "abstract def"}, {"label" : "config", "tail" : "(): OperationConfig", "member" : "laika.api.builder.CommonBuilderOps.config", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#config:laika.api.builder.OperationConfig", "kind" : "abstract def"}, {"label" : "withConfig", "tail" : "(newConfig: OperationConfig): ThisType", "member" : "laika.api.builder.CommonBuilderOps.withConfig", "link" : "laika\/api\/builder\/TransformerBuilderOps.html#withConfig(newConfig:laika.api.builder.OperationConfig):CommonBuilderOps.this.ThisType", "kind" : "abstract def"}, {"member" : "laika.api.builder.CommonBuilderOps.ThisType", "error" : "unsupported entity"}], "shortDescription" : "API for specifying configuration options that apply to allkinds of operations that contain both, a parsing and a rendering step (only Transform API).", "trait" : "laika\/api\/builder\/TransformerBuilderOps.html", "kind" : "trait"}, {"name" : "laika.api.builder.TwoPhaseRendererBuilder", "shortDescription" : "Builder API for Renderer instances.", "members_class" : [{"label" : "withConfig", "tail" : "(newConfig: OperationConfig): ThisType", "member" : "laika.api.builder.TwoPhaseRendererBuilder.withConfig", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#withConfig(newConfig:laika.api.builder.OperationConfig):TwoPhaseRendererBuilder.this.ThisType", "kind" : "def"}, {"label" : "ThisType", "tail" : "", "member" : "laika.api.builder.TwoPhaseRendererBuilder.ThisType", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#ThisType=laika.api.builder.TwoPhaseRendererBuilder[FMT,PP]", "kind" : "type"}, {"label" : "renderFormat", "tail" : ": RenderFormat[FMT]", "member" : "laika.api.builder.TwoPhaseRendererBuilder.renderFormat", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#renderFormat:laika.factory.RenderFormat[FMT]", "kind" : "val"}, {"member" : "laika.api.builder.TwoPhaseRendererBuilder#<init>", "error" : "unsupported entity"}, {"label" : "config", "tail" : ": OperationConfig", "member" : "laika.api.builder.TwoPhaseRendererBuilder.config", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#config:laika.api.builder.OperationConfig", "kind" : "val"}, {"label" : "twoPhaseFormat", "tail" : ": TwoPhaseRenderFormat[FMT, PP]", "member" : "laika.api.builder.TwoPhaseRendererBuilder.twoPhaseFormat", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#twoPhaseFormat:laika.factory.TwoPhaseRenderFormat[FMT,PP]", "kind" : "val"}, {"label" : "unformatted", "tail" : "(): ThisType", "member" : "laika.api.builder.RendererBuilderOps.unformatted", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#unformatted:RendererBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "renderMessages", "tail" : "(filter: MessageFilter): ThisType", "member" : "laika.api.builder.RendererBuilderOps.renderMessages", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#renderMessages(filter:laika.ast.MessageFilter):RendererBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "rendering", "tail" : "(customRenderer: PartialFunction[(FMT, Element), String]): ThisType", "member" : "laika.api.builder.RendererBuilderOps.rendering", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#rendering(customRenderer:PartialFunction[(FMT,laika.ast.Element),String]):RendererBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "using", "tail" : "(bundles: ExtensionBundle*): ThisType", "member" : "laika.api.builder.CommonBuilderOps.using", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#using(bundles:laika.bundle.ExtensionBundle*):CommonBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/api\/builder\/TwoPhaseRendererBuilder.html", "kind" : "class"}, {"name" : "laika.api.builder.TwoPhaseTransformerBuilder", "shortDescription" : "Builder API for Transformer instances.", "members_class" : [{"label" : "withConfig", "tail" : "(newConfig: OperationConfig): ThisType", "member" : "laika.api.builder.TwoPhaseTransformerBuilder.withConfig", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#withConfig(newConfig:laika.api.builder.OperationConfig):TwoPhaseTransformerBuilder.this.ThisType", "kind" : "def"}, {"label" : "ThisType", "tail" : "", "member" : "laika.api.builder.TwoPhaseTransformerBuilder.ThisType", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#ThisType=laika.api.builder.TwoPhaseTransformerBuilder[FMT,PP]", "kind" : "type"}, {"label" : "renderFormat", "tail" : ": RenderFormat[FMT]", "member" : "laika.api.builder.TwoPhaseTransformerBuilder.renderFormat", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#renderFormat:laika.factory.RenderFormat[FMT]", "kind" : "val"}, {"member" : "laika.api.builder.TwoPhaseTransformerBuilder#<init>", "error" : "unsupported entity"}, {"label" : "config", "tail" : ": OperationConfig", "member" : "laika.api.builder.TwoPhaseTransformerBuilder.config", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#config:laika.api.builder.OperationConfig", "kind" : "val"}, {"label" : "twoPhaseRenderFormat", "tail" : ": TwoPhaseRenderFormat[FMT, PP]", "member" : "laika.api.builder.TwoPhaseTransformerBuilder.twoPhaseRenderFormat", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#twoPhaseRenderFormat:laika.factory.TwoPhaseRenderFormat[FMT,PP]", "kind" : "val"}, {"label" : "markupFormat", "tail" : ": MarkupFormat", "member" : "laika.api.builder.TwoPhaseTransformerBuilder.markupFormat", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#markupFormat:laika.factory.MarkupFormat", "kind" : "val"}, {"label" : "creatingRule", "tail" : "(newRules: (DocumentCursor) ⇒ RewriteRules): ThisType", "member" : "laika.api.builder.TransformerBuilderOps.creatingRule", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#creatingRule(newRules:laika.ast.DocumentCursor=>laika.ast.RewriteRules):TransformerBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "usingTemplateRule", "tail" : "(rule: RewriteRule[TemplateSpan]): ThisType", "member" : "laika.api.builder.TransformerBuilderOps.usingTemplateRule", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#usingTemplateRule(rule:laika.ast.RewriteRule[laika.ast.TemplateSpan]):TransformerBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "usingSpanRule", "tail" : "(rule: RewriteRule[Span]): ThisType", "member" : "laika.api.builder.TransformerBuilderOps.usingSpanRule", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#usingSpanRule(rule:laika.ast.RewriteRule[laika.ast.Span]):TransformerBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "usingBlockRule", "tail" : "(rule: RewriteRule[Block]): ThisType", "member" : "laika.api.builder.TransformerBuilderOps.usingBlockRule", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#usingBlockRule(rule:laika.ast.RewriteRule[laika.ast.Block]):TransformerBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "usingRules", "tail" : "(newRules: RewriteRules): ThisType", "member" : "laika.api.builder.TransformerBuilderOps.usingRules", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#usingRules(newRules:laika.ast.RewriteRules):TransformerBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "unformatted", "tail" : "(): ThisType", "member" : "laika.api.builder.RendererBuilderOps.unformatted", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#unformatted:RendererBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "renderMessages", "tail" : "(filter: MessageFilter): ThisType", "member" : "laika.api.builder.RendererBuilderOps.renderMessages", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#renderMessages(filter:laika.ast.MessageFilter):RendererBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "rendering", "tail" : "(customRenderer: PartialFunction[(FMT, Element), String]): ThisType", "member" : "laika.api.builder.RendererBuilderOps.rendering", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#rendering(customRenderer:PartialFunction[(FMT,laika.ast.Element),String]):RendererBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "withConfigValue", "tail" : "(key: Key, value: T)(arg0: ConfigEncoder[T]): ThisType", "member" : "laika.api.builder.ParserBuilderOps.withConfigValue", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#withConfigValue[T](key:laika.config.Key,value:T)(implicitevidence$4:laika.config.ConfigEncoder[T]):ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "withConfigValue", "tail" : "(key: String, value: T)(arg0: ConfigEncoder[T]): ThisType", "member" : "laika.api.builder.ParserBuilderOps.withConfigValue", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#withConfigValue[T](key:String,value:T)(implicitevidence$3:laika.config.ConfigEncoder[T]):ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "withConfigValue", "tail" : "(value: T)(arg0: ConfigEncoder[T], arg1: DefaultKey[T]): ThisType", "member" : "laika.api.builder.ParserBuilderOps.withConfigValue", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#withConfigValue[T](value:T)(implicitevidence$1:laika.config.ConfigEncoder[T],implicitevidence$2:laika.config.DefaultKey[T]):ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "failOnMessages", "tail" : "(filter: MessageFilter): ThisType", "member" : "laika.api.builder.ParserBuilderOps.failOnMessages", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#failOnMessages(filter:laika.ast.MessageFilter):ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "withRawContent", "tail" : "(): ThisType", "member" : "laika.api.builder.ParserBuilderOps.withRawContent", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#withRawContent:ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "strict", "tail" : "(): ThisType", "member" : "laika.api.builder.ParserBuilderOps.strict", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#strict:ParserBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "using", "tail" : "(bundles: ExtensionBundle*): ThisType", "member" : "laika.api.builder.CommonBuilderOps.using", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#using(bundles:laika.bundle.ExtensionBundle*):CommonBuilderOps.this.ThisType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/api\/builder\/TwoPhaseTransformerBuilder.html", "kind" : "class"}], "laika.parse.uri" : [{"name" : "laika.parse.uri.AutoLinkParsers", "shortDescription" : "Parser for inline auto-links, which are urls or email addresses that are recognized andinserted as links into the AST without any surrounding markup delimiters.", "members_class" : [{"label" : "email", "tail" : ": SpanParserBuilder", "member" : "laika.parse.uri.AutoLinkParsers.email", "link" : "laika\/parse\/uri\/AutoLinkParsers.html#email:laika.bundle.SpanParserBuilder", "kind" : "lazy val"}, {"label" : "www", "tail" : ": SpanParserBuilder", "member" : "laika.parse.uri.AutoLinkParsers.www", "link" : "laika\/parse\/uri\/AutoLinkParsers.html#www:laika.bundle.SpanParserBuilder", "kind" : "lazy val"}, {"label" : "http", "tail" : ": SpanParserBuilder", "member" : "laika.parse.uri.AutoLinkParsers.http", "link" : "laika\/parse\/uri\/AutoLinkParsers.html#http:laika.bundle.SpanParserBuilder", "kind" : "lazy val"}, {"member" : "laika.parse.uri.AutoLinkParsers#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/uri\/AutoLinkParsers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/uri\/AutoLinkParsers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/uri\/AutoLinkParsers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/uri\/AutoLinkParsers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/uri\/AutoLinkParsers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/uri\/AutoLinkParsers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/uri\/AutoLinkParsers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/uri\/AutoLinkParsers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/uri\/AutoLinkParsers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/uri\/AutoLinkParsers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/uri\/AutoLinkParsers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/uri\/AutoLinkParsers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/uri\/AutoLinkParsers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/uri\/AutoLinkParsers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/uri\/AutoLinkParsers.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/uri\/AutoLinkParsers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/uri\/AutoLinkParsers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/uri\/AutoLinkParsers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/uri\/AutoLinkParsers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/parse\/uri\/AutoLinkParsers.html", "kind" : "class"}, {"name" : "laika.parse.uri.URIParsers", "shortDescription" : "Parses URIs as defined in RFC 3986 and email addresses as defined inRFC 6068, 5322 and 3986 with base types defined in RFC 2234.", "object" : "laika\/parse\/uri\/URIParsers$.html", "members_object" : [{"label" : "emailURI", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.emailURI", "link" : "laika\/parse\/uri\/URIParsers$.html#emailURI:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "emailAddress", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.emailAddress", "link" : "laika\/parse\/uri\/URIParsers$.html#emailAddress:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "hfields", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.hfields", "link" : "laika\/parse\/uri\/URIParsers$.html#hfields:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "to", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.to", "link" : "laika\/parse\/uri\/URIParsers$.html#to:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "addrSpec", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.addrSpec", "link" : "laika\/parse\/uri\/URIParsers$.html#addrSpec:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "domain", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.domain", "link" : "laika\/parse\/uri\/URIParsers$.html#domain:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "localPart", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.localPart", "link" : "laika\/parse\/uri\/URIParsers$.html#localPart:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "dotAtomText", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.dotAtomText", "link" : "laika\/parse\/uri\/URIParsers$.html#dotAtomText:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "httpsUri", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.httpsUri", "link" : "laika\/parse\/uri\/URIParsers$.html#httpsUri:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "httpUri", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.httpUri", "link" : "laika\/parse\/uri\/URIParsers$.html#httpUri:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "httpUriNoScheme", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.httpUriNoScheme", "link" : "laika\/parse\/uri\/URIParsers$.html#httpUriNoScheme:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "hierPart", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.hierPart", "link" : "laika\/parse\/uri\/URIParsers$.html#hierPart:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "fragment", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.fragment", "link" : "laika\/parse\/uri\/URIParsers$.html#fragment:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "query", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.query", "link" : "laika\/parse\/uri\/URIParsers$.html#query:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "path", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.path", "link" : "laika\/parse\/uri\/URIParsers$.html#path:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "pChar", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.pChar", "link" : "laika\/parse\/uri\/URIParsers$.html#pChar:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "authority", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.authority", "link" : "laika\/parse\/uri\/URIParsers$.html#authority:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "userInfo", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.userInfo", "link" : "laika\/parse\/uri\/URIParsers$.html#userInfo:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "port", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.port", "link" : "laika\/parse\/uri\/URIParsers$.html#port:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "host", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.host", "link" : "laika\/parse\/uri\/URIParsers$.html#host:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "regName", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.regName", "link" : "laika\/parse\/uri\/URIParsers$.html#regName:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "ipLiteral", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.ipLiteral", "link" : "laika\/parse\/uri\/URIParsers$.html#ipLiteral:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "ipv6address", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.ipv6address", "link" : "laika\/parse\/uri\/URIParsers$.html#ipv6address:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "ipv4address", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.ipv4address", "link" : "laika\/parse\/uri\/URIParsers$.html#ipv4address:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "ipvFuture", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.ipvFuture", "link" : "laika\/parse\/uri\/URIParsers$.html#ipvFuture:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "pctEncoded", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.pctEncoded", "link" : "laika\/parse\/uri\/URIParsers$.html#pctEncoded:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "unreserved", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.unreserved", "link" : "laika\/parse\/uri\/URIParsers$.html#unreserved:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "subDelims", "tail" : ": Parser[String]", "member" : "laika.parse.uri.URIParsers.subDelims", "link" : "laika\/parse\/uri\/URIParsers$.html#subDelims:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "hexdig", "tail" : ": Characters[String]", "member" : "laika.parse.uri.URIParsers.hexdig", "link" : "laika\/parse\/uri\/URIParsers$.html#hexdig:laika.parse.text.Characters[String]", "kind" : "val"}, {"label" : "digit", "tail" : ": Characters[String]", "member" : "laika.parse.uri.URIParsers.digit", "link" : "laika\/parse\/uri\/URIParsers$.html#digit:laika.parse.text.Characters[String]", "kind" : "val"}, {"label" : "alpha", "tail" : ": Characters[String]", "member" : "laika.parse.uri.URIParsers.alpha", "link" : "laika\/parse\/uri\/URIParsers$.html#alpha:laika.parse.text.Characters[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/uri\/URIParsers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/uri\/URIParsers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/uri\/URIParsers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/uri\/URIParsers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/uri\/URIParsers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/uri\/URIParsers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/uri\/URIParsers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/uri\/URIParsers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/uri\/URIParsers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/uri\/URIParsers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/uri\/URIParsers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/uri\/URIParsers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/uri\/URIParsers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/uri\/URIParsers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/uri\/URIParsers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/uri\/URIParsers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/uri\/URIParsers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/uri\/URIParsers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/uri\/URIParsers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "laika.theme" : [{"name" : "laika.theme.Theme", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/theme\/Theme.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/theme\/Theme.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/theme\/Theme.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/theme\/Theme.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/theme\/Theme.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/theme\/Theme.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/theme\/Theme.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/Theme.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/Theme.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/Theme.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/theme\/Theme.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/theme\/Theme.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/theme\/Theme.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/theme\/Theme.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/theme\/Theme.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/theme\/Theme.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/theme\/Theme.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/theme\/Theme.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/theme\/Theme.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "treeProcessor", "tail" : "(): (Format) ⇒ TreeProcessor[F]", "member" : "laika.theme.Theme.treeProcessor", "link" : "laika\/theme\/Theme.html#treeProcessor:laika.factory.Format=>laika.theme.Theme.TreeProcessor[F]", "kind" : "abstract def"}, {"label" : "extensions", "tail" : "(): Seq[ExtensionBundle]", "member" : "laika.theme.Theme.extensions", "link" : "laika\/theme\/Theme.html#extensions:Seq[laika.bundle.ExtensionBundle]", "kind" : "abstract def"}, {"label" : "inputs", "tail" : "(): InputTree[F]", "member" : "laika.theme.Theme.inputs", "link" : "laika\/theme\/Theme.html#inputs:laika.io.model.InputTree[F]", "kind" : "abstract def"}], "shortDescription" : "A theme is a way of pre-populating the input tree with a set of templates, styles and configurationsto achieve a particular look & feel without the need for the user to craft their own templates,CSS or JavaScript.", "object" : "laika\/theme\/Theme$.html", "members_object" : [{"label" : "empty", "tail" : "(): ThemeProvider", "member" : "laika.theme.Theme.empty", "link" : "laika\/theme\/Theme$.html#empty:laika.theme.ThemeProvider", "kind" : "def"}, {"label" : "TreeProcessor", "tail" : "", "member" : "laika.theme.Theme.TreeProcessor", "link" : "laika\/theme\/Theme$.html#TreeProcessor[F[_]]=cats.data.Kleisli[F,laika.io.model.ParsedTree[F],laika.io.model.ParsedTree[F]]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/theme\/Theme$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/theme\/Theme$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/theme\/Theme$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/theme\/Theme$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/theme\/Theme$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/theme\/Theme$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/theme\/Theme$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/Theme$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/Theme$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/Theme$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/theme\/Theme$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/theme\/Theme$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/theme\/Theme$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/theme\/Theme$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/theme\/Theme$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/theme\/Theme$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/theme\/Theme$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/theme\/Theme$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/theme\/Theme$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/theme\/Theme.html", "kind" : "trait"}, {"name" : "laika.theme.ThemeBuilder", "shortDescription" : "Builder API for constructing Theme instances, providing several shortcuts for defining the contentsof a theme.", "object" : "laika\/theme\/ThemeBuilder$.html", "members_class" : [{"label" : "build", "tail" : "(): Resource[F, Theme[F]]", "member" : "laika.theme.ThemeBuilder.build", "link" : "laika\/theme\/ThemeBuilder.html#build:cats.effect.Resource[F,laika.theme.Theme[F]]", "kind" : "def"}, {"label" : "processTree", "tail" : "(f: TreeProcessor[F], format: Format): ThemeBuilder[F]", "member" : "laika.theme.ThemeBuilder.processTree", "link" : "laika\/theme\/ThemeBuilder.html#processTree(f:laika.theme.Theme.TreeProcessor[F],format:laika.factory.Format):laika.theme.ThemeBuilder[F]", "kind" : "def"}, {"label" : "processTree", "tail" : "(f: (Format) ⇒ TreeProcessor[F]): ThemeBuilder[F]", "member" : "laika.theme.ThemeBuilder.processTree", "link" : "laika\/theme\/ThemeBuilder.html#processTree(f:laika.factory.Format=>laika.theme.Theme.TreeProcessor[F]):laika.theme.ThemeBuilder[F]", "kind" : "def"}, {"label" : "addRewriteRules", "tail" : "(rules: RewriteRules): ThemeBuilder[F]", "member" : "laika.theme.ThemeBuilder.addRewriteRules", "link" : "laika\/theme\/ThemeBuilder.html#addRewriteRules(rules:laika.ast.RewriteRules):laika.theme.ThemeBuilder[F]", "kind" : "def"}, {"label" : "addRewriteRules", "tail" : "(rules: (DocumentCursor) ⇒ RewriteRules): ThemeBuilder[F]", "member" : "laika.theme.ThemeBuilder.addRewriteRules", "link" : "laika\/theme\/ThemeBuilder.html#addRewriteRules(rules:laika.ast.DocumentCursor=>laika.ast.RewriteRules):laika.theme.ThemeBuilder[F]", "kind" : "def"}, {"label" : "addRenderOverrides", "tail" : "(overrides: RenderOverrides): ThemeBuilder[F]", "member" : "laika.theme.ThemeBuilder.addRenderOverrides", "link" : "laika\/theme\/ThemeBuilder.html#addRenderOverrides(overrides:laika.bundle.RenderOverrides):laika.theme.ThemeBuilder[F]", "kind" : "def"}, {"label" : "addBaseConfig", "tail" : "(config: Config): ThemeBuilder[F]", "member" : "laika.theme.ThemeBuilder.addBaseConfig", "link" : "laika\/theme\/ThemeBuilder.html#addBaseConfig(config:laika.config.Config):laika.theme.ThemeBuilder[F]", "kind" : "def"}, {"label" : "addExtensions", "tail" : "(bundles: ExtensionBundle*): ThemeBuilder[F]", "member" : "laika.theme.ThemeBuilder.addExtensions", "link" : "laika\/theme\/ThemeBuilder.html#addExtensions(bundles:laika.bundle.ExtensionBundle*):laika.theme.ThemeBuilder[F]", "kind" : "def"}, {"label" : "addInputs", "tail" : "(inputBuilders: F[InputTreeBuilder[F]]): ThemeBuilder[F]", "member" : "laika.theme.ThemeBuilder.addInputs", "link" : "laika\/theme\/ThemeBuilder.html#addInputs(inputBuilders:F[laika.io.model.InputTreeBuilder[F]]):laika.theme.ThemeBuilder[F]", "kind" : "def"}, {"label" : "addInputs", "tail" : "(inputs: InputTreeBuilder[F]): ThemeBuilder[F]", "member" : "laika.theme.ThemeBuilder.addInputs", "link" : "laika\/theme\/ThemeBuilder.html#addInputs(inputs:laika.io.model.InputTreeBuilder[F]):laika.theme.ThemeBuilder[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/theme\/ThemeBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/theme\/ThemeBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/theme\/ThemeBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/theme\/ThemeBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/theme\/ThemeBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/theme\/ThemeBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/theme\/ThemeBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/ThemeBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/ThemeBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/ThemeBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/theme\/ThemeBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/theme\/ThemeBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/theme\/ThemeBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/theme\/ThemeBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/theme\/ThemeBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/theme\/ThemeBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/theme\/ThemeBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/theme\/ThemeBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/theme\/ThemeBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(themeName: String)(arg0: Sync[F]): ThemeBuilder[F]", "member" : "laika.theme.ThemeBuilder.apply", "link" : "laika\/theme\/ThemeBuilder$.html#apply[F[_]](themeName:String)(implicitevidence$2:cats.effect.Sync[F]):laika.theme.ThemeBuilder[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/theme\/ThemeBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/theme\/ThemeBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/theme\/ThemeBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/theme\/ThemeBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/theme\/ThemeBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/theme\/ThemeBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/theme\/ThemeBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/ThemeBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/ThemeBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/ThemeBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/theme\/ThemeBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/theme\/ThemeBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/theme\/ThemeBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/theme\/ThemeBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/theme\/ThemeBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/theme\/ThemeBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/theme\/ThemeBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/theme\/ThemeBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/theme\/ThemeBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/theme\/ThemeBuilder.html", "kind" : "class"}, {"name" : "laika.theme.ThemeProvider", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/theme\/ThemeProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/theme\/ThemeProvider.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/theme\/ThemeProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/theme\/ThemeProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/theme\/ThemeProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/theme\/ThemeProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/theme\/ThemeProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/ThemeProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/ThemeProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/ThemeProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/theme\/ThemeProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/theme\/ThemeProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/theme\/ThemeProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/theme\/ThemeProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/theme\/ThemeProvider.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/theme\/ThemeProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/theme\/ThemeProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/theme\/ThemeProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/theme\/ThemeProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "build", "tail" : "(arg0: Sync[F], arg1: Runtime[F]): Resource[F, Theme[F]]", "member" : "laika.theme.ThemeProvider.build", "link" : "laika\/theme\/ThemeProvider.html#build[F[_]](implicitevidence$1:cats.effect.Sync[F],implicitevidence$2:laika.io.runtime.Runtime[F]):cats.effect.Resource[F,laika.theme.Theme[F]]", "kind" : "abstract def"}], "shortDescription" : "Responsible for building a theme resource with the user-provided effect type and runtime configuration.", "trait" : "laika\/theme\/ThemeProvider.html", "kind" : "trait"}, {"name" : "laika.theme.TreeProcessorBuilder", "shortDescription" : "Provides several shortcuts for constructing a TreeProcessor (which is just a type alias for a plain Kleisli).", "object" : "laika\/theme\/TreeProcessorBuilder$.html", "members_class" : [{"label" : "evalMapTree", "tail" : "(f: (ParsedTree[F]) ⇒ F[ParsedTree[F]]): TreeProcessor[F]", "member" : "laika.theme.TreeProcessorBuilder.evalMapTree", "link" : "laika\/theme\/TreeProcessorBuilder.html#evalMapTree(f:laika.io.model.ParsedTree[F]=>F[laika.io.model.ParsedTree[F]]):laika.theme.Theme.TreeProcessor[F]", "kind" : "def"}, {"label" : "MapRes", "tail" : "", "member" : "laika.theme.TreeProcessorBuilder.MapRes", "link" : "laika\/theme\/TreeProcessorBuilder.html#MapRes=laika.theme.Theme.TreeProcessor[F]", "kind" : "type"}, {"member" : "laika.theme.TreeProcessorBuilder#<init>", "error" : "unsupported entity"}, {"label" : "mapTree", "tail" : "(f: (ParsedTree[F]) ⇒ ParsedTree[F]): MapRes", "member" : "laika.io.ops.TreeMapperOps.mapTree", "link" : "laika\/theme\/TreeProcessorBuilder.html#mapTree(f:laika.io.model.ParsedTree[F]=>laika.io.model.ParsedTree[F]):TreeMapperOps.this.MapRes", "kind" : "def"}, {"label" : "evalMapDocuments", "tail" : "(f: (Document) ⇒ F[Document]): MapRes", "member" : "laika.io.ops.TreeMapperOps.evalMapDocuments", "link" : "laika\/theme\/TreeProcessorBuilder.html#evalMapDocuments(f:laika.ast.Document=>F[laika.ast.Document]):TreeMapperOps.this.MapRes", "kind" : "def"}, {"label" : "mapDocuments", "tail" : "(f: (Document) ⇒ Document): MapRes", "member" : "laika.io.ops.TreeMapperOps.mapDocuments", "link" : "laika\/theme\/TreeProcessorBuilder.html#mapDocuments(f:laika.ast.Document=>laika.ast.Document):TreeMapperOps.this.MapRes", "kind" : "def"}, {"label" : "F", "tail" : ": Sync[F]", "member" : "laika.io.ops.TreeMapperOps.F", "link" : "laika\/theme\/TreeProcessorBuilder.html#F:cats.effect.Sync[F]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/theme\/TreeProcessorBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/theme\/TreeProcessorBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/theme\/TreeProcessorBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/theme\/TreeProcessorBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/theme\/TreeProcessorBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/theme\/TreeProcessorBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/theme\/TreeProcessorBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/TreeProcessorBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/TreeProcessorBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/TreeProcessorBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/theme\/TreeProcessorBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/theme\/TreeProcessorBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/theme\/TreeProcessorBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/theme\/TreeProcessorBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/theme\/TreeProcessorBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/theme\/TreeProcessorBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/theme\/TreeProcessorBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/theme\/TreeProcessorBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/theme\/TreeProcessorBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(arg0: Sync[F]): TreeProcessorBuilder[F]", "member" : "laika.theme.TreeProcessorBuilder.apply", "link" : "laika\/theme\/TreeProcessorBuilder$.html#apply[F[_]](implicitevidence$2:cats.effect.Sync[F]):laika.theme.TreeProcessorBuilder[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/theme\/TreeProcessorBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/theme\/TreeProcessorBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/theme\/TreeProcessorBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/theme\/TreeProcessorBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/theme\/TreeProcessorBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/theme\/TreeProcessorBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/theme\/TreeProcessorBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/TreeProcessorBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/TreeProcessorBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/TreeProcessorBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/theme\/TreeProcessorBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/theme\/TreeProcessorBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/theme\/TreeProcessorBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/theme\/TreeProcessorBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/theme\/TreeProcessorBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/theme\/TreeProcessorBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/theme\/TreeProcessorBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/theme\/TreeProcessorBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/theme\/TreeProcessorBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/theme\/TreeProcessorBuilder.html", "kind" : "class"}], "laika.rewrite.nav" : [{"name" : "laika.rewrite.nav.AutonumberConfig", "shortDescription" : "Configuration for autonumbering of documents and sections.", "object" : "laika\/rewrite\/nav\/AutonumberConfig$.html", "members_object" : [{"label" : "defaults", "tail" : "(): AutonumberConfig", "member" : "laika.rewrite.nav.AutonumberConfig.defaults", "link" : "laika\/rewrite\/nav\/AutonumberConfig$.html#defaults:laika.rewrite.nav.AutonumberConfig", "kind" : "def"}, {"label" : "withoutSectionNumbering", "tail" : "(config: Config): Config", "member" : "laika.rewrite.nav.AutonumberConfig.withoutSectionNumbering", "link" : "laika\/rewrite\/nav\/AutonumberConfig$.html#withoutSectionNumbering(config:laika.config.Config):laika.config.Config", "kind" : "def"}, {"label" : "encoder", "tail" : ": ConfigEncoder[AutonumberConfig]", "member" : "laika.rewrite.nav.AutonumberConfig.encoder", "link" : "laika\/rewrite\/nav\/AutonumberConfig$.html#encoder:laika.config.ConfigEncoder[laika.rewrite.nav.AutonumberConfig]", "kind" : "implicit val"}, {"label" : "decoder", "tail" : ": ConfigDecoder[AutonumberConfig]", "member" : "laika.rewrite.nav.AutonumberConfig.decoder", "link" : "laika\/rewrite\/nav\/AutonumberConfig$.html#decoder:laika.config.ConfigDecoder[laika.rewrite.nav.AutonumberConfig]", "kind" : "implicit val"}, {"label" : "defaultKey", "tail" : ": DefaultKey[AutonumberConfig]", "member" : "laika.rewrite.nav.AutonumberConfig.defaultKey", "link" : "laika\/rewrite\/nav\/AutonumberConfig$.html#defaultKey:laika.config.DefaultKey[laika.rewrite.nav.AutonumberConfig]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/nav\/AutonumberConfig$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/nav\/AutonumberConfig$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/nav\/AutonumberConfig$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/nav\/AutonumberConfig$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/nav\/AutonumberConfig$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/nav\/AutonumberConfig$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/nav\/AutonumberConfig$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/AutonumberConfig$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/AutonumberConfig$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/AutonumberConfig$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/nav\/AutonumberConfig$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/nav\/AutonumberConfig$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/nav\/AutonumberConfig$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/nav\/AutonumberConfig$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/nav\/AutonumberConfig$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/nav\/AutonumberConfig$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/nav\/AutonumberConfig$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/nav\/AutonumberConfig$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/nav\/AutonumberConfig$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "laika.rewrite.nav.AutonumberConfig#<init>", "error" : "unsupported entity"}, {"label" : "maxDepth", "tail" : ": Int", "member" : "laika.rewrite.nav.AutonumberConfig.maxDepth", "link" : "laika\/rewrite\/nav\/AutonumberConfig.html#maxDepth:Int", "kind" : "val"}, {"label" : "sections", "tail" : ": Boolean", "member" : "laika.rewrite.nav.AutonumberConfig.sections", "link" : "laika\/rewrite\/nav\/AutonumberConfig.html#sections:Boolean", "kind" : "val"}, {"label" : "documents", "tail" : ": Boolean", "member" : "laika.rewrite.nav.AutonumberConfig.documents", "link" : "laika\/rewrite\/nav\/AutonumberConfig.html#documents:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/nav\/AutonumberConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/nav\/AutonumberConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/nav\/AutonumberConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/nav\/AutonumberConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/nav\/AutonumberConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/nav\/AutonumberConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/nav\/AutonumberConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/AutonumberConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/AutonumberConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/AutonumberConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/nav\/AutonumberConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/nav\/AutonumberConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/nav\/AutonumberConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/nav\/AutonumberConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/nav\/AutonumberConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/nav\/AutonumberConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/nav\/AutonumberConfig.html", "kind" : "case class"}, {"name" : "laika.rewrite.nav.BasicPathTranslator", "shortDescription" : "Basic path translator implementation that only replaces the suffix of the path.", "members_case class" : [{"label" : "translate", "tail" : "(input: RelativePath): RelativePath", "member" : "laika.rewrite.nav.BasicPathTranslator.translate", "link" : "laika\/rewrite\/nav\/BasicPathTranslator.html#translate(input:laika.ast.RelativePath):laika.ast.RelativePath", "kind" : "def"}, {"label" : "translate", "tail" : "(input: Path): Path", "member" : "laika.rewrite.nav.BasicPathTranslator.translate", "link" : "laika\/rewrite\/nav\/BasicPathTranslator.html#translate(input:laika.ast.Path):laika.ast.Path", "kind" : "def"}, {"member" : "laika.rewrite.nav.BasicPathTranslator#<init>", "error" : "unsupported entity"}, {"label" : "outputSuffix", "tail" : ": String", "member" : "laika.rewrite.nav.BasicPathTranslator.outputSuffix", "link" : "laika\/rewrite\/nav\/BasicPathTranslator.html#outputSuffix:String", "kind" : "val"}, {"label" : "translate", "tail" : "(target: Target): Target", "member" : "laika.rewrite.nav.PathTranslator.translate", "link" : "laika\/rewrite\/nav\/BasicPathTranslator.html#translate(target:laika.ast.Target):laika.ast.Target", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/nav\/BasicPathTranslator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/nav\/BasicPathTranslator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/nav\/BasicPathTranslator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/nav\/BasicPathTranslator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/nav\/BasicPathTranslator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/nav\/BasicPathTranslator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/nav\/BasicPathTranslator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/BasicPathTranslator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/BasicPathTranslator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/BasicPathTranslator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/nav\/BasicPathTranslator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/nav\/BasicPathTranslator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/nav\/BasicPathTranslator.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/nav\/BasicPathTranslator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/nav\/BasicPathTranslator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/nav\/BasicPathTranslator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/nav\/BasicPathTranslator.html", "kind" : "case class"}, {"name" : "laika.rewrite.nav.ChoiceConfig", "shortDescription" : "Configuration for a single choice within a selection.", "object" : "laika\/rewrite\/nav\/ChoiceConfig$.html", "members_object" : [{"label" : "encoder", "tail" : ": ConfigEncoder[ChoiceConfig]", "member" : "laika.rewrite.nav.ChoiceConfig.encoder", "link" : "laika\/rewrite\/nav\/ChoiceConfig$.html#encoder:laika.config.ConfigEncoder[laika.rewrite.nav.ChoiceConfig]", "kind" : "implicit val"}, {"label" : "decoder", "tail" : ": ConfigDecoder[ChoiceConfig]", "member" : "laika.rewrite.nav.ChoiceConfig.decoder", "link" : "laika\/rewrite\/nav\/ChoiceConfig$.html#decoder:laika.config.ConfigDecoder[laika.rewrite.nav.ChoiceConfig]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/nav\/ChoiceConfig$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/nav\/ChoiceConfig$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/nav\/ChoiceConfig$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/nav\/ChoiceConfig$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/nav\/ChoiceConfig$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/nav\/ChoiceConfig$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/nav\/ChoiceConfig$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/ChoiceConfig$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/ChoiceConfig$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/ChoiceConfig$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/nav\/ChoiceConfig$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/nav\/ChoiceConfig$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/nav\/ChoiceConfig$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/nav\/ChoiceConfig$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/nav\/ChoiceConfig$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/nav\/ChoiceConfig$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/nav\/ChoiceConfig$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/nav\/ChoiceConfig$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/nav\/ChoiceConfig$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "laika.rewrite.nav.ChoiceConfig#<init>", "error" : "unsupported entity"}, {"label" : "selected", "tail" : ": Boolean", "member" : "laika.rewrite.nav.ChoiceConfig.selected", "link" : "laika\/rewrite\/nav\/ChoiceConfig.html#selected:Boolean", "kind" : "val"}, {"label" : "label", "tail" : ": String", "member" : "laika.rewrite.nav.ChoiceConfig.label", "link" : "laika\/rewrite\/nav\/ChoiceConfig.html#label:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "laika.rewrite.nav.ChoiceConfig.name", "link" : "laika\/rewrite\/nav\/ChoiceConfig.html#name:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/nav\/ChoiceConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/nav\/ChoiceConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/nav\/ChoiceConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/nav\/ChoiceConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/nav\/ChoiceConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/nav\/ChoiceConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/nav\/ChoiceConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/ChoiceConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/ChoiceConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/ChoiceConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/nav\/ChoiceConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/nav\/ChoiceConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/nav\/ChoiceConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/nav\/ChoiceConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/nav\/ChoiceConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/nav\/ChoiceConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/nav\/ChoiceConfig.html", "kind" : "case class"}, {"name" : "laika.rewrite.nav.Classifiers", "shortDescription" : "", "members_case class" : [{"member" : "laika.rewrite.nav.Classifiers#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": Seq[String]", "member" : "laika.rewrite.nav.Classifiers.value", "link" : "laika\/rewrite\/nav\/Classifiers.html#value:Seq[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/nav\/Classifiers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/nav\/Classifiers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/nav\/Classifiers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/nav\/Classifiers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/nav\/Classifiers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/nav\/Classifiers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/nav\/Classifiers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/Classifiers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/Classifiers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/Classifiers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/nav\/Classifiers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/nav\/Classifiers.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/nav\/Classifiers.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/nav\/Classifiers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/nav\/Classifiers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/nav\/Classifiers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/nav\/Classifiers.html", "kind" : "case class"}, {"name" : "laika.rewrite.nav.ConfigurablePathTranslator", "shortDescription" : "Translates paths of input documents to the corresponding output path, based on a configuration instance.", "members_case class" : [{"label" : "translate", "tail" : "(target: Target): Target", "member" : "laika.rewrite.nav.ConfigurablePathTranslator.translate", "link" : "laika\/rewrite\/nav\/ConfigurablePathTranslator.html#translate(target:laika.ast.Target):laika.ast.Target", "kind" : "def"}, {"label" : "translate", "tail" : "(input: RelativePath): RelativePath", "member" : "laika.rewrite.nav.ConfigurablePathTranslator.translate", "link" : "laika\/rewrite\/nav\/ConfigurablePathTranslator.html#translate(input:laika.ast.RelativePath):laika.ast.RelativePath", "kind" : "def"}, {"label" : "translate", "tail" : "(input: Path): Path", "member" : "laika.rewrite.nav.ConfigurablePathTranslator.translate", "link" : "laika\/rewrite\/nav\/ConfigurablePathTranslator.html#translate(input:laika.ast.Path):laika.ast.Path", "kind" : "def"}, {"member" : "laika.rewrite.nav.ConfigurablePathTranslator#<init>", "error" : "unsupported entity"}, {"label" : "targetLookup", "tail" : ": (Path) ⇒ Option[TranslatorSpec]", "member" : "laika.rewrite.nav.ConfigurablePathTranslator.targetLookup", "link" : "laika\/rewrite\/nav\/ConfigurablePathTranslator.html#targetLookup:laika.ast.Path=>Option[laika.rewrite.nav.TranslatorSpec]", "kind" : "val"}, {"label" : "refPath", "tail" : ": Path", "member" : "laika.rewrite.nav.ConfigurablePathTranslator.refPath", "link" : "laika\/rewrite\/nav\/ConfigurablePathTranslator.html#refPath:laika.ast.Path", "kind" : "val"}, {"label" : "outputFormat", "tail" : ": String", "member" : "laika.rewrite.nav.ConfigurablePathTranslator.outputFormat", "link" : "laika\/rewrite\/nav\/ConfigurablePathTranslator.html#outputFormat:String", "kind" : "val"}, {"label" : "outputSuffix", "tail" : ": String", "member" : "laika.rewrite.nav.ConfigurablePathTranslator.outputSuffix", "link" : "laika\/rewrite\/nav\/ConfigurablePathTranslator.html#outputSuffix:String", "kind" : "val"}, {"label" : "rootConfig", "tail" : ": Config", "member" : "laika.rewrite.nav.ConfigurablePathTranslator.rootConfig", "link" : "laika\/rewrite\/nav\/ConfigurablePathTranslator.html#rootConfig:laika.config.Config", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/nav\/ConfigurablePathTranslator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/nav\/ConfigurablePathTranslator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/nav\/ConfigurablePathTranslator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/nav\/ConfigurablePathTranslator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/nav\/ConfigurablePathTranslator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/nav\/ConfigurablePathTranslator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/nav\/ConfigurablePathTranslator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/ConfigurablePathTranslator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/ConfigurablePathTranslator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/ConfigurablePathTranslator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/nav\/ConfigurablePathTranslator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/nav\/ConfigurablePathTranslator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/nav\/ConfigurablePathTranslator.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/nav\/ConfigurablePathTranslator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/nav\/ConfigurablePathTranslator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/nav\/ConfigurablePathTranslator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/nav\/ConfigurablePathTranslator.html", "kind" : "case class"}, {"name" : "laika.rewrite.nav.ConfigurationException", "shortDescription" : "", "members_case class" : [{"member" : "laika.rewrite.nav.ConfigurationException#<init>", "error" : "unsupported entity"}, {"label" : "msg", "tail" : ": String", "member" : "laika.rewrite.nav.ConfigurationException.msg", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#msg:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/nav\/ConfigurationException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/nav\/ConfigurationException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/nav\/ConfigurationException.html", "kind" : "case class"}, {"name" : "laika.rewrite.nav.CoverImage", "shortDescription" : "Configuration for a cover image for e-books (EPUB or PDF).", "object" : "laika\/rewrite\/nav\/CoverImage$.html", "members_object" : [{"label" : "encoder", "tail" : ": ConfigEncoder[CoverImage]", "member" : "laika.rewrite.nav.CoverImage.encoder", "link" : "laika\/rewrite\/nav\/CoverImage$.html#encoder:laika.config.ConfigEncoder[laika.rewrite.nav.CoverImage]", "kind" : "implicit val"}, {"label" : "decoder", "tail" : ": ConfigDecoder[CoverImage]", "member" : "laika.rewrite.nav.CoverImage.decoder", "link" : "laika\/rewrite\/nav\/CoverImage$.html#decoder:laika.config.ConfigDecoder[laika.rewrite.nav.CoverImage]", "kind" : "implicit val"}, {"label" : "apply", "tail" : "(path: Path, classifier: String): CoverImage", "member" : "laika.rewrite.nav.CoverImage.apply", "link" : "laika\/rewrite\/nav\/CoverImage$.html#apply(path:laika.ast.Path,classifier:String):laika.rewrite.nav.CoverImage", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/nav\/CoverImage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/nav\/CoverImage$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/nav\/CoverImage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/nav\/CoverImage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/nav\/CoverImage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/nav\/CoverImage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/nav\/CoverImage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/CoverImage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/CoverImage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/CoverImage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/nav\/CoverImage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/nav\/CoverImage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/nav\/CoverImage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/nav\/CoverImage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/nav\/CoverImage$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/nav\/CoverImage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/nav\/CoverImage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/nav\/CoverImage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/nav\/CoverImage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "laika.rewrite.nav.CoverImage#<init>", "error" : "unsupported entity"}, {"label" : "classifier", "tail" : ": Option[String]", "member" : "laika.rewrite.nav.CoverImage.classifier", "link" : "laika\/rewrite\/nav\/CoverImage.html#classifier:Option[String]", "kind" : "val"}, {"label" : "path", "tail" : ": Path", "member" : "laika.rewrite.nav.CoverImage.path", "link" : "laika\/rewrite\/nav\/CoverImage.html#path:laika.ast.Path", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/nav\/CoverImage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/nav\/CoverImage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/nav\/CoverImage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/nav\/CoverImage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/nav\/CoverImage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/nav\/CoverImage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/nav\/CoverImage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/CoverImage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/CoverImage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/CoverImage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/nav\/CoverImage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/nav\/CoverImage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/nav\/CoverImage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/nav\/CoverImage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/nav\/CoverImage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/nav\/CoverImage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/nav\/CoverImage.html", "kind" : "case class"}, {"name" : "laika.rewrite.nav.CoverImages", "shortDescription" : "", "object" : "laika\/rewrite\/nav\/CoverImages$.html", "members_object" : [{"label" : "forEPUB", "tail" : "(config: Config): CoverImages", "member" : "laika.rewrite.nav.CoverImages.forEPUB", "link" : "laika\/rewrite\/nav\/CoverImages$.html#forEPUB(config:laika.config.Config):laika.rewrite.nav.CoverImages", "kind" : "def"}, {"label" : "forPDF", "tail" : "(config: Config): CoverImages", "member" : "laika.rewrite.nav.CoverImages.forPDF", "link" : "laika\/rewrite\/nav\/CoverImages$.html#forPDF(config:laika.config.Config):laika.rewrite.nav.CoverImages", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/nav\/CoverImages$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/nav\/CoverImages$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/nav\/CoverImages$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/nav\/CoverImages$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/nav\/CoverImages$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/nav\/CoverImages$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/nav\/CoverImages$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/CoverImages$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/CoverImages$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/CoverImages$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/nav\/CoverImages$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/nav\/CoverImages$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/nav\/CoverImages$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/nav\/CoverImages$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/nav\/CoverImages$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/nav\/CoverImages$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/nav\/CoverImages$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/nav\/CoverImages$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/nav\/CoverImages$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withFallback", "tail" : "(fallback: CoverImages): CoverImages", "member" : "laika.rewrite.nav.CoverImages.withFallback", "link" : "laika\/rewrite\/nav\/CoverImages.html#withFallback(fallback:laika.rewrite.nav.CoverImages):laika.rewrite.nav.CoverImages", "kind" : "def"}, {"label" : "getImageFor", "tail" : "(classifier: String): Option[Path]", "member" : "laika.rewrite.nav.CoverImages.getImageFor", "link" : "laika\/rewrite\/nav\/CoverImages.html#getImageFor(classifier:String):Option[laika.ast.Path]", "kind" : "def"}, {"member" : "laika.rewrite.nav.CoverImages#<init>", "error" : "unsupported entity"}, {"label" : "classified", "tail" : ": Map[String, Path]", "member" : "laika.rewrite.nav.CoverImages.classified", "link" : "laika\/rewrite\/nav\/CoverImages.html#classified:Map[String,laika.ast.Path]", "kind" : "val"}, {"label" : "default", "tail" : ": Option[Path]", "member" : "laika.rewrite.nav.CoverImages.default", "link" : "laika\/rewrite\/nav\/CoverImages.html#default:Option[laika.ast.Path]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/nav\/CoverImages.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/nav\/CoverImages.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/nav\/CoverImages.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/nav\/CoverImages.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/nav\/CoverImages.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/nav\/CoverImages.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/nav\/CoverImages.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/CoverImages.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/CoverImages.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/CoverImages.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/nav\/CoverImages.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/nav\/CoverImages.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/nav\/CoverImages.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/nav\/CoverImages.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/nav\/CoverImages.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/nav\/CoverImages.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/nav\/CoverImages.html", "kind" : "case class"}, {"name" : "laika.rewrite.nav.NavigationOrder", "shortDescription" : "Responsible for applying the navigation order to the contents of a document tree, either based on user-specified configuration or by the alphabetical order of the names of the documents and subtrees.", "object" : "laika\/rewrite\/nav\/NavigationOrder$.html", "members_object" : [{"label" : "applyTo", "tail" : "(content: Seq[Cursor], config: Config, parentPosition: TreePosition): Seq[Cursor]", "member" : "laika.rewrite.nav.NavigationOrder.applyTo", "link" : "laika\/rewrite\/nav\/NavigationOrder$.html#applyTo(content:Seq[laika.ast.Cursor],config:laika.config.Config,parentPosition:laika.ast.TreePosition):Seq[laika.ast.Cursor]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/nav\/NavigationOrder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/nav\/NavigationOrder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/nav\/NavigationOrder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/nav\/NavigationOrder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/nav\/NavigationOrder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/nav\/NavigationOrder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/nav\/NavigationOrder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/NavigationOrder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/NavigationOrder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/NavigationOrder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/nav\/NavigationOrder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/nav\/NavigationOrder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/nav\/NavigationOrder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/nav\/NavigationOrder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/nav\/NavigationOrder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/nav\/NavigationOrder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/nav\/NavigationOrder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/nav\/NavigationOrder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/nav\/NavigationOrder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.rewrite.nav.PathTranslator", "members_trait" : [{"label" : "translate", "tail" : "(target: Target): Target", "member" : "laika.rewrite.nav.PathTranslator.translate", "link" : "laika\/rewrite\/nav\/PathTranslator.html#translate(target:laika.ast.Target):laika.ast.Target", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/nav\/PathTranslator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/nav\/PathTranslator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/nav\/PathTranslator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/nav\/PathTranslator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/nav\/PathTranslator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/nav\/PathTranslator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/nav\/PathTranslator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/PathTranslator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/PathTranslator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/PathTranslator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/nav\/PathTranslator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/nav\/PathTranslator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/nav\/PathTranslator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/nav\/PathTranslator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/nav\/PathTranslator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/nav\/PathTranslator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/nav\/PathTranslator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/nav\/PathTranslator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/nav\/PathTranslator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "translate", "tail" : "(input: RelativePath): RelativePath", "member" : "laika.rewrite.nav.PathTranslator.translate", "link" : "laika\/rewrite\/nav\/PathTranslator.html#translate(input:laika.ast.RelativePath):laika.ast.RelativePath", "kind" : "abstract def"}, {"label" : "translate", "tail" : "(input: Path): Path", "member" : "laika.rewrite.nav.PathTranslator.translate", "link" : "laika\/rewrite\/nav\/PathTranslator.html#translate(input:laika.ast.Path):laika.ast.Path", "kind" : "abstract def"}], "shortDescription" : "Translates paths of input documents to the corresponding output path.", "trait" : "laika\/rewrite\/nav\/PathTranslator.html", "kind" : "trait"}, {"name" : "laika.rewrite.nav.Scope", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/nav\/Scope.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/nav\/Scope.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/nav\/Scope.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/nav\/Scope.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/nav\/Scope.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/nav\/Scope.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/nav\/Scope.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/Scope.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/Scope.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/Scope.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/nav\/Scope.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/nav\/Scope.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/nav\/Scope.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/nav\/Scope.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/nav\/Scope.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/nav\/Scope.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/nav\/Scope.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/nav\/Scope.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/nav\/Scope.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "laika\/rewrite\/nav\/Scope$.html", "members_object" : [{"label" : "decoder", "tail" : ": ConfigDecoder[Scope]", "member" : "laika.rewrite.nav.Scope.decoder", "link" : "laika\/rewrite\/nav\/Scope$.html#decoder:laika.config.ConfigDecoder[laika.rewrite.nav.Scope]", "kind" : "implicit val"}, {"label" : "None", "tail" : "", "member" : "laika.rewrite.nav.Scope.None", "link" : "laika\/rewrite\/nav\/Scope$.html#None", "kind" : "object"}, {"label" : "All", "tail" : "", "member" : "laika.rewrite.nav.Scope.All", "link" : "laika\/rewrite\/nav\/Scope$.html#All", "kind" : "object"}, {"label" : "Sections", "tail" : "", "member" : "laika.rewrite.nav.Scope.Sections", "link" : "laika\/rewrite\/nav\/Scope$.html#Sections", "kind" : "object"}, {"label" : "Documents", "tail" : "", "member" : "laika.rewrite.nav.Scope.Documents", "link" : "laika\/rewrite\/nav\/Scope$.html#Documents", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/nav\/Scope$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/nav\/Scope$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/nav\/Scope$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/nav\/Scope$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/nav\/Scope$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/nav\/Scope$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/nav\/Scope$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/Scope$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/Scope$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/Scope$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/nav\/Scope$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/nav\/Scope$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/nav\/Scope$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/nav\/Scope$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/nav\/Scope$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/nav\/Scope$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/nav\/Scope$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/nav\/Scope$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/nav\/Scope$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/rewrite\/nav\/Scope.html", "kind" : "trait"}, {"name" : "laika.rewrite.nav.SectionBuilder", "shortDescription" : "Rewrite rules responsible for building the section structure of a document based on the header elements it containsand their level.", "object" : "laika\/rewrite\/nav\/SectionBuilder$.html", "members_object" : [{"label" : "apply", "tail" : "(cursor: DocumentCursor): RewriteRules", "member" : "laika.rewrite.nav.SectionBuilder.apply", "link" : "laika\/rewrite\/nav\/SectionBuilder$.html#apply(cursor:laika.ast.DocumentCursor):laika.ast.RewriteRules", "kind" : "def"}, {"label" : "DefaultRule", "tail" : "", "member" : "laika.rewrite.nav.SectionBuilder.DefaultRule", "link" : "laika\/rewrite\/nav\/SectionBuilder$.html#DefaultRuleextendsAnyRef", "kind" : "class"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "laika\/rewrite\/nav\/SectionBuilder$.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (RewriteRules) ⇒ A): (DocumentCursor) ⇒ A", "member" : "scala.Function1.andThen", "link" : "laika\/rewrite\/nav\/SectionBuilder$.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ DocumentCursor): (A) ⇒ RewriteRules", "member" : "scala.Function1.compose", "link" : "laika\/rewrite\/nav\/SectionBuilder$.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/nav\/SectionBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/nav\/SectionBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/nav\/SectionBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/nav\/SectionBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/nav\/SectionBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/nav\/SectionBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/nav\/SectionBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/SectionBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/SectionBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/SectionBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/nav\/SectionBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/nav\/SectionBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/nav\/SectionBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/nav\/SectionBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/nav\/SectionBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/nav\/SectionBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/nav\/SectionBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/nav\/SectionBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.rewrite.nav.SelectionConfig", "shortDescription" : "Configuration for a single kind of selection and its choices available for the user.", "object" : "laika\/rewrite\/nav\/SelectionConfig$.html", "members_object" : [{"label" : "encoder", "tail" : ": ConfigEncoder[SelectionConfig]", "member" : "laika.rewrite.nav.SelectionConfig.encoder", "link" : "laika\/rewrite\/nav\/SelectionConfig$.html#encoder:laika.config.ConfigEncoder[laika.rewrite.nav.SelectionConfig]", "kind" : "implicit val"}, {"label" : "decoder", "tail" : ": ConfigDecoder[SelectionConfig]", "member" : "laika.rewrite.nav.SelectionConfig.decoder", "link" : "laika\/rewrite\/nav\/SelectionConfig$.html#decoder:laika.config.ConfigDecoder[laika.rewrite.nav.SelectionConfig]", "kind" : "implicit val"}, {"label" : "apply", "tail" : "(name: String, choice: ChoiceConfig, choices: ChoiceConfig*): SelectionConfig", "member" : "laika.rewrite.nav.SelectionConfig.apply", "link" : "laika\/rewrite\/nav\/SelectionConfig$.html#apply(name:String,choice:laika.rewrite.nav.ChoiceConfig,choices:laika.rewrite.nav.ChoiceConfig*):laika.rewrite.nav.SelectionConfig", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/nav\/SelectionConfig$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/nav\/SelectionConfig$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/nav\/SelectionConfig$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/nav\/SelectionConfig$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/nav\/SelectionConfig$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/nav\/SelectionConfig$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/nav\/SelectionConfig$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/SelectionConfig$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/SelectionConfig$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/SelectionConfig$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/nav\/SelectionConfig$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/nav\/SelectionConfig$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/nav\/SelectionConfig$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/nav\/SelectionConfig$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/nav\/SelectionConfig$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/nav\/SelectionConfig$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/nav\/SelectionConfig$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/nav\/SelectionConfig$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/nav\/SelectionConfig$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "select", "tail" : "(choice: ChoiceConfig): SelectionConfig", "member" : "laika.rewrite.nav.SelectionConfig.select", "link" : "laika\/rewrite\/nav\/SelectionConfig.html#select(choice:laika.rewrite.nav.ChoiceConfig):laika.rewrite.nav.SelectionConfig", "kind" : "def"}, {"label" : "getLabel", "tail" : "(name: String): Option[String]", "member" : "laika.rewrite.nav.SelectionConfig.getLabel", "link" : "laika\/rewrite\/nav\/SelectionConfig.html#getLabel(name:String):Option[String]", "kind" : "def"}, {"label" : "withSeparateEbooks", "tail" : "(): SelectionConfig", "member" : "laika.rewrite.nav.SelectionConfig.withSeparateEbooks", "link" : "laika\/rewrite\/nav\/SelectionConfig.html#withSeparateEbooks:laika.rewrite.nav.SelectionConfig", "kind" : "def"}, {"member" : "laika.rewrite.nav.SelectionConfig#<init>", "error" : "unsupported entity"}, {"label" : "separateEbooks", "tail" : ": Boolean", "member" : "laika.rewrite.nav.SelectionConfig.separateEbooks", "link" : "laika\/rewrite\/nav\/SelectionConfig.html#separateEbooks:Boolean", "kind" : "val"}, {"label" : "choices", "tail" : ": NonEmptyChain[ChoiceConfig]", "member" : "laika.rewrite.nav.SelectionConfig.choices", "link" : "laika\/rewrite\/nav\/SelectionConfig.html#choices:cats.data.NonEmptyChain[laika.rewrite.nav.ChoiceConfig]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "laika.rewrite.nav.SelectionConfig.name", "link" : "laika\/rewrite\/nav\/SelectionConfig.html#name:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/nav\/SelectionConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/nav\/SelectionConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/nav\/SelectionConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/nav\/SelectionConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/nav\/SelectionConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/nav\/SelectionConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/nav\/SelectionConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/SelectionConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/SelectionConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/SelectionConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/nav\/SelectionConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/nav\/SelectionConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/nav\/SelectionConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/nav\/SelectionConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/nav\/SelectionConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/nav\/SelectionConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/nav\/SelectionConfig.html", "kind" : "case class"}, {"name" : "laika.rewrite.nav.Selections", "shortDescription" : "Groups configuration for multiple @:select directives.", "object" : "laika\/rewrite\/nav\/Selections$.html", "members_object" : [{"label" : "createCombinations", "tail" : "(root: DocumentTreeRoot): NonEmptyChain[(DocumentTreeRoot, Classifiers)]", "member" : "laika.rewrite.nav.Selections.createCombinations", "link" : "laika\/rewrite\/nav\/Selections$.html#createCombinations(root:laika.ast.DocumentTreeRoot):cats.data.NonEmptyChain[(laika.ast.DocumentTreeRoot,laika.rewrite.nav.Classifiers)]", "kind" : "def"}, {"label" : "createCombinationsConfig", "tail" : "(config: Config): Seq[Seq[ChoiceConfig]]", "member" : "laika.rewrite.nav.Selections.createCombinationsConfig", "link" : "laika\/rewrite\/nav\/Selections$.html#createCombinationsConfig(config:laika.config.Config):Seq[Seq[laika.rewrite.nav.ChoiceConfig]]", "kind" : "def"}, {"label" : "apply", "tail" : "(selection: SelectionConfig, selections: SelectionConfig*): Selections", "member" : "laika.rewrite.nav.Selections.apply", "link" : "laika\/rewrite\/nav\/Selections$.html#apply(selection:laika.rewrite.nav.SelectionConfig,selections:laika.rewrite.nav.SelectionConfig*):laika.rewrite.nav.Selections", "kind" : "def"}, {"label" : "empty", "tail" : ": Selections", "member" : "laika.rewrite.nav.Selections.empty", "link" : "laika\/rewrite\/nav\/Selections$.html#empty:laika.rewrite.nav.Selections", "kind" : "val"}, {"label" : "encoder", "tail" : ": ConfigEncoder[Selections]", "member" : "laika.rewrite.nav.Selections.encoder", "link" : "laika\/rewrite\/nav\/Selections$.html#encoder:laika.config.ConfigEncoder[laika.rewrite.nav.Selections]", "kind" : "implicit val"}, {"label" : "decoder", "tail" : ": ConfigDecoder[Selections]", "member" : "laika.rewrite.nav.Selections.decoder", "link" : "laika\/rewrite\/nav\/Selections$.html#decoder:laika.config.ConfigDecoder[laika.rewrite.nav.Selections]", "kind" : "implicit val"}, {"label" : "key", "tail" : ": DefaultKey[Selections]", "member" : "laika.rewrite.nav.Selections.key", "link" : "laika\/rewrite\/nav\/Selections$.html#key:laika.config.DefaultKey[laika.rewrite.nav.Selections]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/nav\/Selections$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/nav\/Selections$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/nav\/Selections$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/nav\/Selections$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/nav\/Selections$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/nav\/Selections$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/nav\/Selections$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/Selections$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/Selections$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/Selections$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/nav\/Selections$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/nav\/Selections$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/nav\/Selections$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/nav\/Selections$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/nav\/Selections$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/nav\/Selections$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/nav\/Selections$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/nav\/Selections$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/nav\/Selections$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "getClassifiers", "tail" : "(): Classifiers", "member" : "laika.rewrite.nav.Selections.getClassifiers", "link" : "laika\/rewrite\/nav\/Selections.html#getClassifiers:laika.rewrite.nav.Classifiers", "kind" : "def"}, {"label" : "getSelection", "tail" : "(name: String): Option[SelectionConfig]", "member" : "laika.rewrite.nav.Selections.getSelection", "link" : "laika\/rewrite\/nav\/Selections.html#getSelection(name:String):Option[laika.rewrite.nav.SelectionConfig]", "kind" : "def"}, {"member" : "laika.rewrite.nav.Selections#<init>", "error" : "unsupported entity"}, {"label" : "selections", "tail" : ": Seq[SelectionConfig]", "member" : "laika.rewrite.nav.Selections.selections", "link" : "laika\/rewrite\/nav\/Selections.html#selections:Seq[laika.rewrite.nav.SelectionConfig]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/nav\/Selections.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/nav\/Selections.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/nav\/Selections.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/nav\/Selections.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/nav\/Selections.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/nav\/Selections.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/nav\/Selections.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/Selections.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/Selections.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/Selections.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/nav\/Selections.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/nav\/Selections.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/nav\/Selections.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/nav\/Selections.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/nav\/Selections.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/nav\/Selections.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/nav\/Selections.html", "kind" : "case class"}, {"name" : "laika.rewrite.nav.TargetFormats", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/nav\/TargetFormats.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/nav\/TargetFormats.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/nav\/TargetFormats.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/nav\/TargetFormats.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/nav\/TargetFormats.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/nav\/TargetFormats.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/nav\/TargetFormats.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/TargetFormats.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/TargetFormats.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/TargetFormats.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/nav\/TargetFormats.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/nav\/TargetFormats.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/nav\/TargetFormats.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/nav\/TargetFormats.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/nav\/TargetFormats.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/nav\/TargetFormats.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/nav\/TargetFormats.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/nav\/TargetFormats.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/nav\/TargetFormats.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "contains", "tail" : "(format: String): Boolean", "member" : "laika.rewrite.nav.TargetFormats.contains", "link" : "laika\/rewrite\/nav\/TargetFormats.html#contains(format:String):Boolean", "kind" : "abstract def"}], "shortDescription" : "Describes the supported target (output) formats of a resource.", "object" : "laika\/rewrite\/nav\/TargetFormats$.html", "members_object" : [{"label" : "defaultKey", "tail" : ": DefaultKey[TargetFormats]", "member" : "laika.rewrite.nav.TargetFormats.defaultKey", "link" : "laika\/rewrite\/nav\/TargetFormats$.html#defaultKey:laika.config.DefaultKey[laika.rewrite.nav.TargetFormats]", "kind" : "implicit val"}, {"label" : "decoder", "tail" : ": ConfigDecoder[TargetFormats]", "member" : "laika.rewrite.nav.TargetFormats.decoder", "link" : "laika\/rewrite\/nav\/TargetFormats$.html#decoder:laika.config.ConfigDecoder[laika.rewrite.nav.TargetFormats]", "kind" : "implicit val"}, {"label" : "Selected", "tail" : "", "member" : "laika.rewrite.nav.TargetFormats.Selected", "link" : "laika\/rewrite\/nav\/TargetFormats$.html#Selected", "kind" : "object"}, {"label" : "Selected", "tail" : "", "member" : "laika.rewrite.nav.TargetFormats.Selected", "link" : "laika\/rewrite\/nav\/TargetFormats$.html#SelectedextendsTargetFormatswithProductwithSerializable", "kind" : "case class"}, {"label" : "None", "tail" : "", "member" : "laika.rewrite.nav.TargetFormats.None", "link" : "laika\/rewrite\/nav\/TargetFormats$.html#None", "kind" : "object"}, {"label" : "All", "tail" : "", "member" : "laika.rewrite.nav.TargetFormats.All", "link" : "laika\/rewrite\/nav\/TargetFormats$.html#All", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/nav\/TargetFormats$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/nav\/TargetFormats$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/nav\/TargetFormats$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/nav\/TargetFormats$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/nav\/TargetFormats$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/nav\/TargetFormats$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/nav\/TargetFormats$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/TargetFormats$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/TargetFormats$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/TargetFormats$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/nav\/TargetFormats$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/nav\/TargetFormats$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/nav\/TargetFormats$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/nav\/TargetFormats$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/nav\/TargetFormats$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/nav\/TargetFormats$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/nav\/TargetFormats$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/nav\/TargetFormats$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/nav\/TargetFormats$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/rewrite\/nav\/TargetFormats.html", "kind" : "trait"}, {"name" : "laika.rewrite.nav.TitleDocumentConfig", "shortDescription" : "Configuration for the names of title documents in the input and output trees.", "object" : "laika\/rewrite\/nav\/TitleDocumentConfig$.html", "members_object" : [{"label" : "outputName", "tail" : "(config: Config): String", "member" : "laika.rewrite.nav.TitleDocumentConfig.outputName", "link" : "laika\/rewrite\/nav\/TitleDocumentConfig$.html#outputName(config:laika.config.Config):String", "kind" : "def"}, {"label" : "inputName", "tail" : "(config: Config): String", "member" : "laika.rewrite.nav.TitleDocumentConfig.inputName", "link" : "laika\/rewrite\/nav\/TitleDocumentConfig$.html#inputName(config:laika.config.Config):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/nav\/TitleDocumentConfig$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/nav\/TitleDocumentConfig$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/nav\/TitleDocumentConfig$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/nav\/TitleDocumentConfig$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/nav\/TitleDocumentConfig$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/nav\/TitleDocumentConfig$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/nav\/TitleDocumentConfig$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/TitleDocumentConfig$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/TitleDocumentConfig$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/nav\/TitleDocumentConfig$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/nav\/TitleDocumentConfig$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/nav\/TitleDocumentConfig$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/nav\/TitleDocumentConfig$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/nav\/TitleDocumentConfig$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/nav\/TitleDocumentConfig$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/nav\/TitleDocumentConfig$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/nav\/TitleDocumentConfig$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/nav\/TitleDocumentConfig$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/nav\/TitleDocumentConfig$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache" : [], "laika.markdown.github" : [{"name" : "laika.markdown.github.AutoLinks", "shortDescription" : "Parsers for inline auto-links, which are urls or email addresses that are recognized andinserted as links into the AST without any surrounding markup delimiters.", "object" : "laika\/markdown\/github\/AutoLinks$.html", "members_object" : [{"label" : "parsers", "tail" : ": AutoLinkParsers", "member" : "laika.markdown.github.AutoLinks.parsers", "link" : "laika\/markdown\/github\/AutoLinks$.html#parsers:laika.parse.uri.AutoLinkParsers", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/markdown\/github\/AutoLinks$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/markdown\/github\/AutoLinks$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/markdown\/github\/AutoLinks$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/markdown\/github\/AutoLinks$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/markdown\/github\/AutoLinks$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/markdown\/github\/AutoLinks$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/markdown\/github\/AutoLinks$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/github\/AutoLinks$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/github\/AutoLinks$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/github\/AutoLinks$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/markdown\/github\/AutoLinks$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/markdown\/github\/AutoLinks$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/markdown\/github\/AutoLinks$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/markdown\/github\/AutoLinks$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/markdown\/github\/AutoLinks$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/markdown\/github\/AutoLinks$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/markdown\/github\/AutoLinks$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/markdown\/github\/AutoLinks$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/markdown\/github\/AutoLinks$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.markdown.github.FencedCodeBlocks", "shortDescription" : "Parser for fenced code blocks as defined by GitHub Flavored Markdown and CommonMark.", "object" : "laika\/markdown\/github\/FencedCodeBlocks$.html", "members_object" : [{"label" : "parsers", "tail" : ": Seq[BlockParserBuilder]", "member" : "laika.markdown.github.FencedCodeBlocks.parsers", "link" : "laika\/markdown\/github\/FencedCodeBlocks$.html#parsers:Seq[laika.bundle.BlockParserBuilder]", "kind" : "val"}, {"label" : "codeBlock", "tail" : "(fenceChar: Char): BlockParserBuilder", "member" : "laika.markdown.github.FencedCodeBlocks.codeBlock", "link" : "laika\/markdown\/github\/FencedCodeBlocks$.html#codeBlock(fenceChar:Char):laika.bundle.BlockParserBuilder", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/markdown\/github\/FencedCodeBlocks$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/markdown\/github\/FencedCodeBlocks$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/markdown\/github\/FencedCodeBlocks$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/markdown\/github\/FencedCodeBlocks$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/markdown\/github\/FencedCodeBlocks$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/markdown\/github\/FencedCodeBlocks$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/markdown\/github\/FencedCodeBlocks$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/github\/FencedCodeBlocks$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/github\/FencedCodeBlocks$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/github\/FencedCodeBlocks$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/markdown\/github\/FencedCodeBlocks$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/markdown\/github\/FencedCodeBlocks$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/markdown\/github\/FencedCodeBlocks$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/markdown\/github\/FencedCodeBlocks$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/markdown\/github\/FencedCodeBlocks$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/markdown\/github\/FencedCodeBlocks$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/markdown\/github\/FencedCodeBlocks$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/markdown\/github\/FencedCodeBlocks$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/markdown\/github\/FencedCodeBlocks$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.markdown.github.GitHubFlavor", "shortDescription" : "Extension bundle that enables GitHub-Flavored Markdown on top of standard Markdown.", "object" : "laika\/markdown\/github\/GitHubFlavor$.html", "members_object" : [{"label" : "parsers", "tail" : "(): ParserBundle", "member" : "laika.markdown.github.GitHubFlavor.parsers", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#parsers:laika.bundle.ParserBundle", "kind" : "def"}, {"label" : "origin", "tail" : ": BundleOrigin", "member" : "laika.markdown.github.GitHubFlavor.origin", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#origin:laika.bundle.BundleOrigin", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "laika.markdown.github.GitHubFlavor.description", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#description:String", "kind" : "val"}, {"label" : "acceptRawContent", "tail" : "(): Boolean", "member" : "laika.bundle.ExtensionBundle.acceptRawContent", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#acceptRawContent:Boolean", "kind" : "def"}, {"label" : "useInStrictMode", "tail" : "(): Boolean", "member" : "laika.bundle.ExtensionBundle.useInStrictMode", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#useInStrictMode:Boolean", "kind" : "def"}, {"label" : "withBase", "tail" : "(base: ExtensionBundle): ExtensionBundle", "member" : "laika.bundle.ExtensionBundle.withBase", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#withBase(base:laika.bundle.ExtensionBundle):laika.bundle.ExtensionBundle", "kind" : "def"}, {"label" : "processExtension", "tail" : "(): PartialFunction[ExtensionBundle, ExtensionBundle]", "member" : "laika.bundle.ExtensionBundle.processExtension", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#processExtension:PartialFunction[laika.bundle.ExtensionBundle,laika.bundle.ExtensionBundle]", "kind" : "def"}, {"label" : "renderOverrides", "tail" : "(): Seq[RenderOverrides]", "member" : "laika.bundle.ExtensionBundle.renderOverrides", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#renderOverrides:Seq[laika.bundle.RenderOverrides]", "kind" : "def"}, {"label" : "rewriteRules", "tail" : "(): Seq[(DocumentCursor) ⇒ RewriteRules]", "member" : "laika.bundle.ExtensionBundle.rewriteRules", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#rewriteRules:Seq[laika.ast.DocumentCursor=>laika.ast.RewriteRules]", "kind" : "def"}, {"label" : "slugBuilder", "tail" : "(): Option[(String) ⇒ String]", "member" : "laika.bundle.ExtensionBundle.slugBuilder", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#slugBuilder:Option[String=>String]", "kind" : "def"}, {"label" : "docTypeMatcher", "tail" : "(): PartialFunction[Path, DocumentType]", "member" : "laika.bundle.ExtensionBundle.docTypeMatcher", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#docTypeMatcher:PartialFunction[laika.ast.Path,laika.ast.DocumentType]", "kind" : "def"}, {"label" : "baseConfig", "tail" : "(): Config", "member" : "laika.bundle.ExtensionBundle.baseConfig", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#baseConfig:laika.config.Config", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/markdown\/github\/GitHubFlavor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/markdown\/github\/GitHubFlavor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.markdown.github.Strikethrough", "shortDescription" : "Parser for spans with strike-through markup.", "object" : "laika\/markdown\/github\/Strikethrough$.html", "members_object" : [{"label" : "parser", "tail" : ": SpanParserBuilder", "member" : "laika.markdown.github.Strikethrough.parser", "link" : "laika\/markdown\/github\/Strikethrough$.html#parser:laika.bundle.SpanParserBuilder", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/markdown\/github\/Strikethrough$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/markdown\/github\/Strikethrough$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/markdown\/github\/Strikethrough$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/markdown\/github\/Strikethrough$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/markdown\/github\/Strikethrough$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/markdown\/github\/Strikethrough$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/markdown\/github\/Strikethrough$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/github\/Strikethrough$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/github\/Strikethrough$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/github\/Strikethrough$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/markdown\/github\/Strikethrough$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/markdown\/github\/Strikethrough$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/markdown\/github\/Strikethrough$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/markdown\/github\/Strikethrough$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/markdown\/github\/Strikethrough$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/markdown\/github\/Strikethrough$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/markdown\/github\/Strikethrough$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/markdown\/github\/Strikethrough$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/markdown\/github\/Strikethrough$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.markdown.github.Tables", "shortDescription" : "Parser for the table extension of GitHub Flavored Markdown.", "object" : "laika\/markdown\/github\/Tables$.html", "members_object" : [{"label" : "parser", "tail" : ": BlockParserBuilder", "member" : "laika.markdown.github.Tables.parser", "link" : "laika\/markdown\/github\/Tables$.html#parser:laika.bundle.BlockParserBuilder", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/markdown\/github\/Tables$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/markdown\/github\/Tables$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/markdown\/github\/Tables$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/markdown\/github\/Tables$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/markdown\/github\/Tables$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/markdown\/github\/Tables$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/markdown\/github\/Tables$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/github\/Tables$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/github\/Tables$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/github\/Tables$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/markdown\/github\/Tables$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/markdown\/github\/Tables$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/markdown\/github\/Tables$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/markdown\/github\/Tables$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/markdown\/github\/Tables$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/markdown\/github\/Tables$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/markdown\/github\/Tables$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/markdown\/github\/Tables$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/markdown\/github\/Tables$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "laika.parse.text" : [{"name" : "laika.parse.text.Characters", "shortDescription" : "Optimized parser for character input.", "object" : "laika\/parse\/text\/Characters$.html", "members_class" : [{"label" : "parse", "tail" : "(source: SourceCursor): Parsed[T]", "member" : "laika.parse.text.Characters.parse", "link" : "laika\/parse\/text\/Characters.html#parse(source:laika.parse.SourceCursor):laika.parse.Parsed[T]", "kind" : "def"}, {"label" : "void", "tail" : "(): Characters[Unit]", "member" : "laika.parse.text.Characters.void", "link" : "laika\/parse\/text\/Characters.html#void:laika.parse.text.Characters[Unit]", "kind" : "def"}, {"label" : "count", "tail" : "(): Characters[Int]", "member" : "laika.parse.text.Characters.count", "link" : "laika\/parse\/text\/Characters.html#count:laika.parse.text.Characters[Int]", "kind" : "def"}, {"label" : "take", "tail" : "(count: Int): Characters[T]", "member" : "laika.parse.text.Characters.take", "link" : "laika\/parse\/text\/Characters.html#take(count:Int):laika.parse.text.Characters[T]", "kind" : "def"}, {"label" : "max", "tail" : "(count: Int): Characters[T]", "member" : "laika.parse.text.Characters.max", "link" : "laika\/parse\/text\/Characters.html#max(count:Int):laika.parse.text.Characters[T]", "kind" : "def"}, {"label" : "min", "tail" : "(count: Int): Characters[T]", "member" : "laika.parse.text.Characters.min", "link" : "laika\/parse\/text\/Characters.html#min(count:Int):laika.parse.text.Characters[T]", "kind" : "def"}, {"member" : "laika.parse.text.Characters#<init>", "error" : "unsupported entity"}, {"label" : "withSource", "tail" : "(): Parser[(T, String)]", "member" : "laika.parse.Parser.withSource", "link" : "laika\/parse\/text\/Characters.html#withSource:laika.parse.Parser[(T,String)]", "kind" : "def"}, {"label" : "withContext", "tail" : "(): Parser[(T, SourceFragment)]", "member" : "laika.parse.Parser.withContext", "link" : "laika\/parse\/text\/Characters.html#withContext:laika.parse.Parser[(T,laika.parse.SourceFragment)]", "kind" : "def"}, {"label" : "withPosition", "tail" : "(): Parser[(T, Position)]", "member" : "laika.parse.Parser.withPosition", "link" : "laika\/parse\/text\/Characters.html#withPosition:laika.parse.Parser[(T,laika.parse.Position)]", "kind" : "def"}, {"label" : "source", "tail" : "(): Parser[String]", "member" : "laika.parse.Parser.source", "link" : "laika\/parse\/text\/Characters.html#source:laika.parse.Parser[String]", "kind" : "def"}, {"label" : "cursor", "tail" : "(): Parser[SourceFragment]", "member" : "laika.parse.Parser.cursor", "link" : "laika\/parse\/text\/Characters.html#cursor:laika.parse.Parser[laika.parse.SourceFragment]", "kind" : "def"}, {"label" : "withCursor", "tail" : "(): Parser[(T, SourceFragment)]", "member" : "laika.parse.Parser.withCursor", "link" : "laika\/parse\/text\/Characters.html#withCursor:laika.parse.Parser[(T,laika.parse.SourceFragment)]", "kind" : "def"}, {"label" : "withFailureMessage", "tail" : "(msg: String): Parser[T]", "member" : "laika.parse.Parser.withFailureMessage", "link" : "laika\/parse\/text\/Characters.html#withFailureMessage(msg:String):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(pf: PartialFunction[Failure, Parser[U]]): Parser[U]", "member" : "laika.parse.Parser.recoverWith", "link" : "laika\/parse\/text\/Characters.html#recoverWith[U>:T](pf:PartialFunction[laika.parse.Failure,laika.parse.Parser[U]]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "handleErrorWith", "tail" : "(f: (Failure) ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.handleErrorWith", "link" : "laika\/parse\/text\/Characters.html#handleErrorWith[U>:T](f:laika.parse.Failure=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "repWith", "tail" : "(next: (U) ⇒ Parser[U]): Parser[List[U]]", "member" : "laika.parse.Parser.repWith", "link" : "laika\/parse\/text\/Characters.html#repWith[U>:T](next:U=>laika.parse.Parser[U]):laika.parse.Parser[List[U]]", "kind" : "def"}, {"label" : "repUntil", "tail" : "(endCondition: Parser[U]): Parser[(List[T], Option[U])]", "member" : "laika.parse.Parser.repUntil", "link" : "laika\/parse\/text\/Characters.html#repUntil[U](endCondition:laika.parse.Parser[U]):laika.parse.Parser[(List[T],Option[U])]", "kind" : "def"}, {"label" : "?", "tail" : "(): Parser[Option[T]]", "member" : "laika.parse.Parser.?", "link" : "laika\/parse\/text\/Characters.html#?:laika.parse.Parser[Option[T]]", "kind" : "def"}, {"label" : "+", "tail" : "(): Repeat[T]", "member" : "laika.parse.Parser.+", "link" : "laika\/parse\/text\/Characters.html#+:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "*", "tail" : "(): Repeat[T]", "member" : "laika.parse.Parser.*", "link" : "laika\/parse\/text\/Characters.html#*:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(separator: String): Repeat[T]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/text\/Characters.html#rep(separator:String):laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(separator: Parser[Unit]): Repeat[T]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/text\/Characters.html#rep(separator:laika.parse.Parser[Unit]):laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(): Repeat[T]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/text\/Characters.html#rep:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : ">>", "tail" : "(fq: (T) ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.>>", "link" : "laika\/parse\/text\/Characters.html#>>[U](fq:T=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "evalMap", "tail" : "(f: (T) ⇒ Either[String, U]): Parser[U]", "member" : "laika.parse.Parser.evalMap", "link" : "laika\/parse\/text\/Characters.html#evalMap[U](f:T=>Either[String,U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[T, U], error: (T) ⇒ String): Parser[U]", "member" : "laika.parse.Parser.collect", "link" : "laika\/parse\/text\/Characters.html#collect[U](f:PartialFunction[T,U],error:T=>String):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "as", "tail" : "(v: ⇒ U): Parser[U]", "member" : "laika.parse.Parser.as", "link" : "laika\/parse\/text\/Characters.html#as[U](v:=>U):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "^^", "tail" : "(f: (T) ⇒ U): Parser[U]", "member" : "laika.parse.Parser.^^", "link" : "laika\/parse\/text\/Characters.html#^^[U](f:T=>U):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "|", "tail" : "(value: String)(ev: <:<[T, String]): Parser[String]", "member" : "laika.parse.Parser.|", "link" : "laika\/parse\/text\/Characters.html#|(value:String)(implicitev:T<:<String):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "|", "tail" : "(p: ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.|", "link" : "laika\/parse\/text\/Characters.html#|[U>:T](p:=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "<~", "tail" : "(p: Parser[U]): Parser[T]", "member" : "laika.parse.Parser.<~", "link" : "laika\/parse\/text\/Characters.html#<~[U](p:laika.parse.Parser[U]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "<~", "tail" : "(value: String): Parser[T]", "member" : "laika.parse.Parser.<~", "link" : "laika\/parse\/text\/Characters.html#<~(value:String):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "~>", "tail" : "(p: Parser[U]): Parser[U]", "member" : "laika.parse.Parser.~>", "link" : "laika\/parse\/text\/Characters.html#~>[U](p:laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "~>", "tail" : "(value: String): Parser[String]", "member" : "laika.parse.Parser.~>", "link" : "laika\/parse\/text\/Characters.html#~>(value:String):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "~", "tail" : "(p: Parser[U]): Parser[~[T, U]]", "member" : "laika.parse.Parser.~", "link" : "laika\/parse\/text\/Characters.html#~[U](p:laika.parse.Parser[U]):laika.parse.Parser[T~U]", "kind" : "def"}, {"label" : "~", "tail" : "(value: String): Parser[~[T, String]]", "member" : "laika.parse.Parser.~", "link" : "laika\/parse\/text\/Characters.html#~(value:String):laika.parse.Parser[T~String]", "kind" : "def"}, {"label" : "orElse", "tail" : "(p0: ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.orElse", "link" : "laika\/parse\/text\/Characters.html#orElse[U>:T](p0:=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) ⇒ U): Parser[U]", "member" : "laika.parse.Parser.map", "link" : "laika\/parse\/text\/Characters.html#map[U](f:T=>U):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (T) ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.flatMap", "link" : "laika\/parse\/text\/Characters.html#flatMap[U](f:T=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "parse", "tail" : "(in: String): Parsed[T]", "member" : "laika.parse.Parser.parse", "link" : "laika\/parse\/text\/Characters.html#parse(in:String):laika.parse.Parsed[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/text\/Characters.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/text\/Characters.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/text\/Characters.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/text\/Characters.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/text\/Characters.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/text\/Characters.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/text\/Characters.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/Characters.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/Characters.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/Characters.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/text\/Characters.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/text\/Characters.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/text\/Characters.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/text\/Characters.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/text\/Characters.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/text\/Characters.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/text\/Characters.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/text\/Characters.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/text\/Characters.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "anyWhile", "tail" : "(predicate: (Char) ⇒ Boolean): Characters[String]", "member" : "laika.parse.text.Characters.anyWhile", "link" : "laika\/parse\/text\/Characters$.html#anyWhile(predicate:Char=>Boolean):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "exclude", "tail" : "(chars: Seq[Char]): Characters[String]", "member" : "laika.parse.text.Characters.exclude", "link" : "laika\/parse\/text\/Characters$.html#exclude(chars:Seq[Char]):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "include", "tail" : "(chars: Seq[Char]): Characters[String]", "member" : "laika.parse.text.Characters.include", "link" : "laika\/parse\/text\/Characters$.html#include(chars:Seq[Char]):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "optimizedLookup", "tail" : "(chars: Iterable[Char]): Array[Byte]", "member" : "laika.parse.text.Characters.optimizedLookup", "link" : "laika\/parse\/text\/Characters$.html#optimizedLookup(chars:Iterable[Char]):Array[Byte]", "kind" : "def"}, {"label" : "UnitResultBuilder", "tail" : ": ResultBuilder[Unit]", "member" : "laika.parse.text.Characters.UnitResultBuilder", "link" : "laika\/parse\/text\/Characters$.html#UnitResultBuilder:laika.parse.text.Characters.ResultBuilder[Unit]", "kind" : "val"}, {"label" : "CountResultBuilder", "tail" : ": ResultBuilder[Int]", "member" : "laika.parse.text.Characters.CountResultBuilder", "link" : "laika\/parse\/text\/Characters$.html#CountResultBuilder:laika.parse.text.Characters.ResultBuilder[Int]", "kind" : "val"}, {"label" : "StringResultBuilder", "tail" : ": ResultBuilder[String]", "member" : "laika.parse.text.Characters.StringResultBuilder", "link" : "laika\/parse\/text\/Characters$.html#StringResultBuilder:laika.parse.text.Characters.ResultBuilder[String]", "kind" : "val"}, {"label" : "ResultBuilder", "tail" : "", "member" : "laika.parse.text.Characters.ResultBuilder", "link" : "laika\/parse\/text\/Characters$.html#ResultBuilder[T]=(laika.parse.SourceCursor,Int)=>T", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/text\/Characters$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/text\/Characters$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/text\/Characters$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/text\/Characters$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/text\/Characters$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/text\/Characters$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/text\/Characters$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/Characters$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/Characters$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/Characters$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/text\/Characters$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/text\/Characters$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/text\/Characters$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/text\/Characters$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/text\/Characters$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/text\/Characters$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/text\/Characters$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/text\/Characters$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/text\/Characters$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/parse\/text\/Characters.html", "kind" : "class"}, {"name" : "laika.parse.text.CharGroup", "shortDescription" : "Common groups of characters as input for parser definitions.", "object" : "laika\/parse\/text\/CharGroup$.html", "members_object" : [{"label" : "alphaNum", "tail" : ": NonEmptySet[Char]", "member" : "laika.parse.text.CharGroup.alphaNum", "link" : "laika\/parse\/text\/CharGroup$.html#alphaNum:cats.data.NonEmptySet[Char]", "kind" : "val"}, {"label" : "alpha", "tail" : ": NonEmptySet[Char]", "member" : "laika.parse.text.CharGroup.alpha", "link" : "laika\/parse\/text\/CharGroup$.html#alpha:cats.data.NonEmptySet[Char]", "kind" : "val"}, {"label" : "upperAlpha", "tail" : ": NonEmptySet[Char]", "member" : "laika.parse.text.CharGroup.upperAlpha", "link" : "laika\/parse\/text\/CharGroup$.html#upperAlpha:cats.data.NonEmptySet[Char]", "kind" : "val"}, {"label" : "lowerAlpha", "tail" : ": NonEmptySet[Char]", "member" : "laika.parse.text.CharGroup.lowerAlpha", "link" : "laika\/parse\/text\/CharGroup$.html#lowerAlpha:cats.data.NonEmptySet[Char]", "kind" : "val"}, {"label" : "octalDigit", "tail" : ": NonEmptySet[Char]", "member" : "laika.parse.text.CharGroup.octalDigit", "link" : "laika\/parse\/text\/CharGroup$.html#octalDigit:cats.data.NonEmptySet[Char]", "kind" : "val"}, {"label" : "hexDigit", "tail" : ": NonEmptySet[Char]", "member" : "laika.parse.text.CharGroup.hexDigit", "link" : "laika\/parse\/text\/CharGroup$.html#hexDigit:cats.data.NonEmptySet[Char]", "kind" : "val"}, {"label" : "digit", "tail" : ": NonEmptySet[Char]", "member" : "laika.parse.text.CharGroup.digit", "link" : "laika\/parse\/text\/CharGroup$.html#digit:cats.data.NonEmptySet[Char]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/text\/CharGroup$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/text\/CharGroup$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/text\/CharGroup$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/text\/CharGroup$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/text\/CharGroup$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/text\/CharGroup$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/text\/CharGroup$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/CharGroup$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/CharGroup$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/CharGroup$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/text\/CharGroup$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/text\/CharGroup$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/text\/CharGroup$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/text\/CharGroup$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/text\/CharGroup$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/text\/CharGroup$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/text\/CharGroup$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/text\/CharGroup$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/text\/CharGroup$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.text.DelimitedText", "shortDescription" : "A parser for text that ends with a specific delimiter condition,either marking the end of the text span or the start of an embeddedinner span.", "object" : "laika\/parse\/text\/DelimitedText$.html", "members_class" : [{"label" : "parse", "tail" : "(source: SourceCursor): Parsed[String]", "member" : "laika.parse.text.DelimitedText.parse", "link" : "laika\/parse\/text\/DelimitedText.html#parse(source:laika.parse.SourceCursor):laika.parse.Parsed[String]", "kind" : "def"}, {"label" : "failOn", "tail" : "(chars: Char*): DelimitedText", "member" : "laika.parse.text.DelimitedText.failOn", "link" : "laika\/parse\/text\/DelimitedText.html#failOn(chars:Char*):laika.parse.text.DelimitedText", "kind" : "def"}, {"label" : "keepDelimiter", "tail" : "(): DelimitedText", "member" : "laika.parse.text.DelimitedText.keepDelimiter", "link" : "laika\/parse\/text\/DelimitedText.html#keepDelimiter:laika.parse.text.DelimitedText", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): DelimitedText", "member" : "laika.parse.text.DelimitedText.nonEmpty", "link" : "laika\/parse\/text\/DelimitedText.html#nonEmpty:laika.parse.text.DelimitedText", "kind" : "def"}, {"label" : "acceptEOF", "tail" : "(): DelimitedText", "member" : "laika.parse.text.DelimitedText.acceptEOF", "link" : "laika\/parse\/text\/DelimitedText.html#acceptEOF:laika.parse.text.DelimitedText", "kind" : "def"}, {"member" : "laika.parse.text.DelimitedText#<init>", "error" : "unsupported entity"}, {"label" : "withSource", "tail" : "(): Parser[(String, String)]", "member" : "laika.parse.Parser.withSource", "link" : "laika\/parse\/text\/DelimitedText.html#withSource:laika.parse.Parser[(T,String)]", "kind" : "def"}, {"label" : "withContext", "tail" : "(): Parser[(String, SourceFragment)]", "member" : "laika.parse.Parser.withContext", "link" : "laika\/parse\/text\/DelimitedText.html#withContext:laika.parse.Parser[(T,laika.parse.SourceFragment)]", "kind" : "def"}, {"label" : "withPosition", "tail" : "(): Parser[(String, Position)]", "member" : "laika.parse.Parser.withPosition", "link" : "laika\/parse\/text\/DelimitedText.html#withPosition:laika.parse.Parser[(T,laika.parse.Position)]", "kind" : "def"}, {"label" : "count", "tail" : "(): Parser[Int]", "member" : "laika.parse.Parser.count", "link" : "laika\/parse\/text\/DelimitedText.html#count:laika.parse.Parser[Int]", "kind" : "def"}, {"label" : "source", "tail" : "(): Parser[String]", "member" : "laika.parse.Parser.source", "link" : "laika\/parse\/text\/DelimitedText.html#source:laika.parse.Parser[String]", "kind" : "def"}, {"label" : "cursor", "tail" : "(): Parser[SourceFragment]", "member" : "laika.parse.Parser.cursor", "link" : "laika\/parse\/text\/DelimitedText.html#cursor:laika.parse.Parser[laika.parse.SourceFragment]", "kind" : "def"}, {"label" : "withCursor", "tail" : "(): Parser[(String, SourceFragment)]", "member" : "laika.parse.Parser.withCursor", "link" : "laika\/parse\/text\/DelimitedText.html#withCursor:laika.parse.Parser[(T,laika.parse.SourceFragment)]", "kind" : "def"}, {"label" : "withFailureMessage", "tail" : "(msg: String): Parser[String]", "member" : "laika.parse.Parser.withFailureMessage", "link" : "laika\/parse\/text\/DelimitedText.html#withFailureMessage(msg:String):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(pf: PartialFunction[Failure, Parser[U]]): Parser[U]", "member" : "laika.parse.Parser.recoverWith", "link" : "laika\/parse\/text\/DelimitedText.html#recoverWith[U>:T](pf:PartialFunction[laika.parse.Failure,laika.parse.Parser[U]]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "handleErrorWith", "tail" : "(f: (Failure) ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.handleErrorWith", "link" : "laika\/parse\/text\/DelimitedText.html#handleErrorWith[U>:T](f:laika.parse.Failure=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "repWith", "tail" : "(next: (U) ⇒ Parser[U]): Parser[List[U]]", "member" : "laika.parse.Parser.repWith", "link" : "laika\/parse\/text\/DelimitedText.html#repWith[U>:T](next:U=>laika.parse.Parser[U]):laika.parse.Parser[List[U]]", "kind" : "def"}, {"label" : "repUntil", "tail" : "(endCondition: Parser[U]): Parser[(List[String], Option[U])]", "member" : "laika.parse.Parser.repUntil", "link" : "laika\/parse\/text\/DelimitedText.html#repUntil[U](endCondition:laika.parse.Parser[U]):laika.parse.Parser[(List[T],Option[U])]", "kind" : "def"}, {"label" : "?", "tail" : "(): Parser[Option[String]]", "member" : "laika.parse.Parser.?", "link" : "laika\/parse\/text\/DelimitedText.html#?:laika.parse.Parser[Option[T]]", "kind" : "def"}, {"label" : "+", "tail" : "(): Repeat[String]", "member" : "laika.parse.Parser.+", "link" : "laika\/parse\/text\/DelimitedText.html#+:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "*", "tail" : "(): Repeat[String]", "member" : "laika.parse.Parser.*", "link" : "laika\/parse\/text\/DelimitedText.html#*:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(separator: String): Repeat[String]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/text\/DelimitedText.html#rep(separator:String):laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(separator: Parser[Unit]): Repeat[String]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/text\/DelimitedText.html#rep(separator:laika.parse.Parser[Unit]):laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(): Repeat[String]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/text\/DelimitedText.html#rep:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : ">>", "tail" : "(fq: (String) ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.>>", "link" : "laika\/parse\/text\/DelimitedText.html#>>[U](fq:T=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "evalMap", "tail" : "(f: (String) ⇒ Either[String, U]): Parser[U]", "member" : "laika.parse.Parser.evalMap", "link" : "laika\/parse\/text\/DelimitedText.html#evalMap[U](f:T=>Either[String,U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[String, U], error: (String) ⇒ String): Parser[U]", "member" : "laika.parse.Parser.collect", "link" : "laika\/parse\/text\/DelimitedText.html#collect[U](f:PartialFunction[T,U],error:T=>String):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "void", "tail" : "(): Parser[Unit]", "member" : "laika.parse.Parser.void", "link" : "laika\/parse\/text\/DelimitedText.html#void:laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "as", "tail" : "(v: ⇒ U): Parser[U]", "member" : "laika.parse.Parser.as", "link" : "laika\/parse\/text\/DelimitedText.html#as[U](v:=>U):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "^^", "tail" : "(f: (String) ⇒ U): Parser[U]", "member" : "laika.parse.Parser.^^", "link" : "laika\/parse\/text\/DelimitedText.html#^^[U](f:T=>U):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "|", "tail" : "(value: String)(ev: <:<[String, String]): Parser[String]", "member" : "laika.parse.Parser.|", "link" : "laika\/parse\/text\/DelimitedText.html#|(value:String)(implicitev:T<:<String):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "|", "tail" : "(p: ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.|", "link" : "laika\/parse\/text\/DelimitedText.html#|[U>:T](p:=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "<~", "tail" : "(p: Parser[U]): Parser[String]", "member" : "laika.parse.Parser.<~", "link" : "laika\/parse\/text\/DelimitedText.html#<~[U](p:laika.parse.Parser[U]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "<~", "tail" : "(value: String): Parser[String]", "member" : "laika.parse.Parser.<~", "link" : "laika\/parse\/text\/DelimitedText.html#<~(value:String):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "~>", "tail" : "(p: Parser[U]): Parser[U]", "member" : "laika.parse.Parser.~>", "link" : "laika\/parse\/text\/DelimitedText.html#~>[U](p:laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "~>", "tail" : "(value: String): Parser[String]", "member" : "laika.parse.Parser.~>", "link" : "laika\/parse\/text\/DelimitedText.html#~>(value:String):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "~", "tail" : "(p: Parser[U]): Parser[~[String, U]]", "member" : "laika.parse.Parser.~", "link" : "laika\/parse\/text\/DelimitedText.html#~[U](p:laika.parse.Parser[U]):laika.parse.Parser[T~U]", "kind" : "def"}, {"label" : "~", "tail" : "(value: String): Parser[~[String, String]]", "member" : "laika.parse.Parser.~", "link" : "laika\/parse\/text\/DelimitedText.html#~(value:String):laika.parse.Parser[T~String]", "kind" : "def"}, {"label" : "orElse", "tail" : "(p0: ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.orElse", "link" : "laika\/parse\/text\/DelimitedText.html#orElse[U>:T](p0:=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (String) ⇒ U): Parser[U]", "member" : "laika.parse.Parser.map", "link" : "laika\/parse\/text\/DelimitedText.html#map[U](f:T=>U):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (String) ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.flatMap", "link" : "laika\/parse\/text\/DelimitedText.html#flatMap[U](f:T=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "parse", "tail" : "(in: String): Parsed[String]", "member" : "laika.parse.Parser.parse", "link" : "laika\/parse\/text\/DelimitedText.html#parse(in:String):laika.parse.Parsed[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/text\/DelimitedText.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/text\/DelimitedText.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/text\/DelimitedText.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/text\/DelimitedText.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/text\/DelimitedText.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/text\/DelimitedText.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/text\/DelimitedText.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/DelimitedText.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/DelimitedText.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/DelimitedText.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/text\/DelimitedText.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/text\/DelimitedText.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/text\/DelimitedText.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/text\/DelimitedText.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/text\/DelimitedText.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/text\/DelimitedText.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/text\/DelimitedText.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/text\/DelimitedText.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/text\/DelimitedText.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Undelimited", "tail" : ": DelimitedText", "member" : "laika.parse.text.DelimitedText.Undelimited", "link" : "laika\/parse\/text\/DelimitedText$.html#Undelimited:laika.parse.text.DelimitedText", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/text\/DelimitedText$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/text\/DelimitedText$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/text\/DelimitedText$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/text\/DelimitedText$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/text\/DelimitedText$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/text\/DelimitedText$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/text\/DelimitedText$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/DelimitedText$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/DelimitedText$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/DelimitedText$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/text\/DelimitedText$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/text\/DelimitedText$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/text\/DelimitedText$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/text\/DelimitedText$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/text\/DelimitedText$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/text\/DelimitedText$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/text\/DelimitedText$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/text\/DelimitedText$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/text\/DelimitedText$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/parse\/text\/DelimitedText.html", "kind" : "class"}, {"name" : "laika.parse.text.DelimiterParser", "shortDescription" : "A parser that simplifies the expression of typical conditions for start and enddelimiters of inline spans.", "members_class" : [{"label" : "notEnclosedBy", "tail" : "(predicate: (Char, Char) ⇒ Boolean): DelimiterParser", "member" : "laika.parse.text.DelimiterParser.notEnclosedBy", "link" : "laika\/parse\/text\/DelimiterParser.html#notEnclosedBy(predicate:(Char,Char)=>Boolean):laika.parse.text.DelimiterParser", "kind" : "def"}, {"label" : "nextNot", "tail" : "(predicate: (Char) ⇒ Boolean): DelimiterParser", "member" : "laika.parse.text.DelimiterParser.nextNot", "link" : "laika\/parse\/text\/DelimiterParser.html#nextNot(predicate:Char=>Boolean):laika.parse.text.DelimiterParser", "kind" : "def"}, {"label" : "nextNot", "tail" : "(chars: NonEmptySet[Char]): DelimiterParser", "member" : "laika.parse.text.DelimiterParser.nextNot", "link" : "laika\/parse\/text\/DelimiterParser.html#nextNot(chars:cats.data.NonEmptySet[Char]):laika.parse.text.DelimiterParser", "kind" : "def"}, {"label" : "nextNot", "tail" : "(char: Char, chars: Char*): DelimiterParser", "member" : "laika.parse.text.DelimiterParser.nextNot", "link" : "laika\/parse\/text\/DelimiterParser.html#nextNot(char:Char,chars:Char*):laika.parse.text.DelimiterParser", "kind" : "def"}, {"label" : "prevNot", "tail" : "(predicate: (Char) ⇒ Boolean): DelimiterParser", "member" : "laika.parse.text.DelimiterParser.prevNot", "link" : "laika\/parse\/text\/DelimiterParser.html#prevNot(predicate:Char=>Boolean):laika.parse.text.DelimiterParser", "kind" : "def"}, {"label" : "prevNot", "tail" : "(chars: NonEmptySet[Char]): DelimiterParser", "member" : "laika.parse.text.DelimiterParser.prevNot", "link" : "laika\/parse\/text\/DelimiterParser.html#prevNot(chars:cats.data.NonEmptySet[Char]):laika.parse.text.DelimiterParser", "kind" : "def"}, {"label" : "prevNot", "tail" : "(char: Char, chars: Char*): DelimiterParser", "member" : "laika.parse.text.DelimiterParser.prevNot", "link" : "laika\/parse\/text\/DelimiterParser.html#prevNot(char:Char,chars:Char*):laika.parse.text.DelimiterParser", "kind" : "def"}, {"label" : "underlying", "tail" : ": Parser[String]", "member" : "laika.parse.text.DelimiterParser.underlying", "link" : "laika\/parse\/text\/DelimiterParser.html#underlying:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "startChars", "tail" : ": NonEmptySet[Char]", "member" : "laika.parse.text.DelimiterParser.startChars", "link" : "laika\/parse\/text\/DelimiterParser.html#startChars:cats.data.NonEmptySet[Char]", "kind" : "val"}, {"member" : "laika.parse.text.DelimiterParser#<init>", "error" : "unsupported entity"}, {"label" : "withSource", "tail" : "(): PrefixedParser[(String, String)]", "member" : "laika.parse.text.PrefixedParser.withSource", "link" : "laika\/parse\/text\/DelimiterParser.html#withSource:laika.parse.text.PrefixedParser[(T,String)]", "kind" : "def"}, {"label" : "source", "tail" : "(): PrefixedParser[String]", "member" : "laika.parse.text.PrefixedParser.source", "link" : "laika\/parse\/text\/DelimiterParser.html#source:laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "cursor", "tail" : "(): PrefixedParser[SourceFragment]", "member" : "laika.parse.text.PrefixedParser.cursor", "link" : "laika\/parse\/text\/DelimiterParser.html#cursor:laika.parse.text.PrefixedParser[laika.parse.SourceFragment]", "kind" : "def"}, {"label" : "withCursor", "tail" : "(): PrefixedParser[(String, SourceFragment)]", "member" : "laika.parse.text.PrefixedParser.withCursor", "link" : "laika\/parse\/text\/DelimiterParser.html#withCursor:laika.parse.text.PrefixedParser[(T,laika.parse.SourceFragment)]", "kind" : "def"}, {"label" : "|", "tail" : "(value: String)(ev: <:<[String, String]): PrefixedParser[String]", "member" : "laika.parse.text.PrefixedParser.|", "link" : "laika\/parse\/text\/DelimiterParser.html#|(value:String)(implicitev:T<:<String):laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "|", "tail" : "(p: ⇒ PrefixedParser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.|", "link" : "laika\/parse\/text\/DelimiterParser.html#|[U>:T](p:=>laika.parse.text.PrefixedParser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "orElse", "tail" : "(p: ⇒ PrefixedParser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.orElse", "link" : "laika\/parse\/text\/DelimiterParser.html#orElse[U>:T](p:=>laika.parse.text.PrefixedParser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[String, U], error: (String) ⇒ String): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.collect", "link" : "laika\/parse\/text\/DelimiterParser.html#collect[U](f:PartialFunction[T,U],error:T=>String):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "evalMap", "tail" : "(f: (String) ⇒ Either[String, U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.evalMap", "link" : "laika\/parse\/text\/DelimiterParser.html#evalMap[U](f:T=>Either[String,U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "as", "tail" : "(v: ⇒ U): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.as", "link" : "laika\/parse\/text\/DelimiterParser.html#as[U](v:=>U):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "^^", "tail" : "(f: (String) ⇒ U): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.^^", "link" : "laika\/parse\/text\/DelimiterParser.html#^^[U](f:T=>U):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (String) ⇒ U): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.map", "link" : "laika\/parse\/text\/DelimiterParser.html#map[U](f:T=>U):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : ">>", "tail" : "(fq: (String) ⇒ Parser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.>>", "link" : "laika\/parse\/text\/DelimiterParser.html#>>[U](fq:T=>laika.parse.Parser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (String) ⇒ Parser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.flatMap", "link" : "laika\/parse\/text\/DelimiterParser.html#flatMap[U](f:T=>laika.parse.Parser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "<~", "tail" : "(value: String): PrefixedParser[String]", "member" : "laika.parse.text.PrefixedParser.<~", "link" : "laika\/parse\/text\/DelimiterParser.html#<~(value:String):laika.parse.text.PrefixedParser[T]", "kind" : "def"}, {"label" : "~>", "tail" : "(value: String): PrefixedParser[String]", "member" : "laika.parse.text.PrefixedParser.~>", "link" : "laika\/parse\/text\/DelimiterParser.html#~>(value:String):laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "~", "tail" : "(value: String): PrefixedParser[~[String, String]]", "member" : "laika.parse.text.PrefixedParser.~", "link" : "laika\/parse\/text\/DelimiterParser.html#~(value:String):laika.parse.text.PrefixedParser[T~String]", "kind" : "def"}, {"label" : "<~", "tail" : "(p: Parser[U]): PrefixedParser[String]", "member" : "laika.parse.text.PrefixedParser.<~", "link" : "laika\/parse\/text\/DelimiterParser.html#<~[U](p:laika.parse.Parser[U]):laika.parse.text.PrefixedParser[T]", "kind" : "def"}, {"label" : "~>", "tail" : "(p: Parser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.~>", "link" : "laika\/parse\/text\/DelimiterParser.html#~>[U](p:laika.parse.Parser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "~", "tail" : "(p: Parser[U]): PrefixedParser[~[String, U]]", "member" : "laika.parse.text.PrefixedParser.~", "link" : "laika\/parse\/text\/DelimiterParser.html#~[U](p:laika.parse.Parser[U]):laika.parse.text.PrefixedParser[T~U]", "kind" : "def"}, {"label" : "parse", "tail" : "(in: SourceCursor): Parsed[String]", "member" : "laika.parse.text.PrefixedParser.parse", "link" : "laika\/parse\/text\/DelimiterParser.html#parse(in:laika.parse.SourceCursor):laika.parse.Parsed[T]", "kind" : "def"}, {"label" : "withContext", "tail" : "(): Parser[(String, SourceFragment)]", "member" : "laika.parse.Parser.withContext", "link" : "laika\/parse\/text\/DelimiterParser.html#withContext:laika.parse.Parser[(T,laika.parse.SourceFragment)]", "kind" : "def"}, {"label" : "withPosition", "tail" : "(): Parser[(String, Position)]", "member" : "laika.parse.Parser.withPosition", "link" : "laika\/parse\/text\/DelimiterParser.html#withPosition:laika.parse.Parser[(T,laika.parse.Position)]", "kind" : "def"}, {"label" : "count", "tail" : "(): Parser[Int]", "member" : "laika.parse.Parser.count", "link" : "laika\/parse\/text\/DelimiterParser.html#count:laika.parse.Parser[Int]", "kind" : "def"}, {"label" : "withFailureMessage", "tail" : "(msg: String): Parser[String]", "member" : "laika.parse.Parser.withFailureMessage", "link" : "laika\/parse\/text\/DelimiterParser.html#withFailureMessage(msg:String):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(pf: PartialFunction[Failure, Parser[U]]): Parser[U]", "member" : "laika.parse.Parser.recoverWith", "link" : "laika\/parse\/text\/DelimiterParser.html#recoverWith[U>:T](pf:PartialFunction[laika.parse.Failure,laika.parse.Parser[U]]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "handleErrorWith", "tail" : "(f: (Failure) ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.handleErrorWith", "link" : "laika\/parse\/text\/DelimiterParser.html#handleErrorWith[U>:T](f:laika.parse.Failure=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "repWith", "tail" : "(next: (U) ⇒ Parser[U]): Parser[List[U]]", "member" : "laika.parse.Parser.repWith", "link" : "laika\/parse\/text\/DelimiterParser.html#repWith[U>:T](next:U=>laika.parse.Parser[U]):laika.parse.Parser[List[U]]", "kind" : "def"}, {"label" : "repUntil", "tail" : "(endCondition: Parser[U]): Parser[(List[String], Option[U])]", "member" : "laika.parse.Parser.repUntil", "link" : "laika\/parse\/text\/DelimiterParser.html#repUntil[U](endCondition:laika.parse.Parser[U]):laika.parse.Parser[(List[T],Option[U])]", "kind" : "def"}, {"label" : "?", "tail" : "(): Parser[Option[String]]", "member" : "laika.parse.Parser.?", "link" : "laika\/parse\/text\/DelimiterParser.html#?:laika.parse.Parser[Option[T]]", "kind" : "def"}, {"label" : "+", "tail" : "(): Repeat[String]", "member" : "laika.parse.Parser.+", "link" : "laika\/parse\/text\/DelimiterParser.html#+:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "*", "tail" : "(): Repeat[String]", "member" : "laika.parse.Parser.*", "link" : "laika\/parse\/text\/DelimiterParser.html#*:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(separator: String): Repeat[String]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/text\/DelimiterParser.html#rep(separator:String):laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(separator: Parser[Unit]): Repeat[String]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/text\/DelimiterParser.html#rep(separator:laika.parse.Parser[Unit]):laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(): Repeat[String]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/text\/DelimiterParser.html#rep:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "void", "tail" : "(): Parser[Unit]", "member" : "laika.parse.Parser.void", "link" : "laika\/parse\/text\/DelimiterParser.html#void:laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "|", "tail" : "(p: ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.|", "link" : "laika\/parse\/text\/DelimiterParser.html#|[U>:T](p:=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "orElse", "tail" : "(p0: ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.orElse", "link" : "laika\/parse\/text\/DelimiterParser.html#orElse[U>:T](p0:=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "parse", "tail" : "(in: String): Parsed[String]", "member" : "laika.parse.Parser.parse", "link" : "laika\/parse\/text\/DelimiterParser.html#parse(in:String):laika.parse.Parsed[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/text\/DelimiterParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/text\/DelimiterParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/text\/DelimiterParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/text\/DelimiterParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/text\/DelimiterParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/text\/DelimiterParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/text\/DelimiterParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/DelimiterParser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/DelimiterParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/DelimiterParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/text\/DelimiterParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/text\/DelimiterParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/text\/DelimiterParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/text\/DelimiterParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/text\/DelimiterParser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/text\/DelimiterParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/text\/DelimiterParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/text\/DelimiterParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/text\/DelimiterParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/parse\/text\/DelimiterParser.html", "kind" : "class"}, {"name" : "laika.parse.text.Literal", "shortDescription" : "A parser that matches a literal string.", "members_case class" : [{"label" : "underlying", "tail" : ": Parser[String]", "member" : "laika.parse.text.Literal.underlying", "link" : "laika\/parse\/text\/Literal.html#underlying:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "startChars", "tail" : ": NonEmptySet[Char]", "member" : "laika.parse.text.Literal.startChars", "link" : "laika\/parse\/text\/Literal.html#startChars:cats.data.NonEmptySet[Char]", "kind" : "val"}, {"member" : "laika.parse.text.Literal#<init>", "error" : "unsupported entity"}, {"label" : "expected", "tail" : ": String", "member" : "laika.parse.text.Literal.expected", "link" : "laika\/parse\/text\/Literal.html#expected:String", "kind" : "val"}, {"label" : "withSource", "tail" : "(): PrefixedParser[(String, String)]", "member" : "laika.parse.text.PrefixedParser.withSource", "link" : "laika\/parse\/text\/Literal.html#withSource:laika.parse.text.PrefixedParser[(T,String)]", "kind" : "def"}, {"label" : "source", "tail" : "(): PrefixedParser[String]", "member" : "laika.parse.text.PrefixedParser.source", "link" : "laika\/parse\/text\/Literal.html#source:laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "cursor", "tail" : "(): PrefixedParser[SourceFragment]", "member" : "laika.parse.text.PrefixedParser.cursor", "link" : "laika\/parse\/text\/Literal.html#cursor:laika.parse.text.PrefixedParser[laika.parse.SourceFragment]", "kind" : "def"}, {"label" : "withCursor", "tail" : "(): PrefixedParser[(String, SourceFragment)]", "member" : "laika.parse.text.PrefixedParser.withCursor", "link" : "laika\/parse\/text\/Literal.html#withCursor:laika.parse.text.PrefixedParser[(T,laika.parse.SourceFragment)]", "kind" : "def"}, {"label" : "|", "tail" : "(value: String)(ev: <:<[String, String]): PrefixedParser[String]", "member" : "laika.parse.text.PrefixedParser.|", "link" : "laika\/parse\/text\/Literal.html#|(value:String)(implicitev:T<:<String):laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "|", "tail" : "(p: ⇒ PrefixedParser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.|", "link" : "laika\/parse\/text\/Literal.html#|[U>:T](p:=>laika.parse.text.PrefixedParser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "orElse", "tail" : "(p: ⇒ PrefixedParser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.orElse", "link" : "laika\/parse\/text\/Literal.html#orElse[U>:T](p:=>laika.parse.text.PrefixedParser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[String, U], error: (String) ⇒ String): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.collect", "link" : "laika\/parse\/text\/Literal.html#collect[U](f:PartialFunction[T,U],error:T=>String):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "evalMap", "tail" : "(f: (String) ⇒ Either[String, U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.evalMap", "link" : "laika\/parse\/text\/Literal.html#evalMap[U](f:T=>Either[String,U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "as", "tail" : "(v: ⇒ U): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.as", "link" : "laika\/parse\/text\/Literal.html#as[U](v:=>U):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "^^", "tail" : "(f: (String) ⇒ U): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.^^", "link" : "laika\/parse\/text\/Literal.html#^^[U](f:T=>U):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (String) ⇒ U): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.map", "link" : "laika\/parse\/text\/Literal.html#map[U](f:T=>U):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : ">>", "tail" : "(fq: (String) ⇒ Parser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.>>", "link" : "laika\/parse\/text\/Literal.html#>>[U](fq:T=>laika.parse.Parser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (String) ⇒ Parser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.flatMap", "link" : "laika\/parse\/text\/Literal.html#flatMap[U](f:T=>laika.parse.Parser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "<~", "tail" : "(value: String): PrefixedParser[String]", "member" : "laika.parse.text.PrefixedParser.<~", "link" : "laika\/parse\/text\/Literal.html#<~(value:String):laika.parse.text.PrefixedParser[T]", "kind" : "def"}, {"label" : "~>", "tail" : "(value: String): PrefixedParser[String]", "member" : "laika.parse.text.PrefixedParser.~>", "link" : "laika\/parse\/text\/Literal.html#~>(value:String):laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "~", "tail" : "(value: String): PrefixedParser[~[String, String]]", "member" : "laika.parse.text.PrefixedParser.~", "link" : "laika\/parse\/text\/Literal.html#~(value:String):laika.parse.text.PrefixedParser[T~String]", "kind" : "def"}, {"label" : "<~", "tail" : "(p: Parser[U]): PrefixedParser[String]", "member" : "laika.parse.text.PrefixedParser.<~", "link" : "laika\/parse\/text\/Literal.html#<~[U](p:laika.parse.Parser[U]):laika.parse.text.PrefixedParser[T]", "kind" : "def"}, {"label" : "~>", "tail" : "(p: Parser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.~>", "link" : "laika\/parse\/text\/Literal.html#~>[U](p:laika.parse.Parser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "~", "tail" : "(p: Parser[U]): PrefixedParser[~[String, U]]", "member" : "laika.parse.text.PrefixedParser.~", "link" : "laika\/parse\/text\/Literal.html#~[U](p:laika.parse.Parser[U]):laika.parse.text.PrefixedParser[T~U]", "kind" : "def"}, {"label" : "parse", "tail" : "(in: SourceCursor): Parsed[String]", "member" : "laika.parse.text.PrefixedParser.parse", "link" : "laika\/parse\/text\/Literal.html#parse(in:laika.parse.SourceCursor):laika.parse.Parsed[T]", "kind" : "def"}, {"label" : "withContext", "tail" : "(): Parser[(String, SourceFragment)]", "member" : "laika.parse.Parser.withContext", "link" : "laika\/parse\/text\/Literal.html#withContext:laika.parse.Parser[(T,laika.parse.SourceFragment)]", "kind" : "def"}, {"label" : "withPosition", "tail" : "(): Parser[(String, Position)]", "member" : "laika.parse.Parser.withPosition", "link" : "laika\/parse\/text\/Literal.html#withPosition:laika.parse.Parser[(T,laika.parse.Position)]", "kind" : "def"}, {"label" : "count", "tail" : "(): Parser[Int]", "member" : "laika.parse.Parser.count", "link" : "laika\/parse\/text\/Literal.html#count:laika.parse.Parser[Int]", "kind" : "def"}, {"label" : "withFailureMessage", "tail" : "(msg: String): Parser[String]", "member" : "laika.parse.Parser.withFailureMessage", "link" : "laika\/parse\/text\/Literal.html#withFailureMessage(msg:String):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(pf: PartialFunction[Failure, Parser[U]]): Parser[U]", "member" : "laika.parse.Parser.recoverWith", "link" : "laika\/parse\/text\/Literal.html#recoverWith[U>:T](pf:PartialFunction[laika.parse.Failure,laika.parse.Parser[U]]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "handleErrorWith", "tail" : "(f: (Failure) ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.handleErrorWith", "link" : "laika\/parse\/text\/Literal.html#handleErrorWith[U>:T](f:laika.parse.Failure=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "repWith", "tail" : "(next: (U) ⇒ Parser[U]): Parser[List[U]]", "member" : "laika.parse.Parser.repWith", "link" : "laika\/parse\/text\/Literal.html#repWith[U>:T](next:U=>laika.parse.Parser[U]):laika.parse.Parser[List[U]]", "kind" : "def"}, {"label" : "repUntil", "tail" : "(endCondition: Parser[U]): Parser[(List[String], Option[U])]", "member" : "laika.parse.Parser.repUntil", "link" : "laika\/parse\/text\/Literal.html#repUntil[U](endCondition:laika.parse.Parser[U]):laika.parse.Parser[(List[T],Option[U])]", "kind" : "def"}, {"label" : "?", "tail" : "(): Parser[Option[String]]", "member" : "laika.parse.Parser.?", "link" : "laika\/parse\/text\/Literal.html#?:laika.parse.Parser[Option[T]]", "kind" : "def"}, {"label" : "+", "tail" : "(): Repeat[String]", "member" : "laika.parse.Parser.+", "link" : "laika\/parse\/text\/Literal.html#+:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "*", "tail" : "(): Repeat[String]", "member" : "laika.parse.Parser.*", "link" : "laika\/parse\/text\/Literal.html#*:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(separator: String): Repeat[String]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/text\/Literal.html#rep(separator:String):laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(separator: Parser[Unit]): Repeat[String]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/text\/Literal.html#rep(separator:laika.parse.Parser[Unit]):laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(): Repeat[String]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/text\/Literal.html#rep:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "void", "tail" : "(): Parser[Unit]", "member" : "laika.parse.Parser.void", "link" : "laika\/parse\/text\/Literal.html#void:laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "|", "tail" : "(p: ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.|", "link" : "laika\/parse\/text\/Literal.html#|[U>:T](p:=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "orElse", "tail" : "(p0: ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.orElse", "link" : "laika\/parse\/text\/Literal.html#orElse[U>:T](p0:=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "parse", "tail" : "(in: String): Parsed[String]", "member" : "laika.parse.Parser.parse", "link" : "laika\/parse\/text\/Literal.html#parse(in:String):laika.parse.Parsed[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/text\/Literal.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/text\/Literal.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/text\/Literal.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/text\/Literal.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/text\/Literal.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/text\/Literal.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/text\/Literal.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/Literal.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/Literal.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/Literal.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/text\/Literal.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/text\/Literal.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/text\/Literal.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/text\/Literal.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/text\/Literal.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/text\/Literal.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/parse\/text\/Literal.html", "kind" : "case class"}, {"name" : "laika.parse.text.PrefixCharacters", "shortDescription" : "A variant of the Characters type that can be used as a stable prefix for an optimizedspan parser as it is always non-empty.", "members_class" : [{"label" : "void", "tail" : "(): PrefixCharacters[Unit]", "member" : "laika.parse.text.PrefixCharacters.void", "link" : "laika\/parse\/text\/PrefixCharacters.html#void:laika.parse.text.PrefixCharacters[Unit]", "kind" : "def"}, {"label" : "count", "tail" : "(): PrefixCharacters[Int]", "member" : "laika.parse.text.PrefixCharacters.count", "link" : "laika\/parse\/text\/PrefixCharacters.html#count:laika.parse.text.PrefixCharacters[Int]", "kind" : "def"}, {"label" : "take", "tail" : "(count: Int): PrefixCharacters[T]", "member" : "laika.parse.text.PrefixCharacters.take", "link" : "laika\/parse\/text\/PrefixCharacters.html#take(count:Int):laika.parse.text.PrefixCharacters[T]", "kind" : "def"}, {"label" : "max", "tail" : "(count: Int): PrefixCharacters[T]", "member" : "laika.parse.text.PrefixCharacters.max", "link" : "laika\/parse\/text\/PrefixCharacters.html#max(count:Int):laika.parse.text.PrefixCharacters[T]", "kind" : "def"}, {"label" : "min", "tail" : "(count: Int): PrefixCharacters[T]", "member" : "laika.parse.text.PrefixCharacters.min", "link" : "laika\/parse\/text\/PrefixCharacters.html#min(count:Int):laika.parse.text.PrefixCharacters[T]", "kind" : "def"}, {"member" : "laika.parse.text.PrefixCharacters#<init>", "error" : "unsupported entity"}, {"label" : "startChars", "tail" : ": NonEmptySet[Char]", "member" : "laika.parse.text.PrefixCharacters.startChars", "link" : "laika\/parse\/text\/PrefixCharacters.html#startChars:cats.data.NonEmptySet[Char]", "kind" : "val"}, {"label" : "underlying", "tail" : ": Characters[T]", "member" : "laika.parse.text.PrefixCharacters.underlying", "link" : "laika\/parse\/text\/PrefixCharacters.html#underlying:laika.parse.text.Characters[T]", "kind" : "val"}, {"label" : "withSource", "tail" : "(): PrefixedParser[(T, String)]", "member" : "laika.parse.text.PrefixedParser.withSource", "link" : "laika\/parse\/text\/PrefixCharacters.html#withSource:laika.parse.text.PrefixedParser[(T,String)]", "kind" : "def"}, {"label" : "source", "tail" : "(): PrefixedParser[String]", "member" : "laika.parse.text.PrefixedParser.source", "link" : "laika\/parse\/text\/PrefixCharacters.html#source:laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "cursor", "tail" : "(): PrefixedParser[SourceFragment]", "member" : "laika.parse.text.PrefixedParser.cursor", "link" : "laika\/parse\/text\/PrefixCharacters.html#cursor:laika.parse.text.PrefixedParser[laika.parse.SourceFragment]", "kind" : "def"}, {"label" : "withCursor", "tail" : "(): PrefixedParser[(T, SourceFragment)]", "member" : "laika.parse.text.PrefixedParser.withCursor", "link" : "laika\/parse\/text\/PrefixCharacters.html#withCursor:laika.parse.text.PrefixedParser[(T,laika.parse.SourceFragment)]", "kind" : "def"}, {"label" : "|", "tail" : "(value: String)(ev: <:<[T, String]): PrefixedParser[String]", "member" : "laika.parse.text.PrefixedParser.|", "link" : "laika\/parse\/text\/PrefixCharacters.html#|(value:String)(implicitev:T<:<String):laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "|", "tail" : "(p: ⇒ PrefixedParser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.|", "link" : "laika\/parse\/text\/PrefixCharacters.html#|[U>:T](p:=>laika.parse.text.PrefixedParser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "orElse", "tail" : "(p: ⇒ PrefixedParser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.orElse", "link" : "laika\/parse\/text\/PrefixCharacters.html#orElse[U>:T](p:=>laika.parse.text.PrefixedParser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[T, U], error: (T) ⇒ String): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.collect", "link" : "laika\/parse\/text\/PrefixCharacters.html#collect[U](f:PartialFunction[T,U],error:T=>String):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "evalMap", "tail" : "(f: (T) ⇒ Either[String, U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.evalMap", "link" : "laika\/parse\/text\/PrefixCharacters.html#evalMap[U](f:T=>Either[String,U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "as", "tail" : "(v: ⇒ U): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.as", "link" : "laika\/parse\/text\/PrefixCharacters.html#as[U](v:=>U):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "^^", "tail" : "(f: (T) ⇒ U): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.^^", "link" : "laika\/parse\/text\/PrefixCharacters.html#^^[U](f:T=>U):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) ⇒ U): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.map", "link" : "laika\/parse\/text\/PrefixCharacters.html#map[U](f:T=>U):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : ">>", "tail" : "(fq: (T) ⇒ Parser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.>>", "link" : "laika\/parse\/text\/PrefixCharacters.html#>>[U](fq:T=>laika.parse.Parser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (T) ⇒ Parser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.flatMap", "link" : "laika\/parse\/text\/PrefixCharacters.html#flatMap[U](f:T=>laika.parse.Parser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "<~", "tail" : "(value: String): PrefixedParser[T]", "member" : "laika.parse.text.PrefixedParser.<~", "link" : "laika\/parse\/text\/PrefixCharacters.html#<~(value:String):laika.parse.text.PrefixedParser[T]", "kind" : "def"}, {"label" : "~>", "tail" : "(value: String): PrefixedParser[String]", "member" : "laika.parse.text.PrefixedParser.~>", "link" : "laika\/parse\/text\/PrefixCharacters.html#~>(value:String):laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "~", "tail" : "(value: String): PrefixedParser[~[T, String]]", "member" : "laika.parse.text.PrefixedParser.~", "link" : "laika\/parse\/text\/PrefixCharacters.html#~(value:String):laika.parse.text.PrefixedParser[T~String]", "kind" : "def"}, {"label" : "<~", "tail" : "(p: Parser[U]): PrefixedParser[T]", "member" : "laika.parse.text.PrefixedParser.<~", "link" : "laika\/parse\/text\/PrefixCharacters.html#<~[U](p:laika.parse.Parser[U]):laika.parse.text.PrefixedParser[T]", "kind" : "def"}, {"label" : "~>", "tail" : "(p: Parser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.~>", "link" : "laika\/parse\/text\/PrefixCharacters.html#~>[U](p:laika.parse.Parser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "~", "tail" : "(p: Parser[U]): PrefixedParser[~[T, U]]", "member" : "laika.parse.text.PrefixedParser.~", "link" : "laika\/parse\/text\/PrefixCharacters.html#~[U](p:laika.parse.Parser[U]):laika.parse.text.PrefixedParser[T~U]", "kind" : "def"}, {"label" : "parse", "tail" : "(in: SourceCursor): Parsed[T]", "member" : "laika.parse.text.PrefixedParser.parse", "link" : "laika\/parse\/text\/PrefixCharacters.html#parse(in:laika.parse.SourceCursor):laika.parse.Parsed[T]", "kind" : "def"}, {"label" : "withContext", "tail" : "(): Parser[(T, SourceFragment)]", "member" : "laika.parse.Parser.withContext", "link" : "laika\/parse\/text\/PrefixCharacters.html#withContext:laika.parse.Parser[(T,laika.parse.SourceFragment)]", "kind" : "def"}, {"label" : "withPosition", "tail" : "(): Parser[(T, Position)]", "member" : "laika.parse.Parser.withPosition", "link" : "laika\/parse\/text\/PrefixCharacters.html#withPosition:laika.parse.Parser[(T,laika.parse.Position)]", "kind" : "def"}, {"label" : "withFailureMessage", "tail" : "(msg: String): Parser[T]", "member" : "laika.parse.Parser.withFailureMessage", "link" : "laika\/parse\/text\/PrefixCharacters.html#withFailureMessage(msg:String):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(pf: PartialFunction[Failure, Parser[U]]): Parser[U]", "member" : "laika.parse.Parser.recoverWith", "link" : "laika\/parse\/text\/PrefixCharacters.html#recoverWith[U>:T](pf:PartialFunction[laika.parse.Failure,laika.parse.Parser[U]]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "handleErrorWith", "tail" : "(f: (Failure) ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.handleErrorWith", "link" : "laika\/parse\/text\/PrefixCharacters.html#handleErrorWith[U>:T](f:laika.parse.Failure=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "repWith", "tail" : "(next: (U) ⇒ Parser[U]): Parser[List[U]]", "member" : "laika.parse.Parser.repWith", "link" : "laika\/parse\/text\/PrefixCharacters.html#repWith[U>:T](next:U=>laika.parse.Parser[U]):laika.parse.Parser[List[U]]", "kind" : "def"}, {"label" : "repUntil", "tail" : "(endCondition: Parser[U]): Parser[(List[T], Option[U])]", "member" : "laika.parse.Parser.repUntil", "link" : "laika\/parse\/text\/PrefixCharacters.html#repUntil[U](endCondition:laika.parse.Parser[U]):laika.parse.Parser[(List[T],Option[U])]", "kind" : "def"}, {"label" : "?", "tail" : "(): Parser[Option[T]]", "member" : "laika.parse.Parser.?", "link" : "laika\/parse\/text\/PrefixCharacters.html#?:laika.parse.Parser[Option[T]]", "kind" : "def"}, {"label" : "+", "tail" : "(): Repeat[T]", "member" : "laika.parse.Parser.+", "link" : "laika\/parse\/text\/PrefixCharacters.html#+:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "*", "tail" : "(): Repeat[T]", "member" : "laika.parse.Parser.*", "link" : "laika\/parse\/text\/PrefixCharacters.html#*:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(separator: String): Repeat[T]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/text\/PrefixCharacters.html#rep(separator:String):laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(separator: Parser[Unit]): Repeat[T]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/text\/PrefixCharacters.html#rep(separator:laika.parse.Parser[Unit]):laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(): Repeat[T]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/text\/PrefixCharacters.html#rep:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "|", "tail" : "(p: ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.|", "link" : "laika\/parse\/text\/PrefixCharacters.html#|[U>:T](p:=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "orElse", "tail" : "(p0: ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.orElse", "link" : "laika\/parse\/text\/PrefixCharacters.html#orElse[U>:T](p0:=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "parse", "tail" : "(in: String): Parsed[T]", "member" : "laika.parse.Parser.parse", "link" : "laika\/parse\/text\/PrefixCharacters.html#parse(in:String):laika.parse.Parsed[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/text\/PrefixCharacters.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/text\/PrefixCharacters.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/text\/PrefixCharacters.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/text\/PrefixCharacters.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/text\/PrefixCharacters.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/text\/PrefixCharacters.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/text\/PrefixCharacters.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/PrefixCharacters.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/PrefixCharacters.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/PrefixCharacters.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/text\/PrefixCharacters.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/text\/PrefixCharacters.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/text\/PrefixCharacters.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/text\/PrefixCharacters.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/text\/PrefixCharacters.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/text\/PrefixCharacters.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/text\/PrefixCharacters.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/text\/PrefixCharacters.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/text\/PrefixCharacters.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/parse\/text\/PrefixCharacters.html", "kind" : "class"}, {"name" : "laika.parse.text.PrefixedParser", "members_trait" : [{"label" : "withSource", "tail" : "(): PrefixedParser[(T, String)]", "member" : "laika.parse.text.PrefixedParser.withSource", "link" : "laika\/parse\/text\/PrefixedParser.html#withSource:laika.parse.text.PrefixedParser[(T,String)]", "kind" : "def"}, {"label" : "source", "tail" : "(): PrefixedParser[String]", "member" : "laika.parse.text.PrefixedParser.source", "link" : "laika\/parse\/text\/PrefixedParser.html#source:laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "cursor", "tail" : "(): PrefixedParser[SourceFragment]", "member" : "laika.parse.text.PrefixedParser.cursor", "link" : "laika\/parse\/text\/PrefixedParser.html#cursor:laika.parse.text.PrefixedParser[laika.parse.SourceFragment]", "kind" : "def"}, {"label" : "withCursor", "tail" : "(): PrefixedParser[(T, SourceFragment)]", "member" : "laika.parse.text.PrefixedParser.withCursor", "link" : "laika\/parse\/text\/PrefixedParser.html#withCursor:laika.parse.text.PrefixedParser[(T,laika.parse.SourceFragment)]", "kind" : "def"}, {"label" : "|", "tail" : "(value: String)(ev: <:<[T, String]): PrefixedParser[String]", "member" : "laika.parse.text.PrefixedParser.|", "link" : "laika\/parse\/text\/PrefixedParser.html#|(value:String)(implicitev:T<:<String):laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "|", "tail" : "(p: ⇒ PrefixedParser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.|", "link" : "laika\/parse\/text\/PrefixedParser.html#|[U>:T](p:=>laika.parse.text.PrefixedParser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "orElse", "tail" : "(p: ⇒ PrefixedParser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.orElse", "link" : "laika\/parse\/text\/PrefixedParser.html#orElse[U>:T](p:=>laika.parse.text.PrefixedParser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[T, U], error: (T) ⇒ String): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.collect", "link" : "laika\/parse\/text\/PrefixedParser.html#collect[U](f:PartialFunction[T,U],error:T=>String):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "evalMap", "tail" : "(f: (T) ⇒ Either[String, U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.evalMap", "link" : "laika\/parse\/text\/PrefixedParser.html#evalMap[U](f:T=>Either[String,U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "as", "tail" : "(v: ⇒ U): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.as", "link" : "laika\/parse\/text\/PrefixedParser.html#as[U](v:=>U):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "^^", "tail" : "(f: (T) ⇒ U): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.^^", "link" : "laika\/parse\/text\/PrefixedParser.html#^^[U](f:T=>U):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) ⇒ U): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.map", "link" : "laika\/parse\/text\/PrefixedParser.html#map[U](f:T=>U):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : ">>", "tail" : "(fq: (T) ⇒ Parser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.>>", "link" : "laika\/parse\/text\/PrefixedParser.html#>>[U](fq:T=>laika.parse.Parser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (T) ⇒ Parser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.flatMap", "link" : "laika\/parse\/text\/PrefixedParser.html#flatMap[U](f:T=>laika.parse.Parser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "<~", "tail" : "(value: String): PrefixedParser[T]", "member" : "laika.parse.text.PrefixedParser.<~", "link" : "laika\/parse\/text\/PrefixedParser.html#<~(value:String):laika.parse.text.PrefixedParser[T]", "kind" : "def"}, {"label" : "~>", "tail" : "(value: String): PrefixedParser[String]", "member" : "laika.parse.text.PrefixedParser.~>", "link" : "laika\/parse\/text\/PrefixedParser.html#~>(value:String):laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "~", "tail" : "(value: String): PrefixedParser[~[T, String]]", "member" : "laika.parse.text.PrefixedParser.~", "link" : "laika\/parse\/text\/PrefixedParser.html#~(value:String):laika.parse.text.PrefixedParser[T~String]", "kind" : "def"}, {"label" : "<~", "tail" : "(p: Parser[U]): PrefixedParser[T]", "member" : "laika.parse.text.PrefixedParser.<~", "link" : "laika\/parse\/text\/PrefixedParser.html#<~[U](p:laika.parse.Parser[U]):laika.parse.text.PrefixedParser[T]", "kind" : "def"}, {"label" : "~>", "tail" : "(p: Parser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.~>", "link" : "laika\/parse\/text\/PrefixedParser.html#~>[U](p:laika.parse.Parser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "~", "tail" : "(p: Parser[U]): PrefixedParser[~[T, U]]", "member" : "laika.parse.text.PrefixedParser.~", "link" : "laika\/parse\/text\/PrefixedParser.html#~[U](p:laika.parse.Parser[U]):laika.parse.text.PrefixedParser[T~U]", "kind" : "def"}, {"label" : "parse", "tail" : "(in: SourceCursor): Parsed[T]", "member" : "laika.parse.text.PrefixedParser.parse", "link" : "laika\/parse\/text\/PrefixedParser.html#parse(in:laika.parse.SourceCursor):laika.parse.Parsed[T]", "kind" : "def"}, {"label" : "withContext", "tail" : "(): Parser[(T, SourceFragment)]", "member" : "laika.parse.Parser.withContext", "link" : "laika\/parse\/text\/PrefixedParser.html#withContext:laika.parse.Parser[(T,laika.parse.SourceFragment)]", "kind" : "def"}, {"label" : "withPosition", "tail" : "(): Parser[(T, Position)]", "member" : "laika.parse.Parser.withPosition", "link" : "laika\/parse\/text\/PrefixedParser.html#withPosition:laika.parse.Parser[(T,laika.parse.Position)]", "kind" : "def"}, {"label" : "count", "tail" : "(): Parser[Int]", "member" : "laika.parse.Parser.count", "link" : "laika\/parse\/text\/PrefixedParser.html#count:laika.parse.Parser[Int]", "kind" : "def"}, {"label" : "withFailureMessage", "tail" : "(msg: String): Parser[T]", "member" : "laika.parse.Parser.withFailureMessage", "link" : "laika\/parse\/text\/PrefixedParser.html#withFailureMessage(msg:String):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(pf: PartialFunction[Failure, Parser[U]]): Parser[U]", "member" : "laika.parse.Parser.recoverWith", "link" : "laika\/parse\/text\/PrefixedParser.html#recoverWith[U>:T](pf:PartialFunction[laika.parse.Failure,laika.parse.Parser[U]]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "handleErrorWith", "tail" : "(f: (Failure) ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.handleErrorWith", "link" : "laika\/parse\/text\/PrefixedParser.html#handleErrorWith[U>:T](f:laika.parse.Failure=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "repWith", "tail" : "(next: (U) ⇒ Parser[U]): Parser[List[U]]", "member" : "laika.parse.Parser.repWith", "link" : "laika\/parse\/text\/PrefixedParser.html#repWith[U>:T](next:U=>laika.parse.Parser[U]):laika.parse.Parser[List[U]]", "kind" : "def"}, {"label" : "repUntil", "tail" : "(endCondition: Parser[U]): Parser[(List[T], Option[U])]", "member" : "laika.parse.Parser.repUntil", "link" : "laika\/parse\/text\/PrefixedParser.html#repUntil[U](endCondition:laika.parse.Parser[U]):laika.parse.Parser[(List[T],Option[U])]", "kind" : "def"}, {"label" : "?", "tail" : "(): Parser[Option[T]]", "member" : "laika.parse.Parser.?", "link" : "laika\/parse\/text\/PrefixedParser.html#?:laika.parse.Parser[Option[T]]", "kind" : "def"}, {"label" : "+", "tail" : "(): Repeat[T]", "member" : "laika.parse.Parser.+", "link" : "laika\/parse\/text\/PrefixedParser.html#+:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "*", "tail" : "(): Repeat[T]", "member" : "laika.parse.Parser.*", "link" : "laika\/parse\/text\/PrefixedParser.html#*:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(separator: String): Repeat[T]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/text\/PrefixedParser.html#rep(separator:String):laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(separator: Parser[Unit]): Repeat[T]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/text\/PrefixedParser.html#rep(separator:laika.parse.Parser[Unit]):laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(): Repeat[T]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/text\/PrefixedParser.html#rep:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "void", "tail" : "(): Parser[Unit]", "member" : "laika.parse.Parser.void", "link" : "laika\/parse\/text\/PrefixedParser.html#void:laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "|", "tail" : "(p: ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.|", "link" : "laika\/parse\/text\/PrefixedParser.html#|[U>:T](p:=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "orElse", "tail" : "(p0: ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.orElse", "link" : "laika\/parse\/text\/PrefixedParser.html#orElse[U>:T](p0:=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "parse", "tail" : "(in: String): Parsed[T]", "member" : "laika.parse.Parser.parse", "link" : "laika\/parse\/text\/PrefixedParser.html#parse(in:String):laika.parse.Parsed[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/text\/PrefixedParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/text\/PrefixedParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/text\/PrefixedParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/text\/PrefixedParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/text\/PrefixedParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/text\/PrefixedParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/text\/PrefixedParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/PrefixedParser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/PrefixedParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/PrefixedParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/text\/PrefixedParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/text\/PrefixedParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/text\/PrefixedParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/text\/PrefixedParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/text\/PrefixedParser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/text\/PrefixedParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/text\/PrefixedParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/text\/PrefixedParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/text\/PrefixedParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "underlying", "tail" : "(): Parser[T]", "member" : "laika.parse.text.PrefixedParser.underlying", "link" : "laika\/parse\/text\/PrefixedParser.html#underlying:laika.parse.Parser[T]", "kind" : "abstract def"}, {"label" : "startChars", "tail" : "(): NonEmptySet[Char]", "member" : "laika.parse.text.PrefixedParser.startChars", "link" : "laika\/parse\/text\/PrefixedParser.html#startChars:cats.data.NonEmptySet[Char]", "kind" : "abstract def"}], "shortDescription" : "A parser that is associated with a non-empty set of triggercharacters for performance optimizations.", "object" : "laika\/parse\/text\/PrefixedParser$.html", "members_object" : [{"label" : "mapAndMerge", "tail" : "(parsers: Seq[PrefixedParser[T]]): Map[Char, Parser[T]]", "member" : "laika.parse.text.PrefixedParser.mapAndMerge", "link" : "laika\/parse\/text\/PrefixedParser$.html#mapAndMerge[T](parsers:Seq[laika.parse.text.PrefixedParser[T]]):Map[Char,laika.parse.Parser[T]]", "kind" : "def"}, {"label" : "apply", "tail" : "(char: Char, chars: Char*)(p: Parser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.apply", "link" : "laika\/parse\/text\/PrefixedParser$.html#apply[U](char:Char,chars:Char*)(p:laika.parse.Parser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "apply", "tail" : "(sc: NonEmptySet[Char])(p: Parser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.apply", "link" : "laika\/parse\/text\/PrefixedParser$.html#apply[U](sc:cats.data.NonEmptySet[Char])(p:laika.parse.Parser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/text\/PrefixedParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/text\/PrefixedParser$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/text\/PrefixedParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/text\/PrefixedParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/text\/PrefixedParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/text\/PrefixedParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/text\/PrefixedParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/PrefixedParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/PrefixedParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/PrefixedParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/text\/PrefixedParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/text\/PrefixedParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/text\/PrefixedParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/text\/PrefixedParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/text\/PrefixedParser$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/text\/PrefixedParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/text\/PrefixedParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/text\/PrefixedParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/text\/PrefixedParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/parse\/text\/PrefixedParser.html", "kind" : "trait"}, {"name" : "laika.parse.text.TextParsers", "members_trait" : [{"label" : "TryOps", "tail" : "", "member" : "laika.parse.combinator.Parsers.TryOps", "link" : "laika\/parse\/combinator\/Parsers.html#TryOps[A]extendsAnyRef", "kind" : "implicit class"}, {"label" : "ParserException", "tail" : "", "member" : "laika.parse.combinator.Parsers.ParserException", "link" : "laika\/parse\/combinator\/Parsers.html#ParserExceptionextendsRuntimeExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "delimiter", "tail" : "(parser: PrefixedParser[String]): DelimiterParser", "member" : "laika.parse.text.TextParsers.delimiter", "link" : "laika\/parse\/text\/TextParsers.html#delimiter(parser:laika.parse.text.PrefixedParser[String]):laika.parse.text.DelimiterParser", "kind" : "def"}, {"label" : "delimiter", "tail" : "(delim: String): DelimiterParser", "member" : "laika.parse.text.TextParsers.delimiter", "link" : "laika\/parse\/text\/TextParsers.html#delimiter(delim:String):laika.parse.text.DelimiterParser", "kind" : "def"}, {"label" : "delimiter", "tail" : "(char: Char, chars: Char*): DelimiterParser", "member" : "laika.parse.text.TextParsers.delimiter", "link" : "laika\/parse\/text\/TextParsers.html#delimiter(char:Char,chars:Char*):laika.parse.text.DelimiterParser", "kind" : "def"}, {"label" : "delimitedBy", "tail" : "(delimiter: PrefixedParser[String]): DelimitedText", "member" : "laika.parse.text.TextParsers.delimitedBy", "link" : "laika\/parse\/text\/TextParsers.html#delimitedBy(delimiter:laika.parse.text.PrefixedParser[String]):laika.parse.text.DelimitedText", "kind" : "def"}, {"label" : "delimitedBy", "tail" : "(str: String): DelimitedText", "member" : "laika.parse.text.TextParsers.delimitedBy", "link" : "laika\/parse\/text\/TextParsers.html#delimitedBy(str:String):laika.parse.text.DelimitedText", "kind" : "def"}, {"label" : "delimitedBy", "tail" : "(chars: NonEmptySet[Char]): DelimitedText", "member" : "laika.parse.text.TextParsers.delimitedBy", "link" : "laika\/parse\/text\/TextParsers.html#delimitedBy(chars:cats.data.NonEmptySet[Char]):laika.parse.text.DelimitedText", "kind" : "def"}, {"label" : "delimitedBy", "tail" : "(char: Char, chars: Char*): DelimitedText", "member" : "laika.parse.text.TextParsers.delimitedBy", "link" : "laika\/parse\/text\/TextParsers.html#delimitedBy(char:Char,chars:Char*):laika.parse.text.DelimitedText", "kind" : "def"}, {"label" : "someWhile", "tail" : "(p: (Char) ⇒ Boolean): Characters[String]", "member" : "laika.parse.text.TextParsers.someWhile", "link" : "laika\/parse\/text\/TextParsers.html#someWhile(p:Char=>Boolean):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "someNot", "tail" : "(chars: NonEmptySet[Char]): Characters[String]", "member" : "laika.parse.text.TextParsers.someNot", "link" : "laika\/parse\/text\/TextParsers.html#someNot(chars:cats.data.NonEmptySet[Char]):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "someNot", "tail" : "(char: Char, chars: Char*): Characters[String]", "member" : "laika.parse.text.TextParsers.someNot", "link" : "laika\/parse\/text\/TextParsers.html#someNot(char:Char,chars:Char*):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "someOf", "tail" : "(chars: NonEmptySet[Char]): PrefixCharacters[String]", "member" : "laika.parse.text.TextParsers.someOf", "link" : "laika\/parse\/text\/TextParsers.html#someOf(chars:cats.data.NonEmptySet[Char]):laika.parse.text.PrefixCharacters[String]", "kind" : "def"}, {"label" : "someOf", "tail" : "(char: Char, chars: Char*): PrefixCharacters[String]", "member" : "laika.parse.text.TextParsers.someOf", "link" : "laika\/parse\/text\/TextParsers.html#someOf(char:Char,chars:Char*):laika.parse.text.PrefixCharacters[String]", "kind" : "def"}, {"label" : "oneChar", "tail" : ": Parser[String]", "member" : "laika.parse.text.TextParsers.oneChar", "link" : "laika\/parse\/text\/TextParsers.html#oneChar:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "oneIf", "tail" : "(p: (Char) ⇒ Boolean): Parser[String]", "member" : "laika.parse.text.TextParsers.oneIf", "link" : "laika\/parse\/text\/TextParsers.html#oneIf(p:Char=>Boolean):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "oneNot", "tail" : "(chars: NonEmptySet[Char]): Parser[String]", "member" : "laika.parse.text.TextParsers.oneNot", "link" : "laika\/parse\/text\/TextParsers.html#oneNot(chars:cats.data.NonEmptySet[Char]):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "oneNot", "tail" : "(char: Char, chars: Char*): Parser[String]", "member" : "laika.parse.text.TextParsers.oneNot", "link" : "laika\/parse\/text\/TextParsers.html#oneNot(char:Char,chars:Char*):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "oneOf", "tail" : "(chars: NonEmptySet[Char]): PrefixedParser[String]", "member" : "laika.parse.text.TextParsers.oneOf", "link" : "laika\/parse\/text\/TextParsers.html#oneOf(chars:cats.data.NonEmptySet[Char]):laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "oneOf", "tail" : "(char: Char, chars: Char*): PrefixedParser[String]", "member" : "laika.parse.text.TextParsers.oneOf", "link" : "laika\/parse\/text\/TextParsers.html#oneOf(char:Char,chars:Char*):laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "anyWhile", "tail" : "(p: (Char) ⇒ Boolean): Characters[String]", "member" : "laika.parse.text.TextParsers.anyWhile", "link" : "laika\/parse\/text\/TextParsers.html#anyWhile(p:Char=>Boolean):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "anyNot", "tail" : "(chars: NonEmptySet[Char]): Characters[String]", "member" : "laika.parse.text.TextParsers.anyNot", "link" : "laika\/parse\/text\/TextParsers.html#anyNot(chars:cats.data.NonEmptySet[Char]):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "anyNot", "tail" : "(char: Char, chars: Char*): Characters[String]", "member" : "laika.parse.text.TextParsers.anyNot", "link" : "laika\/parse\/text\/TextParsers.html#anyNot(char:Char,chars:Char*):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "anyOf", "tail" : "(chars: NonEmptySet[Char]): Characters[String]", "member" : "laika.parse.text.TextParsers.anyOf", "link" : "laika\/parse\/text\/TextParsers.html#anyOf(chars:cats.data.NonEmptySet[Char]):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "anyOf", "tail" : "(char: Char, chars: Char*): Characters[String]", "member" : "laika.parse.text.TextParsers.anyOf", "link" : "laika\/parse\/text\/TextParsers.html#anyOf(char:Char,chars:Char*):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "anyChars", "tail" : ": Characters[String]", "member" : "laika.parse.text.TextParsers.anyChars", "link" : "laika\/parse\/text\/TextParsers.html#anyChars:laika.parse.text.Characters[String]", "kind" : "val"}, {"label" : "nextIs", "tail" : "(predicate: (Char) ⇒ Boolean): Parser[Unit]", "member" : "laika.parse.text.TextParsers.nextIs", "link" : "laika\/parse\/text\/TextParsers.html#nextIs(predicate:Char=>Boolean):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "nextIn", "tail" : "(chars: NonEmptySet[Char]): Parser[Unit]", "member" : "laika.parse.text.TextParsers.nextIn", "link" : "laika\/parse\/text\/TextParsers.html#nextIn(chars:cats.data.NonEmptySet[Char]):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "nextIn", "tail" : "(char: Char, chars: Char*): Parser[Unit]", "member" : "laika.parse.text.TextParsers.nextIn", "link" : "laika\/parse\/text\/TextParsers.html#nextIn(char:Char,chars:Char*):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "prevIs", "tail" : "(predicate: (Char) ⇒ Boolean): Parser[Unit]", "member" : "laika.parse.text.TextParsers.prevIs", "link" : "laika\/parse\/text\/TextParsers.html#prevIs(predicate:Char=>Boolean):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "prevIn", "tail" : "(chars: NonEmptySet[Char]): Parser[Unit]", "member" : "laika.parse.text.TextParsers.prevIn", "link" : "laika\/parse\/text\/TextParsers.html#prevIn(chars:cats.data.NonEmptySet[Char]):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "prevIn", "tail" : "(char: Char, chars: Char*): Parser[Unit]", "member" : "laika.parse.text.TextParsers.prevIn", "link" : "laika\/parse\/text\/TextParsers.html#prevIn(char:Char,chars:Char*):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "nextNot", "tail" : "(predicate: (Char) ⇒ Boolean): Parser[Unit]", "member" : "laika.parse.text.TextParsers.nextNot", "link" : "laika\/parse\/text\/TextParsers.html#nextNot(predicate:Char=>Boolean):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "nextNot", "tail" : "(chars: NonEmptySet[Char]): Parser[Unit]", "member" : "laika.parse.text.TextParsers.nextNot", "link" : "laika\/parse\/text\/TextParsers.html#nextNot(chars:cats.data.NonEmptySet[Char]):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "nextNot", "tail" : "(char: Char, chars: Char*): Parser[Unit]", "member" : "laika.parse.text.TextParsers.nextNot", "link" : "laika\/parse\/text\/TextParsers.html#nextNot(char:Char,chars:Char*):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "prevNot", "tail" : "(predicate: (Char) ⇒ Boolean): Parser[Unit]", "member" : "laika.parse.text.TextParsers.prevNot", "link" : "laika\/parse\/text\/TextParsers.html#prevNot(predicate:Char=>Boolean):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "prevNot", "tail" : "(chars: NonEmptySet[Char]): Parser[Unit]", "member" : "laika.parse.text.TextParsers.prevNot", "link" : "laika\/parse\/text\/TextParsers.html#prevNot(chars:cats.data.NonEmptySet[Char]):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "prevNot", "tail" : "(char: Char, chars: Char*): Parser[Unit]", "member" : "laika.parse.text.TextParsers.prevNot", "link" : "laika\/parse\/text\/TextParsers.html#prevNot(char:Char,chars:Char*):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "textLine", "tail" : ": Parser[String]", "member" : "laika.parse.text.TextParsers.textLine", "link" : "laika\/parse\/text\/TextParsers.html#textLine:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "restOfLine", "tail" : ": Parser[String]", "member" : "laika.parse.text.TextParsers.restOfLine", "link" : "laika\/parse\/text\/TextParsers.html#restOfLine:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "blankLines", "tail" : ": Parser[List[String]]", "member" : "laika.parse.text.TextParsers.blankLines", "link" : "laika\/parse\/text\/TextParsers.html#blankLines:laika.parse.Parser[List[String]]", "kind" : "val"}, {"label" : "blankLine", "tail" : ": Parser[String]", "member" : "laika.parse.text.TextParsers.blankLine", "link" : "laika\/parse\/text\/TextParsers.html#blankLine:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "atStart", "tail" : ": Parser[Unit]", "member" : "laika.parse.text.TextParsers.atStart", "link" : "laika\/parse\/text\/TextParsers.html#atStart:laika.parse.Parser[Unit]", "kind" : "val"}, {"label" : "eof", "tail" : ": Parser[String]", "member" : "laika.parse.text.TextParsers.eof", "link" : "laika\/parse\/text\/TextParsers.html#eof:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "wsEol", "tail" : ": Parser[Unit]", "member" : "laika.parse.text.TextParsers.wsEol", "link" : "laika\/parse\/text\/TextParsers.html#wsEol:laika.parse.Parser[Unit]", "kind" : "val"}, {"label" : "eol", "tail" : ": Parser[Unit]", "member" : "laika.parse.text.TextParsers.eol", "link" : "laika\/parse\/text\/TextParsers.html#eol:laika.parse.Parser[Unit]", "kind" : "val"}, {"label" : "ws", "tail" : ": Characters[String]", "member" : "laika.parse.text.TextParsers.ws", "link" : "laika\/parse\/text\/TextParsers.html#ws:laika.parse.text.Characters[String]", "kind" : "lazy val"}, {"label" : "literal", "tail" : "(expected: String): PrefixedParser[String]", "member" : "laika.parse.text.TextParsers.literal", "link" : "laika\/parse\/text\/TextParsers.html#literal(expected:String):laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "range", "tail" : "(fromChar: Char, toChar: Char): NonEmptySet[Char]", "member" : "laika.parse.text.TextParsers.range", "link" : "laika\/parse\/text\/TextParsers.html#range(fromChar:Char,toChar:Char):cats.data.NonEmptySet[Char]", "kind" : "def"}, {"label" : "lazily", "tail" : "(p: ⇒ Parser[T]): Parser[T]", "member" : "laika.parse.combinator.Parsers.lazily", "link" : "laika\/parse\/text\/TextParsers.html#lazily[T](p:=>laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "consumeAll", "tail" : "(p: Parser[T]): Parser[T]", "member" : "laika.parse.combinator.Parsers.consumeAll", "link" : "laika\/parse\/text\/TextParsers.html#consumeAll[T](p:laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "failure", "tail" : "(msg: String): Parser[Nothing]", "member" : "laika.parse.combinator.Parsers.failure", "link" : "laika\/parse\/text\/TextParsers.html#failure(msg:String):laika.parse.Parser[Nothing]", "kind" : "def"}, {"label" : "success", "tail" : "(v: T): Parser[T]", "member" : "laika.parse.combinator.Parsers.success", "link" : "laika\/parse\/text\/TextParsers.html#success[T](v:T):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "lookBehind", "tail" : "(offset: Int, parser: ⇒ Parser[T]): Parser[T]", "member" : "laika.parse.combinator.Parsers.lookBehind", "link" : "laika\/parse\/text\/TextParsers.html#lookBehind[T](offset:Int,parser:=>laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "lookAhead", "tail" : "(offset: Int, value: String): Parser[String]", "member" : "laika.parse.combinator.Parsers.lookAhead", "link" : "laika\/parse\/text\/TextParsers.html#lookAhead(offset:Int,value:String):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "lookAhead", "tail" : "(offset: Int, p: Parser[T]): Parser[T]", "member" : "laika.parse.combinator.Parsers.lookAhead", "link" : "laika\/parse\/text\/TextParsers.html#lookAhead[T](offset:Int,p:laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "lookAhead", "tail" : "(value: String): Parser[String]", "member" : "laika.parse.combinator.Parsers.lookAhead", "link" : "laika\/parse\/text\/TextParsers.html#lookAhead(value:String):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "lookAhead", "tail" : "(p: Parser[T]): Parser[T]", "member" : "laika.parse.combinator.Parsers.lookAhead", "link" : "laika\/parse\/text\/TextParsers.html#lookAhead[T](p:laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "not", "tail" : "(value: String): Parser[Unit]", "member" : "laika.parse.combinator.Parsers.not", "link" : "laika\/parse\/text\/TextParsers.html#not(value:String):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "not", "tail" : "(p: Parser[T]): Parser[Unit]", "member" : "laika.parse.combinator.Parsers.not", "link" : "laika\/parse\/text\/TextParsers.html#not[T](p:laika.parse.Parser[T]):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "opt", "tail" : "(value: String): Parser[Option[String]]", "member" : "laika.parse.combinator.Parsers.opt", "link" : "laika\/parse\/text\/TextParsers.html#opt(value:String):laika.parse.Parser[Option[String]]", "kind" : "def"}, {"label" : "opt", "tail" : "(p: Parser[T]): Parser[Option[T]]", "member" : "laika.parse.combinator.Parsers.opt", "link" : "laika\/parse\/text\/TextParsers.html#opt[T](p:laika.parse.Parser[T]):laika.parse.Parser[Option[T]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/text\/TextParsers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/text\/TextParsers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/text\/TextParsers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/text\/TextParsers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/text\/TextParsers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/text\/TextParsers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/text\/TextParsers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/TextParsers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/TextParsers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/TextParsers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/text\/TextParsers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/text\/TextParsers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/text\/TextParsers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/text\/TextParsers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/text\/TextParsers.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/text\/TextParsers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/text\/TextParsers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/text\/TextParsers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/text\/TextParsers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Base text parsers that provide optimized low-level parsers for typical requirements of text markup parsers.", "object" : "laika\/parse\/text\/TextParsers$.html", "members_object" : [{"label" : "TryOps", "tail" : "", "member" : "laika.parse.combinator.Parsers.TryOps", "link" : "laika\/parse\/combinator\/Parsers.html#TryOps[A]extendsAnyRef", "kind" : "implicit class"}, {"label" : "ParserException", "tail" : "", "member" : "laika.parse.combinator.Parsers.ParserException", "link" : "laika\/parse\/combinator\/Parsers.html#ParserExceptionextendsRuntimeExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "delimiter", "tail" : "(parser: PrefixedParser[String]): DelimiterParser", "member" : "laika.parse.text.TextParsers.delimiter", "link" : "laika\/parse\/text\/TextParsers$.html#delimiter(parser:laika.parse.text.PrefixedParser[String]):laika.parse.text.DelimiterParser", "kind" : "def"}, {"label" : "delimiter", "tail" : "(delim: String): DelimiterParser", "member" : "laika.parse.text.TextParsers.delimiter", "link" : "laika\/parse\/text\/TextParsers$.html#delimiter(delim:String):laika.parse.text.DelimiterParser", "kind" : "def"}, {"label" : "delimiter", "tail" : "(char: Char, chars: Char*): DelimiterParser", "member" : "laika.parse.text.TextParsers.delimiter", "link" : "laika\/parse\/text\/TextParsers$.html#delimiter(char:Char,chars:Char*):laika.parse.text.DelimiterParser", "kind" : "def"}, {"label" : "delimitedBy", "tail" : "(delimiter: PrefixedParser[String]): DelimitedText", "member" : "laika.parse.text.TextParsers.delimitedBy", "link" : "laika\/parse\/text\/TextParsers$.html#delimitedBy(delimiter:laika.parse.text.PrefixedParser[String]):laika.parse.text.DelimitedText", "kind" : "def"}, {"label" : "delimitedBy", "tail" : "(str: String): DelimitedText", "member" : "laika.parse.text.TextParsers.delimitedBy", "link" : "laika\/parse\/text\/TextParsers$.html#delimitedBy(str:String):laika.parse.text.DelimitedText", "kind" : "def"}, {"label" : "delimitedBy", "tail" : "(chars: NonEmptySet[Char]): DelimitedText", "member" : "laika.parse.text.TextParsers.delimitedBy", "link" : "laika\/parse\/text\/TextParsers$.html#delimitedBy(chars:cats.data.NonEmptySet[Char]):laika.parse.text.DelimitedText", "kind" : "def"}, {"label" : "delimitedBy", "tail" : "(char: Char, chars: Char*): DelimitedText", "member" : "laika.parse.text.TextParsers.delimitedBy", "link" : "laika\/parse\/text\/TextParsers$.html#delimitedBy(char:Char,chars:Char*):laika.parse.text.DelimitedText", "kind" : "def"}, {"label" : "someWhile", "tail" : "(p: (Char) ⇒ Boolean): Characters[String]", "member" : "laika.parse.text.TextParsers.someWhile", "link" : "laika\/parse\/text\/TextParsers$.html#someWhile(p:Char=>Boolean):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "someNot", "tail" : "(chars: NonEmptySet[Char]): Characters[String]", "member" : "laika.parse.text.TextParsers.someNot", "link" : "laika\/parse\/text\/TextParsers$.html#someNot(chars:cats.data.NonEmptySet[Char]):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "someNot", "tail" : "(char: Char, chars: Char*): Characters[String]", "member" : "laika.parse.text.TextParsers.someNot", "link" : "laika\/parse\/text\/TextParsers$.html#someNot(char:Char,chars:Char*):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "someOf", "tail" : "(chars: NonEmptySet[Char]): PrefixCharacters[String]", "member" : "laika.parse.text.TextParsers.someOf", "link" : "laika\/parse\/text\/TextParsers$.html#someOf(chars:cats.data.NonEmptySet[Char]):laika.parse.text.PrefixCharacters[String]", "kind" : "def"}, {"label" : "someOf", "tail" : "(char: Char, chars: Char*): PrefixCharacters[String]", "member" : "laika.parse.text.TextParsers.someOf", "link" : "laika\/parse\/text\/TextParsers$.html#someOf(char:Char,chars:Char*):laika.parse.text.PrefixCharacters[String]", "kind" : "def"}, {"label" : "oneChar", "tail" : ": Parser[String]", "member" : "laika.parse.text.TextParsers.oneChar", "link" : "laika\/parse\/text\/TextParsers$.html#oneChar:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "oneIf", "tail" : "(p: (Char) ⇒ Boolean): Parser[String]", "member" : "laika.parse.text.TextParsers.oneIf", "link" : "laika\/parse\/text\/TextParsers$.html#oneIf(p:Char=>Boolean):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "oneNot", "tail" : "(chars: NonEmptySet[Char]): Parser[String]", "member" : "laika.parse.text.TextParsers.oneNot", "link" : "laika\/parse\/text\/TextParsers$.html#oneNot(chars:cats.data.NonEmptySet[Char]):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "oneNot", "tail" : "(char: Char, chars: Char*): Parser[String]", "member" : "laika.parse.text.TextParsers.oneNot", "link" : "laika\/parse\/text\/TextParsers$.html#oneNot(char:Char,chars:Char*):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "oneOf", "tail" : "(chars: NonEmptySet[Char]): PrefixedParser[String]", "member" : "laika.parse.text.TextParsers.oneOf", "link" : "laika\/parse\/text\/TextParsers$.html#oneOf(chars:cats.data.NonEmptySet[Char]):laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "oneOf", "tail" : "(char: Char, chars: Char*): PrefixedParser[String]", "member" : "laika.parse.text.TextParsers.oneOf", "link" : "laika\/parse\/text\/TextParsers$.html#oneOf(char:Char,chars:Char*):laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "anyWhile", "tail" : "(p: (Char) ⇒ Boolean): Characters[String]", "member" : "laika.parse.text.TextParsers.anyWhile", "link" : "laika\/parse\/text\/TextParsers$.html#anyWhile(p:Char=>Boolean):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "anyNot", "tail" : "(chars: NonEmptySet[Char]): Characters[String]", "member" : "laika.parse.text.TextParsers.anyNot", "link" : "laika\/parse\/text\/TextParsers$.html#anyNot(chars:cats.data.NonEmptySet[Char]):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "anyNot", "tail" : "(char: Char, chars: Char*): Characters[String]", "member" : "laika.parse.text.TextParsers.anyNot", "link" : "laika\/parse\/text\/TextParsers$.html#anyNot(char:Char,chars:Char*):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "anyOf", "tail" : "(chars: NonEmptySet[Char]): Characters[String]", "member" : "laika.parse.text.TextParsers.anyOf", "link" : "laika\/parse\/text\/TextParsers$.html#anyOf(chars:cats.data.NonEmptySet[Char]):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "anyOf", "tail" : "(char: Char, chars: Char*): Characters[String]", "member" : "laika.parse.text.TextParsers.anyOf", "link" : "laika\/parse\/text\/TextParsers$.html#anyOf(char:Char,chars:Char*):laika.parse.text.Characters[String]", "kind" : "def"}, {"label" : "anyChars", "tail" : ": Characters[String]", "member" : "laika.parse.text.TextParsers.anyChars", "link" : "laika\/parse\/text\/TextParsers$.html#anyChars:laika.parse.text.Characters[String]", "kind" : "val"}, {"label" : "nextIs", "tail" : "(predicate: (Char) ⇒ Boolean): Parser[Unit]", "member" : "laika.parse.text.TextParsers.nextIs", "link" : "laika\/parse\/text\/TextParsers$.html#nextIs(predicate:Char=>Boolean):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "nextIn", "tail" : "(chars: NonEmptySet[Char]): Parser[Unit]", "member" : "laika.parse.text.TextParsers.nextIn", "link" : "laika\/parse\/text\/TextParsers$.html#nextIn(chars:cats.data.NonEmptySet[Char]):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "nextIn", "tail" : "(char: Char, chars: Char*): Parser[Unit]", "member" : "laika.parse.text.TextParsers.nextIn", "link" : "laika\/parse\/text\/TextParsers$.html#nextIn(char:Char,chars:Char*):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "prevIs", "tail" : "(predicate: (Char) ⇒ Boolean): Parser[Unit]", "member" : "laika.parse.text.TextParsers.prevIs", "link" : "laika\/parse\/text\/TextParsers$.html#prevIs(predicate:Char=>Boolean):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "prevIn", "tail" : "(chars: NonEmptySet[Char]): Parser[Unit]", "member" : "laika.parse.text.TextParsers.prevIn", "link" : "laika\/parse\/text\/TextParsers$.html#prevIn(chars:cats.data.NonEmptySet[Char]):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "prevIn", "tail" : "(char: Char, chars: Char*): Parser[Unit]", "member" : "laika.parse.text.TextParsers.prevIn", "link" : "laika\/parse\/text\/TextParsers$.html#prevIn(char:Char,chars:Char*):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "nextNot", "tail" : "(predicate: (Char) ⇒ Boolean): Parser[Unit]", "member" : "laika.parse.text.TextParsers.nextNot", "link" : "laika\/parse\/text\/TextParsers$.html#nextNot(predicate:Char=>Boolean):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "nextNot", "tail" : "(chars: NonEmptySet[Char]): Parser[Unit]", "member" : "laika.parse.text.TextParsers.nextNot", "link" : "laika\/parse\/text\/TextParsers$.html#nextNot(chars:cats.data.NonEmptySet[Char]):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "nextNot", "tail" : "(char: Char, chars: Char*): Parser[Unit]", "member" : "laika.parse.text.TextParsers.nextNot", "link" : "laika\/parse\/text\/TextParsers$.html#nextNot(char:Char,chars:Char*):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "prevNot", "tail" : "(predicate: (Char) ⇒ Boolean): Parser[Unit]", "member" : "laika.parse.text.TextParsers.prevNot", "link" : "laika\/parse\/text\/TextParsers$.html#prevNot(predicate:Char=>Boolean):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "prevNot", "tail" : "(chars: NonEmptySet[Char]): Parser[Unit]", "member" : "laika.parse.text.TextParsers.prevNot", "link" : "laika\/parse\/text\/TextParsers$.html#prevNot(chars:cats.data.NonEmptySet[Char]):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "prevNot", "tail" : "(char: Char, chars: Char*): Parser[Unit]", "member" : "laika.parse.text.TextParsers.prevNot", "link" : "laika\/parse\/text\/TextParsers$.html#prevNot(char:Char,chars:Char*):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "textLine", "tail" : ": Parser[String]", "member" : "laika.parse.text.TextParsers.textLine", "link" : "laika\/parse\/text\/TextParsers$.html#textLine:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "restOfLine", "tail" : ": Parser[String]", "member" : "laika.parse.text.TextParsers.restOfLine", "link" : "laika\/parse\/text\/TextParsers$.html#restOfLine:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "blankLines", "tail" : ": Parser[List[String]]", "member" : "laika.parse.text.TextParsers.blankLines", "link" : "laika\/parse\/text\/TextParsers$.html#blankLines:laika.parse.Parser[List[String]]", "kind" : "val"}, {"label" : "blankLine", "tail" : ": Parser[String]", "member" : "laika.parse.text.TextParsers.blankLine", "link" : "laika\/parse\/text\/TextParsers$.html#blankLine:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "atStart", "tail" : ": Parser[Unit]", "member" : "laika.parse.text.TextParsers.atStart", "link" : "laika\/parse\/text\/TextParsers$.html#atStart:laika.parse.Parser[Unit]", "kind" : "val"}, {"label" : "eof", "tail" : ": Parser[String]", "member" : "laika.parse.text.TextParsers.eof", "link" : "laika\/parse\/text\/TextParsers$.html#eof:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "wsEol", "tail" : ": Parser[Unit]", "member" : "laika.parse.text.TextParsers.wsEol", "link" : "laika\/parse\/text\/TextParsers$.html#wsEol:laika.parse.Parser[Unit]", "kind" : "val"}, {"label" : "eol", "tail" : ": Parser[Unit]", "member" : "laika.parse.text.TextParsers.eol", "link" : "laika\/parse\/text\/TextParsers$.html#eol:laika.parse.Parser[Unit]", "kind" : "val"}, {"label" : "ws", "tail" : ": Characters[String]", "member" : "laika.parse.text.TextParsers.ws", "link" : "laika\/parse\/text\/TextParsers$.html#ws:laika.parse.text.Characters[String]", "kind" : "lazy val"}, {"label" : "literal", "tail" : "(expected: String): PrefixedParser[String]", "member" : "laika.parse.text.TextParsers.literal", "link" : "laika\/parse\/text\/TextParsers$.html#literal(expected:String):laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "range", "tail" : "(fromChar: Char, toChar: Char): NonEmptySet[Char]", "member" : "laika.parse.text.TextParsers.range", "link" : "laika\/parse\/text\/TextParsers$.html#range(fromChar:Char,toChar:Char):cats.data.NonEmptySet[Char]", "kind" : "def"}, {"label" : "lazily", "tail" : "(p: ⇒ Parser[T]): Parser[T]", "member" : "laika.parse.combinator.Parsers.lazily", "link" : "laika\/parse\/text\/TextParsers$.html#lazily[T](p:=>laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "consumeAll", "tail" : "(p: Parser[T]): Parser[T]", "member" : "laika.parse.combinator.Parsers.consumeAll", "link" : "laika\/parse\/text\/TextParsers$.html#consumeAll[T](p:laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "failure", "tail" : "(msg: String): Parser[Nothing]", "member" : "laika.parse.combinator.Parsers.failure", "link" : "laika\/parse\/text\/TextParsers$.html#failure(msg:String):laika.parse.Parser[Nothing]", "kind" : "def"}, {"label" : "success", "tail" : "(v: T): Parser[T]", "member" : "laika.parse.combinator.Parsers.success", "link" : "laika\/parse\/text\/TextParsers$.html#success[T](v:T):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "lookBehind", "tail" : "(offset: Int, parser: ⇒ Parser[T]): Parser[T]", "member" : "laika.parse.combinator.Parsers.lookBehind", "link" : "laika\/parse\/text\/TextParsers$.html#lookBehind[T](offset:Int,parser:=>laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "lookAhead", "tail" : "(offset: Int, value: String): Parser[String]", "member" : "laika.parse.combinator.Parsers.lookAhead", "link" : "laika\/parse\/text\/TextParsers$.html#lookAhead(offset:Int,value:String):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "lookAhead", "tail" : "(offset: Int, p: Parser[T]): Parser[T]", "member" : "laika.parse.combinator.Parsers.lookAhead", "link" : "laika\/parse\/text\/TextParsers$.html#lookAhead[T](offset:Int,p:laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "lookAhead", "tail" : "(value: String): Parser[String]", "member" : "laika.parse.combinator.Parsers.lookAhead", "link" : "laika\/parse\/text\/TextParsers$.html#lookAhead(value:String):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "lookAhead", "tail" : "(p: Parser[T]): Parser[T]", "member" : "laika.parse.combinator.Parsers.lookAhead", "link" : "laika\/parse\/text\/TextParsers$.html#lookAhead[T](p:laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "not", "tail" : "(value: String): Parser[Unit]", "member" : "laika.parse.combinator.Parsers.not", "link" : "laika\/parse\/text\/TextParsers$.html#not(value:String):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "not", "tail" : "(p: Parser[T]): Parser[Unit]", "member" : "laika.parse.combinator.Parsers.not", "link" : "laika\/parse\/text\/TextParsers$.html#not[T](p:laika.parse.Parser[T]):laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "opt", "tail" : "(value: String): Parser[Option[String]]", "member" : "laika.parse.combinator.Parsers.opt", "link" : "laika\/parse\/text\/TextParsers$.html#opt(value:String):laika.parse.Parser[Option[String]]", "kind" : "def"}, {"label" : "opt", "tail" : "(p: Parser[T]): Parser[Option[T]]", "member" : "laika.parse.combinator.Parsers.opt", "link" : "laika\/parse\/text\/TextParsers$.html#opt[T](p:laika.parse.Parser[T]):laika.parse.Parser[Option[T]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/text\/TextParsers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/text\/TextParsers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/text\/TextParsers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/text\/TextParsers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/text\/TextParsers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/text\/TextParsers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/text\/TextParsers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/TextParsers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/TextParsers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/TextParsers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/text\/TextParsers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/text\/TextParsers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/text\/TextParsers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/text\/TextParsers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/text\/TextParsers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/text\/TextParsers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/text\/TextParsers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/text\/TextParsers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/text\/TextParsers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/parse\/text\/TextParsers.html", "kind" : "trait"}, {"name" : "laika.parse.text.WhitespacePreprocessor", "shortDescription" : "Processes whitespace, removing or replacing most whitespace characters except for newline and space.", "object" : "laika\/parse\/text\/WhitespacePreprocessor$.html", "members_class" : [{"label" : "apply", "tail" : "(input: String): String", "member" : "laika.parse.text.WhitespacePreprocessor.apply", "link" : "laika\/parse\/text\/WhitespacePreprocessor.html#apply(input:String):String", "kind" : "def"}, {"label" : "tabStops", "tail" : ": Int", "member" : "laika.parse.text.WhitespacePreprocessor.tabStops", "link" : "laika\/parse\/text\/WhitespacePreprocessor.html#tabStops:Int", "kind" : "val"}, {"member" : "laika.parse.text.WhitespacePreprocessor#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "laika\/parse\/text\/WhitespacePreprocessor.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (String) ⇒ A): (String) ⇒ A", "member" : "scala.Function1.andThen", "link" : "laika\/parse\/text\/WhitespacePreprocessor.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ String): (A) ⇒ String", "member" : "scala.Function1.compose", "link" : "laika\/parse\/text\/WhitespacePreprocessor.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/text\/WhitespacePreprocessor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/text\/WhitespacePreprocessor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/text\/WhitespacePreprocessor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/text\/WhitespacePreprocessor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/text\/WhitespacePreprocessor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/text\/WhitespacePreprocessor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/text\/WhitespacePreprocessor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/WhitespacePreprocessor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/WhitespacePreprocessor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/WhitespacePreprocessor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/text\/WhitespacePreprocessor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/text\/WhitespacePreprocessor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/text\/WhitespacePreprocessor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/text\/WhitespacePreprocessor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/text\/WhitespacePreprocessor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/text\/WhitespacePreprocessor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/text\/WhitespacePreprocessor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/text\/WhitespacePreprocessor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "forInput", "tail" : ": (DocumentInput) ⇒ DocumentInput", "member" : "laika.parse.text.WhitespacePreprocessor.forInput", "link" : "laika\/parse\/text\/WhitespacePreprocessor$.html#forInput:laika.parse.markup.DocumentParser.DocumentInput=>laika.parse.markup.DocumentParser.DocumentInput", "kind" : "val"}, {"label" : "forString", "tail" : ": (String) ⇒ String", "member" : "laika.parse.text.WhitespacePreprocessor.forString", "link" : "laika\/parse\/text\/WhitespacePreprocessor$.html#forString:String=>String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/text\/WhitespacePreprocessor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/text\/WhitespacePreprocessor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/text\/WhitespacePreprocessor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/text\/WhitespacePreprocessor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/text\/WhitespacePreprocessor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/text\/WhitespacePreprocessor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/text\/WhitespacePreprocessor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/WhitespacePreprocessor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/WhitespacePreprocessor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/text\/WhitespacePreprocessor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/text\/WhitespacePreprocessor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/text\/WhitespacePreprocessor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/text\/WhitespacePreprocessor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/text\/WhitespacePreprocessor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/text\/WhitespacePreprocessor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/text\/WhitespacePreprocessor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/text\/WhitespacePreprocessor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/text\/WhitespacePreprocessor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/text\/WhitespacePreprocessor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/parse\/text\/WhitespacePreprocessor.html", "kind" : "class"}], "laika.io.api" : [{"name" : "laika.io.api.BinaryTreeRenderer", "shortDescription" : "Renderer that merges a tree of input documents to a single binary output document.", "object" : "laika\/io\/api\/BinaryTreeRenderer$.html", "members_class" : [{"label" : "from", "tail" : "(input: DocumentTreeRoot): OutputOps[F]", "member" : "laika.io.api.BinaryTreeRenderer.from", "link" : "laika\/io\/api\/BinaryTreeRenderer.html#from(input:laika.ast.DocumentTreeRoot):laika.io.api.BinaryTreeRenderer.OutputOps[F]", "kind" : "def"}, {"member" : "laika.io.api.BinaryTreeRenderer#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/api\/BinaryTreeRenderer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/api\/BinaryTreeRenderer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/api\/BinaryTreeRenderer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/api\/BinaryTreeRenderer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/api\/BinaryTreeRenderer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/api\/BinaryTreeRenderer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/api\/BinaryTreeRenderer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/BinaryTreeRenderer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/BinaryTreeRenderer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/BinaryTreeRenderer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/api\/BinaryTreeRenderer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/api\/BinaryTreeRenderer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/api\/BinaryTreeRenderer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/api\/BinaryTreeRenderer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/api\/BinaryTreeRenderer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/api\/BinaryTreeRenderer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/api\/BinaryTreeRenderer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/api\/BinaryTreeRenderer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/api\/BinaryTreeRenderer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Op", "tail" : "", "member" : "laika.io.api.BinaryTreeRenderer.Op", "link" : "laika\/io\/api\/BinaryTreeRenderer$.html#Op[F[_]]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "OutputOps", "tail" : "", "member" : "laika.io.api.BinaryTreeRenderer.OutputOps", "link" : "laika\/io\/api\/BinaryTreeRenderer$.html#OutputOps[F[_]]extendsBinaryOutputOps[F]withProductwithSerializable", "kind" : "case class"}, {"label" : "Builder", "tail" : "", "member" : "laika.io.api.BinaryTreeRenderer.Builder", "link" : "laika\/io\/api\/BinaryTreeRenderer$.html#Builder[F[_]]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "BinaryRenderFormat", "tail" : "", "member" : "laika.io.api.BinaryTreeRenderer.BinaryRenderFormat", "link" : "laika\/io\/api\/BinaryTreeRenderer$.html#BinaryRenderFormat=laika.factory.TwoPhaseRenderFormat[_,laika.factory.BinaryPostProcessorBuilder]", "kind" : "type"}, {"label" : "BinaryRenderer", "tail" : "", "member" : "laika.io.api.BinaryTreeRenderer.BinaryRenderer", "link" : "laika\/io\/api\/BinaryTreeRenderer$.html#BinaryRendererextendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/api\/BinaryTreeRenderer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/api\/BinaryTreeRenderer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/api\/BinaryTreeRenderer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/api\/BinaryTreeRenderer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/api\/BinaryTreeRenderer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/api\/BinaryTreeRenderer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/api\/BinaryTreeRenderer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/BinaryTreeRenderer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/BinaryTreeRenderer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/BinaryTreeRenderer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/api\/BinaryTreeRenderer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/api\/BinaryTreeRenderer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/api\/BinaryTreeRenderer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/api\/BinaryTreeRenderer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/api\/BinaryTreeRenderer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/api\/BinaryTreeRenderer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/api\/BinaryTreeRenderer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/api\/BinaryTreeRenderer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/api\/BinaryTreeRenderer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/io\/api\/BinaryTreeRenderer.html", "kind" : "class"}, {"name" : "laika.io.api.BinaryTreeTransformer", "shortDescription" : "Transformer that merges a tree of input documents to a single binary output document.", "object" : "laika\/io\/api\/BinaryTreeTransformer$.html", "members_class" : [{"label" : "fromInput", "tail" : "(input: InputTreeBuilder[F]): OutputOps[F]", "member" : "laika.io.api.BinaryTreeTransformer.fromInput", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#fromInput(input:laika.io.model.InputTreeBuilder[F]):laika.io.api.BinaryTreeTransformer.OutputOps[F]", "kind" : "def"}, {"label" : "config", "tail" : ": OperationConfig", "member" : "laika.io.api.BinaryTreeTransformer.config", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#config:laika.api.builder.OperationConfig", "kind" : "lazy val"}, {"label" : "docType", "tail" : ": TextDocumentType", "member" : "laika.io.api.BinaryTreeTransformer.docType", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#docType:laika.ast.TextDocumentType", "kind" : "val"}, {"label" : "F", "tail" : ": Sync[F]", "member" : "laika.io.api.BinaryTreeTransformer.F", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#F:cats.effect.Sync[F]", "kind" : "val"}, {"label" : "Result", "tail" : "", "member" : "laika.io.api.BinaryTreeTransformer.Result", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#Result=laika.io.api.BinaryTreeTransformer.OutputOps[F]", "kind" : "type"}, {"member" : "laika.io.api.BinaryTreeTransformer#<init>", "error" : "unsupported entity"}, {"label" : "fromWorkingDirectory", "tail" : "(exclude: FileFilter)(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromWorkingDirectory", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#fromWorkingDirectory(exclude:InputOps.this.FileFilter)(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "fromDirectories", "tail" : "(roots: Seq[File], exclude: FileFilter)(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromDirectories", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#fromDirectories(roots:Seq[java.io.File],exclude:InputOps.this.FileFilter)(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "fromDirectories", "tail" : "(roots: Seq[File])(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromDirectories", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#fromDirectories(roots:Seq[java.io.File])(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "fromDirectory", "tail" : "(dir: File, exclude: FileFilter)(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromDirectory", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#fromDirectory(dir:java.io.File,exclude:InputOps.this.FileFilter)(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "fromDirectory", "tail" : "(dir: File)(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromDirectory", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#fromDirectory(dir:java.io.File)(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "fromDirectory", "tail" : "(name: String, exclude: FileFilter)(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromDirectory", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#fromDirectory(name:String,exclude:InputOps.this.FileFilter)(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "fromDirectory", "tail" : "(name: String)(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromDirectory", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#fromDirectory(name:String)(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "FileFilter", "tail" : "", "member" : "laika.io.ops.InputOps.FileFilter", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#FileFilter=java.io.File=>Boolean", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/api\/BinaryTreeTransformer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/api\/BinaryTreeTransformer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Op", "tail" : "", "member" : "laika.io.api.BinaryTreeTransformer.Op", "link" : "laika\/io\/api\/BinaryTreeTransformer$.html#Op[F[_]]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "OutputOps", "tail" : "", "member" : "laika.io.api.BinaryTreeTransformer.OutputOps", "link" : "laika\/io\/api\/BinaryTreeTransformer$.html#OutputOps[F[_]]extendsBinaryOutputOps[F]withProductwithSerializable", "kind" : "case class"}, {"label" : "Builder", "tail" : "", "member" : "laika.io.api.BinaryTreeTransformer.Builder", "link" : "laika\/io\/api\/BinaryTreeTransformer$.html#Builder[F[_]]extendsTreeMapperOps[F]withProductwithSerializable", "kind" : "case class"}, {"label" : "TreeMapper", "tail" : "", "member" : "laika.io.api.BinaryTreeTransformer.TreeMapper", "link" : "laika\/io\/api\/BinaryTreeTransformer$.html#TreeMapper[F[_]]=cats.data.Kleisli[F,laika.io.model.ParsedTree[F],laika.io.model.ParsedTree[F]]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/api\/BinaryTreeTransformer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/api\/BinaryTreeTransformer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/api\/BinaryTreeTransformer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/api\/BinaryTreeTransformer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/api\/BinaryTreeTransformer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/api\/BinaryTreeTransformer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/api\/BinaryTreeTransformer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/BinaryTreeTransformer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/BinaryTreeTransformer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/BinaryTreeTransformer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/api\/BinaryTreeTransformer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/api\/BinaryTreeTransformer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/api\/BinaryTreeTransformer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/api\/BinaryTreeTransformer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/api\/BinaryTreeTransformer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/api\/BinaryTreeTransformer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/api\/BinaryTreeTransformer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/api\/BinaryTreeTransformer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/api\/BinaryTreeTransformer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/io\/api\/BinaryTreeTransformer.html", "kind" : "class"}, {"name" : "laika.io.api.TreeParser", "shortDescription" : "Parser for a tree of input documents.", "object" : "laika\/io\/api\/TreeParser$.html", "members_class" : [{"label" : "fromInput", "tail" : "(input: InputTreeBuilder[F]): Op[F]", "member" : "laika.io.api.TreeParser.fromInput", "link" : "laika\/io\/api\/TreeParser.html#fromInput(input:laika.io.model.InputTreeBuilder[F]):laika.io.api.TreeParser.Op[F]", "kind" : "def"}, {"label" : "config", "tail" : ": OperationConfig", "member" : "laika.io.api.TreeParser.config", "link" : "laika\/io\/api\/TreeParser.html#config:laika.api.builder.OperationConfig", "kind" : "lazy val"}, {"label" : "docType", "tail" : ": TextDocumentType", "member" : "laika.io.api.TreeParser.docType", "link" : "laika\/io\/api\/TreeParser.html#docType:laika.ast.TextDocumentType", "kind" : "val"}, {"label" : "F", "tail" : ": Sync[F]", "member" : "laika.io.api.TreeParser.F", "link" : "laika\/io\/api\/TreeParser.html#F:cats.effect.Sync[F]", "kind" : "val"}, {"label" : "Result", "tail" : "", "member" : "laika.io.api.TreeParser.Result", "link" : "laika\/io\/api\/TreeParser.html#Result=laika.io.api.TreeParser.Op[F]", "kind" : "type"}, {"member" : "laika.io.api.TreeParser#<init>", "error" : "unsupported entity"}, {"label" : "fromWorkingDirectory", "tail" : "(exclude: FileFilter)(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromWorkingDirectory", "link" : "laika\/io\/api\/TreeParser.html#fromWorkingDirectory(exclude:InputOps.this.FileFilter)(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "fromDirectories", "tail" : "(roots: Seq[File], exclude: FileFilter)(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromDirectories", "link" : "laika\/io\/api\/TreeParser.html#fromDirectories(roots:Seq[java.io.File],exclude:InputOps.this.FileFilter)(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "fromDirectories", "tail" : "(roots: Seq[File])(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromDirectories", "link" : "laika\/io\/api\/TreeParser.html#fromDirectories(roots:Seq[java.io.File])(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "fromDirectory", "tail" : "(dir: File, exclude: FileFilter)(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromDirectory", "link" : "laika\/io\/api\/TreeParser.html#fromDirectory(dir:java.io.File,exclude:InputOps.this.FileFilter)(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "fromDirectory", "tail" : "(dir: File)(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromDirectory", "link" : "laika\/io\/api\/TreeParser.html#fromDirectory(dir:java.io.File)(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "fromDirectory", "tail" : "(name: String, exclude: FileFilter)(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromDirectory", "link" : "laika\/io\/api\/TreeParser.html#fromDirectory(name:String,exclude:InputOps.this.FileFilter)(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "fromDirectory", "tail" : "(name: String)(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromDirectory", "link" : "laika\/io\/api\/TreeParser.html#fromDirectory(name:String)(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "FileFilter", "tail" : "", "member" : "laika.io.ops.InputOps.FileFilter", "link" : "laika\/io\/api\/TreeParser.html#FileFilter=java.io.File=>Boolean", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/api\/TreeParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/api\/TreeParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/api\/TreeParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/api\/TreeParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/api\/TreeParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/api\/TreeParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/api\/TreeParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/TreeParser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/TreeParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/TreeParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/api\/TreeParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/api\/TreeParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/api\/TreeParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/api\/TreeParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/api\/TreeParser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/api\/TreeParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/api\/TreeParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/api\/TreeParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/api\/TreeParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Op", "tail" : "", "member" : "laika.io.api.TreeParser.Op", "link" : "laika\/io\/api\/TreeParser$.html#Op[F[_]]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "Builder", "tail" : "", "member" : "laika.io.api.TreeParser.Builder", "link" : "laika\/io\/api\/TreeParser$.html#Builder[F[_]]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/api\/TreeParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/api\/TreeParser$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/api\/TreeParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/api\/TreeParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/api\/TreeParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/api\/TreeParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/api\/TreeParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/TreeParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/TreeParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/TreeParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/api\/TreeParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/api\/TreeParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/api\/TreeParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/api\/TreeParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/api\/TreeParser$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/api\/TreeParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/api\/TreeParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/api\/TreeParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/api\/TreeParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/io\/api\/TreeParser.html", "kind" : "class"}, {"name" : "laika.io.api.TreeRenderer", "shortDescription" : "Renderer for a tree of output documents.", "object" : "laika\/io\/api\/TreeRenderer$.html", "members_class" : [{"label" : "from", "tail" : "(input: DocumentTreeRoot): OutputOps[F]", "member" : "laika.io.api.TreeRenderer.from", "link" : "laika\/io\/api\/TreeRenderer.html#from(input:laika.ast.DocumentTreeRoot):laika.io.api.TreeRenderer.OutputOps[F]", "kind" : "def"}, {"member" : "laika.io.api.TreeRenderer#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/api\/TreeRenderer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/api\/TreeRenderer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/api\/TreeRenderer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/api\/TreeRenderer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/api\/TreeRenderer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/api\/TreeRenderer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/api\/TreeRenderer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/TreeRenderer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/TreeRenderer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/TreeRenderer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/api\/TreeRenderer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/api\/TreeRenderer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/api\/TreeRenderer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/api\/TreeRenderer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/api\/TreeRenderer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/api\/TreeRenderer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/api\/TreeRenderer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/api\/TreeRenderer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/api\/TreeRenderer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Op", "tail" : "", "member" : "laika.io.api.TreeRenderer.Op", "link" : "laika\/io\/api\/TreeRenderer$.html#Op[F[_]]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "OutputOps", "tail" : "", "member" : "laika.io.api.TreeRenderer.OutputOps", "link" : "laika\/io\/api\/TreeRenderer$.html#OutputOps[F[_]]extendsTextOutputOps[F]withProductwithSerializable", "kind" : "case class"}, {"label" : "Builder", "tail" : "", "member" : "laika.io.api.TreeRenderer.Builder", "link" : "laika\/io\/api\/TreeRenderer$.html#Builder[F[_]]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/api\/TreeRenderer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/api\/TreeRenderer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/api\/TreeRenderer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/api\/TreeRenderer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/api\/TreeRenderer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/api\/TreeRenderer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/api\/TreeRenderer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/TreeRenderer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/TreeRenderer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/TreeRenderer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/api\/TreeRenderer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/api\/TreeRenderer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/api\/TreeRenderer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/api\/TreeRenderer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/api\/TreeRenderer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/api\/TreeRenderer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/api\/TreeRenderer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/api\/TreeRenderer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/api\/TreeRenderer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/io\/api\/TreeRenderer.html", "kind" : "class"}, {"name" : "laika.io.api.TreeTransformer", "shortDescription" : "Transformer for a tree of input and output documents.", "object" : "laika\/io\/api\/TreeTransformer$.html", "members_class" : [{"label" : "fromInput", "tail" : "(input: InputTreeBuilder[F]): OutputOps[F]", "member" : "laika.io.api.TreeTransformer.fromInput", "link" : "laika\/io\/api\/TreeTransformer.html#fromInput(input:laika.io.model.InputTreeBuilder[F]):laika.io.api.TreeTransformer.OutputOps[F]", "kind" : "def"}, {"label" : "config", "tail" : ": OperationConfig", "member" : "laika.io.api.TreeTransformer.config", "link" : "laika\/io\/api\/TreeTransformer.html#config:laika.api.builder.OperationConfig", "kind" : "val"}, {"label" : "docType", "tail" : ": TextDocumentType", "member" : "laika.io.api.TreeTransformer.docType", "link" : "laika\/io\/api\/TreeTransformer.html#docType:laika.ast.TextDocumentType", "kind" : "val"}, {"label" : "F", "tail" : ": Sync[F]", "member" : "laika.io.api.TreeTransformer.F", "link" : "laika\/io\/api\/TreeTransformer.html#F:cats.effect.Sync[F]", "kind" : "val"}, {"label" : "Result", "tail" : "", "member" : "laika.io.api.TreeTransformer.Result", "link" : "laika\/io\/api\/TreeTransformer.html#Result=laika.io.api.TreeTransformer.OutputOps[F]", "kind" : "type"}, {"member" : "laika.io.api.TreeTransformer#<init>", "error" : "unsupported entity"}, {"label" : "fromWorkingDirectory", "tail" : "(exclude: FileFilter)(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromWorkingDirectory", "link" : "laika\/io\/api\/TreeTransformer.html#fromWorkingDirectory(exclude:InputOps.this.FileFilter)(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "fromDirectories", "tail" : "(roots: Seq[File], exclude: FileFilter)(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromDirectories", "link" : "laika\/io\/api\/TreeTransformer.html#fromDirectories(roots:Seq[java.io.File],exclude:InputOps.this.FileFilter)(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "fromDirectories", "tail" : "(roots: Seq[File])(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromDirectories", "link" : "laika\/io\/api\/TreeTransformer.html#fromDirectories(roots:Seq[java.io.File])(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "fromDirectory", "tail" : "(dir: File, exclude: FileFilter)(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromDirectory", "link" : "laika\/io\/api\/TreeTransformer.html#fromDirectory(dir:java.io.File,exclude:InputOps.this.FileFilter)(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "fromDirectory", "tail" : "(dir: File)(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromDirectory", "link" : "laika\/io\/api\/TreeTransformer.html#fromDirectory(dir:java.io.File)(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "fromDirectory", "tail" : "(name: String, exclude: FileFilter)(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromDirectory", "link" : "laika\/io\/api\/TreeTransformer.html#fromDirectory(name:String,exclude:InputOps.this.FileFilter)(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "fromDirectory", "tail" : "(name: String)(codec: Codec): Result", "member" : "laika.io.ops.InputOps.fromDirectory", "link" : "laika\/io\/api\/TreeTransformer.html#fromDirectory(name:String)(implicitcodec:scala.io.Codec):InputOps.this.Result", "kind" : "def"}, {"label" : "FileFilter", "tail" : "", "member" : "laika.io.ops.InputOps.FileFilter", "link" : "laika\/io\/api\/TreeTransformer.html#FileFilter=java.io.File=>Boolean", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/api\/TreeTransformer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/api\/TreeTransformer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/api\/TreeTransformer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/api\/TreeTransformer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/api\/TreeTransformer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/api\/TreeTransformer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/api\/TreeTransformer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/TreeTransformer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/TreeTransformer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/TreeTransformer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/api\/TreeTransformer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/api\/TreeTransformer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/api\/TreeTransformer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/api\/TreeTransformer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/api\/TreeTransformer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/api\/TreeTransformer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/api\/TreeTransformer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/api\/TreeTransformer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/api\/TreeTransformer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Op", "tail" : "", "member" : "laika.io.api.TreeTransformer.Op", "link" : "laika\/io\/api\/TreeTransformer$.html#Op[F[_]]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "OutputOps", "tail" : "", "member" : "laika.io.api.TreeTransformer.OutputOps", "link" : "laika\/io\/api\/TreeTransformer$.html#OutputOps[F[_]]extendsTextOutputOps[F]withProductwithSerializable", "kind" : "case class"}, {"label" : "Builder", "tail" : "", "member" : "laika.io.api.TreeTransformer.Builder", "link" : "laika\/io\/api\/TreeTransformer$.html#Builder[F[_]]extendsTreeMapperOps[F]withProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/api\/TreeTransformer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/api\/TreeTransformer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/api\/TreeTransformer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/api\/TreeTransformer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/api\/TreeTransformer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/api\/TreeTransformer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/api\/TreeTransformer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/TreeTransformer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/TreeTransformer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/api\/TreeTransformer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/api\/TreeTransformer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/api\/TreeTransformer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/api\/TreeTransformer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/api\/TreeTransformer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/api\/TreeTransformer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/api\/TreeTransformer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/api\/TreeTransformer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/api\/TreeTransformer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/api\/TreeTransformer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/io\/api\/TreeTransformer.html", "kind" : "class"}], "laika.directive" : [{"name" : "laika.directive.AttributeKey", "shortDescription" : "The id for a directive part.", "object" : "laika\/directive\/AttributeKey$.html", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/directive\/AttributeKey.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/directive\/AttributeKey.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/directive\/AttributeKey.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/directive\/AttributeKey.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/directive\/AttributeKey.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/directive\/AttributeKey.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/directive\/AttributeKey.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/AttributeKey.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/AttributeKey.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/AttributeKey.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/directive\/AttributeKey.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/directive\/AttributeKey.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/directive\/AttributeKey.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/directive\/AttributeKey.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/directive\/AttributeKey.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/directive\/AttributeKey.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/directive\/AttributeKey.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/directive\/AttributeKey.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/directive\/AttributeKey.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "desc", "tail" : "(): String", "member" : "laika.directive.AttributeKey.desc", "link" : "laika\/directive\/AttributeKey.html#desc:String", "kind" : "abstract def"}, {"label" : "key", "tail" : "(): String", "member" : "laika.directive.AttributeKey.key", "link" : "laika\/directive\/AttributeKey.html#key:String", "kind" : "abstract def"}], "members_object" : [{"label" : "Positional", "tail" : "", "member" : "laika.directive.AttributeKey.Positional", "link" : "laika\/directive\/AttributeKey$.html#Positional", "kind" : "object"}, {"label" : "PositionalAt", "tail" : "", "member" : "laika.directive.AttributeKey.PositionalAt", "link" : "laika\/directive\/AttributeKey$.html#PositionalAtextendsAttributeKeywithProductwithSerializable", "kind" : "case class"}, {"label" : "Named", "tail" : "", "member" : "laika.directive.AttributeKey.Named", "link" : "laika\/directive\/AttributeKey$.html#NamedextendsAttributeKeywithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/directive\/AttributeKey$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/directive\/AttributeKey$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/directive\/AttributeKey$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/directive\/AttributeKey$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/directive\/AttributeKey$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/directive\/AttributeKey$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/directive\/AttributeKey$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/AttributeKey$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/AttributeKey$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/AttributeKey$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/directive\/AttributeKey$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/directive\/AttributeKey$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/directive\/AttributeKey$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/directive\/AttributeKey$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/directive\/AttributeKey$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/directive\/AttributeKey$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/directive\/AttributeKey$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/directive\/AttributeKey$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/directive\/AttributeKey$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/directive\/AttributeKey.html", "kind" : "class"}, {"name" : "laika.directive.Blocks", "shortDescription" : "The API for declaring directives that can be used as block elements in markup documents.", "object" : "laika\/directive\/Blocks$.html", "members_object" : [{"label" : "dsl", "tail" : "", "member" : "laika.directive.BuilderContext.dsl", "link" : "laika\/directive\/BuilderContext.html#dsl", "kind" : "object"}, {"label" : "SeparatorDirective", "tail" : "", "member" : "laika.directive.BuilderContext.SeparatorDirective", "link" : "laika\/directive\/BuilderContext.html#SeparatorDirective[+T]extendsAnyRef", "kind" : "class"}, {"label" : "Directive", "tail" : "", "member" : "laika.directive.BuilderContext.Directive", "link" : "laika\/directive\/BuilderContext.html#DirectiveextendsAnyRef", "kind" : "class"}, {"label" : "Combinators", "tail" : "", "member" : "laika.directive.BuilderContext.Combinators", "link" : "laika\/directive\/BuilderContext.html#CombinatorsextendsAnyRef", "kind" : "trait"}, {"label" : "DirectivePart", "tail" : "", "member" : "laika.directive.BuilderContext.DirectivePart", "link" : "laika\/directive\/BuilderContext.html#DirectivePart", "kind" : "object"}, {"label" : "DirectivePart", "tail" : "", "member" : "laika.directive.BuilderContext.DirectivePart", "link" : "laika\/directive\/BuilderContext.html#DirectivePart[+A]extendsBuilderContext.this.DirectiveContext=>BuilderContext.this.Result[A]", "kind" : "abstract class"}, {"label" : "DirectiveContext", "tail" : "", "member" : "laika.directive.BuilderContext.DirectiveContext", "link" : "laika\/directive\/BuilderContext.html#DirectiveContextextendsProductwithSerializable", "kind" : "case class"}, {"label" : "DirectiveContent", "tail" : "", "member" : "laika.directive.BuilderContext.DirectiveContent", "link" : "laika\/directive\/BuilderContext.html#DirectiveContentextendsProductwithSerializable", "kind" : "case class"}, {"label" : "BodyContent", "tail" : "", "member" : "laika.directive.BuilderContext.BodyContent", "link" : "laika\/directive\/BuilderContext.html#BodyContent", "kind" : "object"}, {"label" : "BodyContent", "tail" : "", "member" : "laika.directive.BuilderContext.BodyContent", "link" : "laika\/directive\/BuilderContext.html#BodyContentextendsAnyRef", "kind" : "sealed trait"}, {"label" : "Multipart", "tail" : "", "member" : "laika.directive.BuilderContext.Multipart", "link" : "laika\/directive\/BuilderContext.html#Multipart[T]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "SeparatorInstance", "tail" : "", "member" : "laika.directive.Blocks.SeparatorInstance", "link" : "laika\/directive\/Blocks$.html#SeparatorInstanceextendsElementwithBlockwithBlocks.SeparatorInstanceBasewithBlockResolverwithProductwithSerializable", "kind" : "case class"}, {"label" : "DirectiveInstance", "tail" : "", "member" : "laika.directive.Blocks.DirectiveInstance", "link" : "laika\/directive\/Blocks$.html#DirectiveInstanceextendsElementwithBlockResolverwithBlocks.DirectiveInstanceBasewithProductwithSerializable", "kind" : "case class"}, {"label" : "parse", "tail" : "(parser: Parser, src: SourceFragment): Result[Seq[Block]]", "member" : "laika.directive.Blocks.parse", "link" : "laika\/directive\/Blocks$.html#parse(parser:laika.directive.Blocks.Parser,src:laika.parse.SourceFragment):laika.directive.Blocks.Result[Seq[laika.ast.Block]]", "kind" : "def"}, {"label" : "Parser", "tail" : "", "member" : "laika.directive.Blocks.Parser", "link" : "laika\/directive\/Blocks$.html#Parser=laika.parse.markup.RecursiveParsers", "kind" : "type"}, {"label" : "toMap", "tail" : "(directives: Iterable[Directive]): Map[String, Directive]", "member" : "laika.directive.BuilderContext.toMap", "link" : "laika\/directive\/Blocks$.html#toMap(directives:Iterable[BuilderContext.this.Directive]):Map[String,BuilderContext.this.Directive]", "kind" : "def"}, {"label" : "separator", "tail" : "(name: String, min: Int, max: Int)(part: DirectivePart[T]): SeparatorDirective[T]", "member" : "laika.directive.BuilderContext.separator", "link" : "laika\/directive\/Blocks$.html#separator[T](name:String,min:Int,max:Int)(part:BuilderContext.this.DirectivePart[T]):BuilderContext.this.SeparatorDirective[T]", "kind" : "def"}, {"label" : "create", "tail" : "(name: String)(part: DirectivePart[Block]): Directive", "member" : "laika.directive.BuilderContext.create", "link" : "laika\/directive\/Blocks$.html#create(name:String)(part:BuilderContext.this.DirectivePart[E]):BuilderContext.this.Directive", "kind" : "def"}, {"label" : "eval", "tail" : "(name: String)(part: DirectivePart[Either[String, Block]]): Directive", "member" : "laika.directive.BuilderContext.eval", "link" : "laika\/directive\/Blocks$.html#eval(name:String)(part:BuilderContext.this.DirectivePart[Either[String,E]]):BuilderContext.this.Directive", "kind" : "def"}, {"label" : "Result", "tail" : "", "member" : "laika.directive.BuilderContext.Result", "link" : "laika\/directive\/Blocks$.html#Result[+A]=Either[Seq[String],A]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/directive\/Blocks$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/directive\/Blocks$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/directive\/Blocks$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/directive\/Blocks$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/directive\/Blocks$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/directive\/Blocks$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/directive\/Blocks$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/Blocks$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/Blocks$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/Blocks$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/directive\/Blocks$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/directive\/Blocks$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/directive\/Blocks$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/directive\/Blocks$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/directive\/Blocks$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/directive\/Blocks$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/directive\/Blocks$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/directive\/Blocks$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/directive\/Blocks$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.directive.BuilderContext", "members_trait" : [{"label" : "dsl", "tail" : "", "member" : "laika.directive.BuilderContext.dsl", "link" : "laika\/directive\/BuilderContext.html#dsl", "kind" : "object"}, {"label" : "toMap", "tail" : "(directives: Iterable[Directive]): Map[String, Directive]", "member" : "laika.directive.BuilderContext.toMap", "link" : "laika\/directive\/BuilderContext.html#toMap(directives:Iterable[BuilderContext.this.Directive]):Map[String,BuilderContext.this.Directive]", "kind" : "def"}, {"label" : "separator", "tail" : "(name: String, min: Int, max: Int)(part: DirectivePart[T]): SeparatorDirective[T]", "member" : "laika.directive.BuilderContext.separator", "link" : "laika\/directive\/BuilderContext.html#separator[T](name:String,min:Int,max:Int)(part:BuilderContext.this.DirectivePart[T]):BuilderContext.this.SeparatorDirective[T]", "kind" : "def"}, {"label" : "create", "tail" : "(name: String)(part: DirectivePart[E]): Directive", "member" : "laika.directive.BuilderContext.create", "link" : "laika\/directive\/BuilderContext.html#create(name:String)(part:BuilderContext.this.DirectivePart[E]):BuilderContext.this.Directive", "kind" : "def"}, {"label" : "eval", "tail" : "(name: String)(part: DirectivePart[Either[String, E]]): Directive", "member" : "laika.directive.BuilderContext.eval", "link" : "laika\/directive\/BuilderContext.html#eval(name:String)(part:BuilderContext.this.DirectivePart[Either[String,E]]):BuilderContext.this.Directive", "kind" : "def"}, {"label" : "SeparatorDirective", "tail" : "", "member" : "laika.directive.BuilderContext.SeparatorDirective", "link" : "laika\/directive\/BuilderContext.html#SeparatorDirective[+T]extendsAnyRef", "kind" : "class"}, {"label" : "Directive", "tail" : "", "member" : "laika.directive.BuilderContext.Directive", "link" : "laika\/directive\/BuilderContext.html#DirectiveextendsAnyRef", "kind" : "class"}, {"label" : "Combinators", "tail" : "", "member" : "laika.directive.BuilderContext.Combinators", "link" : "laika\/directive\/BuilderContext.html#CombinatorsextendsAnyRef", "kind" : "trait"}, {"label" : "DirectivePart", "tail" : "", "member" : "laika.directive.BuilderContext.DirectivePart", "link" : "laika\/directive\/BuilderContext.html#DirectivePart", "kind" : "object"}, {"label" : "DirectivePart", "tail" : "", "member" : "laika.directive.BuilderContext.DirectivePart", "link" : "laika\/directive\/BuilderContext.html#DirectivePart[+A]extendsBuilderContext.this.DirectiveContext=>BuilderContext.this.Result[A]", "kind" : "abstract class"}, {"label" : "DirectiveContext", "tail" : "", "member" : "laika.directive.BuilderContext.DirectiveContext", "link" : "laika\/directive\/BuilderContext.html#DirectiveContextextendsProductwithSerializable", "kind" : "case class"}, {"label" : "DirectiveContent", "tail" : "", "member" : "laika.directive.BuilderContext.DirectiveContent", "link" : "laika\/directive\/BuilderContext.html#DirectiveContentextendsProductwithSerializable", "kind" : "case class"}, {"label" : "BodyContent", "tail" : "", "member" : "laika.directive.BuilderContext.BodyContent", "link" : "laika\/directive\/BuilderContext.html#BodyContent", "kind" : "object"}, {"label" : "BodyContent", "tail" : "", "member" : "laika.directive.BuilderContext.BodyContent", "link" : "laika\/directive\/BuilderContext.html#BodyContentextendsAnyRef", "kind" : "sealed trait"}, {"label" : "Multipart", "tail" : "", "member" : "laika.directive.BuilderContext.Multipart", "link" : "laika\/directive\/BuilderContext.html#Multipart[T]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "Result", "tail" : "", "member" : "laika.directive.BuilderContext.Result", "link" : "laika\/directive\/BuilderContext.html#Result[+A]=Either[Seq[String],A]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/directive\/BuilderContext.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/directive\/BuilderContext.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/directive\/BuilderContext.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/directive\/BuilderContext.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/directive\/BuilderContext.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/directive\/BuilderContext.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/directive\/BuilderContext.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/BuilderContext.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/BuilderContext.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/BuilderContext.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/directive\/BuilderContext.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/directive\/BuilderContext.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/directive\/BuilderContext.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/directive\/BuilderContext.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/directive\/BuilderContext.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/directive\/BuilderContext.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/directive\/BuilderContext.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/directive\/BuilderContext.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/directive\/BuilderContext.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "parse", "tail" : "(parser: Parser, src: SourceFragment): Result[Seq[E]]", "member" : "laika.directive.BuilderContext.parse", "link" : "laika\/directive\/BuilderContext.html#parse(parser:BuilderContext.this.Parser,src:laika.parse.SourceFragment):BuilderContext.this.Result[Seq[E]]", "kind" : "abstract def"}, {"member" : "laika.directive.BuilderContext.Parser", "error" : "unsupported entity"}], "shortDescription" : "Provides the basic building blocks for Laika's Directive API.", "trait" : "laika\/directive\/BuilderContext.html", "kind" : "trait"}, {"name" : "laika.directive.DirectiveRegistry", "members_trait" : [{"label" : "processExtension", "tail" : "(): PartialFunction[ExtensionBundle, ExtensionBundle]", "member" : "laika.directive.DirectiveRegistry.processExtension", "link" : "laika\/directive\/DirectiveRegistry.html#processExtension:PartialFunction[laika.bundle.ExtensionBundle,laika.bundle.ExtensionBundle]", "kind" : "def"}, {"label" : "description", "tail" : ": String", "member" : "laika.directive.DirectiveRegistry.description", "link" : "laika\/directive\/DirectiveRegistry.html#description:String", "kind" : "val"}, {"label" : "acceptRawContent", "tail" : "(): Boolean", "member" : "laika.bundle.ExtensionBundle.acceptRawContent", "link" : "laika\/directive\/DirectiveRegistry.html#acceptRawContent:Boolean", "kind" : "def"}, {"label" : "useInStrictMode", "tail" : "(): Boolean", "member" : "laika.bundle.ExtensionBundle.useInStrictMode", "link" : "laika\/directive\/DirectiveRegistry.html#useInStrictMode:Boolean", "kind" : "def"}, {"label" : "withBase", "tail" : "(base: ExtensionBundle): ExtensionBundle", "member" : "laika.bundle.ExtensionBundle.withBase", "link" : "laika\/directive\/DirectiveRegistry.html#withBase(base:laika.bundle.ExtensionBundle):laika.bundle.ExtensionBundle", "kind" : "def"}, {"label" : "renderOverrides", "tail" : "(): Seq[RenderOverrides]", "member" : "laika.bundle.ExtensionBundle.renderOverrides", "link" : "laika\/directive\/DirectiveRegistry.html#renderOverrides:Seq[laika.bundle.RenderOverrides]", "kind" : "def"}, {"label" : "rewriteRules", "tail" : "(): Seq[(DocumentCursor) ⇒ RewriteRules]", "member" : "laika.bundle.ExtensionBundle.rewriteRules", "link" : "laika\/directive\/DirectiveRegistry.html#rewriteRules:Seq[laika.ast.DocumentCursor=>laika.ast.RewriteRules]", "kind" : "def"}, {"label" : "parsers", "tail" : "(): ParserBundle", "member" : "laika.bundle.ExtensionBundle.parsers", "link" : "laika\/directive\/DirectiveRegistry.html#parsers:laika.bundle.ParserBundle", "kind" : "def"}, {"label" : "slugBuilder", "tail" : "(): Option[(String) ⇒ String]", "member" : "laika.bundle.ExtensionBundle.slugBuilder", "link" : "laika\/directive\/DirectiveRegistry.html#slugBuilder:Option[String=>String]", "kind" : "def"}, {"label" : "docTypeMatcher", "tail" : "(): PartialFunction[Path, DocumentType]", "member" : "laika.bundle.ExtensionBundle.docTypeMatcher", "link" : "laika\/directive\/DirectiveRegistry.html#docTypeMatcher:PartialFunction[laika.ast.Path,laika.ast.DocumentType]", "kind" : "def"}, {"label" : "baseConfig", "tail" : "(): Config", "member" : "laika.bundle.ExtensionBundle.baseConfig", "link" : "laika\/directive\/DirectiveRegistry.html#baseConfig:laika.config.Config", "kind" : "def"}, {"label" : "origin", "tail" : "(): BundleOrigin", "member" : "laika.bundle.ExtensionBundle.origin", "link" : "laika\/directive\/DirectiveRegistry.html#origin:laika.bundle.BundleOrigin", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/directive\/DirectiveRegistry.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/directive\/DirectiveRegistry.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/directive\/DirectiveRegistry.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/directive\/DirectiveRegistry.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/directive\/DirectiveRegistry.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/directive\/DirectiveRegistry.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/directive\/DirectiveRegistry.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/DirectiveRegistry.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/DirectiveRegistry.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/DirectiveRegistry.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/directive\/DirectiveRegistry.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/directive\/DirectiveRegistry.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/directive\/DirectiveRegistry.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/directive\/DirectiveRegistry.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/directive\/DirectiveRegistry.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/directive\/DirectiveRegistry.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/directive\/DirectiveRegistry.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/directive\/DirectiveRegistry.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/directive\/DirectiveRegistry.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "linkDirectives", "tail" : "(): Seq[Directive]", "member" : "laika.directive.DirectiveRegistry.linkDirectives", "link" : "laika\/directive\/DirectiveRegistry.html#linkDirectives:Seq[laika.directive.Links.Directive]", "kind" : "abstract def"}, {"label" : "templateDirectives", "tail" : "(): Seq[Templates.Directive]", "member" : "laika.directive.DirectiveRegistry.templateDirectives", "link" : "laika\/directive\/DirectiveRegistry.html#templateDirectives:Seq[laika.directive.Templates.Directive]", "kind" : "abstract def"}, {"label" : "blockDirectives", "tail" : "(): Seq[Blocks.Directive]", "member" : "laika.directive.DirectiveRegistry.blockDirectives", "link" : "laika\/directive\/DirectiveRegistry.html#blockDirectives:Seq[laika.directive.Blocks.Directive]", "kind" : "abstract def"}, {"label" : "spanDirectives", "tail" : "(): Seq[Spans.Directive]", "member" : "laika.directive.DirectiveRegistry.spanDirectives", "link" : "laika\/directive\/DirectiveRegistry.html#spanDirectives:Seq[laika.directive.Spans.Directive]", "kind" : "abstract def"}], "shortDescription" : "Registry for custom directives.", "trait" : "laika\/directive\/DirectiveRegistry.html", "kind" : "trait"}, {"name" : "laika.directive.DirectiveSupport", "shortDescription" : "Internal API that processes all directives definedby one or more DirectiveRegistries.", "object" : "laika\/directive\/DirectiveSupport$.html", "members_class" : [{"label" : "withDirectives", "tail" : "(newBlockDirectives: Seq[Blocks.Directive], newSpanDirectives: Seq[Spans.Directive], newTemplateDirectives: Seq[Templates.Directive], newLinkDirectives: Seq[Directive]): DirectiveSupport", "member" : "laika.directive.DirectiveSupport.withDirectives", "link" : "laika\/directive\/DirectiveSupport.html#withDirectives(newBlockDirectives:Seq[laika.directive.Blocks.Directive],newSpanDirectives:Seq[laika.directive.Spans.Directive],newTemplateDirectives:Seq[laika.directive.Templates.Directive],newLinkDirectives:Seq[laika.directive.Links.Directive]):laika.directive.DirectiveSupport", "kind" : "def"}, {"label" : "rewriteRules", "tail" : ": Seq[(DocumentCursor) ⇒ RewriteRules]", "member" : "laika.directive.DirectiveSupport.rewriteRules", "link" : "laika\/directive\/DirectiveSupport.html#rewriteRules:Seq[laika.ast.DocumentCursor=>laika.ast.RewriteRules]", "kind" : "lazy val"}, {"label" : "LinkDirectiveResolver", "tail" : "", "member" : "laika.directive.DirectiveSupport.LinkDirectiveResolver", "link" : "laika\/directive\/DirectiveSupport.html#LinkDirectiveResolverextendsElementwithSpanResolverwithProductwithSerializable", "kind" : "case class"}, {"label" : "parsers", "tail" : ": ParserBundle", "member" : "laika.directive.DirectiveSupport.parsers", "link" : "laika\/directive\/DirectiveSupport.html#parsers:laika.bundle.ParserBundle", "kind" : "lazy val"}, {"label" : "origin", "tail" : ": BundleOrigin", "member" : "laika.directive.DirectiveSupport.origin", "link" : "laika\/directive\/DirectiveSupport.html#origin:laika.bundle.BundleOrigin", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "laika.directive.DirectiveSupport.description", "link" : "laika\/directive\/DirectiveSupport.html#description:String", "kind" : "val"}, {"member" : "laika.directive.DirectiveSupport#<init>", "error" : "unsupported entity"}, {"label" : "acceptRawContent", "tail" : "(): Boolean", "member" : "laika.bundle.ExtensionBundle.acceptRawContent", "link" : "laika\/directive\/DirectiveSupport.html#acceptRawContent:Boolean", "kind" : "def"}, {"label" : "useInStrictMode", "tail" : "(): Boolean", "member" : "laika.bundle.ExtensionBundle.useInStrictMode", "link" : "laika\/directive\/DirectiveSupport.html#useInStrictMode:Boolean", "kind" : "def"}, {"label" : "withBase", "tail" : "(base: ExtensionBundle): ExtensionBundle", "member" : "laika.bundle.ExtensionBundle.withBase", "link" : "laika\/directive\/DirectiveSupport.html#withBase(base:laika.bundle.ExtensionBundle):laika.bundle.ExtensionBundle", "kind" : "def"}, {"label" : "processExtension", "tail" : "(): PartialFunction[ExtensionBundle, ExtensionBundle]", "member" : "laika.bundle.ExtensionBundle.processExtension", "link" : "laika\/directive\/DirectiveSupport.html#processExtension:PartialFunction[laika.bundle.ExtensionBundle,laika.bundle.ExtensionBundle]", "kind" : "def"}, {"label" : "renderOverrides", "tail" : "(): Seq[RenderOverrides]", "member" : "laika.bundle.ExtensionBundle.renderOverrides", "link" : "laika\/directive\/DirectiveSupport.html#renderOverrides:Seq[laika.bundle.RenderOverrides]", "kind" : "def"}, {"label" : "slugBuilder", "tail" : "(): Option[(String) ⇒ String]", "member" : "laika.bundle.ExtensionBundle.slugBuilder", "link" : "laika\/directive\/DirectiveSupport.html#slugBuilder:Option[String=>String]", "kind" : "def"}, {"label" : "docTypeMatcher", "tail" : "(): PartialFunction[Path, DocumentType]", "member" : "laika.bundle.ExtensionBundle.docTypeMatcher", "link" : "laika\/directive\/DirectiveSupport.html#docTypeMatcher:PartialFunction[laika.ast.Path,laika.ast.DocumentType]", "kind" : "def"}, {"label" : "baseConfig", "tail" : "(): Config", "member" : "laika.bundle.ExtensionBundle.baseConfig", "link" : "laika\/directive\/DirectiveSupport.html#baseConfig:laika.config.Config", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/directive\/DirectiveSupport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/directive\/DirectiveSupport.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/directive\/DirectiveSupport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/directive\/DirectiveSupport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/directive\/DirectiveSupport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/directive\/DirectiveSupport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/directive\/DirectiveSupport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/DirectiveSupport.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/DirectiveSupport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/DirectiveSupport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/directive\/DirectiveSupport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/directive\/DirectiveSupport.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/directive\/DirectiveSupport.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/directive\/DirectiveSupport.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/directive\/DirectiveSupport.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/directive\/DirectiveSupport.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/directive\/DirectiveSupport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/directive\/DirectiveSupport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/directive\/DirectiveSupport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "LinkDirectiveResolver", "tail" : "", "member" : "laika.directive.DirectiveSupport.LinkDirectiveResolver", "link" : "laika\/directive\/DirectiveSupport.html#LinkDirectiveResolverextendsElementwithSpanResolverwithProductwithSerializable", "kind" : "case class"}, {"label" : "withDirectives", "tail" : "(newBlockDirectives: Seq[Blocks.Directive], newSpanDirectives: Seq[Spans.Directive], newTemplateDirectives: Seq[Templates.Directive], newLinkDirectives: Seq[Directive]): DirectiveSupport", "member" : "laika.directive.DirectiveSupport.withDirectives", "link" : "laika\/directive\/DirectiveSupport$.html#withDirectives(newBlockDirectives:Seq[laika.directive.Blocks.Directive],newSpanDirectives:Seq[laika.directive.Spans.Directive],newTemplateDirectives:Seq[laika.directive.Templates.Directive],newLinkDirectives:Seq[laika.directive.Links.Directive]):laika.directive.DirectiveSupport", "kind" : "def"}, {"label" : "rewriteRules", "tail" : ": Seq[(DocumentCursor) ⇒ RewriteRules]", "member" : "laika.directive.DirectiveSupport.rewriteRules", "link" : "laika\/directive\/DirectiveSupport$.html#rewriteRules:Seq[laika.ast.DocumentCursor=>laika.ast.RewriteRules]", "kind" : "lazy val"}, {"label" : "parsers", "tail" : ": ParserBundle", "member" : "laika.directive.DirectiveSupport.parsers", "link" : "laika\/directive\/DirectiveSupport$.html#parsers:laika.bundle.ParserBundle", "kind" : "lazy val"}, {"label" : "origin", "tail" : ": BundleOrigin", "member" : "laika.directive.DirectiveSupport.origin", "link" : "laika\/directive\/DirectiveSupport$.html#origin:laika.bundle.BundleOrigin", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "laika.directive.DirectiveSupport.description", "link" : "laika\/directive\/DirectiveSupport$.html#description:String", "kind" : "val"}, {"label" : "acceptRawContent", "tail" : "(): Boolean", "member" : "laika.bundle.ExtensionBundle.acceptRawContent", "link" : "laika\/directive\/DirectiveSupport$.html#acceptRawContent:Boolean", "kind" : "def"}, {"label" : "useInStrictMode", "tail" : "(): Boolean", "member" : "laika.bundle.ExtensionBundle.useInStrictMode", "link" : "laika\/directive\/DirectiveSupport$.html#useInStrictMode:Boolean", "kind" : "def"}, {"label" : "withBase", "tail" : "(base: ExtensionBundle): ExtensionBundle", "member" : "laika.bundle.ExtensionBundle.withBase", "link" : "laika\/directive\/DirectiveSupport$.html#withBase(base:laika.bundle.ExtensionBundle):laika.bundle.ExtensionBundle", "kind" : "def"}, {"label" : "processExtension", "tail" : "(): PartialFunction[ExtensionBundle, ExtensionBundle]", "member" : "laika.bundle.ExtensionBundle.processExtension", "link" : "laika\/directive\/DirectiveSupport$.html#processExtension:PartialFunction[laika.bundle.ExtensionBundle,laika.bundle.ExtensionBundle]", "kind" : "def"}, {"label" : "renderOverrides", "tail" : "(): Seq[RenderOverrides]", "member" : "laika.bundle.ExtensionBundle.renderOverrides", "link" : "laika\/directive\/DirectiveSupport$.html#renderOverrides:Seq[laika.bundle.RenderOverrides]", "kind" : "def"}, {"label" : "slugBuilder", "tail" : "(): Option[(String) ⇒ String]", "member" : "laika.bundle.ExtensionBundle.slugBuilder", "link" : "laika\/directive\/DirectiveSupport$.html#slugBuilder:Option[String=>String]", "kind" : "def"}, {"label" : "docTypeMatcher", "tail" : "(): PartialFunction[Path, DocumentType]", "member" : "laika.bundle.ExtensionBundle.docTypeMatcher", "link" : "laika\/directive\/DirectiveSupport$.html#docTypeMatcher:PartialFunction[laika.ast.Path,laika.ast.DocumentType]", "kind" : "def"}, {"label" : "baseConfig", "tail" : "(): Config", "member" : "laika.bundle.ExtensionBundle.baseConfig", "link" : "laika\/directive\/DirectiveSupport$.html#baseConfig:laika.config.Config", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/directive\/DirectiveSupport$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/directive\/DirectiveSupport$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/directive\/DirectiveSupport$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/directive\/DirectiveSupport$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/directive\/DirectiveSupport$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/directive\/DirectiveSupport$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/directive\/DirectiveSupport$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/DirectiveSupport$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/DirectiveSupport$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/DirectiveSupport$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/directive\/DirectiveSupport$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/directive\/DirectiveSupport$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/directive\/DirectiveSupport$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/directive\/DirectiveSupport$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/directive\/DirectiveSupport$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/directive\/DirectiveSupport$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/directive\/DirectiveSupport$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/directive\/DirectiveSupport$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/directive\/DirectiveSupport$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/directive\/DirectiveSupport.html", "kind" : "class"}, {"name" : "laika.directive.Links", "shortDescription" : "The API for declaring directives that can be used in links.", "object" : "laika\/directive\/Links$.html", "members_object" : [{"label" : "eval", "tail" : "(directiveName: String)(f: (String, DocumentCursor) ⇒ Either[String, SpanLink]): Directive", "member" : "laika.directive.Links.eval", "link" : "laika\/directive\/Links$.html#eval(directiveName:String)(f:(String,laika.ast.DocumentCursor)=>Either[String,laika.ast.SpanLink]):laika.directive.Links.Directive", "kind" : "def"}, {"label" : "create", "tail" : "(directiveName: String)(f: (String, DocumentCursor) ⇒ SpanLink): Directive", "member" : "laika.directive.Links.create", "link" : "laika\/directive\/Links$.html#create(directiveName:String)(f:(String,laika.ast.DocumentCursor)=>laika.ast.SpanLink):laika.directive.Links.Directive", "kind" : "def"}, {"label" : "Directive", "tail" : "", "member" : "laika.directive.Links.Directive", "link" : "laika\/directive\/Links$.html#DirectiveextendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/directive\/Links$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/directive\/Links$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/directive\/Links$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/directive\/Links$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/directive\/Links$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/directive\/Links$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/directive\/Links$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/Links$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/Links$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/Links$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/directive\/Links$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/directive\/Links$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/directive\/Links$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/directive\/Links$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/directive\/Links$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/directive\/Links$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/directive\/Links$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/directive\/Links$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/directive\/Links$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.directive.Spans", "shortDescription" : "The API for declaring directives that can be used as inline elements in markup documents.", "object" : "laika\/directive\/Spans$.html", "members_object" : [{"label" : "dsl", "tail" : "", "member" : "laika.directive.BuilderContext.dsl", "link" : "laika\/directive\/BuilderContext.html#dsl", "kind" : "object"}, {"label" : "SeparatorDirective", "tail" : "", "member" : "laika.directive.BuilderContext.SeparatorDirective", "link" : "laika\/directive\/BuilderContext.html#SeparatorDirective[+T]extendsAnyRef", "kind" : "class"}, {"label" : "Directive", "tail" : "", "member" : "laika.directive.BuilderContext.Directive", "link" : "laika\/directive\/BuilderContext.html#DirectiveextendsAnyRef", "kind" : "class"}, {"label" : "Combinators", "tail" : "", "member" : "laika.directive.BuilderContext.Combinators", "link" : "laika\/directive\/BuilderContext.html#CombinatorsextendsAnyRef", "kind" : "trait"}, {"label" : "DirectivePart", "tail" : "", "member" : "laika.directive.BuilderContext.DirectivePart", "link" : "laika\/directive\/BuilderContext.html#DirectivePart", "kind" : "object"}, {"label" : "DirectivePart", "tail" : "", "member" : "laika.directive.BuilderContext.DirectivePart", "link" : "laika\/directive\/BuilderContext.html#DirectivePart[+A]extendsBuilderContext.this.DirectiveContext=>BuilderContext.this.Result[A]", "kind" : "abstract class"}, {"label" : "DirectiveContext", "tail" : "", "member" : "laika.directive.BuilderContext.DirectiveContext", "link" : "laika\/directive\/BuilderContext.html#DirectiveContextextendsProductwithSerializable", "kind" : "case class"}, {"label" : "DirectiveContent", "tail" : "", "member" : "laika.directive.BuilderContext.DirectiveContent", "link" : "laika\/directive\/BuilderContext.html#DirectiveContentextendsProductwithSerializable", "kind" : "case class"}, {"label" : "BodyContent", "tail" : "", "member" : "laika.directive.BuilderContext.BodyContent", "link" : "laika\/directive\/BuilderContext.html#BodyContent", "kind" : "object"}, {"label" : "BodyContent", "tail" : "", "member" : "laika.directive.BuilderContext.BodyContent", "link" : "laika\/directive\/BuilderContext.html#BodyContentextendsAnyRef", "kind" : "sealed trait"}, {"label" : "Multipart", "tail" : "", "member" : "laika.directive.BuilderContext.Multipart", "link" : "laika\/directive\/BuilderContext.html#Multipart[T]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "SeparatorInstance", "tail" : "", "member" : "laika.directive.Spans.SeparatorInstance", "link" : "laika\/directive\/Spans$.html#SeparatorInstanceextendsElementwithSpanwithSpans.SeparatorInstanceBasewithSpanResolverwithProductwithSerializable", "kind" : "case class"}, {"label" : "DirectiveInstance", "tail" : "", "member" : "laika.directive.Spans.DirectiveInstance", "link" : "laika\/directive\/Spans$.html#DirectiveInstanceextendsElementwithSpanResolverwithSpans.DirectiveInstanceBasewithProductwithSerializable", "kind" : "case class"}, {"label" : "parse", "tail" : "(parser: Parser, src: SourceFragment): Result[Seq[Span]]", "member" : "laika.directive.Spans.parse", "link" : "laika\/directive\/Spans$.html#parse(parser:laika.directive.Spans.Parser,src:laika.parse.SourceFragment):laika.directive.Spans.Result[Seq[laika.ast.Span]]", "kind" : "def"}, {"label" : "Parser", "tail" : "", "member" : "laika.directive.Spans.Parser", "link" : "laika\/directive\/Spans$.html#Parser=laika.parse.markup.RecursiveSpanParsers", "kind" : "type"}, {"label" : "toMap", "tail" : "(directives: Iterable[Directive]): Map[String, Directive]", "member" : "laika.directive.BuilderContext.toMap", "link" : "laika\/directive\/Spans$.html#toMap(directives:Iterable[BuilderContext.this.Directive]):Map[String,BuilderContext.this.Directive]", "kind" : "def"}, {"label" : "separator", "tail" : "(name: String, min: Int, max: Int)(part: DirectivePart[T]): SeparatorDirective[T]", "member" : "laika.directive.BuilderContext.separator", "link" : "laika\/directive\/Spans$.html#separator[T](name:String,min:Int,max:Int)(part:BuilderContext.this.DirectivePart[T]):BuilderContext.this.SeparatorDirective[T]", "kind" : "def"}, {"label" : "create", "tail" : "(name: String)(part: DirectivePart[Span]): Directive", "member" : "laika.directive.BuilderContext.create", "link" : "laika\/directive\/Spans$.html#create(name:String)(part:BuilderContext.this.DirectivePart[E]):BuilderContext.this.Directive", "kind" : "def"}, {"label" : "eval", "tail" : "(name: String)(part: DirectivePart[Either[String, Span]]): Directive", "member" : "laika.directive.BuilderContext.eval", "link" : "laika\/directive\/Spans$.html#eval(name:String)(part:BuilderContext.this.DirectivePart[Either[String,E]]):BuilderContext.this.Directive", "kind" : "def"}, {"label" : "Result", "tail" : "", "member" : "laika.directive.BuilderContext.Result", "link" : "laika\/directive\/Spans$.html#Result[+A]=Either[Seq[String],A]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/directive\/Spans$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/directive\/Spans$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/directive\/Spans$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/directive\/Spans$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/directive\/Spans$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/directive\/Spans$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/directive\/Spans$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/Spans$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/Spans$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/Spans$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/directive\/Spans$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/directive\/Spans$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/directive\/Spans$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/directive\/Spans$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/directive\/Spans$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/directive\/Spans$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/directive\/Spans$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/directive\/Spans$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/directive\/Spans$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.directive.Templates", "shortDescription" : "The API for declaring directives that can be used in templates.", "object" : "laika\/directive\/Templates$.html", "members_object" : [{"label" : "dsl", "tail" : "", "member" : "laika.directive.BuilderContext.dsl", "link" : "laika\/directive\/BuilderContext.html#dsl", "kind" : "object"}, {"label" : "SeparatorDirective", "tail" : "", "member" : "laika.directive.BuilderContext.SeparatorDirective", "link" : "laika\/directive\/BuilderContext.html#SeparatorDirective[+T]extendsAnyRef", "kind" : "class"}, {"label" : "Directive", "tail" : "", "member" : "laika.directive.BuilderContext.Directive", "link" : "laika\/directive\/BuilderContext.html#DirectiveextendsAnyRef", "kind" : "class"}, {"label" : "Combinators", "tail" : "", "member" : "laika.directive.BuilderContext.Combinators", "link" : "laika\/directive\/BuilderContext.html#CombinatorsextendsAnyRef", "kind" : "trait"}, {"label" : "DirectivePart", "tail" : "", "member" : "laika.directive.BuilderContext.DirectivePart", "link" : "laika\/directive\/BuilderContext.html#DirectivePart", "kind" : "object"}, {"label" : "DirectivePart", "tail" : "", "member" : "laika.directive.BuilderContext.DirectivePart", "link" : "laika\/directive\/BuilderContext.html#DirectivePart[+A]extendsBuilderContext.this.DirectiveContext=>BuilderContext.this.Result[A]", "kind" : "abstract class"}, {"label" : "DirectiveContext", "tail" : "", "member" : "laika.directive.BuilderContext.DirectiveContext", "link" : "laika\/directive\/BuilderContext.html#DirectiveContextextendsProductwithSerializable", "kind" : "case class"}, {"label" : "DirectiveContent", "tail" : "", "member" : "laika.directive.BuilderContext.DirectiveContent", "link" : "laika\/directive\/BuilderContext.html#DirectiveContentextendsProductwithSerializable", "kind" : "case class"}, {"label" : "BodyContent", "tail" : "", "member" : "laika.directive.BuilderContext.BodyContent", "link" : "laika\/directive\/BuilderContext.html#BodyContent", "kind" : "object"}, {"label" : "BodyContent", "tail" : "", "member" : "laika.directive.BuilderContext.BodyContent", "link" : "laika\/directive\/BuilderContext.html#BodyContentextendsAnyRef", "kind" : "sealed trait"}, {"label" : "Multipart", "tail" : "", "member" : "laika.directive.BuilderContext.Multipart", "link" : "laika\/directive\/BuilderContext.html#Multipart[T]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "SeparatorInstance", "tail" : "", "member" : "laika.directive.Templates.SeparatorInstance", "link" : "laika\/directive\/Templates$.html#SeparatorInstanceextendsElementwithTemplateSpanwithTemplates.SeparatorInstanceBasewithSpanResolverwithProductwithSerializable", "kind" : "case class"}, {"label" : "DirectiveInstance", "tail" : "", "member" : "laika.directive.Templates.DirectiveInstance", "link" : "laika\/directive\/Templates$.html#DirectiveInstanceextendsElementwithSpanResolverwithTemplateSpanwithTemplates.DirectiveInstanceBasewithProductwithSerializable", "kind" : "case class"}, {"label" : "parse", "tail" : "(parser: Parser, src: SourceFragment): Result[Seq[TemplateSpan]]", "member" : "laika.directive.Templates.parse", "link" : "laika\/directive\/Templates$.html#parse(parser:laika.directive.Templates.Parser,src:laika.parse.SourceFragment):laika.directive.Templates.Result[Seq[laika.ast.TemplateSpan]]", "kind" : "def"}, {"label" : "Parser", "tail" : "", "member" : "laika.directive.Templates.Parser", "link" : "laika\/directive\/Templates$.html#Parser=laika.parse.markup.RecursiveSpanParsers", "kind" : "type"}, {"label" : "toMap", "tail" : "(directives: Iterable[Directive]): Map[String, Directive]", "member" : "laika.directive.BuilderContext.toMap", "link" : "laika\/directive\/Templates$.html#toMap(directives:Iterable[BuilderContext.this.Directive]):Map[String,BuilderContext.this.Directive]", "kind" : "def"}, {"label" : "separator", "tail" : "(name: String, min: Int, max: Int)(part: DirectivePart[T]): SeparatorDirective[T]", "member" : "laika.directive.BuilderContext.separator", "link" : "laika\/directive\/Templates$.html#separator[T](name:String,min:Int,max:Int)(part:BuilderContext.this.DirectivePart[T]):BuilderContext.this.SeparatorDirective[T]", "kind" : "def"}, {"label" : "create", "tail" : "(name: String)(part: DirectivePart[TemplateSpan]): Directive", "member" : "laika.directive.BuilderContext.create", "link" : "laika\/directive\/Templates$.html#create(name:String)(part:BuilderContext.this.DirectivePart[E]):BuilderContext.this.Directive", "kind" : "def"}, {"label" : "eval", "tail" : "(name: String)(part: DirectivePart[Either[String, TemplateSpan]]): Directive", "member" : "laika.directive.BuilderContext.eval", "link" : "laika\/directive\/Templates$.html#eval(name:String)(part:BuilderContext.this.DirectivePart[Either[String,E]]):BuilderContext.this.Directive", "kind" : "def"}, {"label" : "Result", "tail" : "", "member" : "laika.directive.BuilderContext.Result", "link" : "laika\/directive\/Templates$.html#Result[+A]=Either[Seq[String],A]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/directive\/Templates$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/directive\/Templates$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/directive\/Templates$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/directive\/Templates$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/directive\/Templates$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/directive\/Templates$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/directive\/Templates$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/Templates$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/Templates$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/directive\/Templates$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/directive\/Templates$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/directive\/Templates$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/directive\/Templates$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/directive\/Templates$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/directive\/Templates$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/directive\/Templates$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/directive\/Templates$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/directive\/Templates$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/directive\/Templates$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "laika.markdown.bundle" : [{"name" : "laika.markdown.bundle.HTMLRenderer", "shortDescription" : " Renderer for verbatim HTML elements.", "object" : "laika\/markdown\/bundle\/HTMLRenderer$.html", "members_object" : [{"label" : "custom", "tail" : ": PartialFunction[(HTMLFormatter, Element), String]", "member" : "laika.markdown.bundle.HTMLRenderer.custom", "link" : "laika\/markdown\/bundle\/HTMLRenderer$.html#custom:PartialFunction[(laika.render.HTMLFormatter,laika.ast.Element),String]", "kind" : "val"}, {"label" : "tagStart", "tail" : "(tagName: String, attributes: List[HTMLAttribute]): String", "member" : "laika.markdown.bundle.HTMLRenderer.tagStart", "link" : "laika\/markdown\/bundle\/HTMLRenderer$.html#tagStart(tagName:String,attributes:List[laika.markdown.ast.HTMLAttribute]):String", "kind" : "def"}, {"label" : "prepareAttributeValue", "tail" : "(spans: List[TextContainer]): String", "member" : "laika.markdown.bundle.HTMLRenderer.prepareAttributeValue", "link" : "laika\/markdown\/bundle\/HTMLRenderer$.html#prepareAttributeValue(spans:List[laika.ast.TextContainer]):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/markdown\/bundle\/HTMLRenderer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/markdown\/bundle\/HTMLRenderer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/markdown\/bundle\/HTMLRenderer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/markdown\/bundle\/HTMLRenderer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/markdown\/bundle\/HTMLRenderer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/markdown\/bundle\/HTMLRenderer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/markdown\/bundle\/HTMLRenderer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/bundle\/HTMLRenderer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/bundle\/HTMLRenderer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/bundle\/HTMLRenderer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/markdown\/bundle\/HTMLRenderer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/markdown\/bundle\/HTMLRenderer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/markdown\/bundle\/HTMLRenderer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/markdown\/bundle\/HTMLRenderer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/markdown\/bundle\/HTMLRenderer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/markdown\/bundle\/HTMLRenderer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/markdown\/bundle\/HTMLRenderer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/markdown\/bundle\/HTMLRenderer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/markdown\/bundle\/HTMLRenderer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.markdown.bundle.VerbatimHTML", "shortDescription" : " Markdown extension that also parses verbatim HTML elements alongside the standard Markdown markup.", "object" : "laika\/markdown\/bundle\/VerbatimHTML$.html", "members_object" : [{"label" : "renderOverrides", "tail" : ": Seq[RenderOverrides]", "member" : "laika.markdown.bundle.VerbatimHTML.renderOverrides", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#renderOverrides:Seq[laika.bundle.RenderOverrides]", "kind" : "val"}, {"label" : "parsers", "tail" : "(): ParserBundle", "member" : "laika.markdown.bundle.VerbatimHTML.parsers", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#parsers:laika.bundle.ParserBundle", "kind" : "def"}, {"label" : "acceptRawContent", "tail" : ": Boolean", "member" : "laika.markdown.bundle.VerbatimHTML.acceptRawContent", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#acceptRawContent:Boolean", "kind" : "val"}, {"label" : "useInStrictMode", "tail" : ": Boolean", "member" : "laika.markdown.bundle.VerbatimHTML.useInStrictMode", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#useInStrictMode:Boolean", "kind" : "val"}, {"label" : "origin", "tail" : ": BundleOrigin", "member" : "laika.markdown.bundle.VerbatimHTML.origin", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#origin:laika.bundle.BundleOrigin", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "laika.markdown.bundle.VerbatimHTML.description", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#description:String", "kind" : "val"}, {"label" : "withBase", "tail" : "(base: ExtensionBundle): ExtensionBundle", "member" : "laika.bundle.ExtensionBundle.withBase", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#withBase(base:laika.bundle.ExtensionBundle):laika.bundle.ExtensionBundle", "kind" : "def"}, {"label" : "processExtension", "tail" : "(): PartialFunction[ExtensionBundle, ExtensionBundle]", "member" : "laika.bundle.ExtensionBundle.processExtension", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#processExtension:PartialFunction[laika.bundle.ExtensionBundle,laika.bundle.ExtensionBundle]", "kind" : "def"}, {"label" : "rewriteRules", "tail" : "(): Seq[(DocumentCursor) ⇒ RewriteRules]", "member" : "laika.bundle.ExtensionBundle.rewriteRules", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#rewriteRules:Seq[laika.ast.DocumentCursor=>laika.ast.RewriteRules]", "kind" : "def"}, {"label" : "slugBuilder", "tail" : "(): Option[(String) ⇒ String]", "member" : "laika.bundle.ExtensionBundle.slugBuilder", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#slugBuilder:Option[String=>String]", "kind" : "def"}, {"label" : "docTypeMatcher", "tail" : "(): PartialFunction[Path, DocumentType]", "member" : "laika.bundle.ExtensionBundle.docTypeMatcher", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#docTypeMatcher:PartialFunction[laika.ast.Path,laika.ast.DocumentType]", "kind" : "def"}, {"label" : "baseConfig", "tail" : "(): Config", "member" : "laika.bundle.ExtensionBundle.baseConfig", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#baseConfig:laika.config.Config", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/markdown\/bundle\/VerbatimHTML$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "laika.markdown.ast" : [{"name" : "laika.markdown.ast.HTMLAttribute", "shortDescription" : "Represents a single HTML attribute.", "members_case class" : [{"member" : "laika.markdown.ast.HTMLAttribute#<init>", "error" : "unsupported entity"}, {"label" : "quotedWith", "tail" : ": Option[Char]", "member" : "laika.markdown.ast.HTMLAttribute.quotedWith", "link" : "laika\/markdown\/ast\/HTMLAttribute.html#quotedWith:Option[Char]", "kind" : "val"}, {"label" : "value", "tail" : ": List[TextContainer]", "member" : "laika.markdown.ast.HTMLAttribute.value", "link" : "laika\/markdown\/ast\/HTMLAttribute.html#value:List[laika.ast.TextContainer]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "laika.markdown.ast.HTMLAttribute.name", "link" : "laika\/markdown\/ast\/HTMLAttribute.html#name:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/markdown\/ast\/HTMLAttribute.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/markdown\/ast\/HTMLAttribute.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/markdown\/ast\/HTMLAttribute.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/markdown\/ast\/HTMLAttribute.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/markdown\/ast\/HTMLAttribute.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/markdown\/ast\/HTMLAttribute.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/markdown\/ast\/HTMLAttribute.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLAttribute.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLAttribute.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLAttribute.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/markdown\/ast\/HTMLAttribute.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/markdown\/ast\/HTMLAttribute.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/markdown\/ast\/HTMLAttribute.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/markdown\/ast\/HTMLAttribute.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/markdown\/ast\/HTMLAttribute.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/markdown\/ast\/HTMLAttribute.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/markdown\/ast\/HTMLAttribute.html", "kind" : "case class"}, {"name" : "laika.markdown.ast.HTMLBlock", "shortDescription" : "A top level HTML block as defined by the Markdown syntaxt description.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): HTMLBlock", "member" : "laika.markdown.ast.HTMLBlock.withOptions", "link" : "laika\/markdown\/ast\/HTMLBlock.html#withOptions(options:laika.ast.Options):laika.markdown.ast.HTMLBlock", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.markdown.ast.HTMLBlock.Self", "link" : "laika\/markdown\/ast\/HTMLBlock.html#Self=laika.markdown.ast.HTMLBlock", "kind" : "type"}, {"member" : "laika.markdown.ast.HTMLBlock#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.markdown.ast.HTMLBlock.options", "link" : "laika\/markdown\/ast\/HTMLBlock.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "root", "tail" : ": HTMLElement", "member" : "laika.markdown.ast.HTMLBlock.root", "link" : "laika\/markdown\/ast\/HTMLBlock.html#root:laika.markdown.ast.HTMLElement", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/markdown\/ast\/HTMLBlock.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/markdown\/ast\/HTMLBlock.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/markdown\/ast\/HTMLBlock.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/markdown\/ast\/HTMLBlock.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/markdown\/ast\/HTMLBlock.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/markdown\/ast\/HTMLBlock.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/markdown\/ast\/HTMLBlock.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/markdown\/ast\/HTMLBlock.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/markdown\/ast\/HTMLBlock.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/markdown\/ast\/HTMLBlock.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/markdown\/ast\/HTMLBlock.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/markdown\/ast\/HTMLBlock.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/markdown\/ast\/HTMLBlock.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/markdown\/ast\/HTMLBlock.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/markdown\/ast\/HTMLBlock.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/markdown\/ast\/HTMLBlock.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLBlock.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLBlock.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLBlock.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/markdown\/ast\/HTMLBlock.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/markdown\/ast\/HTMLBlock.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/markdown\/ast\/HTMLBlock.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/markdown\/ast\/HTMLBlock.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/markdown\/ast\/HTMLBlock.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/markdown\/ast\/HTMLBlock.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/markdown\/ast\/HTMLBlock.html", "kind" : "case class"}, {"name" : "laika.markdown.ast.HTMLCharacterReference", "shortDescription" : "Represents a numerical or named character reference.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): HTMLCharacterReference", "member" : "laika.markdown.ast.HTMLCharacterReference.withOptions", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#withOptions(options:laika.ast.Options):laika.markdown.ast.HTMLCharacterReference", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.markdown.ast.HTMLCharacterReference.Self", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#Self=laika.markdown.ast.HTMLCharacterReference", "kind" : "type"}, {"member" : "laika.markdown.ast.HTMLCharacterReference#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.markdown.ast.HTMLCharacterReference.options", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": String", "member" : "laika.markdown.ast.HTMLCharacterReference.content", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#content:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/markdown\/ast\/HTMLCharacterReference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/markdown\/ast\/HTMLCharacterReference.html", "kind" : "case class"}, {"name" : "laika.markdown.ast.HTMLComment", "shortDescription" : "Represents a standard HTML comment.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): HTMLComment", "member" : "laika.markdown.ast.HTMLComment.withOptions", "link" : "laika\/markdown\/ast\/HTMLComment.html#withOptions(options:laika.ast.Options):laika.markdown.ast.HTMLComment", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.markdown.ast.HTMLComment.Self", "link" : "laika\/markdown\/ast\/HTMLComment.html#Self=laika.markdown.ast.HTMLComment", "kind" : "type"}, {"member" : "laika.markdown.ast.HTMLComment#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.markdown.ast.HTMLComment.options", "link" : "laika\/markdown\/ast\/HTMLComment.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": String", "member" : "laika.markdown.ast.HTMLComment.content", "link" : "laika\/markdown\/ast\/HTMLComment.html#content:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/markdown\/ast\/HTMLComment.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/markdown\/ast\/HTMLComment.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/markdown\/ast\/HTMLComment.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/markdown\/ast\/HTMLComment.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/markdown\/ast\/HTMLComment.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/markdown\/ast\/HTMLComment.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/markdown\/ast\/HTMLComment.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/markdown\/ast\/HTMLComment.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/markdown\/ast\/HTMLComment.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/markdown\/ast\/HTMLComment.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/markdown\/ast\/HTMLComment.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/markdown\/ast\/HTMLComment.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/markdown\/ast\/HTMLComment.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/markdown\/ast\/HTMLComment.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/markdown\/ast\/HTMLComment.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/markdown\/ast\/HTMLComment.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLComment.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLComment.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLComment.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/markdown\/ast\/HTMLComment.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/markdown\/ast\/HTMLComment.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/markdown\/ast\/HTMLComment.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/markdown\/ast\/HTMLComment.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/markdown\/ast\/HTMLComment.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/markdown\/ast\/HTMLComment.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/markdown\/ast\/HTMLComment.html", "kind" : "case class"}, {"name" : "laika.markdown.ast.HTMLElement", "shortDescription" : "Represents a full HTML element with matching start and end tags.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): HTMLElement", "member" : "laika.markdown.ast.HTMLElement.withOptions", "link" : "laika\/markdown\/ast\/HTMLElement.html#withOptions(options:laika.ast.Options):laika.markdown.ast.HTMLElement", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Span]): HTMLElement", "member" : "laika.markdown.ast.HTMLElement.withContent", "link" : "laika\/markdown\/ast\/HTMLElement.html#withContent(newContent:Seq[laika.ast.Span]):laika.markdown.ast.HTMLElement", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.markdown.ast.HTMLElement.Self", "link" : "laika\/markdown\/ast\/HTMLElement.html#Self=laika.markdown.ast.HTMLElement", "kind" : "type"}, {"member" : "laika.markdown.ast.HTMLElement#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.markdown.ast.HTMLElement.options", "link" : "laika\/markdown\/ast\/HTMLElement.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Span]", "member" : "laika.markdown.ast.HTMLElement.content", "link" : "laika\/markdown\/ast\/HTMLElement.html#content:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "startTag", "tail" : ": HTMLStartTag", "member" : "laika.markdown.ast.HTMLElement.startTag", "link" : "laika\/markdown\/ast\/HTMLElement.html#startTag:laika.markdown.ast.HTMLStartTag", "kind" : "val"}, {"label" : "extractText", "tail" : "(): String", "member" : "laika.ast.SpanContainer.extractText", "link" : "laika\/markdown\/ast\/HTMLElement.html#extractText:String", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.SpanContainer.rewriteChildren", "link" : "laika\/markdown\/ast\/HTMLElement.html#rewriteChildren(rules:laika.ast.RewriteRules):SpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/markdown\/ast\/HTMLElement.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/markdown\/ast\/HTMLElement.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/markdown\/ast\/HTMLElement.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/markdown\/ast\/HTMLElement.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/markdown\/ast\/HTMLElement.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/markdown\/ast\/HTMLElement.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/markdown\/ast\/HTMLElement.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/markdown\/ast\/HTMLElement.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/markdown\/ast\/HTMLElement.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/markdown\/ast\/HTMLElement.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/markdown\/ast\/HTMLElement.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/markdown\/ast\/HTMLElement.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/markdown\/ast\/HTMLElement.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/markdown\/ast\/HTMLElement.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/markdown\/ast\/HTMLElement.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/markdown\/ast\/HTMLElement.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/markdown\/ast\/HTMLElement.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/markdown\/ast\/HTMLElement.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/markdown\/ast\/HTMLElement.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/markdown\/ast\/HTMLElement.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/markdown\/ast\/HTMLElement.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLElement.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLElement.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLElement.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/markdown\/ast\/HTMLElement.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/markdown\/ast\/HTMLElement.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/markdown\/ast\/HTMLElement.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/markdown\/ast\/HTMLElement.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/markdown\/ast\/HTMLElement.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/markdown\/ast\/HTMLElement.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/markdown\/ast\/HTMLElement.html", "kind" : "case class"}, {"name" : "laika.markdown.ast.HTMLEmptyElement", "shortDescription" : "Represents an empty element (like &lt;br\/&gt; or &lt;hr\/&gt;) in case it contains the explicit slash to mark it as closed.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): HTMLEmptyElement", "member" : "laika.markdown.ast.HTMLEmptyElement.withOptions", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#withOptions(options:laika.ast.Options):laika.markdown.ast.HTMLEmptyElement", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.markdown.ast.HTMLEmptyElement.Self", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#Self=laika.markdown.ast.HTMLEmptyElement", "kind" : "type"}, {"member" : "laika.markdown.ast.HTMLEmptyElement#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.markdown.ast.HTMLEmptyElement.options", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "attributes", "tail" : ": List[HTMLAttribute]", "member" : "laika.markdown.ast.HTMLEmptyElement.attributes", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#attributes:List[laika.markdown.ast.HTMLAttribute]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "laika.markdown.ast.HTMLEmptyElement.name", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#name:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/markdown\/ast\/HTMLEmptyElement.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/markdown\/ast\/HTMLEmptyElement.html", "kind" : "case class"}, {"name" : "laika.markdown.ast.HTMLEndTag", "shortDescription" : "Represents an orphaned end tag without matching start tag.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): HTMLEndTag", "member" : "laika.markdown.ast.HTMLEndTag.withOptions", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#withOptions(options:laika.ast.Options):laika.markdown.ast.HTMLEndTag", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.markdown.ast.HTMLEndTag.Self", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#Self=laika.markdown.ast.HTMLEndTag", "kind" : "type"}, {"member" : "laika.markdown.ast.HTMLEndTag#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.markdown.ast.HTMLEndTag.options", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "laika.markdown.ast.HTMLEndTag.name", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#name:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/markdown\/ast\/HTMLEndTag.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/markdown\/ast\/HTMLEndTag.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/markdown\/ast\/HTMLEndTag.html", "kind" : "case class"}, {"name" : "laika.markdown.ast.HTMLScriptElement", "shortDescription" : "Represents a script element.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): HTMLScriptElement", "member" : "laika.markdown.ast.HTMLScriptElement.withOptions", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#withOptions(options:laika.ast.Options):laika.markdown.ast.HTMLScriptElement", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.markdown.ast.HTMLScriptElement.Self", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#Self=laika.markdown.ast.HTMLScriptElement", "kind" : "type"}, {"member" : "laika.markdown.ast.HTMLScriptElement#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.markdown.ast.HTMLScriptElement.options", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": String", "member" : "laika.markdown.ast.HTMLScriptElement.content", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#content:String", "kind" : "val"}, {"label" : "attributes", "tail" : ": List[HTMLAttribute]", "member" : "laika.markdown.ast.HTMLScriptElement.attributes", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#attributes:List[laika.markdown.ast.HTMLAttribute]", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/markdown\/ast\/HTMLScriptElement.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/markdown\/ast\/HTMLScriptElement.html", "kind" : "case class"}, {"name" : "laika.markdown.ast.HTMLSpan", "shortDescription" : "Base class for all verbatim HTML span elements.", "members_class" : [{"member" : "laika.markdown.ast.HTMLSpan#<init>", "error" : "unsupported entity"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/markdown\/ast\/HTMLSpan.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/markdown\/ast\/HTMLSpan.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/markdown\/ast\/HTMLSpan.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/markdown\/ast\/HTMLSpan.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/markdown\/ast\/HTMLSpan.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/markdown\/ast\/HTMLSpan.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/markdown\/ast\/HTMLSpan.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/markdown\/ast\/HTMLSpan.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/markdown\/ast\/HTMLSpan.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/markdown\/ast\/HTMLSpan.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/markdown\/ast\/HTMLSpan.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/markdown\/ast\/HTMLSpan.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/markdown\/ast\/HTMLSpan.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/markdown\/ast\/HTMLSpan.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/markdown\/ast\/HTMLSpan.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/markdown\/ast\/HTMLSpan.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/markdown\/ast\/HTMLSpan.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/markdown\/ast\/HTMLSpan.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLSpan.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLSpan.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLSpan.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/markdown\/ast\/HTMLSpan.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/markdown\/ast\/HTMLSpan.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/markdown\/ast\/HTMLSpan.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/markdown\/ast\/HTMLSpan.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/markdown\/ast\/HTMLSpan.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/markdown\/ast\/HTMLSpan.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/markdown\/ast\/HTMLSpan.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/markdown\/ast\/HTMLSpan.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/markdown\/ast\/HTMLSpan.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "laika.ast.Span.Self", "error" : "unsupported entity"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/markdown\/ast\/HTMLSpan.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/markdown\/ast\/HTMLSpan.html#options:laika.ast.Options", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/markdown\/ast\/HTMLSpan.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/markdown\/ast\/HTMLSpan.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/markdown\/ast\/HTMLSpan.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "class" : "laika\/markdown\/ast\/HTMLSpan.html", "kind" : "class"}, {"name" : "laika.markdown.ast.HTMLStartTag", "shortDescription" : "Represent a start tag.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): HTMLStartTag", "member" : "laika.markdown.ast.HTMLStartTag.withOptions", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#withOptions(options:laika.ast.Options):laika.markdown.ast.HTMLStartTag", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.markdown.ast.HTMLStartTag.Self", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#Self=laika.markdown.ast.HTMLStartTag", "kind" : "type"}, {"member" : "laika.markdown.ast.HTMLStartTag#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.markdown.ast.HTMLStartTag.options", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "attributes", "tail" : ": List[HTMLAttribute]", "member" : "laika.markdown.ast.HTMLStartTag.attributes", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#attributes:List[laika.markdown.ast.HTMLAttribute]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "laika.markdown.ast.HTMLStartTag.name", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#name:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/markdown\/ast\/HTMLStartTag.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/markdown\/ast\/HTMLStartTag.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/markdown\/ast\/HTMLStartTag.html", "kind" : "case class"}], "laika.time" : [{"name" : "laika.time.PlatformDateFormat", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/time\/PlatformDateFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/time\/PlatformDateFormat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/time\/PlatformDateFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/time\/PlatformDateFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/time\/PlatformDateFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/time\/PlatformDateFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/time\/PlatformDateFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/time\/PlatformDateFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/time\/PlatformDateFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/time\/PlatformDateFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/time\/PlatformDateFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/time\/PlatformDateFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/time\/PlatformDateFormat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/time\/PlatformDateFormat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/time\/PlatformDateFormat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/time\/PlatformDateFormat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/time\/PlatformDateFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/time\/PlatformDateFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/time\/PlatformDateFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "parse", "tail" : "(dateString: String): Either[String, Date]", "member" : "laika.time.PlatformDateFormat.parse", "link" : "laika\/time\/PlatformDateFormat.html#parse(dateString:String):Either[String,java.util.Date]", "kind" : "abstract def"}], "shortDescription" : "A little abstraction that isolates aspects of parsing and formattingdates from the underlying Date API which may differ between JVMand Scala.js applications.", "object" : "laika\/time\/PlatformDateFormat$.html", "members_object" : [{"label" : "parse", "tail" : "(dateString: String): Either[String, Date]", "member" : "laika.time.PlatformDateFormat.parse", "link" : "laika\/time\/PlatformDateFormat$.html#parse(dateString:String):Either[String,java.util.Date]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/time\/PlatformDateFormat$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/time\/PlatformDateFormat$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/time\/PlatformDateFormat$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/time\/PlatformDateFormat$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/time\/PlatformDateFormat$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/time\/PlatformDateFormat$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/time\/PlatformDateFormat$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/time\/PlatformDateFormat$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/time\/PlatformDateFormat$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/time\/PlatformDateFormat$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/time\/PlatformDateFormat$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/time\/PlatformDateFormat$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/time\/PlatformDateFormat$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/time\/PlatformDateFormat$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/time\/PlatformDateFormat$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/time\/PlatformDateFormat$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/time\/PlatformDateFormat$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/time\/PlatformDateFormat$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/time\/PlatformDateFormat$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/time\/PlatformDateFormat.html", "kind" : "trait"}, {"name" : "laika.time.PlatformDateFormatImpl", "shortDescription" : "", "object" : "laika\/time\/PlatformDateFormatImpl$.html", "members_object" : [{"label" : "parse", "tail" : "(dateString: String): Either[String, Date]", "member" : "laika.time.PlatformDateFormatImpl.parse", "link" : "laika\/time\/PlatformDateFormatImpl$.html#parse(dateString:String):Either[String,java.util.Date]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/time\/PlatformDateFormatImpl$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/time\/PlatformDateFormatImpl$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/time\/PlatformDateFormatImpl$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/time\/PlatformDateFormatImpl$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/time\/PlatformDateFormatImpl$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/time\/PlatformDateFormatImpl$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/time\/PlatformDateFormatImpl$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/time\/PlatformDateFormatImpl$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/time\/PlatformDateFormatImpl$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/time\/PlatformDateFormatImpl$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/time\/PlatformDateFormatImpl$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/time\/PlatformDateFormatImpl$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/time\/PlatformDateFormatImpl$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/time\/PlatformDateFormatImpl$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/time\/PlatformDateFormatImpl$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/time\/PlatformDateFormatImpl$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/time\/PlatformDateFormatImpl$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/time\/PlatformDateFormatImpl$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/time\/PlatformDateFormatImpl$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "laika.api" : [{"name" : "laika.api.MarkupParser", "shortDescription" : "Performs a parse operation from text markup to adocument tree without a subsequent render operation.", "object" : "laika\/api\/MarkupParser$.html", "members_class" : [{"label" : "parseUnresolved", "tail" : "(input: DocumentInput): Either[ParserError, UnresolvedDocument]", "member" : "laika.api.MarkupParser.parseUnresolved", "link" : "laika\/api\/MarkupParser.html#parseUnresolved(input:laika.parse.markup.DocumentParser.DocumentInput):Either[laika.parse.markup.DocumentParser.ParserError,laika.ast.UnresolvedDocument]", "kind" : "def"}, {"label" : "parseUnresolved", "tail" : "(input: String, path: Path): Either[ParserError, UnresolvedDocument]", "member" : "laika.api.MarkupParser.parseUnresolved", "link" : "laika\/api\/MarkupParser.html#parseUnresolved(input:String,path:laika.ast.Path):Either[laika.parse.markup.DocumentParser.ParserError,laika.ast.UnresolvedDocument]", "kind" : "def"}, {"label" : "parseUnresolved", "tail" : "(input: String): Either[ParserError, UnresolvedDocument]", "member" : "laika.api.MarkupParser.parseUnresolved", "link" : "laika\/api\/MarkupParser.html#parseUnresolved(input:String):Either[laika.parse.markup.DocumentParser.ParserError,laika.ast.UnresolvedDocument]", "kind" : "def"}, {"label" : "parse", "tail" : "(input: DocumentInput): Either[ParserError, Document]", "member" : "laika.api.MarkupParser.parse", "link" : "laika\/api\/MarkupParser.html#parse(input:laika.parse.markup.DocumentParser.DocumentInput):Either[laika.parse.markup.DocumentParser.ParserError,laika.ast.Document]", "kind" : "def"}, {"label" : "parse", "tail" : "(input: String, path: Path): Either[ParserError, Document]", "member" : "laika.api.MarkupParser.parse", "link" : "laika\/api\/MarkupParser.html#parse(input:String,path:laika.ast.Path):Either[laika.parse.markup.DocumentParser.ParserError,laika.ast.Document]", "kind" : "def"}, {"label" : "parse", "tail" : "(input: String): Either[ParserError, Document]", "member" : "laika.api.MarkupParser.parse", "link" : "laika\/api\/MarkupParser.html#parse(input:String):Either[laika.parse.markup.DocumentParser.ParserError,laika.ast.Document]", "kind" : "def"}, {"label" : "fileSuffixes", "tail" : ": Set[String]", "member" : "laika.api.MarkupParser.fileSuffixes", "link" : "laika\/api\/MarkupParser.html#fileSuffixes:Set[String]", "kind" : "val"}, {"member" : "laika.api.MarkupParser#<init>", "error" : "unsupported entity"}, {"label" : "config", "tail" : ": OperationConfig", "member" : "laika.api.MarkupParser.config", "link" : "laika\/api\/MarkupParser.html#config:laika.api.builder.OperationConfig", "kind" : "val"}, {"label" : "format", "tail" : ": MarkupFormat", "member" : "laika.api.MarkupParser.format", "link" : "laika\/api\/MarkupParser.html#format:laika.factory.MarkupFormat", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/api\/MarkupParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/api\/MarkupParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/api\/MarkupParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/api\/MarkupParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/api\/MarkupParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/api\/MarkupParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/api\/MarkupParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/MarkupParser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/MarkupParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/MarkupParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/api\/MarkupParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/api\/MarkupParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/api\/MarkupParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/api\/MarkupParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/api\/MarkupParser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/api\/MarkupParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/api\/MarkupParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/api\/MarkupParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/api\/MarkupParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "of", "tail" : "(format: MarkupFormat): ParserBuilder", "member" : "laika.api.MarkupParser.of", "link" : "laika\/api\/MarkupParser$.html#of(format:laika.factory.MarkupFormat):laika.api.builder.ParserBuilder", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/api\/MarkupParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/api\/MarkupParser$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/api\/MarkupParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/api\/MarkupParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/api\/MarkupParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/api\/MarkupParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/api\/MarkupParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/MarkupParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/MarkupParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/MarkupParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/api\/MarkupParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/api\/MarkupParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/api\/MarkupParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/api\/MarkupParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/api\/MarkupParser$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/api\/MarkupParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/api\/MarkupParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/api\/MarkupParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/api\/MarkupParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/api\/MarkupParser.html", "kind" : "class"}, {"name" : "laika.api.Renderer", "shortDescription" : "Performs a render operation from a document AST to a target formatas a string.", "object" : "laika\/api\/Renderer$.html", "members_class" : [{"label" : "render", "tail" : "(element: Element, path: Path, pathTranslator: PathTranslator, styles: StyleDeclarationSet): String", "member" : "laika.api.Renderer.render", "link" : "laika\/api\/Renderer.html#render(element:laika.ast.Element,path:laika.ast.Path,pathTranslator:laika.rewrite.nav.PathTranslator,styles:laika.ast.StyleDeclarationSet):String", "kind" : "def"}, {"label" : "render", "tail" : "(element: Element, path: Path): String", "member" : "laika.api.Renderer.render", "link" : "laika\/api\/Renderer.html#render(element:laika.ast.Element,path:laika.ast.Path):String", "kind" : "def"}, {"label" : "render", "tail" : "(element: Element): String", "member" : "laika.api.Renderer.render", "link" : "laika\/api\/Renderer.html#render(element:laika.ast.Element):String", "kind" : "def"}, {"label" : "render", "tail" : "(doc: Document, pathTranslator: PathTranslator, styles: StyleDeclarationSet): String", "member" : "laika.api.Renderer.render", "link" : "laika\/api\/Renderer.html#render(doc:laika.ast.Document,pathTranslator:laika.rewrite.nav.PathTranslator,styles:laika.ast.StyleDeclarationSet):String", "kind" : "def"}, {"label" : "render", "tail" : "(doc: Document): String", "member" : "laika.api.Renderer.render", "link" : "laika\/api\/Renderer.html#render(doc:laika.ast.Document):String", "kind" : "def"}, {"label" : "forInputFormat", "tail" : "(markupFormat: MarkupFormat): Renderer", "member" : "laika.api.Renderer.forInputFormat", "link" : "laika\/api\/Renderer.html#forInputFormat(markupFormat:laika.factory.MarkupFormat):laika.api.Renderer", "kind" : "def"}, {"member" : "laika.api.Renderer#<init>", "error" : "unsupported entity"}, {"label" : "config", "tail" : ": OperationConfig", "member" : "laika.api.Renderer.config", "link" : "laika\/api\/Renderer.html#config:laika.api.builder.OperationConfig", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/api\/Renderer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/api\/Renderer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/api\/Renderer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/api\/Renderer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/api\/Renderer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/api\/Renderer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/api\/Renderer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/Renderer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/Renderer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/Renderer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/api\/Renderer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/api\/Renderer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/api\/Renderer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/api\/Renderer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/api\/Renderer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/api\/Renderer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/api\/Renderer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/api\/Renderer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/api\/Renderer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "format", "tail" : "(): RenderFormat[Formatter]", "member" : "laika.api.Renderer.format", "link" : "laika\/api\/Renderer.html#format:laika.factory.RenderFormat[Renderer.this.Formatter]", "kind" : "abstract def"}, {"member" : "laika.api.Renderer.Formatter", "error" : "unsupported entity"}], "members_object" : [{"label" : "of", "tail" : "(format: TwoPhaseRenderFormat[FMT, PP]): TwoPhaseRendererBuilder[FMT, PP]", "member" : "laika.api.Renderer.of", "link" : "laika\/api\/Renderer$.html#of[FMT,PP](format:laika.factory.TwoPhaseRenderFormat[FMT,PP]):laika.api.builder.TwoPhaseRendererBuilder[FMT,PP]", "kind" : "def"}, {"label" : "of", "tail" : "(format: RenderFormat[FMT]): RendererBuilder[FMT]", "member" : "laika.api.Renderer.of", "link" : "laika\/api\/Renderer$.html#of[FMT](format:laika.factory.RenderFormat[FMT]):laika.api.builder.RendererBuilder[FMT]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/api\/Renderer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/api\/Renderer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/api\/Renderer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/api\/Renderer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/api\/Renderer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/api\/Renderer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/api\/Renderer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/Renderer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/Renderer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/Renderer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/api\/Renderer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/api\/Renderer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/api\/Renderer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/api\/Renderer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/api\/Renderer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/api\/Renderer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/api\/Renderer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/api\/Renderer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/api\/Renderer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/api\/Renderer.html", "kind" : "class"}, {"name" : "laika.api.Transformer", "shortDescription" : "Performs a transformation from text markup like Markdown or reStructuredTextto a target format like HTML as a String.", "object" : "laika\/api\/Transformer$.html", "members_class" : [{"label" : "transform", "tail" : "(input: String, path: Path): Either[ParserError, String]", "member" : "laika.api.Transformer.transform", "link" : "laika\/api\/Transformer.html#transform(input:String,path:laika.ast.Path):Either[laika.parse.markup.DocumentParser.ParserError,String]", "kind" : "def"}, {"label" : "transform", "tail" : "(input: String): Either[ParserError, String]", "member" : "laika.api.Transformer.transform", "link" : "laika\/api\/Transformer.html#transform(input:String):Either[laika.parse.markup.DocumentParser.ParserError,String]", "kind" : "def"}, {"member" : "laika.api.Transformer#<init>", "error" : "unsupported entity"}, {"label" : "renderer", "tail" : ": Renderer", "member" : "laika.api.Transformer.renderer", "link" : "laika\/api\/Transformer.html#renderer:laika.api.Renderer", "kind" : "val"}, {"label" : "parser", "tail" : ": MarkupParser", "member" : "laika.api.Transformer.parser", "link" : "laika\/api\/Transformer.html#parser:laika.api.MarkupParser", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/api\/Transformer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/api\/Transformer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/api\/Transformer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/api\/Transformer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/api\/Transformer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/api\/Transformer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/api\/Transformer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/Transformer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/Transformer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/Transformer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/api\/Transformer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/api\/Transformer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/api\/Transformer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/api\/Transformer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/api\/Transformer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/api\/Transformer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/api\/Transformer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/api\/Transformer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/api\/Transformer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "from", "tail" : "(format: MarkupFormat): Builder", "member" : "laika.api.Transformer.from", "link" : "laika\/api\/Transformer$.html#from(format:laika.factory.MarkupFormat):laika.api.Transformer.Builder", "kind" : "def"}, {"label" : "Builder", "tail" : "", "member" : "laika.api.Transformer.Builder", "link" : "laika\/api\/Transformer$.html#BuilderextendsAnyRef", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/api\/Transformer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/api\/Transformer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/api\/Transformer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/api\/Transformer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/api\/Transformer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/api\/Transformer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/api\/Transformer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/Transformer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/Transformer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/api\/Transformer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/api\/Transformer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/api\/Transformer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/api\/Transformer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/api\/Transformer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/api\/Transformer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/api\/Transformer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/api\/Transformer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/api\/Transformer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/api\/Transformer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/api\/Transformer.html", "kind" : "class"}], "laika.render.pdf" : [{"name" : "laika.render.pdf.FOConcatenation", "shortDescription" : "Concatenates the XSL-FO that serves as a basis for producing the final PDF outputand applies the default XSL-FO template to the entire result.", "object" : "laika\/render\/pdf\/FOConcatenation$.html", "members_object" : [{"label" : "apply", "tail" : "(result: RenderedTreeRoot[F], config: BookConfig, opConfig: OperationConfig): Either[Throwable, String]", "member" : "laika.render.pdf.FOConcatenation.apply", "link" : "laika\/render\/pdf\/FOConcatenation$.html#apply[F[_]](result:laika.io.model.RenderedTreeRoot[F],config:laika.format.PDF.BookConfig,opConfig:laika.api.builder.OperationConfig):Either[Throwable,String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/pdf\/FOConcatenation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/pdf\/FOConcatenation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/pdf\/FOConcatenation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/pdf\/FOConcatenation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/pdf\/FOConcatenation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/pdf\/FOConcatenation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/pdf\/FOConcatenation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/pdf\/FOConcatenation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/pdf\/FOConcatenation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/pdf\/FOConcatenation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/pdf\/FOConcatenation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/pdf\/FOConcatenation$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/render\/pdf\/FOConcatenation$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/pdf\/FOConcatenation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/pdf\/FOConcatenation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/pdf\/FOConcatenation$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/pdf\/FOConcatenation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/pdf\/FOConcatenation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/pdf\/FOConcatenation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.render.pdf.FopFactoryBuilder", "shortDescription" : "Creates a FopFactory instance based on user configuration, registering all fonts to be embedded intothe PDF.", "object" : "laika\/render\/pdf\/FopFactoryBuilder$.html", "members_object" : [{"label" : "build", "tail" : "(config: BookConfig, staticDocs: Seq[BinaryInput[F]])(arg0: Sync[F]): F[FopFactory]", "member" : "laika.render.pdf.FopFactoryBuilder.build", "link" : "laika\/render\/pdf\/FopFactoryBuilder$.html#build[F[_]](config:laika.format.PDF.BookConfig,staticDocs:Seq[laika.io.model.BinaryInput[F]])(implicitevidence$1:cats.effect.Sync[F]):F[org.apache.fop.apps.FopFactory]", "kind" : "def"}, {"label" : "generateXMLConfig", "tail" : "(config: BookConfig): String", "member" : "laika.render.pdf.FopFactoryBuilder.generateXMLConfig", "link" : "laika\/render\/pdf\/FopFactoryBuilder$.html#generateXMLConfig(config:laika.format.PDF.BookConfig):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/pdf\/FopFactoryBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/pdf\/FopFactoryBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/pdf\/FopFactoryBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/pdf\/FopFactoryBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/pdf\/FopFactoryBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/pdf\/FopFactoryBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/pdf\/FopFactoryBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/pdf\/FopFactoryBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/pdf\/FopFactoryBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/pdf\/FopFactoryBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/pdf\/FopFactoryBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/pdf\/FopFactoryBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/render\/pdf\/FopFactoryBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/pdf\/FopFactoryBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/pdf\/FopFactoryBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/pdf\/FopFactoryBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/pdf\/FopFactoryBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/pdf\/FopFactoryBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/pdf\/FopFactoryBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.render.pdf.FopResourceResolver", "shortDescription" : "Adapter for the ResourceResolver API of Apache FOP, allowing Laika to server any kind of InputStreamfrom its static input documents, including in-memory content or classpath resources,for which FOP does not have any support built in.", "members_class" : [{"label" : "getOutputStream", "tail" : "(uri: URI): OutputStream", "member" : "laika.render.pdf.FopResourceResolver.getOutputStream", "link" : "laika\/render\/pdf\/FopResourceResolver.html#getOutputStream(uri:java.net.URI):java.io.OutputStream", "kind" : "def"}, {"label" : "getResource", "tail" : "(uri: URI): Resource", "member" : "laika.render.pdf.FopResourceResolver.getResource", "link" : "laika\/render\/pdf\/FopResourceResolver.html#getResource(uri:java.net.URI):org.apache.xmlgraphics.io.Resource", "kind" : "def"}, {"member" : "laika.render.pdf.FopResourceResolver#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/pdf\/FopResourceResolver.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/pdf\/FopResourceResolver.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/pdf\/FopResourceResolver.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/pdf\/FopResourceResolver.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/pdf\/FopResourceResolver.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/pdf\/FopResourceResolver.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/pdf\/FopResourceResolver.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/pdf\/FopResourceResolver.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/pdf\/FopResourceResolver.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/pdf\/FopResourceResolver.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/pdf\/FopResourceResolver.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/pdf\/FopResourceResolver.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/render\/pdf\/FopResourceResolver.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/pdf\/FopResourceResolver.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/pdf\/FopResourceResolver.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/pdf\/FopResourceResolver.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/pdf\/FopResourceResolver.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/pdf\/FopResourceResolver.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/pdf\/FopResourceResolver.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/render\/pdf\/FopResourceResolver.html", "kind" : "class"}, {"name" : "laika.render.pdf.PDFNavigation", "shortDescription" : "Prepares a document tree for the PDF rendering step by inserting PDF bookmark elements.", "object" : "laika\/render\/pdf\/PDFNavigation$.html", "members_object" : [{"label" : "generateBookmarks", "tail" : "(result: RenderedTreeRoot[F], depth: Option[Int]): Map[String, Element]", "member" : "laika.render.pdf.PDFNavigation.generateBookmarks", "link" : "laika\/render\/pdf\/PDFNavigation$.html#generateBookmarks[F[_]](result:laika.io.model.RenderedTreeRoot[F],depth:Option[Int]):Map[String,laika.ast.Element]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/pdf\/PDFNavigation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/pdf\/PDFNavigation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/pdf\/PDFNavigation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/pdf\/PDFNavigation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/pdf\/PDFNavigation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/pdf\/PDFNavigation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/pdf\/PDFNavigation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/pdf\/PDFNavigation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/pdf\/PDFNavigation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/pdf\/PDFNavigation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/pdf\/PDFNavigation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/pdf\/PDFNavigation$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/render\/pdf\/PDFNavigation$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/pdf\/PDFNavigation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/pdf\/PDFNavigation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/pdf\/PDFNavigation$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/pdf\/PDFNavigation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/pdf\/PDFNavigation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/pdf\/PDFNavigation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.render.pdf.PDFRenderer", "shortDescription" : "Responsible for the final step in producing the binary PDF format from a single XSL-FO input streamthat represents the entire document and its navigation elements.", "members_class" : [{"label" : "render", "tail" : "(foInput: String, output: BinaryOutput[F], metadata: DocumentMetadata, staticDocuments: Seq[BinaryInput[F]])(arg0: Sync[F], arg1: Runtime[F]): F[Unit]", "member" : "laika.render.pdf.PDFRenderer.render", "link" : "laika\/render\/pdf\/PDFRenderer.html#render[F[_]](foInput:String,output:laika.io.model.BinaryOutput[F],metadata:laika.ast.DocumentMetadata,staticDocuments:Seq[laika.io.model.BinaryInput[F]])(implicitevidence$1:cats.effect.Sync[F],implicitevidence$2:laika.io.runtime.Runtime[F]):F[Unit]", "kind" : "def"}, {"member" : "laika.render.pdf.PDFRenderer#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/pdf\/PDFRenderer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/pdf\/PDFRenderer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/pdf\/PDFRenderer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/pdf\/PDFRenderer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/pdf\/PDFRenderer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/pdf\/PDFRenderer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/pdf\/PDFRenderer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/pdf\/PDFRenderer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/pdf\/PDFRenderer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/pdf\/PDFRenderer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/pdf\/PDFRenderer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/pdf\/PDFRenderer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/render\/pdf\/PDFRenderer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/pdf\/PDFRenderer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/pdf\/PDFRenderer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/pdf\/PDFRenderer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/pdf\/PDFRenderer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/pdf\/PDFRenderer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/pdf\/PDFRenderer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/render\/pdf\/PDFRenderer.html", "kind" : "class"}], "laika.io.descriptor" : [{"name" : "laika.io.descriptor.ExtensionBundleDescriptor", "shortDescription" : "Provides a short description of an extension bundle for tooling or logging.", "members_case class" : [{"label" : "formatted", "tail" : "(): String", "member" : "laika.io.descriptor.ExtensionBundleDescriptor.formatted", "link" : "laika\/io\/descriptor\/ExtensionBundleDescriptor.html#formatted:String", "kind" : "def"}, {"member" : "laika.io.descriptor.ExtensionBundleDescriptor#<init>", "error" : "unsupported entity"}, {"label" : "bundle", "tail" : ": ExtensionBundle", "member" : "laika.io.descriptor.ExtensionBundleDescriptor.bundle", "link" : "laika\/io\/descriptor\/ExtensionBundleDescriptor.html#bundle:laika.bundle.ExtensionBundle", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/descriptor\/ExtensionBundleDescriptor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/descriptor\/ExtensionBundleDescriptor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/descriptor\/ExtensionBundleDescriptor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/descriptor\/ExtensionBundleDescriptor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/descriptor\/ExtensionBundleDescriptor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/descriptor\/ExtensionBundleDescriptor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/descriptor\/ExtensionBundleDescriptor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/ExtensionBundleDescriptor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/ExtensionBundleDescriptor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/ExtensionBundleDescriptor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/descriptor\/ExtensionBundleDescriptor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/descriptor\/ExtensionBundleDescriptor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/descriptor\/ExtensionBundleDescriptor.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/descriptor\/ExtensionBundleDescriptor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/descriptor\/ExtensionBundleDescriptor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/descriptor\/ExtensionBundleDescriptor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/io\/descriptor\/ExtensionBundleDescriptor.html", "kind" : "case class"}, {"name" : "laika.io.descriptor.InputDescriptor", "shortDescription" : "Describes a single, textual or binary input for a parsing or rendering operation.", "object" : "laika\/io\/descriptor\/InputDescriptor$.html", "members_object" : [{"label" : "create", "tail" : "(input: BinaryInput[F]): InputDescriptor", "member" : "laika.io.descriptor.InputDescriptor.create", "link" : "laika\/io\/descriptor\/InputDescriptor$.html#create[F[_]](input:laika.io.model.BinaryInput[F]):laika.io.descriptor.InputDescriptor", "kind" : "def"}, {"label" : "create", "tail" : "(input: TextInput[F]): InputDescriptor", "member" : "laika.io.descriptor.InputDescriptor.create", "link" : "laika\/io\/descriptor\/InputDescriptor$.html#create[F[_]](input:laika.io.model.TextInput[F]):laika.io.descriptor.InputDescriptor", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/descriptor\/InputDescriptor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/descriptor\/InputDescriptor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/descriptor\/InputDescriptor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/descriptor\/InputDescriptor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/descriptor\/InputDescriptor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/descriptor\/InputDescriptor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/descriptor\/InputDescriptor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/InputDescriptor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/InputDescriptor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/InputDescriptor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/descriptor\/InputDescriptor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/descriptor\/InputDescriptor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/descriptor\/InputDescriptor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/descriptor\/InputDescriptor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/descriptor\/InputDescriptor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/descriptor\/InputDescriptor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/descriptor\/InputDescriptor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/descriptor\/InputDescriptor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/descriptor\/InputDescriptor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "laika.io.descriptor.InputDescriptor#<init>", "error" : "unsupported entity"}, {"label" : "docType", "tail" : ": DocumentType", "member" : "laika.io.descriptor.InputDescriptor.docType", "link" : "laika\/io\/descriptor\/InputDescriptor.html#docType:laika.ast.DocumentType", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "laika.io.descriptor.InputDescriptor.description", "link" : "laika\/io\/descriptor\/InputDescriptor.html#description:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/descriptor\/InputDescriptor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/descriptor\/InputDescriptor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/descriptor\/InputDescriptor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/descriptor\/InputDescriptor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/descriptor\/InputDescriptor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/descriptor\/InputDescriptor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/descriptor\/InputDescriptor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/InputDescriptor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/InputDescriptor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/InputDescriptor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/descriptor\/InputDescriptor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/descriptor\/InputDescriptor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/descriptor\/InputDescriptor.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/descriptor\/InputDescriptor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/descriptor\/InputDescriptor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/descriptor\/InputDescriptor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/io\/descriptor\/InputDescriptor.html", "kind" : "case class"}, {"name" : "laika.io.descriptor.ParserDescriptor", "shortDescription" : "Provides a description of a parsing operation, including the parsersand extension bundles used, as well as the input sources.", "object" : "laika\/io\/descriptor\/ParserDescriptor$.html", "members_object" : [{"label" : "create", "tail" : "(op: Op[F])(arg0: Sync[F], arg1: Runtime[F]): F[ParserDescriptor]", "member" : "laika.io.descriptor.ParserDescriptor.create", "link" : "laika\/io\/descriptor\/ParserDescriptor$.html#create[F[_]](op:laika.io.api.TreeParser.Op[F])(implicitevidence$1:cats.effect.Sync[F],implicitevidence$2:laika.io.runtime.Runtime[F]):F[laika.io.descriptor.ParserDescriptor]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/descriptor\/ParserDescriptor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/descriptor\/ParserDescriptor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/descriptor\/ParserDescriptor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/descriptor\/ParserDescriptor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/descriptor\/ParserDescriptor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/descriptor\/ParserDescriptor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/descriptor\/ParserDescriptor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/ParserDescriptor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/ParserDescriptor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/ParserDescriptor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/descriptor\/ParserDescriptor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/descriptor\/ParserDescriptor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/descriptor\/ParserDescriptor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/descriptor\/ParserDescriptor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/descriptor\/ParserDescriptor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/descriptor\/ParserDescriptor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/descriptor\/ParserDescriptor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/descriptor\/ParserDescriptor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/descriptor\/ParserDescriptor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "formatted", "tail" : "(): String", "member" : "laika.io.descriptor.ParserDescriptor.formatted", "link" : "laika\/io\/descriptor\/ParserDescriptor.html#formatted:String", "kind" : "def"}, {"member" : "laika.io.descriptor.ParserDescriptor#<init>", "error" : "unsupported entity"}, {"label" : "acceptRawContent", "tail" : ": Boolean", "member" : "laika.io.descriptor.ParserDescriptor.acceptRawContent", "link" : "laika\/io\/descriptor\/ParserDescriptor.html#acceptRawContent:Boolean", "kind" : "val"}, {"label" : "strict", "tail" : ": Boolean", "member" : "laika.io.descriptor.ParserDescriptor.strict", "link" : "laika\/io\/descriptor\/ParserDescriptor.html#strict:Boolean", "kind" : "val"}, {"label" : "inputs", "tail" : ": TreeInputDescriptor", "member" : "laika.io.descriptor.ParserDescriptor.inputs", "link" : "laika\/io\/descriptor\/ParserDescriptor.html#inputs:laika.io.descriptor.TreeInputDescriptor", "kind" : "val"}, {"label" : "bundles", "tail" : ": Seq[ExtensionBundleDescriptor]", "member" : "laika.io.descriptor.ParserDescriptor.bundles", "link" : "laika\/io\/descriptor\/ParserDescriptor.html#bundles:Seq[laika.io.descriptor.ExtensionBundleDescriptor]", "kind" : "val"}, {"label" : "parsers", "tail" : ": NonEmptyList[String]", "member" : "laika.io.descriptor.ParserDescriptor.parsers", "link" : "laika\/io\/descriptor\/ParserDescriptor.html#parsers:cats.data.NonEmptyList[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/descriptor\/ParserDescriptor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/descriptor\/ParserDescriptor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/descriptor\/ParserDescriptor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/descriptor\/ParserDescriptor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/descriptor\/ParserDescriptor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/descriptor\/ParserDescriptor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/descriptor\/ParserDescriptor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/ParserDescriptor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/ParserDescriptor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/ParserDescriptor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/descriptor\/ParserDescriptor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/descriptor\/ParserDescriptor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/descriptor\/ParserDescriptor.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/descriptor\/ParserDescriptor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/descriptor\/ParserDescriptor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/descriptor\/ParserDescriptor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/io\/descriptor\/ParserDescriptor.html", "kind" : "case class"}, {"name" : "laika.io.descriptor.RendererDescriptor", "shortDescription" : "Provides a description of a render operation, including the renderersand extension bundles used, as well as the output target.", "object" : "laika\/io\/descriptor\/RendererDescriptor$.html", "members_object" : [{"label" : "create", "tail" : "(op: Op[F])(arg0: Applicative[F]): F[RendererDescriptor]", "member" : "laika.io.descriptor.RendererDescriptor.create", "link" : "laika\/io\/descriptor\/RendererDescriptor$.html#create[F[_]](op:laika.io.api.BinaryTreeRenderer.Op[F])(implicitevidence$2:cats.Applicative[F]):F[laika.io.descriptor.RendererDescriptor]", "kind" : "def"}, {"label" : "create", "tail" : "(op: Op[F])(arg0: Applicative[F]): F[RendererDescriptor]", "member" : "laika.io.descriptor.RendererDescriptor.create", "link" : "laika\/io\/descriptor\/RendererDescriptor$.html#create[F[_]](op:laika.io.api.TreeRenderer.Op[F])(implicitevidence$1:cats.Applicative[F]):F[laika.io.descriptor.RendererDescriptor]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/descriptor\/RendererDescriptor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/descriptor\/RendererDescriptor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/descriptor\/RendererDescriptor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/descriptor\/RendererDescriptor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/descriptor\/RendererDescriptor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/descriptor\/RendererDescriptor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/descriptor\/RendererDescriptor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/RendererDescriptor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/RendererDescriptor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/RendererDescriptor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/descriptor\/RendererDescriptor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/descriptor\/RendererDescriptor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/descriptor\/RendererDescriptor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/descriptor\/RendererDescriptor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/descriptor\/RendererDescriptor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/descriptor\/RendererDescriptor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/descriptor\/RendererDescriptor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/descriptor\/RendererDescriptor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/descriptor\/RendererDescriptor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "formatted", "tail" : "(): String", "member" : "laika.io.descriptor.RendererDescriptor.formatted", "link" : "laika\/io\/descriptor\/RendererDescriptor.html#formatted:String", "kind" : "def"}, {"member" : "laika.io.descriptor.RendererDescriptor#<init>", "error" : "unsupported entity"}, {"label" : "renderFormatted", "tail" : ": Boolean", "member" : "laika.io.descriptor.RendererDescriptor.renderFormatted", "link" : "laika\/io\/descriptor\/RendererDescriptor.html#renderFormatted:Boolean", "kind" : "val"}, {"label" : "output", "tail" : ": String", "member" : "laika.io.descriptor.RendererDescriptor.output", "link" : "laika\/io\/descriptor\/RendererDescriptor.html#output:String", "kind" : "val"}, {"label" : "bundles", "tail" : ": Seq[ExtensionBundleDescriptor]", "member" : "laika.io.descriptor.RendererDescriptor.bundles", "link" : "laika\/io\/descriptor\/RendererDescriptor.html#bundles:Seq[laika.io.descriptor.ExtensionBundleDescriptor]", "kind" : "val"}, {"label" : "renderer", "tail" : ": String", "member" : "laika.io.descriptor.RendererDescriptor.renderer", "link" : "laika\/io\/descriptor\/RendererDescriptor.html#renderer:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/descriptor\/RendererDescriptor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/descriptor\/RendererDescriptor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/descriptor\/RendererDescriptor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/descriptor\/RendererDescriptor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/descriptor\/RendererDescriptor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/descriptor\/RendererDescriptor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/descriptor\/RendererDescriptor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/RendererDescriptor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/RendererDescriptor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/RendererDescriptor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/descriptor\/RendererDescriptor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/descriptor\/RendererDescriptor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/descriptor\/RendererDescriptor.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/descriptor\/RendererDescriptor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/descriptor\/RendererDescriptor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/descriptor\/RendererDescriptor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/io\/descriptor\/RendererDescriptor.html", "kind" : "case class"}, {"name" : "laika.io.descriptor.TransformerDescriptor", "shortDescription" : "Provides a description of a transform operation, including the parsers, renderers and extension bundles used,as well as the sources and output target.", "object" : "laika\/io\/descriptor\/TransformerDescriptor$.html", "members_object" : [{"label" : "create", "tail" : "(op: Op[F])(arg0: Sync[F], arg1: Runtime[F]): F[TransformerDescriptor]", "member" : "laika.io.descriptor.TransformerDescriptor.create", "link" : "laika\/io\/descriptor\/TransformerDescriptor$.html#create[F[_]](op:laika.io.api.BinaryTreeTransformer.Op[F])(implicitevidence$3:cats.effect.Sync[F],implicitevidence$4:laika.io.runtime.Runtime[F]):F[laika.io.descriptor.TransformerDescriptor]", "kind" : "def"}, {"label" : "create", "tail" : "(op: Op[F])(arg0: Sync[F], arg1: Runtime[F]): F[TransformerDescriptor]", "member" : "laika.io.descriptor.TransformerDescriptor.create", "link" : "laika\/io\/descriptor\/TransformerDescriptor$.html#create[F[_]](op:laika.io.api.TreeTransformer.Op[F])(implicitevidence$1:cats.effect.Sync[F],implicitevidence$2:laika.io.runtime.Runtime[F]):F[laika.io.descriptor.TransformerDescriptor]", "kind" : "def"}, {"label" : "apply", "tail" : "(parser: ParserDescriptor, renderer: RendererDescriptor): TransformerDescriptor", "member" : "laika.io.descriptor.TransformerDescriptor.apply", "link" : "laika\/io\/descriptor\/TransformerDescriptor$.html#apply(parser:laika.io.descriptor.ParserDescriptor,renderer:laika.io.descriptor.RendererDescriptor):laika.io.descriptor.TransformerDescriptor", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/descriptor\/TransformerDescriptor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/descriptor\/TransformerDescriptor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/descriptor\/TransformerDescriptor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/descriptor\/TransformerDescriptor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/descriptor\/TransformerDescriptor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/descriptor\/TransformerDescriptor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/descriptor\/TransformerDescriptor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/TransformerDescriptor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/TransformerDescriptor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/TransformerDescriptor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/descriptor\/TransformerDescriptor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/descriptor\/TransformerDescriptor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/descriptor\/TransformerDescriptor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/descriptor\/TransformerDescriptor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/descriptor\/TransformerDescriptor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/descriptor\/TransformerDescriptor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/descriptor\/TransformerDescriptor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/descriptor\/TransformerDescriptor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/descriptor\/TransformerDescriptor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "formatted", "tail" : "(): String", "member" : "laika.io.descriptor.TransformerDescriptor.formatted", "link" : "laika\/io\/descriptor\/TransformerDescriptor.html#formatted:String", "kind" : "def"}, {"member" : "laika.io.descriptor.TransformerDescriptor#<init>", "error" : "unsupported entity"}, {"label" : "renderFormatted", "tail" : ": Boolean", "member" : "laika.io.descriptor.TransformerDescriptor.renderFormatted", "link" : "laika\/io\/descriptor\/TransformerDescriptor.html#renderFormatted:Boolean", "kind" : "val"}, {"label" : "acceptRawContent", "tail" : ": Boolean", "member" : "laika.io.descriptor.TransformerDescriptor.acceptRawContent", "link" : "laika\/io\/descriptor\/TransformerDescriptor.html#acceptRawContent:Boolean", "kind" : "val"}, {"label" : "strict", "tail" : ": Boolean", "member" : "laika.io.descriptor.TransformerDescriptor.strict", "link" : "laika\/io\/descriptor\/TransformerDescriptor.html#strict:Boolean", "kind" : "val"}, {"label" : "output", "tail" : ": String", "member" : "laika.io.descriptor.TransformerDescriptor.output", "link" : "laika\/io\/descriptor\/TransformerDescriptor.html#output:String", "kind" : "val"}, {"label" : "inputs", "tail" : ": TreeInputDescriptor", "member" : "laika.io.descriptor.TransformerDescriptor.inputs", "link" : "laika\/io\/descriptor\/TransformerDescriptor.html#inputs:laika.io.descriptor.TreeInputDescriptor", "kind" : "val"}, {"label" : "bundles", "tail" : ": Seq[ExtensionBundleDescriptor]", "member" : "laika.io.descriptor.TransformerDescriptor.bundles", "link" : "laika\/io\/descriptor\/TransformerDescriptor.html#bundles:Seq[laika.io.descriptor.ExtensionBundleDescriptor]", "kind" : "val"}, {"label" : "renderer", "tail" : ": String", "member" : "laika.io.descriptor.TransformerDescriptor.renderer", "link" : "laika\/io\/descriptor\/TransformerDescriptor.html#renderer:String", "kind" : "val"}, {"label" : "parsers", "tail" : ": NonEmptyList[String]", "member" : "laika.io.descriptor.TransformerDescriptor.parsers", "link" : "laika\/io\/descriptor\/TransformerDescriptor.html#parsers:cats.data.NonEmptyList[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/descriptor\/TransformerDescriptor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/descriptor\/TransformerDescriptor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/descriptor\/TransformerDescriptor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/descriptor\/TransformerDescriptor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/descriptor\/TransformerDescriptor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/descriptor\/TransformerDescriptor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/descriptor\/TransformerDescriptor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/TransformerDescriptor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/TransformerDescriptor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/TransformerDescriptor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/descriptor\/TransformerDescriptor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/descriptor\/TransformerDescriptor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/descriptor\/TransformerDescriptor.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/descriptor\/TransformerDescriptor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/descriptor\/TransformerDescriptor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/descriptor\/TransformerDescriptor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/io\/descriptor\/TransformerDescriptor.html", "kind" : "case class"}, {"name" : "laika.io.descriptor.TreeInputDescriptor", "shortDescription" : "", "object" : "laika\/io\/descriptor\/TreeInputDescriptor$.html", "members_object" : [{"label" : "create", "tail" : "(input: F[InputTree[F]])(arg0: Sync[F]): F[TreeInputDescriptor]", "member" : "laika.io.descriptor.TreeInputDescriptor.create", "link" : "laika\/io\/descriptor\/TreeInputDescriptor$.html#create[F[_]](input:F[laika.io.model.InputTree[F]])(implicitevidence$1:cats.effect.Sync[F]):F[laika.io.descriptor.TreeInputDescriptor]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/descriptor\/TreeInputDescriptor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/descriptor\/TreeInputDescriptor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/descriptor\/TreeInputDescriptor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/descriptor\/TreeInputDescriptor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/descriptor\/TreeInputDescriptor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/descriptor\/TreeInputDescriptor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/descriptor\/TreeInputDescriptor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/TreeInputDescriptor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/TreeInputDescriptor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/TreeInputDescriptor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/descriptor\/TreeInputDescriptor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/descriptor\/TreeInputDescriptor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/descriptor\/TreeInputDescriptor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/descriptor\/TreeInputDescriptor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/descriptor\/TreeInputDescriptor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/descriptor\/TreeInputDescriptor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/descriptor\/TreeInputDescriptor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/descriptor\/TreeInputDescriptor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/descriptor\/TreeInputDescriptor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "formatted", "tail" : "(): String", "member" : "laika.io.descriptor.TreeInputDescriptor.formatted", "link" : "laika\/io\/descriptor\/TreeInputDescriptor.html#formatted:String", "kind" : "def"}, {"member" : "laika.io.descriptor.TreeInputDescriptor#<init>", "error" : "unsupported entity"}, {"label" : "sourceDirectories", "tail" : ": Seq[String]", "member" : "laika.io.descriptor.TreeInputDescriptor.sourceDirectories", "link" : "laika\/io\/descriptor\/TreeInputDescriptor.html#sourceDirectories:Seq[String]", "kind" : "val"}, {"label" : "inputs", "tail" : ": Seq[InputDescriptor]", "member" : "laika.io.descriptor.TreeInputDescriptor.inputs", "link" : "laika\/io\/descriptor\/TreeInputDescriptor.html#inputs:Seq[laika.io.descriptor.InputDescriptor]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/descriptor\/TreeInputDescriptor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/descriptor\/TreeInputDescriptor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/descriptor\/TreeInputDescriptor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/descriptor\/TreeInputDescriptor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/descriptor\/TreeInputDescriptor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/descriptor\/TreeInputDescriptor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/descriptor\/TreeInputDescriptor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/TreeInputDescriptor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/TreeInputDescriptor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/descriptor\/TreeInputDescriptor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/descriptor\/TreeInputDescriptor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/descriptor\/TreeInputDescriptor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/descriptor\/TreeInputDescriptor.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/descriptor\/TreeInputDescriptor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/descriptor\/TreeInputDescriptor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/descriptor\/TreeInputDescriptor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/io\/descriptor\/TreeInputDescriptor.html", "kind" : "case class"}], "laika.parse.code" : [{"name" : "laika.parse.code.CodeCategory", "members_trait" : [{"label" : "name", "tail" : "(): String", "member" : "laika.parse.code.CodeCategory.name", "link" : "laika\/parse\/code\/CodeCategory.html#name:String", "kind" : "def"}, {"label" : "prefix", "tail" : "(): String", "member" : "laika.parse.code.CodeCategory.prefix", "link" : "laika\/parse\/code\/CodeCategory.html#prefix:String", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/parse\/code\/CodeCategory.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/parse\/code\/CodeCategory.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/CodeCategory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/CodeCategory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/CodeCategory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/CodeCategory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/CodeCategory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/CodeCategory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/CodeCategory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/CodeCategory.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/CodeCategory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/CodeCategory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/CodeCategory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/CodeCategory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/CodeCategory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/CodeCategory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/CodeCategory.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/CodeCategory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/CodeCategory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/CodeCategory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/CodeCategory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/parse\/code\/CodeCategory.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/parse\/code\/CodeCategory.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/parse\/code\/CodeCategory.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "Represents a category that can be assigned to a span inside a code blockto facilitate syntax highlighting.", "object" : "laika\/parse\/code\/CodeCategory$.html", "members_object" : [{"label" : "Markup", "tail" : "", "member" : "laika.parse.code.CodeCategory.Markup", "link" : "laika\/parse\/code\/CodeCategory$.html#Markup", "kind" : "object"}, {"label" : "XML", "tail" : "", "member" : "laika.parse.code.CodeCategory.XML", "link" : "laika\/parse\/code\/CodeCategory$.html#XML", "kind" : "object"}, {"label" : "Tag", "tail" : "", "member" : "laika.parse.code.CodeCategory.Tag", "link" : "laika\/parse\/code\/CodeCategory$.html#Tag", "kind" : "object"}, {"label" : "Identifier", "tail" : "", "member" : "laika.parse.code.CodeCategory.Identifier", "link" : "laika\/parse\/code\/CodeCategory$.html#Identifier", "kind" : "object"}, {"label" : "DeclarationName", "tail" : "", "member" : "laika.parse.code.CodeCategory.DeclarationName", "link" : "laika\/parse\/code\/CodeCategory$.html#DeclarationName", "kind" : "object"}, {"label" : "AttributeName", "tail" : "", "member" : "laika.parse.code.CodeCategory.AttributeName", "link" : "laika\/parse\/code\/CodeCategory$.html#AttributeName", "kind" : "object"}, {"label" : "TypeName", "tail" : "", "member" : "laika.parse.code.CodeCategory.TypeName", "link" : "laika\/parse\/code\/CodeCategory$.html#TypeName", "kind" : "object"}, {"label" : "Substitution", "tail" : "", "member" : "laika.parse.code.CodeCategory.Substitution", "link" : "laika\/parse\/code\/CodeCategory$.html#Substitution", "kind" : "object"}, {"label" : "EscapeSequence", "tail" : "", "member" : "laika.parse.code.CodeCategory.EscapeSequence", "link" : "laika\/parse\/code\/CodeCategory$.html#EscapeSequence", "kind" : "object"}, {"label" : "LiteralValue", "tail" : "", "member" : "laika.parse.code.CodeCategory.LiteralValue", "link" : "laika\/parse\/code\/CodeCategory$.html#LiteralValue", "kind" : "object"}, {"label" : "RegexLiteral", "tail" : "", "member" : "laika.parse.code.CodeCategory.RegexLiteral", "link" : "laika\/parse\/code\/CodeCategory$.html#RegexLiteral", "kind" : "object"}, {"label" : "SymbolLiteral", "tail" : "", "member" : "laika.parse.code.CodeCategory.SymbolLiteral", "link" : "laika\/parse\/code\/CodeCategory$.html#SymbolLiteral", "kind" : "object"}, {"label" : "CharLiteral", "tail" : "", "member" : "laika.parse.code.CodeCategory.CharLiteral", "link" : "laika\/parse\/code\/CodeCategory$.html#CharLiteral", "kind" : "object"}, {"label" : "StringLiteral", "tail" : "", "member" : "laika.parse.code.CodeCategory.StringLiteral", "link" : "laika\/parse\/code\/CodeCategory$.html#StringLiteral", "kind" : "object"}, {"label" : "NumberLiteral", "tail" : "", "member" : "laika.parse.code.CodeCategory.NumberLiteral", "link" : "laika\/parse\/code\/CodeCategory$.html#NumberLiteral", "kind" : "object"}, {"label" : "BooleanLiteral", "tail" : "", "member" : "laika.parse.code.CodeCategory.BooleanLiteral", "link" : "laika\/parse\/code\/CodeCategory$.html#BooleanLiteral", "kind" : "object"}, {"label" : "Keyword", "tail" : "", "member" : "laika.parse.code.CodeCategory.Keyword", "link" : "laika\/parse\/code\/CodeCategory$.html#Keyword", "kind" : "object"}, {"label" : "Annotation", "tail" : "", "member" : "laika.parse.code.CodeCategory.Annotation", "link" : "laika\/parse\/code\/CodeCategory$.html#Annotation", "kind" : "object"}, {"label" : "Comment", "tail" : "", "member" : "laika.parse.code.CodeCategory.Comment", "link" : "laika\/parse\/code\/CodeCategory$.html#Comment", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/CodeCategory$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/CodeCategory$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/CodeCategory$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/CodeCategory$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/CodeCategory$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/CodeCategory$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/CodeCategory$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/CodeCategory$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/CodeCategory$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/CodeCategory$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/CodeCategory$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/CodeCategory$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/CodeCategory$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/CodeCategory$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/CodeCategory$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/CodeCategory$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/CodeCategory$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/CodeCategory$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/CodeCategory$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/parse\/code\/CodeCategory.html", "kind" : "trait"}, {"name" : "laika.parse.code.CodeSpanParser", "members_trait" : [{"label" : "++", "tail" : "(other: CodeSpanParser): CodeSpanParser", "member" : "laika.parse.code.CodeSpanParser.++", "link" : "laika\/parse\/code\/CodeSpanParser.html#++(other:laika.parse.code.CodeSpanParser):laika.parse.code.CodeSpanParser", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/CodeSpanParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/CodeSpanParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/CodeSpanParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/CodeSpanParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/CodeSpanParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/CodeSpanParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/CodeSpanParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/CodeSpanParser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/CodeSpanParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/CodeSpanParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/CodeSpanParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/CodeSpanParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/CodeSpanParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/CodeSpanParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/CodeSpanParser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/CodeSpanParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/CodeSpanParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/CodeSpanParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/CodeSpanParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "parsers", "tail" : "(): Seq[PrefixedParser[CategorizedCode]]", "member" : "laika.parse.code.CodeSpanParser.parsers", "link" : "laika\/parse\/code\/CodeSpanParser.html#parsers:Seq[laika.parse.text.PrefixedParser[laika.ast.CategorizedCode]]", "kind" : "abstract def"}], "shortDescription" : "A collection of code span parsers that are intended to be applied together.", "object" : "laika\/parse\/code\/CodeSpanParser$.html", "members_object" : [{"label" : "recursive", "tail" : "(parser: ⇒ CodeSpanParser): CodeSpanParser", "member" : "laika.parse.code.CodeSpanParser.recursive", "link" : "laika\/parse\/code\/CodeSpanParser$.html#recursive(parser:=>laika.parse.code.CodeSpanParser):laika.parse.code.CodeSpanParser", "kind" : "def"}, {"label" : "onLineStart", "tail" : "(category: CodeCategory)(parser: Parser[String]): CodeSpanParser", "member" : "laika.parse.code.CodeSpanParser.onLineStart", "link" : "laika\/parse\/code\/CodeSpanParser$.html#onLineStart(category:laika.parse.code.CodeCategory)(parser:laika.parse.Parser[String]):laika.parse.code.CodeSpanParser", "kind" : "def"}, {"label" : "onLineStart", "tail" : "(parser: Parser[Seq[CodeSpan]]): CodeSpanParser", "member" : "laika.parse.code.CodeSpanParser.onLineStart", "link" : "laika\/parse\/code\/CodeSpanParser$.html#onLineStart(parser:laika.parse.Parser[Seq[laika.ast.CodeSpan]]):laika.parse.code.CodeSpanParser", "kind" : "def"}, {"label" : "apply", "tail" : "(parser: PrefixedParser[Seq[CodeSpan]]): CodeSpanParser", "member" : "laika.parse.code.CodeSpanParser.apply", "link" : "laika\/parse\/code\/CodeSpanParser$.html#apply(parser:laika.parse.text.PrefixedParser[Seq[laika.ast.CodeSpan]]):laika.parse.code.CodeSpanParser", "kind" : "def"}, {"label" : "apply", "tail" : "(category: CodeCategory)(parser: PrefixedParser[String]): CodeSpanParser", "member" : "laika.parse.code.CodeSpanParser.apply", "link" : "laika\/parse\/code\/CodeSpanParser$.html#apply(category:laika.parse.code.CodeCategory)(parser:laika.parse.text.PrefixedParser[String]):laika.parse.code.CodeSpanParser", "kind" : "def"}, {"label" : "apply", "tail" : "(category: CodeCategory, start: String, end: String): CodeSpanParser", "member" : "laika.parse.code.CodeSpanParser.apply", "link" : "laika\/parse\/code\/CodeSpanParser$.html#apply(category:laika.parse.code.CodeCategory,start:String,end:String):laika.parse.code.CodeSpanParser", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/CodeSpanParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/CodeSpanParser$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/CodeSpanParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/CodeSpanParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/CodeSpanParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/CodeSpanParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/CodeSpanParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/CodeSpanParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/CodeSpanParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/CodeSpanParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/CodeSpanParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/CodeSpanParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/CodeSpanParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/CodeSpanParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/CodeSpanParser$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/CodeSpanParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/CodeSpanParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/CodeSpanParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/CodeSpanParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/parse\/code\/CodeSpanParser.html", "kind" : "trait"}, {"name" : "laika.parse.code.implicits", "shortDescription" : "", "object" : "laika\/parse\/code\/implicits$.html", "members_object" : [{"label" : "CodeStringParserOps", "tail" : "", "member" : "laika.parse.code.implicits.CodeStringParserOps", "link" : "laika\/parse\/code\/implicits$.html#CodeStringParserOps[T]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "CodeParserOps", "tail" : "", "member" : "laika.parse.code.implicits.CodeParserOps", "link" : "laika\/parse\/code\/implicits$.html#CodeParserOps[T]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/implicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/implicits$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/implicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/implicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/implicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/implicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/implicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/implicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/implicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/implicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/implicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/implicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/implicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/implicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/implicits$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/implicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/implicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/implicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/implicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.SyntaxHighlighting", "shortDescription" : "Extension that registers all code syntax highlighters provided out of the box.", "object" : "laika\/parse\/code\/SyntaxHighlighting$.html", "members_object" : [{"label" : "withSyntax", "tail" : "(syntax: SyntaxHighlighter*): ExtensionBundle", "member" : "laika.parse.code.SyntaxHighlighting.withSyntax", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#withSyntax(syntax:laika.bundle.SyntaxHighlighter*):laika.bundle.ExtensionBundle", "kind" : "def"}, {"label" : "parsers", "tail" : "(): ParserBundle", "member" : "laika.parse.code.SyntaxHighlighting.parsers", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#parsers:laika.bundle.ParserBundle", "kind" : "def"}, {"label" : "description", "tail" : ": String", "member" : "laika.parse.code.SyntaxHighlighting.description", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#description:String", "kind" : "val"}, {"label" : "origin", "tail" : ": BundleOrigin", "member" : "laika.parse.code.SyntaxHighlighting.origin", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#origin:laika.bundle.BundleOrigin", "kind" : "val"}, {"label" : "acceptRawContent", "tail" : "(): Boolean", "member" : "laika.bundle.ExtensionBundle.acceptRawContent", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#acceptRawContent:Boolean", "kind" : "def"}, {"label" : "useInStrictMode", "tail" : "(): Boolean", "member" : "laika.bundle.ExtensionBundle.useInStrictMode", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#useInStrictMode:Boolean", "kind" : "def"}, {"label" : "withBase", "tail" : "(base: ExtensionBundle): ExtensionBundle", "member" : "laika.bundle.ExtensionBundle.withBase", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#withBase(base:laika.bundle.ExtensionBundle):laika.bundle.ExtensionBundle", "kind" : "def"}, {"label" : "processExtension", "tail" : "(): PartialFunction[ExtensionBundle, ExtensionBundle]", "member" : "laika.bundle.ExtensionBundle.processExtension", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#processExtension:PartialFunction[laika.bundle.ExtensionBundle,laika.bundle.ExtensionBundle]", "kind" : "def"}, {"label" : "renderOverrides", "tail" : "(): Seq[RenderOverrides]", "member" : "laika.bundle.ExtensionBundle.renderOverrides", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#renderOverrides:Seq[laika.bundle.RenderOverrides]", "kind" : "def"}, {"label" : "rewriteRules", "tail" : "(): Seq[(DocumentCursor) ⇒ RewriteRules]", "member" : "laika.bundle.ExtensionBundle.rewriteRules", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#rewriteRules:Seq[laika.ast.DocumentCursor=>laika.ast.RewriteRules]", "kind" : "def"}, {"label" : "slugBuilder", "tail" : "(): Option[(String) ⇒ String]", "member" : "laika.bundle.ExtensionBundle.slugBuilder", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#slugBuilder:Option[String=>String]", "kind" : "def"}, {"label" : "docTypeMatcher", "tail" : "(): PartialFunction[Path, DocumentType]", "member" : "laika.bundle.ExtensionBundle.docTypeMatcher", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#docTypeMatcher:PartialFunction[laika.ast.Path,laika.ast.DocumentType]", "kind" : "def"}, {"label" : "baseConfig", "tail" : "(): Config", "member" : "laika.bundle.ExtensionBundle.baseConfig", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#baseConfig:laika.config.Config", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/SyntaxHighlighting$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "laika.io.model" : [{"name" : "laika.io.model.BinaryInput", "shortDescription" : "A binary input stream and its virtual path within the input tree.", "object" : "laika\/io\/model\/BinaryInput$.html", "members_object" : [{"label" : "fromString", "tail" : "(input: String, path: Path, targetFormats: TargetFormats)(arg0: Sync[F]): BinaryInput[F]", "member" : "laika.io.model.BinaryInput.fromString", "link" : "laika\/io\/model\/BinaryInput$.html#fromString[F[_]](input:String,path:laika.ast.Path,targetFormats:laika.rewrite.nav.TargetFormats)(implicitevidence$3:cats.effect.Sync[F]):laika.io.model.BinaryInput[F]", "kind" : "def"}, {"label" : "apply", "tail" : "(file: File, path: Path, formats: TargetFormats)(arg0: Sync[F]): BinaryInput[F]", "member" : "laika.io.model.BinaryInput.apply", "link" : "laika\/io\/model\/BinaryInput$.html#apply[F[_]](file:java.io.File,path:laika.ast.Path,formats:laika.rewrite.nav.TargetFormats)(implicitevidence$2:cats.effect.Sync[F]):laika.io.model.BinaryInput[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/BinaryInput$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/BinaryInput$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/BinaryInput$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/BinaryInput$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/BinaryInput$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/BinaryInput$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/BinaryInput$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/BinaryInput$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/BinaryInput$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/BinaryInput$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/BinaryInput$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/BinaryInput$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/model\/BinaryInput$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/BinaryInput$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/model\/BinaryInput$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/model\/BinaryInput$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/BinaryInput$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/BinaryInput$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/BinaryInput$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "asResource", "tail" : "(): Resource[F, InputStream]", "member" : "laika.io.model.BinaryInput.asResource", "link" : "laika\/io\/model\/BinaryInput.html#asResource:cats.effect.Resource[F,java.io.InputStream]", "kind" : "def"}, {"member" : "laika.io.model.BinaryInput#<init>", "error" : "unsupported entity"}, {"label" : "sourceFile", "tail" : ": Option[File]", "member" : "laika.io.model.BinaryInput.sourceFile", "link" : "laika\/io\/model\/BinaryInput.html#sourceFile:Option[java.io.File]", "kind" : "val"}, {"label" : "autoClose", "tail" : ": Boolean", "member" : "laika.io.model.BinaryInput.autoClose", "link" : "laika\/io\/model\/BinaryInput.html#autoClose:Boolean", "kind" : "val"}, {"label" : "formats", "tail" : ": TargetFormats", "member" : "laika.io.model.BinaryInput.formats", "link" : "laika\/io\/model\/BinaryInput.html#formats:laika.rewrite.nav.TargetFormats", "kind" : "val"}, {"label" : "stream", "tail" : ": () ⇒ InputStream", "member" : "laika.io.model.BinaryInput.stream", "link" : "laika\/io\/model\/BinaryInput.html#stream:()=>java.io.InputStream", "kind" : "val"}, {"label" : "path", "tail" : ": Path", "member" : "laika.io.model.BinaryInput.path", "link" : "laika\/io\/model\/BinaryInput.html#path:laika.ast.Path", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "laika.ast.Navigatable.name", "link" : "laika\/io\/model\/BinaryInput.html#name:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/BinaryInput.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/BinaryInput.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/BinaryInput.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/BinaryInput.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/BinaryInput.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/BinaryInput.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/BinaryInput.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/BinaryInput.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/BinaryInput.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/BinaryInput.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/BinaryInput.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/BinaryInput.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/BinaryInput.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/BinaryInput.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/BinaryInput.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/BinaryInput.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/io\/model\/BinaryInput.html", "kind" : "case class"}, {"name" : "laika.io.model.BinaryOutput", "shortDescription" : "A resource for binary output.", "members_case class" : [{"member" : "laika.io.model.BinaryOutput#<init>", "error" : "unsupported entity"}, {"label" : "targetFile", "tail" : ": Option[File]", "member" : "laika.io.model.BinaryOutput.targetFile", "link" : "laika\/io\/model\/BinaryOutput.html#targetFile:Option[java.io.File]", "kind" : "val"}, {"label" : "resource", "tail" : ": Resource[F, OutputStream]", "member" : "laika.io.model.BinaryOutput.resource", "link" : "laika\/io\/model\/BinaryOutput.html#resource:cats.effect.Resource[F,java.io.OutputStream]", "kind" : "val"}, {"label" : "path", "tail" : ": Path", "member" : "laika.io.model.BinaryOutput.path", "link" : "laika\/io\/model\/BinaryOutput.html#path:laika.ast.Path", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/BinaryOutput.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/BinaryOutput.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/BinaryOutput.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/BinaryOutput.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/BinaryOutput.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/BinaryOutput.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/BinaryOutput.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/BinaryOutput.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/BinaryOutput.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/BinaryOutput.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/BinaryOutput.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/BinaryOutput.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/BinaryOutput.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/BinaryOutput.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/BinaryOutput.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/BinaryOutput.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/io\/model\/BinaryOutput.html", "kind" : "case class"}, {"name" : "laika.io.model.DirectoryInput", "shortDescription" : "A directory in the file system containing input documents for a tree transformation.", "object" : "laika\/io\/model\/DirectoryInput$.html", "members_object" : [{"label" : "filter", "tail" : "(dir: File): (File) ⇒ Boolean", "member" : "laika.io.model.DirectoryInput.filter", "link" : "laika\/io\/model\/DirectoryInput$.html#filter(dir:java.io.File):java.io.File=>Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(directory: File)(codec: Codec): DirectoryInput", "member" : "laika.io.model.DirectoryInput.apply", "link" : "laika\/io\/model\/DirectoryInput$.html#apply(directory:java.io.File)(implicitcodec:scala.io.Codec):laika.io.model.DirectoryInput", "kind" : "def"}, {"label" : "hiddenFileFilter", "tail" : ": (File) ⇒ Boolean", "member" : "laika.io.model.DirectoryInput.hiddenFileFilter", "link" : "laika\/io\/model\/DirectoryInput$.html#hiddenFileFilter:java.io.File=>Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/DirectoryInput$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/DirectoryInput$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/DirectoryInput$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/DirectoryInput$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/DirectoryInput$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/DirectoryInput$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/DirectoryInput$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/DirectoryInput$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/DirectoryInput$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/DirectoryInput$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/DirectoryInput$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/DirectoryInput$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/model\/DirectoryInput$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/DirectoryInput$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/model\/DirectoryInput$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/model\/DirectoryInput$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/DirectoryInput$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/DirectoryInput$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/DirectoryInput$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "sourcePaths", "tail" : ": Seq[String]", "member" : "laika.io.model.DirectoryInput.sourcePaths", "link" : "laika\/io\/model\/DirectoryInput.html#sourcePaths:Seq[String]", "kind" : "lazy val"}, {"member" : "laika.io.model.DirectoryInput#<init>", "error" : "unsupported entity"}, {"label" : "mountPoint", "tail" : ": Path", "member" : "laika.io.model.DirectoryInput.mountPoint", "link" : "laika\/io\/model\/DirectoryInput.html#mountPoint:laika.ast.Path", "kind" : "val"}, {"label" : "fileFilter", "tail" : ": (File) ⇒ Boolean", "member" : "laika.io.model.DirectoryInput.fileFilter", "link" : "laika\/io\/model\/DirectoryInput.html#fileFilter:java.io.File=>Boolean", "kind" : "val"}, {"label" : "docTypeMatcher", "tail" : ": (Path) ⇒ DocumentType", "member" : "laika.io.model.DirectoryInput.docTypeMatcher", "link" : "laika\/io\/model\/DirectoryInput.html#docTypeMatcher:laika.ast.Path=>laika.ast.DocumentType", "kind" : "val"}, {"label" : "codec", "tail" : ": Codec", "member" : "laika.io.model.DirectoryInput.codec", "link" : "laika\/io\/model\/DirectoryInput.html#codec:scala.io.Codec", "kind" : "val"}, {"label" : "directories", "tail" : ": Seq[File]", "member" : "laika.io.model.DirectoryInput.directories", "link" : "laika\/io\/model\/DirectoryInput.html#directories:Seq[java.io.File]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/DirectoryInput.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/DirectoryInput.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/DirectoryInput.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/DirectoryInput.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/DirectoryInput.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/DirectoryInput.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/DirectoryInput.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/DirectoryInput.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/DirectoryInput.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/DirectoryInput.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/DirectoryInput.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/DirectoryInput.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/DirectoryInput.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/DirectoryInput.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/DirectoryInput.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/DirectoryInput.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/io\/model\/DirectoryInput.html", "kind" : "case class"}, {"name" : "laika.io.model.DirectoryOutput", "shortDescription" : "A directory as a target for a rendering operation of a document tree.", "members_case class" : [{"member" : "laika.io.model.DirectoryOutput#<init>", "error" : "unsupported entity"}, {"label" : "codec", "tail" : ": Codec", "member" : "laika.io.model.DirectoryOutput.codec", "link" : "laika\/io\/model\/DirectoryOutput.html#codec:scala.io.Codec", "kind" : "val"}, {"label" : "directory", "tail" : ": File", "member" : "laika.io.model.DirectoryOutput.directory", "link" : "laika\/io\/model\/DirectoryOutput.html#directory:java.io.File", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/DirectoryOutput.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/DirectoryOutput.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/DirectoryOutput.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/DirectoryOutput.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/DirectoryOutput.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/DirectoryOutput.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/DirectoryOutput.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/DirectoryOutput.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/DirectoryOutput.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/DirectoryOutput.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/DirectoryOutput.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/DirectoryOutput.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/DirectoryOutput.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/DirectoryOutput.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/DirectoryOutput.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/DirectoryOutput.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/io\/model\/DirectoryOutput.html", "kind" : "case class"}, {"name" : "laika.io.model.InputReader", "members_trait" : [{"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/io\/model\/InputReader.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/io\/model\/InputReader.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/InputReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/InputReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/InputReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/InputReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/InputReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/InputReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/InputReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/InputReader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/InputReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/InputReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/InputReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/InputReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/model\/InputReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/InputReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/model\/InputReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/model\/InputReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/InputReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/InputReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/InputReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/io\/model\/InputReader.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/io\/model\/InputReader.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/io\/model\/InputReader.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "laika\/io\/model\/InputReader.html", "kind" : "trait"}, {"name" : "laika.io.model.InputTree", "shortDescription" : "A (virtual) tree of input documents, either obtained from scanning a directory recursively orconstructed programmatically (or a mix of both).", "object" : "laika\/io\/model\/InputTree$.html", "members_object" : [{"label" : "empty", "tail" : "(): InputTree[F]", "member" : "laika.io.model.InputTree.empty", "link" : "laika\/io\/model\/InputTree$.html#empty[F[_]]:laika.io.model.InputTree[F]", "kind" : "def"}, {"label" : "apply", "tail" : "(arg0: Sync[F]): InputTreeBuilder[F]", "member" : "laika.io.model.InputTree.apply", "link" : "laika\/io\/model\/InputTree$.html#apply[F[_]](implicitevidence$8:cats.effect.Sync[F]):laika.io.model.InputTreeBuilder[F]", "kind" : "def"}, {"label" : "apply", "tail" : "(exclude: (File) ⇒ Boolean)(arg0: Sync[F]): InputTreeBuilder[F]", "member" : "laika.io.model.InputTree.apply", "link" : "laika\/io\/model\/InputTree$.html#apply[F[_]](exclude:java.io.File=>Boolean)(implicitevidence$7:cats.effect.Sync[F]):laika.io.model.InputTreeBuilder[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/InputTree$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/InputTree$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/InputTree$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/InputTree$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/InputTree$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/InputTree$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/InputTree$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/InputTree$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/InputTree$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/InputTree$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/InputTree$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/InputTree$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/model\/InputTree$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/InputTree$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/model\/InputTree$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/model\/InputTree$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/InputTree$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/InputTree$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/InputTree$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "+", "tail" : "(parsedResult: ParserResult): InputTree[F]", "member" : "laika.io.model.InputTree.+", "link" : "laika\/io\/model\/InputTree.html#+(parsedResult:laika.io.runtime.TreeResultBuilder.ParserResult):laika.io.model.InputTree[F]", "kind" : "def"}, {"label" : "+", "tail" : "(binaryInput: BinaryInput[F]): InputTree[F]", "member" : "laika.io.model.InputTree.+", "link" : "laika\/io\/model\/InputTree.html#+(binaryInput:laika.io.model.BinaryInput[F]):laika.io.model.InputTree[F]", "kind" : "def"}, {"label" : "+", "tail" : "(textInput: TextInput[F]): InputTree[F]", "member" : "laika.io.model.InputTree.+", "link" : "laika\/io\/model\/InputTree.html#+(textInput:laika.io.model.TextInput[F]):laika.io.model.InputTree[F]", "kind" : "def"}, {"label" : "++", "tail" : "(other: InputTree[F]): InputTree[F]", "member" : "laika.io.model.InputTree.++", "link" : "laika\/io\/model\/InputTree.html#++(other:laika.io.model.InputTree[F]):laika.io.model.InputTree[F]", "kind" : "def"}, {"label" : "allPaths", "tail" : ": Seq[Path]", "member" : "laika.io.model.InputTree.allPaths", "link" : "laika\/io\/model\/InputTree.html#allPaths:Seq[laika.ast.Path]", "kind" : "lazy val"}, {"member" : "laika.io.model.InputTree#<init>", "error" : "unsupported entity"}, {"label" : "sourcePaths", "tail" : ": Seq[String]", "member" : "laika.io.model.InputTree.sourcePaths", "link" : "laika\/io\/model\/InputTree.html#sourcePaths:Seq[String]", "kind" : "val"}, {"label" : "parsedResults", "tail" : ": Seq[ParserResult]", "member" : "laika.io.model.InputTree.parsedResults", "link" : "laika\/io\/model\/InputTree.html#parsedResults:Seq[laika.io.runtime.TreeResultBuilder.ParserResult]", "kind" : "val"}, {"label" : "binaryInputs", "tail" : ": Seq[BinaryInput[F]]", "member" : "laika.io.model.InputTree.binaryInputs", "link" : "laika\/io\/model\/InputTree.html#binaryInputs:Seq[laika.io.model.BinaryInput[F]]", "kind" : "val"}, {"label" : "textInputs", "tail" : ": Seq[TextInput[F]]", "member" : "laika.io.model.InputTree.textInputs", "link" : "laika\/io\/model\/InputTree.html#textInputs:Seq[laika.io.model.TextInput[F]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/InputTree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/InputTree.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/InputTree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/InputTree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/InputTree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/InputTree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/InputTree.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/InputTree.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/InputTree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/InputTree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/InputTree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/InputTree.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/InputTree.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/InputTree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/InputTree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/InputTree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/io\/model\/InputTree.html", "kind" : "case class"}, {"name" : "laika.io.model.InputTreeBuilder", "shortDescription" : "Builder API for freely constructing input trees from directories, files, classpath resources, in-memory stringsor pre-constructed AST trees.", "members_class" : [{"label" : "build", "tail" : "(docTypeMatcher: (Path) ⇒ DocumentType): F[InputTree[F]]", "member" : "laika.io.model.InputTreeBuilder.build", "link" : "laika\/io\/model\/InputTreeBuilder.html#build(docTypeMatcher:laika.ast.Path=>laika.ast.DocumentType):F[laika.io.model.InputTree[F]]", "kind" : "def"}, {"label" : "build", "tail" : "(): F[InputTree[F]]", "member" : "laika.io.model.InputTreeBuilder.build", "link" : "laika\/io\/model\/InputTreeBuilder.html#build:F[laika.io.model.InputTree[F]]", "kind" : "def"}, {"label" : "merge", "tail" : "(other: InputTreeBuilder[F]): InputTreeBuilder[F]", "member" : "laika.io.model.InputTreeBuilder.merge", "link" : "laika\/io\/model\/InputTreeBuilder.html#merge(other:laika.io.model.InputTreeBuilder[F]):laika.io.model.InputTreeBuilder[F]", "kind" : "def"}, {"label" : "withFileFilter", "tail" : "(filter: (File) ⇒ Boolean): InputTreeBuilder[F]", "member" : "laika.io.model.InputTreeBuilder.withFileFilter", "link" : "laika\/io\/model\/InputTreeBuilder.html#withFileFilter(filter:java.io.File=>Boolean):laika.io.model.InputTreeBuilder[F]", "kind" : "def"}, {"label" : "addStyles", "tail" : "(styles: Set[StyleDeclaration], path: Path, precedence: Precedence): InputTreeBuilder[F]", "member" : "laika.io.model.InputTreeBuilder.addStyles", "link" : "laika\/io\/model\/InputTreeBuilder.html#addStyles(styles:Set[laika.ast.StyleDeclaration],path:laika.ast.Path,precedence:laika.bundle.Precedence):laika.io.model.InputTreeBuilder[F]", "kind" : "def"}, {"label" : "addConfig", "tail" : "(config: Config, treePath: Path): InputTreeBuilder[F]", "member" : "laika.io.model.InputTreeBuilder.addConfig", "link" : "laika\/io\/model\/InputTreeBuilder.html#addConfig(config:laika.config.Config,treePath:laika.ast.Path):laika.io.model.InputTreeBuilder[F]", "kind" : "def"}, {"label" : "addTemplate", "tail" : "(doc: TemplateDocument): InputTreeBuilder[F]", "member" : "laika.io.model.InputTreeBuilder.addTemplate", "link" : "laika\/io\/model\/InputTreeBuilder.html#addTemplate(doc:laika.ast.TemplateDocument):laika.io.model.InputTreeBuilder[F]", "kind" : "def"}, {"label" : "addDocument", "tail" : "(doc: Document): InputTreeBuilder[F]", "member" : "laika.io.model.InputTreeBuilder.addDocument", "link" : "laika\/io\/model\/InputTreeBuilder.html#addDocument(doc:laika.ast.Document):laika.io.model.InputTreeBuilder[F]", "kind" : "def"}, {"label" : "addString", "tail" : "(str: String, mountPoint: Path): InputTreeBuilder[F]", "member" : "laika.io.model.InputTreeBuilder.addString", "link" : "laika\/io\/model\/InputTreeBuilder.html#addString(str:String,mountPoint:laika.ast.Path):laika.io.model.InputTreeBuilder[F]", "kind" : "def"}, {"label" : "addStream", "tail" : "(stream: ⇒ InputStream, mountPoint: Path, autoClose: Boolean)(codec: Codec): InputTreeBuilder[F]", "member" : "laika.io.model.InputTreeBuilder.addStream", "link" : "laika\/io\/model\/InputTreeBuilder.html#addStream(stream:=>java.io.InputStream,mountPoint:laika.ast.Path,autoClose:Boolean)(implicitcodec:scala.io.Codec):laika.io.model.InputTreeBuilder[F]", "kind" : "def"}, {"label" : "addClasspathResource", "tail" : "(name: String, mountPoint: Path)(codec: Codec): InputTreeBuilder[F]", "member" : "laika.io.model.InputTreeBuilder.addClasspathResource", "link" : "laika\/io\/model\/InputTreeBuilder.html#addClasspathResource(name:String,mountPoint:laika.ast.Path)(implicitcodec:scala.io.Codec):laika.io.model.InputTreeBuilder[F]", "kind" : "def"}, {"label" : "addFile", "tail" : "(file: File, mountPoint: Path)(codec: Codec): InputTreeBuilder[F]", "member" : "laika.io.model.InputTreeBuilder.addFile", "link" : "laika\/io\/model\/InputTreeBuilder.html#addFile(file:java.io.File,mountPoint:laika.ast.Path)(implicitcodec:scala.io.Codec):laika.io.model.InputTreeBuilder[F]", "kind" : "def"}, {"label" : "addFile", "tail" : "(name: String, mountPoint: Path)(codec: Codec): InputTreeBuilder[F]", "member" : "laika.io.model.InputTreeBuilder.addFile", "link" : "laika\/io\/model\/InputTreeBuilder.html#addFile(name:String,mountPoint:laika.ast.Path)(implicitcodec:scala.io.Codec):laika.io.model.InputTreeBuilder[F]", "kind" : "def"}, {"label" : "addDirectory", "tail" : "(dir: File, mountPoint: Path)(codec: Codec): InputTreeBuilder[F]", "member" : "laika.io.model.InputTreeBuilder.addDirectory", "link" : "laika\/io\/model\/InputTreeBuilder.html#addDirectory(dir:java.io.File,mountPoint:laika.ast.Path)(implicitcodec:scala.io.Codec):laika.io.model.InputTreeBuilder[F]", "kind" : "def"}, {"label" : "addDirectory", "tail" : "(dir: File)(codec: Codec): InputTreeBuilder[F]", "member" : "laika.io.model.InputTreeBuilder.addDirectory", "link" : "laika\/io\/model\/InputTreeBuilder.html#addDirectory(dir:java.io.File)(implicitcodec:scala.io.Codec):laika.io.model.InputTreeBuilder[F]", "kind" : "def"}, {"label" : "addDirectory", "tail" : "(name: String, mountPoint: Path)(codec: Codec): InputTreeBuilder[F]", "member" : "laika.io.model.InputTreeBuilder.addDirectory", "link" : "laika\/io\/model\/InputTreeBuilder.html#addDirectory(name:String,mountPoint:laika.ast.Path)(implicitcodec:scala.io.Codec):laika.io.model.InputTreeBuilder[F]", "kind" : "def"}, {"label" : "addDirectory", "tail" : "(name: String)(codec: Codec): InputTreeBuilder[F]", "member" : "laika.io.model.InputTreeBuilder.addDirectory", "link" : "laika\/io\/model\/InputTreeBuilder.html#addDirectory(name:String)(implicitcodec:scala.io.Codec):laika.io.model.InputTreeBuilder[F]", "kind" : "def"}, {"label" : "addDirectories", "tail" : "(dirs: Seq[File])(codec: Codec): InputTreeBuilder[F]", "member" : "laika.io.model.InputTreeBuilder.addDirectories", "link" : "laika\/io\/model\/InputTreeBuilder.html#addDirectories(dirs:Seq[java.io.File])(implicitcodec:scala.io.Codec):laika.io.model.InputTreeBuilder[F]", "kind" : "def"}, {"member" : "laika.io.model.InputTreeBuilder#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/InputTreeBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/InputTreeBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/InputTreeBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/InputTreeBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/InputTreeBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/InputTreeBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/InputTreeBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/InputTreeBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/InputTreeBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/InputTreeBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/InputTreeBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/InputTreeBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/model\/InputTreeBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/InputTreeBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/model\/InputTreeBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/model\/InputTreeBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/InputTreeBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/InputTreeBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/InputTreeBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/io\/model\/InputTreeBuilder.html", "kind" : "class"}, {"name" : "laika.io.model.OutputWriter", "members_trait" : [{"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/io\/model\/OutputWriter.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/io\/model\/OutputWriter.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/OutputWriter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/OutputWriter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/OutputWriter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/OutputWriter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/OutputWriter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/OutputWriter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/OutputWriter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/OutputWriter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/OutputWriter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/OutputWriter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/OutputWriter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/OutputWriter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/model\/OutputWriter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/OutputWriter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/model\/OutputWriter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/model\/OutputWriter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/OutputWriter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/OutputWriter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/OutputWriter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/io\/model\/OutputWriter.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/io\/model\/OutputWriter.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/io\/model\/OutputWriter.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "laika\/io\/model\/OutputWriter.html", "kind" : "trait"}, {"name" : "laika.io.model.ParsedTree", "shortDescription" : "The result of a parsing operation for an entire document tree.", "members_case class" : [{"label" : "addStaticDocuments", "tail" : "(newStaticDocs: Seq[BinaryInput[F]]): ParsedTree[F]", "member" : "laika.io.model.ParsedTree.addStaticDocuments", "link" : "laika\/io\/model\/ParsedTree.html#addStaticDocuments(newStaticDocs:Seq[laika.io.model.BinaryInput[F]]):laika.io.model.ParsedTree[F]", "kind" : "def"}, {"label" : "replaceStaticDocuments", "tail" : "(newStaticDocs: Seq[BinaryInput[F]]): ParsedTree[F]", "member" : "laika.io.model.ParsedTree.replaceStaticDocuments", "link" : "laika\/io\/model\/ParsedTree.html#replaceStaticDocuments(newStaticDocs:Seq[laika.io.model.BinaryInput[F]]):laika.io.model.ParsedTree[F]", "kind" : "def"}, {"label" : "removeStaticDocuments", "tail" : "(filter: (Path) ⇒ Boolean): ParsedTree[F]", "member" : "laika.io.model.ParsedTree.removeStaticDocuments", "link" : "laika\/io\/model\/ParsedTree.html#removeStaticDocuments(filter:laika.ast.Path=>Boolean):laika.io.model.ParsedTree[F]", "kind" : "def"}, {"member" : "laika.io.model.ParsedTree#<init>", "error" : "unsupported entity"}, {"label" : "staticDocuments", "tail" : ": Seq[BinaryInput[F]]", "member" : "laika.io.model.ParsedTree.staticDocuments", "link" : "laika\/io\/model\/ParsedTree.html#staticDocuments:Seq[laika.io.model.BinaryInput[F]]", "kind" : "val"}, {"label" : "root", "tail" : ": DocumentTreeRoot", "member" : "laika.io.model.ParsedTree.root", "link" : "laika\/io\/model\/ParsedTree.html#root:laika.ast.DocumentTreeRoot", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/ParsedTree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/ParsedTree.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/ParsedTree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/ParsedTree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/ParsedTree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/ParsedTree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/ParsedTree.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/ParsedTree.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/ParsedTree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/ParsedTree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/ParsedTree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/ParsedTree.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/ParsedTree.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/ParsedTree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/ParsedTree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/ParsedTree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/io\/model\/ParsedTree.html", "kind" : "case class"}, {"name" : "laika.io.model.PureReader", "shortDescription" : "", "members_case class" : [{"member" : "laika.io.model.PureReader#<init>", "error" : "unsupported entity"}, {"label" : "input", "tail" : ": String", "member" : "laika.io.model.PureReader.input", "link" : "laika\/io\/model\/PureReader.html#input:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/PureReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/PureReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/PureReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/PureReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/PureReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/PureReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/PureReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/PureReader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/PureReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/PureReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/PureReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/PureReader.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/PureReader.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/PureReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/PureReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/PureReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/io\/model\/PureReader.html", "kind" : "case class"}, {"name" : "laika.io.model.PureWriter", "shortDescription" : "", "object" : "laika\/io\/model\/PureWriter$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/PureWriter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/PureWriter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/PureWriter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/PureWriter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/PureWriter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/PureWriter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/PureWriter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/PureWriter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/PureWriter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/PureWriter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/PureWriter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/PureWriter$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/PureWriter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/model\/PureWriter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/PureWriter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/PureWriter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/PureWriter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.io.model.RenderContent", "members_trait" : [{"label" : "name", "tail" : ": String", "member" : "laika.ast.Navigatable.name", "link" : "laika\/io\/model\/RenderContent.html#name:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/RenderContent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/RenderContent.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/RenderContent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/RenderContent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/RenderContent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/RenderContent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/RenderContent.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/RenderContent.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/RenderContent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/RenderContent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/RenderContent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/RenderContent.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/model\/RenderContent.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/RenderContent.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/model\/RenderContent.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/model\/RenderContent.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/RenderContent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/RenderContent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/RenderContent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "asNavigationItem", "tail" : "(context: NavigationBuilderContext): NavigationItem", "member" : "laika.io.model.RenderContent.asNavigationItem", "link" : "laika\/io\/model\/RenderContent.html#asNavigationItem(context:laika.ast.NavigationBuilderContext):laika.ast.NavigationItem", "kind" : "abstract def"}, {"label" : "title", "tail" : "(): Option[SpanSequence]", "member" : "laika.io.model.RenderContent.title", "link" : "laika\/io\/model\/RenderContent.html#title:Option[laika.ast.SpanSequence]", "kind" : "abstract def"}, {"label" : "path", "tail" : "(): Path", "member" : "laika.ast.Navigatable.path", "link" : "laika\/io\/model\/RenderContent.html#path:laika.ast.Path", "kind" : "abstract def"}], "shortDescription" : "A titled, positional element in the tree of rendered documents.", "trait" : "laika\/io\/model\/RenderContent.html", "kind" : "trait"}, {"name" : "laika.io.model.RenderedDocument", "shortDescription" : "A single rendered document with the content as a plain string in the target format.", "members_case class" : [{"label" : "targetFormats", "tail" : ": TargetFormats", "member" : "laika.io.model.RenderedDocument.targetFormats", "link" : "laika\/io\/model\/RenderedDocument.html#targetFormats:laika.rewrite.nav.TargetFormats", "kind" : "val"}, {"member" : "laika.io.model.RenderedDocument#<init>", "error" : "unsupported entity"}, {"label" : "config", "tail" : ": Config", "member" : "laika.io.model.RenderedDocument.config", "link" : "laika\/io\/model\/RenderedDocument.html#config:laika.config.Config", "kind" : "val"}, {"label" : "content", "tail" : ": String", "member" : "laika.io.model.RenderedDocument.content", "link" : "laika\/io\/model\/RenderedDocument.html#content:String", "kind" : "val"}, {"label" : "sections", "tail" : ": Seq[SectionInfo]", "member" : "laika.io.model.RenderedDocument.sections", "link" : "laika\/io\/model\/RenderedDocument.html#sections:Seq[laika.ast.SectionInfo]", "kind" : "val"}, {"label" : "title", "tail" : ": Option[SpanSequence]", "member" : "laika.io.model.RenderedDocument.title", "link" : "laika\/io\/model\/RenderedDocument.html#title:Option[laika.ast.SpanSequence]", "kind" : "val"}, {"label" : "path", "tail" : ": Path", "member" : "laika.io.model.RenderedDocument.path", "link" : "laika\/io\/model\/RenderedDocument.html#path:laika.ast.Path", "kind" : "val"}, {"label" : "asNavigationItem", "tail" : "(context: NavigationBuilderContext): NavigationItem", "member" : "laika.ast.DocumentNavigation.asNavigationItem", "link" : "laika\/io\/model\/RenderedDocument.html#asNavigationItem(context:laika.ast.NavigationBuilderContext):laika.ast.NavigationItem", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "laika.ast.Navigatable.name", "link" : "laika\/io\/model\/RenderedDocument.html#name:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/RenderedDocument.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/RenderedDocument.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/RenderedDocument.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/RenderedDocument.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/RenderedDocument.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/RenderedDocument.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/RenderedDocument.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/RenderedDocument.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/RenderedDocument.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/RenderedDocument.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/RenderedDocument.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/RenderedDocument.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/RenderedDocument.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/RenderedDocument.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/RenderedDocument.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/RenderedDocument.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/io\/model\/RenderedDocument.html", "kind" : "case class"}, {"name" : "laika.io.model.RenderedTree", "shortDescription" : "Represents a node of the tree of rendered documents.", "members_case class" : [{"label" : "asNavigationItem", "tail" : "(context: NavigationBuilderContext): NavigationItem", "member" : "laika.io.model.RenderedTree.asNavigationItem", "link" : "laika\/io\/model\/RenderedTree.html#asNavigationItem(context:laika.ast.NavigationBuilderContext):laika.ast.NavigationItem", "kind" : "def"}, {"label" : "isEmpty", "tail" : ": Boolean", "member" : "laika.io.model.RenderedTree.isEmpty", "link" : "laika\/io\/model\/RenderedTree.html#isEmpty:Boolean", "kind" : "lazy val"}, {"label" : "allDocuments", "tail" : ": Seq[RenderedDocument]", "member" : "laika.io.model.RenderedTree.allDocuments", "link" : "laika\/io\/model\/RenderedTree.html#allDocuments:Seq[laika.io.model.RenderedDocument]", "kind" : "lazy val"}, {"member" : "laika.io.model.RenderedTree#<init>", "error" : "unsupported entity"}, {"label" : "titleDocument", "tail" : ": Option[RenderedDocument]", "member" : "laika.io.model.RenderedTree.titleDocument", "link" : "laika\/io\/model\/RenderedTree.html#titleDocument:Option[laika.io.model.RenderedDocument]", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[RenderContent]", "member" : "laika.io.model.RenderedTree.content", "link" : "laika\/io\/model\/RenderedTree.html#content:Seq[laika.io.model.RenderContent]", "kind" : "val"}, {"label" : "title", "tail" : ": Option[SpanSequence]", "member" : "laika.io.model.RenderedTree.title", "link" : "laika\/io\/model\/RenderedTree.html#title:Option[laika.ast.SpanSequence]", "kind" : "val"}, {"label" : "path", "tail" : ": Path", "member" : "laika.io.model.RenderedTree.path", "link" : "laika\/io\/model\/RenderedTree.html#path:laika.ast.Path", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "laika.ast.Navigatable.name", "link" : "laika\/io\/model\/RenderedTree.html#name:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/RenderedTree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/RenderedTree.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/RenderedTree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/RenderedTree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/RenderedTree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/RenderedTree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/RenderedTree.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/RenderedTree.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/RenderedTree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/RenderedTree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/RenderedTree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/RenderedTree.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/RenderedTree.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/RenderedTree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/RenderedTree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/RenderedTree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/io\/model\/RenderedTree.html", "kind" : "case class"}, {"name" : "laika.io.model.RenderedTreeRoot", "shortDescription" : "Represents the root of a tree of rendered documents.", "members_case class" : [{"label" : "allDocuments", "tail" : ": Seq[RenderedDocument]", "member" : "laika.io.model.RenderedTreeRoot.allDocuments", "link" : "laika\/io\/model\/RenderedTreeRoot.html#allDocuments:Seq[laika.io.model.RenderedDocument]", "kind" : "lazy val"}, {"label" : "titleDocument", "tail" : ": Option[RenderedDocument]", "member" : "laika.io.model.RenderedTreeRoot.titleDocument", "link" : "laika\/io\/model\/RenderedTreeRoot.html#titleDocument:Option[laika.io.model.RenderedDocument]", "kind" : "val"}, {"label" : "title", "tail" : ": Option[SpanSequence]", "member" : "laika.io.model.RenderedTreeRoot.title", "link" : "laika\/io\/model\/RenderedTreeRoot.html#title:Option[laika.ast.SpanSequence]", "kind" : "val"}, {"member" : "laika.io.model.RenderedTreeRoot#<init>", "error" : "unsupported entity"}, {"label" : "staticDocuments", "tail" : ": Seq[BinaryInput[F]]", "member" : "laika.io.model.RenderedTreeRoot.staticDocuments", "link" : "laika\/io\/model\/RenderedTreeRoot.html#staticDocuments:Seq[laika.io.model.BinaryInput[F]]", "kind" : "val"}, {"label" : "coverDocument", "tail" : ": Option[RenderedDocument]", "member" : "laika.io.model.RenderedTreeRoot.coverDocument", "link" : "laika\/io\/model\/RenderedTreeRoot.html#coverDocument:Option[laika.io.model.RenderedDocument]", "kind" : "val"}, {"label" : "styles", "tail" : ": StyleDeclarationSet", "member" : "laika.io.model.RenderedTreeRoot.styles", "link" : "laika\/io\/model\/RenderedTreeRoot.html#styles:laika.ast.StyleDeclarationSet", "kind" : "val"}, {"label" : "config", "tail" : ": Config", "member" : "laika.io.model.RenderedTreeRoot.config", "link" : "laika\/io\/model\/RenderedTreeRoot.html#config:laika.config.Config", "kind" : "val"}, {"label" : "defaultTemplate", "tail" : ": TemplateRoot", "member" : "laika.io.model.RenderedTreeRoot.defaultTemplate", "link" : "laika\/io\/model\/RenderedTreeRoot.html#defaultTemplate:laika.ast.TemplateRoot", "kind" : "val"}, {"label" : "tree", "tail" : ": RenderedTree", "member" : "laika.io.model.RenderedTreeRoot.tree", "link" : "laika\/io\/model\/RenderedTreeRoot.html#tree:laika.io.model.RenderedTree", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/RenderedTreeRoot.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/RenderedTreeRoot.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/RenderedTreeRoot.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/RenderedTreeRoot.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/RenderedTreeRoot.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/RenderedTreeRoot.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/RenderedTreeRoot.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/RenderedTreeRoot.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/RenderedTreeRoot.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/RenderedTreeRoot.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/RenderedTreeRoot.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/RenderedTreeRoot.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/RenderedTreeRoot.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/RenderedTreeRoot.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/RenderedTreeRoot.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/RenderedTreeRoot.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/io\/model\/RenderedTreeRoot.html", "kind" : "case class"}, {"name" : "laika.io.model.StreamReader", "shortDescription" : "", "members_case class" : [{"member" : "laika.io.model.StreamReader#<init>", "error" : "unsupported entity"}, {"label" : "sizeHint", "tail" : ": Int", "member" : "laika.io.model.StreamReader.sizeHint", "link" : "laika\/io\/model\/StreamReader.html#sizeHint:Int", "kind" : "val"}, {"label" : "input", "tail" : ": Reader", "member" : "laika.io.model.StreamReader.input", "link" : "laika\/io\/model\/StreamReader.html#input:java.io.Reader", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/StreamReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/StreamReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/StreamReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/StreamReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/StreamReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/StreamReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/StreamReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/StreamReader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/StreamReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/StreamReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/StreamReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/StreamReader.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/StreamReader.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/StreamReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/StreamReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/StreamReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/io\/model\/StreamReader.html", "kind" : "case class"}, {"name" : "laika.io.model.StreamWriter", "shortDescription" : "", "members_case class" : [{"member" : "laika.io.model.StreamWriter#<init>", "error" : "unsupported entity"}, {"label" : "output", "tail" : ": Writer", "member" : "laika.io.model.StreamWriter.output", "link" : "laika\/io\/model\/StreamWriter.html#output:java.io.Writer", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/StreamWriter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/StreamWriter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/StreamWriter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/StreamWriter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/StreamWriter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/StreamWriter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/StreamWriter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/StreamWriter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/StreamWriter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/StreamWriter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/StreamWriter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/StreamWriter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/StreamWriter.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/StreamWriter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/StreamWriter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/StreamWriter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/io\/model\/StreamWriter.html", "kind" : "case class"}, {"name" : "laika.io.model.StringTreeOutput", "shortDescription" : "Instructs the renderer to produce an in-memory representation of thetree of rendered outputs.", "object" : "laika\/io\/model\/StringTreeOutput$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/StringTreeOutput$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/StringTreeOutput$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/StringTreeOutput$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/StringTreeOutput$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/StringTreeOutput$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/StringTreeOutput$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/StringTreeOutput$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/StringTreeOutput$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/StringTreeOutput$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/StringTreeOutput$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/StringTreeOutput$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/StringTreeOutput$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/StringTreeOutput$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/model\/StringTreeOutput$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/StringTreeOutput$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/StringTreeOutput$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/StringTreeOutput$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.io.model.TextInput", "shortDescription" : "Character input for the various parsers of this library.", "object" : "laika\/io\/model\/TextInput$.html", "members_object" : [{"label" : "fromStream", "tail" : "(path: Path, docType: TextDocumentType, stream: F[InputStream], codec: Codec, autoClose: Boolean)(arg0: Sync[F]): TextInput[F]", "member" : "laika.io.model.TextInput.fromStream", "link" : "laika\/io\/model\/TextInput$.html#fromStream[F[_]](path:laika.ast.Path,docType:laika.ast.TextDocumentType,stream:F[java.io.InputStream],codec:scala.io.Codec,autoClose:Boolean)(implicitevidence$6:cats.effect.Sync[F]):laika.io.model.TextInput[F]", "kind" : "def"}, {"label" : "fromFile", "tail" : "(path: Path, docType: TextDocumentType, file: File, codec: Codec)(arg0: Sync[F]): TextInput[F]", "member" : "laika.io.model.TextInput.fromFile", "link" : "laika\/io\/model\/TextInput$.html#fromFile[F[_]](path:laika.ast.Path,docType:laika.ast.TextDocumentType,file:java.io.File,codec:scala.io.Codec)(implicitevidence$5:cats.effect.Sync[F]):laika.io.model.TextInput[F]", "kind" : "def"}, {"label" : "fromString", "tail" : "(path: Path, docType: TextDocumentType, input: String)(arg0: Applicative[F]): TextInput[F]", "member" : "laika.io.model.TextInput.fromString", "link" : "laika\/io\/model\/TextInput$.html#fromString[F[_]](path:laika.ast.Path,docType:laika.ast.TextDocumentType,input:String)(implicitevidence$4:cats.Applicative[F]):laika.io.model.TextInput[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/TextInput$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/TextInput$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/TextInput$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/TextInput$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/TextInput$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/TextInput$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/TextInput$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/TextInput$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/TextInput$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/TextInput$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/TextInput$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/TextInput$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/model\/TextInput$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/TextInput$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/model\/TextInput$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/model\/TextInput$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/TextInput$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/TextInput$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/TextInput$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "laika.io.model.TextInput#<init>", "error" : "unsupported entity"}, {"label" : "sourceFile", "tail" : ": Option[File]", "member" : "laika.io.model.TextInput.sourceFile", "link" : "laika\/io\/model\/TextInput.html#sourceFile:Option[java.io.File]", "kind" : "val"}, {"label" : "input", "tail" : ": Resource[F, InputReader]", "member" : "laika.io.model.TextInput.input", "link" : "laika\/io\/model\/TextInput.html#input:cats.effect.Resource[F,laika.io.model.InputReader]", "kind" : "val"}, {"label" : "docType", "tail" : ": TextDocumentType", "member" : "laika.io.model.TextInput.docType", "link" : "laika\/io\/model\/TextInput.html#docType:laika.ast.TextDocumentType", "kind" : "val"}, {"label" : "path", "tail" : ": Path", "member" : "laika.io.model.TextInput.path", "link" : "laika\/io\/model\/TextInput.html#path:laika.ast.Path", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "laika.ast.Navigatable.name", "link" : "laika\/io\/model\/TextInput.html#name:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/TextInput.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/TextInput.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/TextInput.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/TextInput.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/TextInput.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/TextInput.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/TextInput.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/TextInput.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/TextInput.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/TextInput.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/TextInput.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/TextInput.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/TextInput.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/TextInput.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/TextInput.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/TextInput.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/io\/model\/TextInput.html", "kind" : "case class"}, {"name" : "laika.io.model.TextOutput", "shortDescription" : "Character output for the various renderers of this library", "object" : "laika\/io\/model\/TextOutput$.html", "members_object" : [{"label" : "forStream", "tail" : "(path: Path, stream: F[OutputStream], codec: Codec, autoClose: Boolean)(arg0: Sync[F]): TextOutput[F]", "member" : "laika.io.model.TextOutput.forStream", "link" : "laika\/io\/model\/TextOutput$.html#forStream[F[_]](path:laika.ast.Path,stream:F[java.io.OutputStream],codec:scala.io.Codec,autoClose:Boolean)(implicitevidence$3:cats.effect.Sync[F]):laika.io.model.TextOutput[F]", "kind" : "def"}, {"label" : "forFile", "tail" : "(path: Path, file: File, codec: Codec)(arg0: Sync[F]): TextOutput[F]", "member" : "laika.io.model.TextOutput.forFile", "link" : "laika\/io\/model\/TextOutput$.html#forFile[F[_]](path:laika.ast.Path,file:java.io.File,codec:scala.io.Codec)(implicitevidence$2:cats.effect.Sync[F]):laika.io.model.TextOutput[F]", "kind" : "def"}, {"label" : "forString", "tail" : "(path: Path)(arg0: Applicative[F]): TextOutput[F]", "member" : "laika.io.model.TextOutput.forString", "link" : "laika\/io\/model\/TextOutput$.html#forString[F[_]](path:laika.ast.Path)(implicitevidence$1:cats.Applicative[F]):laika.io.model.TextOutput[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/TextOutput$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/TextOutput$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/TextOutput$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/TextOutput$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/TextOutput$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/TextOutput$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/TextOutput$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/TextOutput$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/TextOutput$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/TextOutput$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/TextOutput$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/TextOutput$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/model\/TextOutput$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/TextOutput$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/model\/TextOutput$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/model\/TextOutput$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/TextOutput$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/TextOutput$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/TextOutput$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "laika.io.model.TextOutput#<init>", "error" : "unsupported entity"}, {"label" : "targetFile", "tail" : ": Option[File]", "member" : "laika.io.model.TextOutput.targetFile", "link" : "laika\/io\/model\/TextOutput.html#targetFile:Option[java.io.File]", "kind" : "val"}, {"label" : "resource", "tail" : ": Resource[F, OutputWriter]", "member" : "laika.io.model.TextOutput.resource", "link" : "laika\/io\/model\/TextOutput.html#resource:cats.effect.Resource[F,laika.io.model.OutputWriter]", "kind" : "val"}, {"label" : "path", "tail" : ": Path", "member" : "laika.io.model.TextOutput.path", "link" : "laika\/io\/model\/TextOutput.html#path:laika.ast.Path", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/TextOutput.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/TextOutput.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/TextOutput.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/TextOutput.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/TextOutput.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/TextOutput.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/TextOutput.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/TextOutput.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/TextOutput.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/TextOutput.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/TextOutput.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/TextOutput.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/TextOutput.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/TextOutput.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/TextOutput.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/TextOutput.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/io\/model\/TextOutput.html", "kind" : "case class"}, {"name" : "laika.io.model.TreeOutput", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/model\/TreeOutput.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/model\/TreeOutput.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/model\/TreeOutput.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/model\/TreeOutput.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/model\/TreeOutput.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/model\/TreeOutput.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/model\/TreeOutput.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/TreeOutput.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/TreeOutput.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/model\/TreeOutput.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/model\/TreeOutput.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/model\/TreeOutput.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/model\/TreeOutput.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/model\/TreeOutput.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/model\/TreeOutput.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/model\/TreeOutput.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/model\/TreeOutput.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/model\/TreeOutput.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/model\/TreeOutput.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A (virtual) tree of output documents.", "trait" : "laika\/io\/model\/TreeOutput.html", "kind" : "trait"}], "laika.helium.generate" : [{"name" : "laika.helium.generate.FOStyles", "shortDescription" : "", "object" : "laika\/helium\/generate\/FOStyles$.html", "members_object" : [{"label" : "defaultPath", "tail" : ": Path", "member" : "laika.helium.generate.FOStyles.defaultPath", "link" : "laika\/helium\/generate\/FOStyles$.html#defaultPath:laika.ast.Path", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/helium\/generate\/FOStyles$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/helium\/generate\/FOStyles$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/helium\/generate\/FOStyles$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/helium\/generate\/FOStyles$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/helium\/generate\/FOStyles$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/helium\/generate\/FOStyles$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/helium\/generate\/FOStyles$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/generate\/FOStyles$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/generate\/FOStyles$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/generate\/FOStyles$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/helium\/generate\/FOStyles$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/helium\/generate\/FOStyles$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/helium\/generate\/FOStyles$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/helium\/generate\/FOStyles$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/helium\/generate\/FOStyles$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/helium\/generate\/FOStyles$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/helium\/generate\/FOStyles$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/helium\/generate\/FOStyles$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/helium\/generate\/FOStyles$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "laika.config" : [{"name" : "laika.config.ArrayValue", "shortDescription" : "", "members_case class" : [{"label" : "isEmpty", "tail" : "(): Boolean", "member" : "laika.config.ArrayValue.isEmpty", "link" : "laika\/config\/ArrayValue.html#isEmpty:Boolean", "kind" : "def"}, {"member" : "laika.config.ArrayValue#<init>", "error" : "unsupported entity"}, {"label" : "values", "tail" : ": Seq[ConfigValue]", "member" : "laika.config.ArrayValue.values", "link" : "laika\/config\/ArrayValue.html#values:Seq[laika.config.ConfigValue]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/ArrayValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/ArrayValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/ArrayValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/ArrayValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/ArrayValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/ArrayValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/ArrayValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ArrayValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ArrayValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ArrayValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/ArrayValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/ArrayValue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/ArrayValue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/ArrayValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/ArrayValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/ArrayValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/config\/ArrayValue.html", "kind" : "case class"}, {"name" : "laika.config.ASTValue", "shortDescription" : "A value containing an AST element obtained from text markup or templates.", "members_case class" : [{"member" : "laika.config.ASTValue#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": Element", "member" : "laika.config.ASTValue.value", "link" : "laika\/config\/ASTValue.html#value:laika.ast.Element", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/ASTValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/ASTValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/ASTValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/ASTValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/ASTValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/ASTValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/ASTValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ASTValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ASTValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ASTValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/ASTValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/ASTValue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/ASTValue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/ASTValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/ASTValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/ASTValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/config\/ASTValue.html", "kind" : "case class"}, {"name" : "laika.config.BooleanValue", "shortDescription" : "", "members_case class" : [{"label" : "render", "tail" : "(): String", "member" : "laika.config.BooleanValue.render", "link" : "laika\/config\/BooleanValue.html#render:String", "kind" : "def"}, {"member" : "laika.config.BooleanValue#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": Boolean", "member" : "laika.config.BooleanValue.value", "link" : "laika\/config\/BooleanValue.html#value:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/BooleanValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/BooleanValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/BooleanValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/BooleanValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/BooleanValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/BooleanValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/BooleanValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/BooleanValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/BooleanValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/BooleanValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/BooleanValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/BooleanValue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/BooleanValue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/BooleanValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/BooleanValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/BooleanValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/config\/BooleanValue.html", "kind" : "case class"}, {"name" : "laika.config.Config", "members_trait" : [{"label" : "withValue", "tail" : "(value: T)(encoder: ConfigEncoder[T], defaultKey: DefaultKey[T]): ConfigBuilder", "member" : "laika.config.Config.withValue", "link" : "laika\/config\/Config.html#withValue[T](value:T)(implicitencoder:laika.config.ConfigEncoder[T],implicitdefaultKey:laika.config.DefaultKey[T]):laika.config.ConfigBuilder", "kind" : "def"}, {"label" : "withValue", "tail" : "(key: Key, value: T)(encoder: ConfigEncoder[T]): ConfigBuilder", "member" : "laika.config.Config.withValue", "link" : "laika\/config\/Config.html#withValue[T](key:laika.config.Key,value:T)(implicitencoder:laika.config.ConfigEncoder[T]):laika.config.ConfigBuilder", "kind" : "def"}, {"label" : "withValue", "tail" : "(key: String, value: T)(encoder: ConfigEncoder[T]): ConfigBuilder", "member" : "laika.config.Config.withValue", "link" : "laika\/config\/Config.html#withValue[T](key:String,value:T)(implicitencoder:laika.config.ConfigEncoder[T]):laika.config.ConfigBuilder", "kind" : "def"}, {"label" : "get", "tail" : "(decoder: ConfigDecoder[T], defaultKey: DefaultKey[T]): ConfigResult[T]", "member" : "laika.config.Config.get", "link" : "laika\/config\/Config.html#get[T](implicitdecoder:laika.config.ConfigDecoder[T],implicitdefaultKey:laika.config.DefaultKey[T]):laika.config.Config.ConfigResult[T]", "kind" : "def"}, {"label" : "getOpt", "tail" : "(key: String)(decoder: ConfigDecoder[T]): ConfigResult[Option[T]]", "member" : "laika.config.Config.getOpt", "link" : "laika\/config\/Config.html#getOpt[T](key:String)(implicitdecoder:laika.config.ConfigDecoder[T]):laika.config.Config.ConfigResult[Option[T]]", "kind" : "def"}, {"label" : "getOpt", "tail" : "(decoder: ConfigDecoder[T], defaultKey: DefaultKey[T]): ConfigResult[Option[T]]", "member" : "laika.config.Config.getOpt", "link" : "laika\/config\/Config.html#getOpt[T](implicitdecoder:laika.config.ConfigDecoder[T],implicitdefaultKey:laika.config.DefaultKey[T]):laika.config.Config.ConfigResult[Option[T]]", "kind" : "def"}, {"label" : "getOpt", "tail" : "(key: Key)(decoder: ConfigDecoder[T]): ConfigResult[Option[T]]", "member" : "laika.config.Config.getOpt", "link" : "laika\/config\/Config.html#getOpt[T](key:laika.config.Key)(implicitdecoder:laika.config.ConfigDecoder[T]):laika.config.Config.ConfigResult[Option[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(key: String, default: ⇒ T)(decoder: ConfigDecoder[T]): ConfigResult[T]", "member" : "laika.config.Config.get", "link" : "laika\/config\/Config.html#get[T](key:String,default:=>T)(implicitdecoder:laika.config.ConfigDecoder[T]):laika.config.Config.ConfigResult[T]", "kind" : "def"}, {"label" : "get", "tail" : "(key: Key, default: ⇒ T)(decoder: ConfigDecoder[T]): ConfigResult[T]", "member" : "laika.config.Config.get", "link" : "laika\/config\/Config.html#get[T](key:laika.config.Key,default:=>T)(implicitdecoder:laika.config.ConfigDecoder[T]):laika.config.Config.ConfigResult[T]", "kind" : "def"}, {"label" : "get", "tail" : "(key: String)(decoder: ConfigDecoder[T]): ConfigResult[T]", "member" : "laika.config.Config.get", "link" : "laika\/config\/Config.html#get[T](key:String)(implicitdecoder:laika.config.ConfigDecoder[T]):laika.config.Config.ConfigResult[T]", "kind" : "def"}, {"label" : "hasKey", "tail" : "(key: String): Boolean", "member" : "laika.config.Config.hasKey", "link" : "laika\/config\/Config.html#hasKey(key:String):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/Config.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/Config.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/Config.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/Config.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/Config.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/Config.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/Config.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/Config.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/Config.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/Config.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/Config.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/Config.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/config\/Config.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/Config.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/config\/Config.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/config\/Config.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/Config.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/Config.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/Config.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withOrigin", "tail" : "(origin: Origin): Config", "member" : "laika.config.Config.withOrigin", "link" : "laika\/config\/Config.html#withOrigin(origin:laika.config.Origin):laika.config.Config", "kind" : "abstract def"}, {"label" : "withFallback", "tail" : "(other: Config): Config", "member" : "laika.config.Config.withFallback", "link" : "laika\/config\/Config.html#withFallback(other:laika.config.Config):laika.config.Config", "kind" : "abstract def"}, {"label" : "get", "tail" : "(key: Key)(decoder: ConfigDecoder[T]): ConfigResult[T]", "member" : "laika.config.Config.get", "link" : "laika\/config\/Config.html#get[T](key:laika.config.Key)(implicitdecoder:laika.config.ConfigDecoder[T]):laika.config.Config.ConfigResult[T]", "kind" : "abstract def"}, {"label" : "hasKey", "tail" : "(key: Key): Boolean", "member" : "laika.config.Config.hasKey", "link" : "laika\/config\/Config.html#hasKey(key:laika.config.Key):Boolean", "kind" : "abstract def"}, {"label" : "origin", "tail" : "(): Origin", "member" : "laika.config.Config.origin", "link" : "laika\/config\/Config.html#origin:laika.config.Origin", "kind" : "abstract def"}], "shortDescription" : "API for retrieving configuration values based on a string key and a decoder.", "object" : "laika\/config\/Config$.html", "members_object" : [{"label" : "empty", "tail" : ": Config", "member" : "laika.config.Config.empty", "link" : "laika\/config\/Config$.html#empty:laika.config.Config", "kind" : "val"}, {"label" : "IncludeMap", "tail" : "", "member" : "laika.config.Config.IncludeMap", "link" : "laika\/config\/Config$.html#IncludeMap=Map[laika.parse.hocon.IncludeResource,Either[laika.config.ConfigError,laika.parse.hocon.ObjectBuilderValue]]", "kind" : "type"}, {"label" : "ConfigResult", "tail" : "", "member" : "laika.config.Config.ConfigResult", "link" : "laika\/config\/Config$.html#ConfigResult[T]=Either[laika.config.ConfigError,T]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/Config$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/Config$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/Config$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/Config$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/Config$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/Config$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/Config$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/Config$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/Config$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/Config$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/Config$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/Config$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/config\/Config$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/Config$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/config\/Config$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/config\/Config$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/Config$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/Config$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/Config$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/config\/Config.html", "kind" : "trait"}, {"name" : "laika.config.ConfigBuilder", "shortDescription" : "A builder for creating a Config instance programmatically.", "object" : "laika\/config\/ConfigBuilder$.html", "members_class" : [{"label" : "build", "tail" : "(newFallback: Config): Config", "member" : "laika.config.ConfigBuilder.build", "link" : "laika\/config\/ConfigBuilder.html#build(newFallback:laika.config.Config):laika.config.Config", "kind" : "def"}, {"label" : "build", "tail" : "(): Config", "member" : "laika.config.ConfigBuilder.build", "link" : "laika\/config\/ConfigBuilder.html#build:laika.config.Config", "kind" : "def"}, {"label" : "withFallback", "tail" : "(newFallback: Config): ConfigBuilder", "member" : "laika.config.ConfigBuilder.withFallback", "link" : "laika\/config\/ConfigBuilder.html#withFallback(newFallback:laika.config.Config):laika.config.ConfigBuilder", "kind" : "def"}, {"label" : "withValue", "tail" : "(key: Key, value: Option[T])(encoder: ConfigEncoder[T]): ConfigBuilder", "member" : "laika.config.ConfigBuilder.withValue", "link" : "laika\/config\/ConfigBuilder.html#withValue[T](key:laika.config.Key,value:Option[T])(implicitencoder:laika.config.ConfigEncoder[T]):laika.config.ConfigBuilder", "kind" : "def"}, {"label" : "withValue", "tail" : "(key: String, value: Option[T])(encoder: ConfigEncoder[T]): ConfigBuilder", "member" : "laika.config.ConfigBuilder.withValue", "link" : "laika\/config\/ConfigBuilder.html#withValue[T](key:String,value:Option[T])(implicitencoder:laika.config.ConfigEncoder[T]):laika.config.ConfigBuilder", "kind" : "def"}, {"label" : "withValue", "tail" : "(value: T)(encoder: ConfigEncoder[T], defaultKey: DefaultKey[T]): ConfigBuilder", "member" : "laika.config.ConfigBuilder.withValue", "link" : "laika\/config\/ConfigBuilder.html#withValue[T](value:T)(implicitencoder:laika.config.ConfigEncoder[T],implicitdefaultKey:laika.config.DefaultKey[T]):laika.config.ConfigBuilder", "kind" : "def"}, {"label" : "withValue", "tail" : "(key: Key, value: T)(encoder: ConfigEncoder[T]): ConfigBuilder", "member" : "laika.config.ConfigBuilder.withValue", "link" : "laika\/config\/ConfigBuilder.html#withValue[T](key:laika.config.Key,value:T)(implicitencoder:laika.config.ConfigEncoder[T]):laika.config.ConfigBuilder", "kind" : "def"}, {"label" : "withValue", "tail" : "(key: String, value: T)(encoder: ConfigEncoder[T]): ConfigBuilder", "member" : "laika.config.ConfigBuilder.withValue", "link" : "laika\/config\/ConfigBuilder.html#withValue[T](key:String,value:T)(implicitencoder:laika.config.ConfigEncoder[T]):laika.config.ConfigBuilder", "kind" : "def"}, {"member" : "laika.config.ConfigBuilder#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/ConfigBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/ConfigBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/ConfigBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/ConfigBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/ConfigBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/ConfigBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/ConfigBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/ConfigBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/ConfigBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/config\/ConfigBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/ConfigBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/config\/ConfigBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/config\/ConfigBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/ConfigBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/ConfigBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/ConfigBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "withFallback", "tail" : "(fallback: Config, origin: Origin): ConfigBuilder", "member" : "laika.config.ConfigBuilder.withFallback", "link" : "laika\/config\/ConfigBuilder$.html#withFallback(fallback:laika.config.Config,origin:laika.config.Origin):laika.config.ConfigBuilder", "kind" : "def"}, {"label" : "withFallback", "tail" : "(fallback: Config): ConfigBuilder", "member" : "laika.config.ConfigBuilder.withFallback", "link" : "laika\/config\/ConfigBuilder$.html#withFallback(fallback:laika.config.Config):laika.config.ConfigBuilder", "kind" : "def"}, {"label" : "withOrigin", "tail" : "(origin: Origin): ConfigBuilder", "member" : "laika.config.ConfigBuilder.withOrigin", "link" : "laika\/config\/ConfigBuilder$.html#withOrigin(origin:laika.config.Origin):laika.config.ConfigBuilder", "kind" : "def"}, {"label" : "empty", "tail" : ": ConfigBuilder", "member" : "laika.config.ConfigBuilder.empty", "link" : "laika\/config\/ConfigBuilder$.html#empty:laika.config.ConfigBuilder", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/ConfigBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/ConfigBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/ConfigBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/ConfigBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/ConfigBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/ConfigBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/ConfigBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/ConfigBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/ConfigBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/config\/ConfigBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/ConfigBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/config\/ConfigBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/config\/ConfigBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/ConfigBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/ConfigBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/ConfigBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/config\/ConfigBuilder.html", "kind" : "class"}, {"name" : "laika.config.ConfigDecoder", "members_trait" : [{"label" : "map", "tail" : "(f: (T) ⇒ U): ConfigDecoder[U]", "member" : "laika.config.ConfigDecoder.map", "link" : "laika\/config\/ConfigDecoder.html#map[U](f:T=>U):laika.config.ConfigDecoder[U]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (T) ⇒ Either[ConfigError, U]): ConfigDecoder[U]", "member" : "laika.config.ConfigDecoder.flatMap", "link" : "laika\/config\/ConfigDecoder.html#flatMap[U](f:T=>Either[laika.config.ConfigError,U]):laika.config.ConfigDecoder[U]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/ConfigDecoder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/ConfigDecoder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/ConfigDecoder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/ConfigDecoder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/ConfigDecoder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/ConfigDecoder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/ConfigDecoder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigDecoder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigDecoder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigDecoder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/ConfigDecoder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/ConfigDecoder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/config\/ConfigDecoder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/ConfigDecoder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/config\/ConfigDecoder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/config\/ConfigDecoder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/ConfigDecoder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/ConfigDecoder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/ConfigDecoder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(value: Traced[ConfigValue]): Either[ConfigError, T]", "member" : "laika.config.ConfigDecoder.apply", "link" : "laika\/config\/ConfigDecoder.html#apply(value:laika.config.Traced[laika.config.ConfigValue]):Either[laika.config.ConfigError,T]", "kind" : "abstract def"}], "shortDescription" : "A type class that can decode a ConfigValue to an instance of T.", "object" : "laika\/config\/ConfigDecoder$.html", "members_object" : [{"label" : "map", "tail" : "(valueDecoder: ConfigDecoder[T]): ConfigDecoder[Map[String, T]]", "member" : "laika.config.ConfigDecoder.map", "link" : "laika\/config\/ConfigDecoder$.html#map[T](implicitvalueDecoder:laika.config.ConfigDecoder[T]):laika.config.ConfigDecoder[Map[String,T]]", "kind" : "implicit def"}, {"label" : "nec", "tail" : "(elementDecoder: ConfigDecoder[T]): ConfigDecoder[NonEmptyChain[T]]", "member" : "laika.config.ConfigDecoder.nec", "link" : "laika\/config\/ConfigDecoder$.html#nec[T](implicitelementDecoder:laika.config.ConfigDecoder[T]):laika.config.ConfigDecoder[cats.data.NonEmptyChain[T]]", "kind" : "implicit def"}, {"label" : "seq", "tail" : "(elementDecoder: ConfigDecoder[T]): ConfigDecoder[Seq[T]]", "member" : "laika.config.ConfigDecoder.seq", "link" : "laika\/config\/ConfigDecoder$.html#seq[T](implicitelementDecoder:laika.config.ConfigDecoder[T]):laika.config.ConfigDecoder[Seq[T]]", "kind" : "implicit def"}, {"label" : "date", "tail" : ": ConfigDecoder[Date]", "member" : "laika.config.ConfigDecoder.date", "link" : "laika\/config\/ConfigDecoder$.html#date:laika.config.ConfigDecoder[java.util.Date]", "kind" : "implicit lazy val"}, {"label" : "path", "tail" : ": ConfigDecoder[Path]", "member" : "laika.config.ConfigDecoder.path", "link" : "laika\/config\/ConfigDecoder$.html#path:laika.config.ConfigDecoder[laika.ast.Path]", "kind" : "implicit lazy val"}, {"label" : "tracedValue", "tail" : "(valueDecoder: ConfigDecoder[T]): ConfigDecoder[Traced[T]]", "member" : "laika.config.ConfigDecoder.tracedValue", "link" : "laika\/config\/ConfigDecoder$.html#tracedValue[T](implicitvalueDecoder:laika.config.ConfigDecoder[T]):laika.config.ConfigDecoder[laika.config.Traced[T]]", "kind" : "implicit def"}, {"label" : "configValue", "tail" : ": ConfigDecoder[ConfigValue]", "member" : "laika.config.ConfigDecoder.configValue", "link" : "laika\/config\/ConfigDecoder$.html#configValue:laika.config.ConfigDecoder[laika.config.ConfigValue]", "kind" : "implicit val"}, {"label" : "config", "tail" : ": ConfigDecoder[Config]", "member" : "laika.config.ConfigDecoder.config", "link" : "laika\/config\/ConfigDecoder$.html#config:laika.config.ConfigDecoder[laika.config.Config]", "kind" : "implicit val"}, {"label" : "double", "tail" : ": ConfigDecoder[Double]", "member" : "laika.config.ConfigDecoder.double", "link" : "laika\/config\/ConfigDecoder$.html#double:laika.config.ConfigDecoder[Double]", "kind" : "implicit val"}, {"label" : "int", "tail" : ": ConfigDecoder[Int]", "member" : "laika.config.ConfigDecoder.int", "link" : "laika\/config\/ConfigDecoder$.html#int:laika.config.ConfigDecoder[Int]", "kind" : "implicit val"}, {"label" : "string", "tail" : ": ConfigDecoder[String]", "member" : "laika.config.ConfigDecoder.string", "link" : "laika\/config\/ConfigDecoder$.html#string:laika.config.ConfigDecoder[String]", "kind" : "implicit val"}, {"label" : "boolean", "tail" : ": ConfigDecoder[Boolean]", "member" : "laika.config.ConfigDecoder.boolean", "link" : "laika\/config\/ConfigDecoder$.html#boolean:laika.config.ConfigDecoder[Boolean]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/ConfigDecoder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/ConfigDecoder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/ConfigDecoder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/ConfigDecoder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/ConfigDecoder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/ConfigDecoder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/ConfigDecoder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigDecoder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigDecoder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigDecoder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/ConfigDecoder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/ConfigDecoder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/config\/ConfigDecoder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/ConfigDecoder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/config\/ConfigDecoder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/config\/ConfigDecoder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/ConfigDecoder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/ConfigDecoder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/ConfigDecoder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/config\/ConfigDecoder.html", "kind" : "trait"}, {"name" : "laika.config.ConfigEncoder", "members_trait" : [{"label" : "contramap", "tail" : "(f: (B) ⇒ T): ConfigEncoder[B]", "member" : "laika.config.ConfigEncoder.contramap", "link" : "laika\/config\/ConfigEncoder.html#contramap[B](f:B=>T):laika.config.ConfigEncoder[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/ConfigEncoder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/ConfigEncoder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/ConfigEncoder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/ConfigEncoder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/ConfigEncoder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/ConfigEncoder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/ConfigEncoder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigEncoder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigEncoder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigEncoder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/ConfigEncoder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/ConfigEncoder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/config\/ConfigEncoder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/ConfigEncoder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/config\/ConfigEncoder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/config\/ConfigEncoder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/ConfigEncoder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/ConfigEncoder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/ConfigEncoder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(value: T): ConfigValue", "member" : "laika.config.ConfigEncoder.apply", "link" : "laika\/config\/ConfigEncoder.html#apply(value:T):laika.config.ConfigValue", "kind" : "abstract def"}], "shortDescription" : "A type class that can encode a value of type T as a ConfigValue.", "object" : "laika\/config\/ConfigEncoder$.html", "members_object" : [{"label" : "ObjectBuilder", "tail" : "", "member" : "laika.config.ConfigEncoder.ObjectBuilder", "link" : "laika\/config\/ConfigEncoder$.html#ObjectBuilder", "kind" : "object"}, {"label" : "ObjectBuilder", "tail" : "", "member" : "laika.config.ConfigEncoder.ObjectBuilder", "link" : "laika\/config\/ConfigEncoder$.html#ObjectBuilderextendsAnyRef", "kind" : "class"}, {"label" : "apply", "tail" : "(f: (T) ⇒ ConfigValue): ConfigEncoder[T]", "member" : "laika.config.ConfigEncoder.apply", "link" : "laika\/config\/ConfigEncoder$.html#apply[T](f:T=>laika.config.ConfigValue):laika.config.ConfigEncoder[T]", "kind" : "def"}, {"label" : "map", "tail" : "(elementEncoder: ConfigEncoder[T]): ConfigEncoder[Map[String, T]]", "member" : "laika.config.ConfigEncoder.map", "link" : "laika\/config\/ConfigEncoder$.html#map[T](implicitelementEncoder:laika.config.ConfigEncoder[T]):laika.config.ConfigEncoder[Map[String,T]]", "kind" : "implicit def"}, {"label" : "nec", "tail" : "(elementEncoder: ConfigEncoder[T]): ConfigEncoder[NonEmptyChain[T]]", "member" : "laika.config.ConfigEncoder.nec", "link" : "laika\/config\/ConfigEncoder$.html#nec[T](implicitelementEncoder:laika.config.ConfigEncoder[T]):laika.config.ConfigEncoder[cats.data.NonEmptyChain[T]]", "kind" : "implicit def"}, {"label" : "seq", "tail" : "(elementEncoder: ConfigEncoder[T]): ConfigEncoder[Seq[T]]", "member" : "laika.config.ConfigEncoder.seq", "link" : "laika\/config\/ConfigEncoder$.html#seq[T](implicitelementEncoder:laika.config.ConfigEncoder[T]):laika.config.ConfigEncoder[Seq[T]]", "kind" : "implicit def"}, {"label" : "configValue", "tail" : ": ConfigEncoder[ConfigValue]", "member" : "laika.config.ConfigEncoder.configValue", "link" : "laika\/config\/ConfigEncoder$.html#configValue:laika.config.ConfigEncoder[laika.config.ConfigValue]", "kind" : "implicit val"}, {"label" : "astValue", "tail" : ": ConfigEncoder[Element]", "member" : "laika.config.ConfigEncoder.astValue", "link" : "laika\/config\/ConfigEncoder$.html#astValue:laika.config.ConfigEncoder[laika.ast.Element]", "kind" : "implicit val"}, {"label" : "date", "tail" : ": ConfigEncoder[Date]", "member" : "laika.config.ConfigEncoder.date", "link" : "laika\/config\/ConfigEncoder$.html#date:laika.config.ConfigEncoder[java.util.Date]", "kind" : "implicit val"}, {"label" : "path", "tail" : ": ConfigEncoder[Path]", "member" : "laika.config.ConfigEncoder.path", "link" : "laika\/config\/ConfigEncoder$.html#path:laika.config.ConfigEncoder[laika.ast.Path]", "kind" : "implicit val"}, {"label" : "double", "tail" : ": ConfigEncoder[Double]", "member" : "laika.config.ConfigEncoder.double", "link" : "laika\/config\/ConfigEncoder$.html#double:laika.config.ConfigEncoder[Double]", "kind" : "implicit val"}, {"label" : "int", "tail" : ": ConfigEncoder[Int]", "member" : "laika.config.ConfigEncoder.int", "link" : "laika\/config\/ConfigEncoder$.html#int:laika.config.ConfigEncoder[Int]", "kind" : "implicit val"}, {"label" : "string", "tail" : ": ConfigEncoder[String]", "member" : "laika.config.ConfigEncoder.string", "link" : "laika\/config\/ConfigEncoder$.html#string:laika.config.ConfigEncoder[String]", "kind" : "implicit val"}, {"label" : "boolean", "tail" : ": ConfigEncoder[Boolean]", "member" : "laika.config.ConfigEncoder.boolean", "link" : "laika\/config\/ConfigEncoder$.html#boolean:laika.config.ConfigEncoder[Boolean]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/ConfigEncoder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/ConfigEncoder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/ConfigEncoder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/ConfigEncoder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/ConfigEncoder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/ConfigEncoder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/ConfigEncoder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigEncoder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigEncoder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigEncoder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/ConfigEncoder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/ConfigEncoder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/config\/ConfigEncoder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/ConfigEncoder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/config\/ConfigEncoder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/config\/ConfigEncoder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/ConfigEncoder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/ConfigEncoder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/ConfigEncoder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/config\/ConfigEncoder.html", "kind" : "trait"}, {"name" : "laika.config.ConfigError", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/ConfigError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/ConfigError.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/ConfigError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/ConfigError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/ConfigError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/ConfigError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/ConfigError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigError.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/ConfigError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/ConfigError.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/config\/ConfigError.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/ConfigError.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/config\/ConfigError.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/config\/ConfigError.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/ConfigError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/ConfigError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/ConfigError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "message", "tail" : "(): String", "member" : "laika.config.ConfigError.message", "link" : "laika\/config\/ConfigError.html#message:String", "kind" : "abstract def"}], "shortDescription" : "Base trait for all configuration errors that occurredduring parsing, resolving, retrieving or converingconfiguration values.", "trait" : "laika\/config\/ConfigError.html", "kind" : "trait"}, {"name" : "laika.config.ConfigException", "shortDescription" : "A ConfigError as a RuntimeException for use cases where a Throwable is required.", "members_case class" : [{"member" : "laika.config.ConfigException#<init>", "error" : "unsupported entity"}, {"label" : "error", "tail" : ": ConfigError", "member" : "laika.config.ConfigException.error", "link" : "laika\/config\/ConfigException.html#error:laika.config.ConfigError", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "laika\/config\/ConfigException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "laika\/config\/ConfigException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "laika\/config\/ConfigException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "laika\/config\/ConfigException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "laika\/config\/ConfigException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "laika\/config\/ConfigException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "laika\/config\/ConfigException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "laika\/config\/ConfigException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "laika\/config\/ConfigException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "laika\/config\/ConfigException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "laika\/config\/ConfigException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "laika\/config\/ConfigException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "laika\/config\/ConfigException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/ConfigException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/ConfigException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/ConfigException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/ConfigException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/ConfigException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/ConfigException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/ConfigException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/ConfigException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/ConfigException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/ConfigException.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/ConfigException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/ConfigException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/ConfigException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/config\/ConfigException.html", "kind" : "case class"}, {"name" : "laika.config.ConfigParser", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/ConfigParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/ConfigParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/ConfigParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/ConfigParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/ConfigParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/ConfigParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/ConfigParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigParser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/ConfigParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/ConfigParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/config\/ConfigParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/ConfigParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/config\/ConfigParser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/config\/ConfigParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/ConfigParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/ConfigParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/ConfigParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "resolve", "tail" : "(origin: Origin, fallback: Config, includes: IncludeMap): Either[ConfigError, Config]", "member" : "laika.config.ConfigParser.resolve", "link" : "laika\/config\/ConfigParser.html#resolve(origin:laika.config.Origin,fallback:laika.config.Config,includes:laika.config.Config.IncludeMap):Either[laika.config.ConfigError,laika.config.Config]", "kind" : "abstract def"}, {"label" : "unresolved", "tail" : "(): Either[ConfigError, ObjectBuilderValue]", "member" : "laika.config.ConfigParser.unresolved", "link" : "laika\/config\/ConfigParser.html#unresolved:Either[laika.config.ConfigError,laika.parse.hocon.ObjectBuilderValue]", "kind" : "abstract def"}, {"label" : "includes", "tail" : "(): Seq[IncludeResource]", "member" : "laika.config.ConfigParser.includes", "link" : "laika\/config\/ConfigParser.html#includes:Seq[laika.parse.hocon.IncludeResource]", "kind" : "abstract def"}], "shortDescription" : "A parser for obtaining a Config instance from a HOCON string.", "object" : "laika\/config\/ConfigParser$.html", "members_object" : [{"label" : "empty", "tail" : "(): ConfigParser", "member" : "laika.config.ConfigParser.empty", "link" : "laika\/config\/ConfigParser$.html#empty:laika.config.ConfigParser", "kind" : "def"}, {"label" : "parse", "tail" : "(input: String): ConfigParser", "member" : "laika.config.ConfigParser.parse", "link" : "laika\/config\/ConfigParser$.html#parse(input:String):laika.config.ConfigParser", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/ConfigParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/ConfigParser$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/ConfigParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/ConfigParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/ConfigParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/ConfigParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/ConfigParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/ConfigParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/ConfigParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/config\/ConfigParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/ConfigParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/config\/ConfigParser$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/config\/ConfigParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/ConfigParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/ConfigParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/ConfigParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/config\/ConfigParser.html", "kind" : "trait"}, {"name" : "laika.config.ConfigParserError", "shortDescription" : "An error that occurred when parsing HOCON input.", "members_case class" : [{"label" : "message", "tail" : ": String", "member" : "laika.config.ConfigParserError.message", "link" : "laika\/config\/ConfigParserError.html#message:String", "kind" : "val"}, {"member" : "laika.config.ConfigParserError#<init>", "error" : "unsupported entity"}, {"label" : "failure", "tail" : ": Failure", "member" : "laika.config.ConfigParserError.failure", "link" : "laika\/config\/ConfigParserError.html#failure:laika.parse.Failure", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/ConfigParserError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/ConfigParserError.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/ConfigParserError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/ConfigParserError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/ConfigParserError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/ConfigParserError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/ConfigParserError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigParserError.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigParserError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigParserError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/ConfigParserError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/ConfigParserError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/ConfigParserError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/ConfigParserError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/ConfigParserError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/ConfigParserError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/config\/ConfigParserError.html", "kind" : "case class"}, {"name" : "laika.config.ConfigParserErrors", "shortDescription" : "Multiple errors that occurred when parsing HOCON input.", "members_case class" : [{"label" : "message", "tail" : ": String", "member" : "laika.config.ConfigParserErrors.message", "link" : "laika\/config\/ConfigParserErrors.html#message:String", "kind" : "val"}, {"member" : "laika.config.ConfigParserErrors#<init>", "error" : "unsupported entity"}, {"label" : "failures", "tail" : ": Seq[Failure]", "member" : "laika.config.ConfigParserErrors.failures", "link" : "laika\/config\/ConfigParserErrors.html#failures:Seq[laika.parse.Failure]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/ConfigParserErrors.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/ConfigParserErrors.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/ConfigParserErrors.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/ConfigParserErrors.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/ConfigParserErrors.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/ConfigParserErrors.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/ConfigParserErrors.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigParserErrors.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigParserErrors.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigParserErrors.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/ConfigParserErrors.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/ConfigParserErrors.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/ConfigParserErrors.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/ConfigParserErrors.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/ConfigParserErrors.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/ConfigParserErrors.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/config\/ConfigParserErrors.html", "kind" : "case class"}, {"name" : "laika.config.ConfigResolverError", "shortDescription" : "An error that occurred when resolving the interim result of a parsing operation.", "members_case class" : [{"member" : "laika.config.ConfigResolverError#<init>", "error" : "unsupported entity"}, {"label" : "message", "tail" : ": String", "member" : "laika.config.ConfigResolverError.message", "link" : "laika\/config\/ConfigResolverError.html#message:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/ConfigResolverError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/ConfigResolverError.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/ConfigResolverError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/ConfigResolverError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/ConfigResolverError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/ConfigResolverError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/ConfigResolverError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigResolverError.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigResolverError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigResolverError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/ConfigResolverError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/ConfigResolverError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/ConfigResolverError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/ConfigResolverError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/ConfigResolverError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/ConfigResolverError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/config\/ConfigResolverError.html", "kind" : "case class"}, {"name" : "laika.config.ConfigResourceError", "shortDescription" : "An error that occurred when loading a resource, before parsing could start.", "members_case class" : [{"member" : "laika.config.ConfigResourceError#<init>", "error" : "unsupported entity"}, {"label" : "message", "tail" : ": String", "member" : "laika.config.ConfigResourceError.message", "link" : "laika\/config\/ConfigResourceError.html#message:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/ConfigResourceError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/ConfigResourceError.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/ConfigResourceError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/ConfigResourceError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/ConfigResourceError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/ConfigResourceError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/ConfigResourceError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigResourceError.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigResourceError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigResourceError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/ConfigResourceError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/ConfigResourceError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/ConfigResourceError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/ConfigResourceError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/ConfigResourceError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/ConfigResourceError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/config\/ConfigResourceError.html", "kind" : "case class"}, {"name" : "laika.config.ConfigValue", "members_trait" : [{"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/config\/ConfigValue.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/config\/ConfigValue.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/ConfigValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/ConfigValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/ConfigValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/ConfigValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/ConfigValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/ConfigValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/ConfigValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ConfigValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/ConfigValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/ConfigValue.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/config\/ConfigValue.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/ConfigValue.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/config\/ConfigValue.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/config\/ConfigValue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/ConfigValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/ConfigValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/ConfigValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/config\/ConfigValue.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/config\/ConfigValue.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/config\/ConfigValue.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "The base trait for all configuration values.", "trait" : "laika\/config\/ConfigValue.html", "kind" : "trait"}, {"name" : "laika.config.DecodingError", "shortDescription" : "An error that occurred when decoding a configuration value to a target type.", "members_case class" : [{"member" : "laika.config.DecodingError#<init>", "error" : "unsupported entity"}, {"label" : "message", "tail" : ": String", "member" : "laika.config.DecodingError.message", "link" : "laika\/config\/DecodingError.html#message:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/DecodingError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/DecodingError.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/DecodingError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/DecodingError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/DecodingError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/DecodingError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/DecodingError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/DecodingError.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/DecodingError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/DecodingError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/DecodingError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/DecodingError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/DecodingError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/DecodingError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/DecodingError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/DecodingError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/config\/DecodingError.html", "kind" : "case class"}, {"name" : "laika.config.DefaultKey", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/DefaultKey.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/DefaultKey.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/DefaultKey.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/DefaultKey.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/DefaultKey.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/DefaultKey.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/DefaultKey.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/DefaultKey.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/DefaultKey.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/DefaultKey.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/DefaultKey.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/DefaultKey.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/config\/DefaultKey.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/DefaultKey.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/config\/DefaultKey.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/config\/DefaultKey.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/DefaultKey.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/DefaultKey.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/DefaultKey.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "value", "tail" : "(): Key", "member" : "laika.config.DefaultKey.value", "link" : "laika\/config\/DefaultKey.html#value:laika.config.Key", "kind" : "abstract def"}], "shortDescription" : "A defaultKey can be used for commonly used configuration objects like AutonumberConfigthat are expected to be mapped to a specific key, like autonumbering without requiringthe user to remember these keys.", "object" : "laika\/config\/DefaultKey$.html", "members_object" : [{"label" : "apply", "tail" : "(key: String): DefaultKey[T]", "member" : "laika.config.DefaultKey.apply", "link" : "laika\/config\/DefaultKey$.html#apply[T](key:String):laika.config.DefaultKey[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(key: Key): DefaultKey[T]", "member" : "laika.config.DefaultKey.apply", "link" : "laika\/config\/DefaultKey$.html#apply[T](key:laika.config.Key):laika.config.DefaultKey[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/DefaultKey$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/DefaultKey$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/DefaultKey$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/DefaultKey$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/DefaultKey$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/DefaultKey$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/DefaultKey$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/DefaultKey$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/DefaultKey$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/DefaultKey$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/DefaultKey$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/DefaultKey$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/config\/DefaultKey$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/DefaultKey$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/config\/DefaultKey$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/config\/DefaultKey$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/DefaultKey$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/DefaultKey$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/DefaultKey$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/config\/DefaultKey.html", "kind" : "trait"}, {"name" : "laika.config.DoubleValue", "shortDescription" : "", "members_case class" : [{"label" : "render", "tail" : "(): String", "member" : "laika.config.DoubleValue.render", "link" : "laika\/config\/DoubleValue.html#render:String", "kind" : "def"}, {"member" : "laika.config.DoubleValue#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": Double", "member" : "laika.config.DoubleValue.value", "link" : "laika\/config\/DoubleValue.html#value:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/DoubleValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/DoubleValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/DoubleValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/DoubleValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/DoubleValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/DoubleValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/DoubleValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/DoubleValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/DoubleValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/DoubleValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/DoubleValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/DoubleValue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/DoubleValue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/DoubleValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/DoubleValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/DoubleValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/config\/DoubleValue.html", "kind" : "case class"}, {"name" : "laika.config.EmptyConfig", "shortDescription" : "An empty configuration instance.", "object" : "laika\/config\/EmptyConfig$.html", "members_object" : [{"label" : "withOrigin", "tail" : "(newOrigin: Origin): Config", "member" : "laika.config.EmptyConfig.withOrigin", "link" : "laika\/config\/EmptyConfig$.html#withOrigin(newOrigin:laika.config.Origin):laika.config.Config", "kind" : "def"}, {"label" : "withFallback", "tail" : "(other: Config): Config", "member" : "laika.config.EmptyConfig.withFallback", "link" : "laika\/config\/EmptyConfig$.html#withFallback(other:laika.config.Config):laika.config.Config", "kind" : "def"}, {"label" : "get", "tail" : "(key: Key)(decoder: ConfigDecoder[T]): ConfigResult[T]", "member" : "laika.config.EmptyConfig.get", "link" : "laika\/config\/EmptyConfig$.html#get[T](key:laika.config.Key)(implicitdecoder:laika.config.ConfigDecoder[T]):laika.config.Config.ConfigResult[T]", "kind" : "def"}, {"label" : "hasKey", "tail" : "(key: Key): Boolean", "member" : "laika.config.EmptyConfig.hasKey", "link" : "laika\/config\/EmptyConfig$.html#hasKey(key:laika.config.Key):Boolean", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "laika.config.EmptyConfig.origin", "link" : "laika\/config\/EmptyConfig$.html#origin:laika.config.Origin", "kind" : "val"}, {"label" : "withValue", "tail" : "(value: T)(encoder: ConfigEncoder[T], defaultKey: DefaultKey[T]): ConfigBuilder", "member" : "laika.config.Config.withValue", "link" : "laika\/config\/EmptyConfig$.html#withValue[T](value:T)(implicitencoder:laika.config.ConfigEncoder[T],implicitdefaultKey:laika.config.DefaultKey[T]):laika.config.ConfigBuilder", "kind" : "def"}, {"label" : "withValue", "tail" : "(key: Key, value: T)(encoder: ConfigEncoder[T]): ConfigBuilder", "member" : "laika.config.Config.withValue", "link" : "laika\/config\/EmptyConfig$.html#withValue[T](key:laika.config.Key,value:T)(implicitencoder:laika.config.ConfigEncoder[T]):laika.config.ConfigBuilder", "kind" : "def"}, {"label" : "withValue", "tail" : "(key: String, value: T)(encoder: ConfigEncoder[T]): ConfigBuilder", "member" : "laika.config.Config.withValue", "link" : "laika\/config\/EmptyConfig$.html#withValue[T](key:String,value:T)(implicitencoder:laika.config.ConfigEncoder[T]):laika.config.ConfigBuilder", "kind" : "def"}, {"label" : "get", "tail" : "(decoder: ConfigDecoder[T], defaultKey: DefaultKey[T]): ConfigResult[T]", "member" : "laika.config.Config.get", "link" : "laika\/config\/EmptyConfig$.html#get[T](implicitdecoder:laika.config.ConfigDecoder[T],implicitdefaultKey:laika.config.DefaultKey[T]):laika.config.Config.ConfigResult[T]", "kind" : "def"}, {"label" : "getOpt", "tail" : "(key: String)(decoder: ConfigDecoder[T]): ConfigResult[Option[T]]", "member" : "laika.config.Config.getOpt", "link" : "laika\/config\/EmptyConfig$.html#getOpt[T](key:String)(implicitdecoder:laika.config.ConfigDecoder[T]):laika.config.Config.ConfigResult[Option[T]]", "kind" : "def"}, {"label" : "getOpt", "tail" : "(decoder: ConfigDecoder[T], defaultKey: DefaultKey[T]): ConfigResult[Option[T]]", "member" : "laika.config.Config.getOpt", "link" : "laika\/config\/EmptyConfig$.html#getOpt[T](implicitdecoder:laika.config.ConfigDecoder[T],implicitdefaultKey:laika.config.DefaultKey[T]):laika.config.Config.ConfigResult[Option[T]]", "kind" : "def"}, {"label" : "getOpt", "tail" : "(key: Key)(decoder: ConfigDecoder[T]): ConfigResult[Option[T]]", "member" : "laika.config.Config.getOpt", "link" : "laika\/config\/EmptyConfig$.html#getOpt[T](key:laika.config.Key)(implicitdecoder:laika.config.ConfigDecoder[T]):laika.config.Config.ConfigResult[Option[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(key: String, default: ⇒ T)(decoder: ConfigDecoder[T]): ConfigResult[T]", "member" : "laika.config.Config.get", "link" : "laika\/config\/EmptyConfig$.html#get[T](key:String,default:=>T)(implicitdecoder:laika.config.ConfigDecoder[T]):laika.config.Config.ConfigResult[T]", "kind" : "def"}, {"label" : "get", "tail" : "(key: Key, default: ⇒ T)(decoder: ConfigDecoder[T]): ConfigResult[T]", "member" : "laika.config.Config.get", "link" : "laika\/config\/EmptyConfig$.html#get[T](key:laika.config.Key,default:=>T)(implicitdecoder:laika.config.ConfigDecoder[T]):laika.config.Config.ConfigResult[T]", "kind" : "def"}, {"label" : "get", "tail" : "(key: String)(decoder: ConfigDecoder[T]): ConfigResult[T]", "member" : "laika.config.Config.get", "link" : "laika\/config\/EmptyConfig$.html#get[T](key:String)(implicitdecoder:laika.config.ConfigDecoder[T]):laika.config.Config.ConfigResult[T]", "kind" : "def"}, {"label" : "hasKey", "tail" : "(key: String): Boolean", "member" : "laika.config.Config.hasKey", "link" : "laika\/config\/EmptyConfig$.html#hasKey(key:String):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/EmptyConfig$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/EmptyConfig$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/EmptyConfig$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/EmptyConfig$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/EmptyConfig$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/EmptyConfig$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/EmptyConfig$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/EmptyConfig$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/EmptyConfig$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/EmptyConfig$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/EmptyConfig$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/EmptyConfig$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/config\/EmptyConfig$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/EmptyConfig$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/config\/EmptyConfig$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/config\/EmptyConfig$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/EmptyConfig$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/EmptyConfig$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/EmptyConfig$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.config.Field", "shortDescription" : "A single field of an object value.", "members_case class" : [{"member" : "laika.config.Field#<init>", "error" : "unsupported entity"}, {"label" : "origin", "tail" : ": Origin", "member" : "laika.config.Field.origin", "link" : "laika\/config\/Field.html#origin:laika.config.Origin", "kind" : "val"}, {"label" : "value", "tail" : ": ConfigValue", "member" : "laika.config.Field.value", "link" : "laika\/config\/Field.html#value:laika.config.ConfigValue", "kind" : "val"}, {"label" : "key", "tail" : ": String", "member" : "laika.config.Field.key", "link" : "laika\/config\/Field.html#key:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/Field.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/Field.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/Field.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/Field.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/Field.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/Field.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/Field.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/Field.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/Field.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/Field.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/Field.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/Field.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/Field.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/Field.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/Field.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/Field.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/config\/Field.html", "kind" : "case class"}, {"name" : "laika.config.InvalidType", "shortDescription" : "Indicates that a value found in the configuration does not have the expectedtype so that type conversion is not even attempted.", "members_case class" : [{"label" : "message", "tail" : ": String", "member" : "laika.config.InvalidType.message", "link" : "laika\/config\/InvalidType.html#message:String", "kind" : "val"}, {"member" : "laika.config.InvalidType#<init>", "error" : "unsupported entity"}, {"label" : "actual", "tail" : ": ConfigValue", "member" : "laika.config.InvalidType.actual", "link" : "laika\/config\/InvalidType.html#actual:laika.config.ConfigValue", "kind" : "val"}, {"label" : "expected", "tail" : ": String", "member" : "laika.config.InvalidType.expected", "link" : "laika\/config\/InvalidType.html#expected:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/InvalidType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/InvalidType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/InvalidType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/InvalidType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/InvalidType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/InvalidType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/InvalidType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/InvalidType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/InvalidType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/InvalidType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/InvalidType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/InvalidType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/InvalidType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/InvalidType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/InvalidType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/InvalidType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/config\/InvalidType.html", "kind" : "case class"}, {"name" : "laika.config.Key", "shortDescription" : "", "object" : "laika\/config\/Key$.html", "members_object" : [{"label" : "root", "tail" : ": Key", "member" : "laika.config.Key.root", "link" : "laika\/config\/Key$.html#root:laika.config.Key", "kind" : "val"}, {"label" : "parse", "tail" : "(key: String): Key", "member" : "laika.config.Key.parse", "link" : "laika\/config\/Key$.html#parse(key:String):laika.config.Key", "kind" : "def"}, {"label" : "apply", "tail" : "(segment: String, segments: String*): Key", "member" : "laika.config.Key.apply", "link" : "laika\/config\/Key$.html#apply(segment:String,segments:String*):laika.config.Key", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/Key$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/Key$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/Key$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/Key$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/Key$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/Key$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/Key$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/Key$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/Key$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/Key$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/Key$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/Key$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/config\/Key$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/Key$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/config\/Key$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/config\/Key$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/Key$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/Key$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/Key$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "laika.config.Key.toString", "link" : "laika\/config\/Key.html#toString():String", "kind" : "def"}, {"label" : "toPath", "tail" : "(): Path", "member" : "laika.config.Key.toPath", "link" : "laika\/config\/Key.html#toPath:laika.ast.Path", "kind" : "def"}, {"label" : "local", "tail" : "(): Key", "member" : "laika.config.Key.local", "link" : "laika\/config\/Key.html#local:laika.config.Key", "kind" : "def"}, {"label" : "parent", "tail" : "(): Key", "member" : "laika.config.Key.parent", "link" : "laika\/config\/Key.html#parent:laika.config.Key", "kind" : "def"}, {"label" : "isChild", "tail" : "(other: Key): Boolean", "member" : "laika.config.Key.isChild", "link" : "laika\/config\/Key.html#isChild(other:laika.config.Key):Boolean", "kind" : "def"}, {"label" : "child", "tail" : "(childKey: Key): Key", "member" : "laika.config.Key.child", "link" : "laika\/config\/Key.html#child(childKey:laika.config.Key):laika.config.Key", "kind" : "def"}, {"label" : "child", "tail" : "(segment: String): Key", "member" : "laika.config.Key.child", "link" : "laika\/config\/Key.html#child(segment:String):laika.config.Key", "kind" : "def"}, {"member" : "laika.config.Key#<init>", "error" : "unsupported entity"}, {"label" : "segments", "tail" : ": Seq[String]", "member" : "laika.config.Key.segments", "link" : "laika\/config\/Key.html#segments:Seq[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/Key.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/Key.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/Key.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/Key.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/Key.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/Key.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/Key.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/Key.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/Key.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/Key.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/Key.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/Key.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/Key.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/Key.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/Key.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/Key.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/config\/Key.html", "kind" : "case class"}, {"name" : "laika.config.LaikaKeys", "shortDescription" : "Constants for configuration keys for the library's core configuration entries.", "object" : "laika\/config\/LaikaKeys$.html", "members_object" : [{"label" : "site", "tail" : "", "member" : "laika.config.LaikaKeys.site", "link" : "laika\/config\/LaikaKeys$.html#site", "kind" : "object"}, {"label" : "titleDocuments", "tail" : "", "member" : "laika.config.LaikaKeys.titleDocuments", "link" : "laika\/config\/LaikaKeys$.html#titleDocuments", "kind" : "object"}, {"label" : "versions", "tail" : ": Key", "member" : "laika.config.LaikaKeys.versions", "link" : "laika\/config\/LaikaKeys$.html#versions:laika.config.Key", "kind" : "val"}, {"label" : "versioned", "tail" : ": Key", "member" : "laika.config.LaikaKeys.versioned", "link" : "laika\/config\/LaikaKeys$.html#versioned:laika.config.Key", "kind" : "val"}, {"label" : "coverImages", "tail" : ": Key", "member" : "laika.config.LaikaKeys.coverImages", "link" : "laika\/config\/LaikaKeys$.html#coverImages:laika.config.Key", "kind" : "val"}, {"label" : "coverImage", "tail" : ": Key", "member" : "laika.config.LaikaKeys.coverImage", "link" : "laika\/config\/LaikaKeys$.html#coverImage:laika.config.Key", "kind" : "val"}, {"label" : "siteBaseURL", "tail" : ": Key", "member" : "laika.config.LaikaKeys.siteBaseURL", "link" : "laika\/config\/LaikaKeys$.html#siteBaseURL:laika.config.Key", "kind" : "val"}, {"label" : "artifactBaseName", "tail" : ": Key", "member" : "laika.config.LaikaKeys.artifactBaseName", "link" : "laika\/config\/LaikaKeys$.html#artifactBaseName:laika.config.Key", "kind" : "val"}, {"label" : "firstHeaderAsTitle", "tail" : ": Key", "member" : "laika.config.LaikaKeys.firstHeaderAsTitle", "link" : "laika\/config\/LaikaKeys$.html#firstHeaderAsTitle:laika.config.Key", "kind" : "val"}, {"label" : "validateLinks", "tail" : ": Key", "member" : "laika.config.LaikaKeys.validateLinks", "link" : "laika\/config\/LaikaKeys$.html#validateLinks:laika.config.Key", "kind" : "val"}, {"label" : "targetFormats", "tail" : ": Key", "member" : "laika.config.LaikaKeys.targetFormats", "link" : "laika\/config\/LaikaKeys$.html#targetFormats:laika.config.Key", "kind" : "val"}, {"label" : "navigationOrder", "tail" : ": Key", "member" : "laika.config.LaikaKeys.navigationOrder", "link" : "laika\/config\/LaikaKeys$.html#navigationOrder:laika.config.Key", "kind" : "val"}, {"label" : "autonumbering", "tail" : ": Key", "member" : "laika.config.LaikaKeys.autonumbering", "link" : "laika\/config\/LaikaKeys$.html#autonumbering:laika.config.Key", "kind" : "val"}, {"label" : "selections", "tail" : ": Key", "member" : "laika.config.LaikaKeys.selections", "link" : "laika\/config\/LaikaKeys$.html#selections:laika.config.Key", "kind" : "val"}, {"label" : "links", "tail" : ": Key", "member" : "laika.config.LaikaKeys.links", "link" : "laika\/config\/LaikaKeys$.html#links:laika.config.Key", "kind" : "val"}, {"label" : "metadata", "tail" : ": Key", "member" : "laika.config.LaikaKeys.metadata", "link" : "laika\/config\/LaikaKeys$.html#metadata:laika.config.Key", "kind" : "val"}, {"label" : "template", "tail" : "(format: String): Key", "member" : "laika.config.LaikaKeys.template", "link" : "laika\/config\/LaikaKeys$.html#template(format:String):laika.config.Key", "kind" : "def"}, {"label" : "template", "tail" : ": Key", "member" : "laika.config.LaikaKeys.template", "link" : "laika\/config\/LaikaKeys$.html#template:laika.config.Key", "kind" : "val"}, {"label" : "title", "tail" : ": Key", "member" : "laika.config.LaikaKeys.title", "link" : "laika\/config\/LaikaKeys$.html#title:laika.config.Key", "kind" : "val"}, {"label" : "root", "tail" : ": Key", "member" : "laika.config.LaikaKeys.root", "link" : "laika\/config\/LaikaKeys$.html#root:laika.config.Key", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/LaikaKeys$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/LaikaKeys$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/LaikaKeys$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/LaikaKeys$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/LaikaKeys$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/LaikaKeys$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/LaikaKeys$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/LaikaKeys$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/LaikaKeys$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/LaikaKeys$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/LaikaKeys$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/LaikaKeys$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/config\/LaikaKeys$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/LaikaKeys$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/config\/LaikaKeys$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/config\/LaikaKeys$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/LaikaKeys$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/LaikaKeys$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/LaikaKeys$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.config.LongValue", "shortDescription" : "", "members_case class" : [{"label" : "render", "tail" : "(): String", "member" : "laika.config.LongValue.render", "link" : "laika\/config\/LongValue.html#render:String", "kind" : "def"}, {"member" : "laika.config.LongValue#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": Long", "member" : "laika.config.LongValue.value", "link" : "laika\/config\/LongValue.html#value:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/LongValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/LongValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/LongValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/LongValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/LongValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/LongValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/LongValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/LongValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/LongValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/LongValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/LongValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/LongValue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/LongValue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/LongValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/LongValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/LongValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/config\/LongValue.html", "kind" : "case class"}, {"name" : "laika.config.NotFound", "shortDescription" : "A required value that could not be found.", "members_case class" : [{"label" : "message", "tail" : ": String", "member" : "laika.config.NotFound.message", "link" : "laika\/config\/NotFound.html#message:String", "kind" : "val"}, {"member" : "laika.config.NotFound#<init>", "error" : "unsupported entity"}, {"label" : "key", "tail" : ": Key", "member" : "laika.config.NotFound.key", "link" : "laika\/config\/NotFound.html#key:laika.config.Key", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/NotFound.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/NotFound.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/NotFound.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/NotFound.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/NotFound.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/NotFound.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/NotFound.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/NotFound.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/NotFound.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/NotFound.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/NotFound.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/NotFound.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/NotFound.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/NotFound.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/NotFound.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/NotFound.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/config\/NotFound.html", "kind" : "case class"}, {"name" : "laika.config.NullValue", "shortDescription" : "", "object" : "laika\/config\/NullValue$.html", "members_object" : [{"label" : "render", "tail" : ": String", "member" : "laika.config.NullValue.render", "link" : "laika\/config\/NullValue$.html#render:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/NullValue$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/NullValue$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/NullValue$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/NullValue$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/NullValue$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/NullValue$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/NullValue$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/NullValue$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/NullValue$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/NullValue$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/NullValue$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/NullValue$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/NullValue$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/config\/NullValue$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/NullValue$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/NullValue$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/NullValue$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.config.ObjectConfig", "shortDescription" : "The default implementation of the Config API.", "members_class" : [{"label" : "equals", "tail" : "(obj: Any): Boolean", "member" : "laika.config.ObjectConfig.equals", "link" : "laika\/config\/ObjectConfig.html#equals(obj:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "laika.config.ObjectConfig.hashCode", "link" : "laika\/config\/ObjectConfig.html#hashCode():Int", "kind" : "def"}, {"label" : "withOrigin", "tail" : "(newOrigin: Origin): Config", "member" : "laika.config.ObjectConfig.withOrigin", "link" : "laika\/config\/ObjectConfig.html#withOrigin(newOrigin:laika.config.Origin):laika.config.Config", "kind" : "def"}, {"label" : "withFallback", "tail" : "(other: Config): Config", "member" : "laika.config.ObjectConfig.withFallback", "link" : "laika\/config\/ObjectConfig.html#withFallback(other:laika.config.Config):laika.config.Config", "kind" : "def"}, {"label" : "get", "tail" : "(key: Key)(decoder: ConfigDecoder[T]): ConfigResult[T]", "member" : "laika.config.ObjectConfig.get", "link" : "laika\/config\/ObjectConfig.html#get[T](key:laika.config.Key)(implicitdecoder:laika.config.ConfigDecoder[T]):laika.config.Config.ConfigResult[T]", "kind" : "def"}, {"label" : "hasKey", "tail" : "(key: Key): Boolean", "member" : "laika.config.ObjectConfig.hasKey", "link" : "laika\/config\/ObjectConfig.html#hasKey(key:laika.config.Key):Boolean", "kind" : "def"}, {"member" : "laika.config.ObjectConfig#<init>", "error" : "unsupported entity"}, {"label" : "origin", "tail" : ": Origin", "member" : "laika.config.ObjectConfig.origin", "link" : "laika\/config\/ObjectConfig.html#origin:laika.config.Origin", "kind" : "val"}, {"label" : "withValue", "tail" : "(value: T)(encoder: ConfigEncoder[T], defaultKey: DefaultKey[T]): ConfigBuilder", "member" : "laika.config.Config.withValue", "link" : "laika\/config\/ObjectConfig.html#withValue[T](value:T)(implicitencoder:laika.config.ConfigEncoder[T],implicitdefaultKey:laika.config.DefaultKey[T]):laika.config.ConfigBuilder", "kind" : "def"}, {"label" : "withValue", "tail" : "(key: Key, value: T)(encoder: ConfigEncoder[T]): ConfigBuilder", "member" : "laika.config.Config.withValue", "link" : "laika\/config\/ObjectConfig.html#withValue[T](key:laika.config.Key,value:T)(implicitencoder:laika.config.ConfigEncoder[T]):laika.config.ConfigBuilder", "kind" : "def"}, {"label" : "withValue", "tail" : "(key: String, value: T)(encoder: ConfigEncoder[T]): ConfigBuilder", "member" : "laika.config.Config.withValue", "link" : "laika\/config\/ObjectConfig.html#withValue[T](key:String,value:T)(implicitencoder:laika.config.ConfigEncoder[T]):laika.config.ConfigBuilder", "kind" : "def"}, {"label" : "get", "tail" : "(decoder: ConfigDecoder[T], defaultKey: DefaultKey[T]): ConfigResult[T]", "member" : "laika.config.Config.get", "link" : "laika\/config\/ObjectConfig.html#get[T](implicitdecoder:laika.config.ConfigDecoder[T],implicitdefaultKey:laika.config.DefaultKey[T]):laika.config.Config.ConfigResult[T]", "kind" : "def"}, {"label" : "getOpt", "tail" : "(key: String)(decoder: ConfigDecoder[T]): ConfigResult[Option[T]]", "member" : "laika.config.Config.getOpt", "link" : "laika\/config\/ObjectConfig.html#getOpt[T](key:String)(implicitdecoder:laika.config.ConfigDecoder[T]):laika.config.Config.ConfigResult[Option[T]]", "kind" : "def"}, {"label" : "getOpt", "tail" : "(decoder: ConfigDecoder[T], defaultKey: DefaultKey[T]): ConfigResult[Option[T]]", "member" : "laika.config.Config.getOpt", "link" : "laika\/config\/ObjectConfig.html#getOpt[T](implicitdecoder:laika.config.ConfigDecoder[T],implicitdefaultKey:laika.config.DefaultKey[T]):laika.config.Config.ConfigResult[Option[T]]", "kind" : "def"}, {"label" : "getOpt", "tail" : "(key: Key)(decoder: ConfigDecoder[T]): ConfigResult[Option[T]]", "member" : "laika.config.Config.getOpt", "link" : "laika\/config\/ObjectConfig.html#getOpt[T](key:laika.config.Key)(implicitdecoder:laika.config.ConfigDecoder[T]):laika.config.Config.ConfigResult[Option[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(key: String, default: ⇒ T)(decoder: ConfigDecoder[T]): ConfigResult[T]", "member" : "laika.config.Config.get", "link" : "laika\/config\/ObjectConfig.html#get[T](key:String,default:=>T)(implicitdecoder:laika.config.ConfigDecoder[T]):laika.config.Config.ConfigResult[T]", "kind" : "def"}, {"label" : "get", "tail" : "(key: Key, default: ⇒ T)(decoder: ConfigDecoder[T]): ConfigResult[T]", "member" : "laika.config.Config.get", "link" : "laika\/config\/ObjectConfig.html#get[T](key:laika.config.Key,default:=>T)(implicitdecoder:laika.config.ConfigDecoder[T]):laika.config.Config.ConfigResult[T]", "kind" : "def"}, {"label" : "get", "tail" : "(key: String)(decoder: ConfigDecoder[T]): ConfigResult[T]", "member" : "laika.config.Config.get", "link" : "laika\/config\/ObjectConfig.html#get[T](key:String)(implicitdecoder:laika.config.ConfigDecoder[T]):laika.config.Config.ConfigResult[T]", "kind" : "def"}, {"label" : "hasKey", "tail" : "(key: String): Boolean", "member" : "laika.config.Config.hasKey", "link" : "laika\/config\/ObjectConfig.html#hasKey(key:String):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/ObjectConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/ObjectConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/ObjectConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/ObjectConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/ObjectConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/ObjectConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/ObjectConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ObjectConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ObjectConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ObjectConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/ObjectConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/ObjectConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/config\/ObjectConfig.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/ObjectConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/ObjectConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/ObjectConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/ObjectConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/config\/ObjectConfig.html", "kind" : "class"}, {"name" : "laika.config.ObjectValue", "shortDescription" : "", "members_case class" : [{"label" : "toConfig", "tail" : "(): Config", "member" : "laika.config.ObjectValue.toConfig", "link" : "laika\/config\/ObjectValue.html#toConfig:laika.config.Config", "kind" : "def"}, {"label" : "merge", "tail" : "(other: ObjectValue): ObjectValue", "member" : "laika.config.ObjectValue.merge", "link" : "laika\/config\/ObjectValue.html#merge(other:laika.config.ObjectValue):laika.config.ObjectValue", "kind" : "def"}, {"member" : "laika.config.ObjectValue#<init>", "error" : "unsupported entity"}, {"label" : "values", "tail" : ": Seq[Field]", "member" : "laika.config.ObjectValue.values", "link" : "laika\/config\/ObjectValue.html#values:Seq[laika.config.Field]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/ObjectValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/ObjectValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/ObjectValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/ObjectValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/ObjectValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/ObjectValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/ObjectValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ObjectValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ObjectValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ObjectValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/ObjectValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/ObjectValue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/ObjectValue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/ObjectValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/ObjectValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/ObjectValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/config\/ObjectValue.html", "kind" : "case class"}, {"name" : "laika.config.Origin", "shortDescription" : "The origin of a configuration value.", "object" : "laika\/config\/Origin$.html", "members_object" : [{"label" : "DirectiveScope", "tail" : "", "member" : "laika.config.Origin.DirectiveScope", "link" : "laika\/config\/Origin$.html#DirectiveScope", "kind" : "object"}, {"label" : "TemplateScope", "tail" : "", "member" : "laika.config.Origin.TemplateScope", "link" : "laika\/config\/Origin$.html#TemplateScope", "kind" : "object"}, {"label" : "DocumentScope", "tail" : "", "member" : "laika.config.Origin.DocumentScope", "link" : "laika\/config\/Origin$.html#DocumentScope", "kind" : "object"}, {"label" : "TreeScope", "tail" : "", "member" : "laika.config.Origin.TreeScope", "link" : "laika\/config\/Origin$.html#TreeScope", "kind" : "object"}, {"label" : "GlobalScope", "tail" : "", "member" : "laika.config.Origin.GlobalScope", "link" : "laika\/config\/Origin$.html#GlobalScope", "kind" : "object"}, {"label" : "Scope", "tail" : "", "member" : "laika.config.Origin.Scope", "link" : "laika\/config\/Origin$.html#ScopeextendsAnyRef", "kind" : "sealed trait"}, {"label" : "root", "tail" : ": Origin", "member" : "laika.config.Origin.root", "link" : "laika\/config\/Origin$.html#root:laika.config.Origin", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/Origin$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/Origin$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/Origin$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/Origin$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/Origin$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/Origin$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/Origin$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/Origin$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/Origin$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/Origin$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/Origin$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/Origin$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/config\/Origin$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/Origin$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/config\/Origin$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/config\/Origin$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/Origin$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/Origin$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/Origin$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "laika.config.Origin#<init>", "error" : "unsupported entity"}, {"label" : "sourcePath", "tail" : ": Option[String]", "member" : "laika.config.Origin.sourcePath", "link" : "laika\/config\/Origin.html#sourcePath:Option[String]", "kind" : "val"}, {"label" : "path", "tail" : ": Path", "member" : "laika.config.Origin.path", "link" : "laika\/config\/Origin.html#path:laika.ast.Path", "kind" : "val"}, {"label" : "scope", "tail" : ": Scope", "member" : "laika.config.Origin.scope", "link" : "laika\/config\/Origin.html#scope:laika.config.Origin.Scope", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/Origin.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/Origin.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/Origin.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/Origin.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/Origin.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/Origin.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/Origin.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/Origin.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/Origin.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/Origin.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/Origin.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/Origin.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/Origin.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/Origin.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/Origin.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/Origin.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/config\/Origin.html", "kind" : "case class"}, {"name" : "laika.config.SimpleConfigValue", "members_trait" : [{"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/config\/SimpleConfigValue.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/config\/SimpleConfigValue.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/SimpleConfigValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/SimpleConfigValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/SimpleConfigValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/SimpleConfigValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/SimpleConfigValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/SimpleConfigValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/SimpleConfigValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/SimpleConfigValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/SimpleConfigValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/SimpleConfigValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/SimpleConfigValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/SimpleConfigValue.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/config\/SimpleConfigValue.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/SimpleConfigValue.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/config\/SimpleConfigValue.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/config\/SimpleConfigValue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/SimpleConfigValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/SimpleConfigValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/SimpleConfigValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "render", "tail" : "(): String", "member" : "laika.config.SimpleConfigValue.render", "link" : "laika\/config\/SimpleConfigValue.html#render:String", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/config\/SimpleConfigValue.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/config\/SimpleConfigValue.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/config\/SimpleConfigValue.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "Base trait for all simple configuration values.", "trait" : "laika\/config\/SimpleConfigValue.html", "kind" : "trait"}, {"name" : "laika.config.StringValue", "shortDescription" : "", "members_case class" : [{"label" : "render", "tail" : "(): String", "member" : "laika.config.StringValue.render", "link" : "laika\/config\/StringValue.html#render:String", "kind" : "def"}, {"member" : "laika.config.StringValue#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": String", "member" : "laika.config.StringValue.value", "link" : "laika\/config\/StringValue.html#value:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/StringValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/StringValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/StringValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/StringValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/StringValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/StringValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/StringValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/StringValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/StringValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/StringValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/StringValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/StringValue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/StringValue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/StringValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/StringValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/StringValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/config\/StringValue.html", "kind" : "case class"}, {"name" : "laika.config.Traced", "shortDescription" : "A value tagged with its origin.", "members_case class" : [{"member" : "laika.config.Traced#<init>", "error" : "unsupported entity"}, {"label" : "origin", "tail" : ": Origin", "member" : "laika.config.Traced.origin", "link" : "laika\/config\/Traced.html#origin:laika.config.Origin", "kind" : "val"}, {"label" : "value", "tail" : ": T", "member" : "laika.config.Traced.value", "link" : "laika\/config\/Traced.html#value:T", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/Traced.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/Traced.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/Traced.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/Traced.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/Traced.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/Traced.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/Traced.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/Traced.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/Traced.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/Traced.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/Traced.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/Traced.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/Traced.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/Traced.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/Traced.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/Traced.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/config\/Traced.html", "kind" : "case class"}, {"name" : "laika.config.ValidationError", "shortDescription" : "A generic error for invalid values.", "members_case class" : [{"member" : "laika.config.ValidationError#<init>", "error" : "unsupported entity"}, {"label" : "message", "tail" : ": String", "member" : "laika.config.ValidationError.message", "link" : "laika\/config\/ValidationError.html#message:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/config\/ValidationError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/config\/ValidationError.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/config\/ValidationError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/config\/ValidationError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/config\/ValidationError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/config\/ValidationError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/config\/ValidationError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ValidationError.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ValidationError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/config\/ValidationError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/config\/ValidationError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/config\/ValidationError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/config\/ValidationError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/config\/ValidationError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/config\/ValidationError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/config\/ValidationError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/config\/ValidationError.html", "kind" : "case class"}], "laika.theme.config" : [{"name" : "laika.theme.config.BookConfig", "shortDescription" : "Captures common configuration element of e-books, used by both EPUB and PDF renderers.", "object" : "laika\/theme\/config\/BookConfig$.html", "members_object" : [{"label" : "defaultKey", "tail" : ": DefaultKey[BookConfig]", "member" : "laika.theme.config.BookConfig.defaultKey", "link" : "laika\/theme\/config\/BookConfig$.html#defaultKey:laika.config.DefaultKey[laika.theme.config.BookConfig]", "kind" : "implicit val"}, {"label" : "encoder", "tail" : ": ConfigEncoder[BookConfig]", "member" : "laika.theme.config.BookConfig.encoder", "link" : "laika\/theme\/config\/BookConfig$.html#encoder:laika.config.ConfigEncoder[laika.theme.config.BookConfig]", "kind" : "implicit val"}, {"label" : "decoder", "tail" : ": ConfigDecoder[BookConfig]", "member" : "laika.theme.config.BookConfig.decoder", "link" : "laika\/theme\/config\/BookConfig$.html#decoder:laika.config.ConfigDecoder[laika.theme.config.BookConfig]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/theme\/config\/BookConfig$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/theme\/config\/BookConfig$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/theme\/config\/BookConfig$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/theme\/config\/BookConfig$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/theme\/config\/BookConfig$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/theme\/config\/BookConfig$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/theme\/config\/BookConfig$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/BookConfig$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/BookConfig$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/BookConfig$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/theme\/config\/BookConfig$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/theme\/config\/BookConfig$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/theme\/config\/BookConfig$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/theme\/config\/BookConfig$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/theme\/config\/BookConfig$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/theme\/config\/BookConfig$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/theme\/config\/BookConfig$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/theme\/config\/BookConfig$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/theme\/config\/BookConfig$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "laika.theme.config.BookConfig#<init>", "error" : "unsupported entity"}, {"label" : "coverImage", "tail" : ": Option[Path]", "member" : "laika.theme.config.BookConfig.coverImage", "link" : "laika\/theme\/config\/BookConfig.html#coverImage:Option[laika.ast.Path]", "kind" : "val"}, {"label" : "fonts", "tail" : ": Seq[FontDefinition]", "member" : "laika.theme.config.BookConfig.fonts", "link" : "laika\/theme\/config\/BookConfig.html#fonts:Seq[laika.theme.config.FontDefinition]", "kind" : "val"}, {"label" : "navigationDepth", "tail" : ": Option[Int]", "member" : "laika.theme.config.BookConfig.navigationDepth", "link" : "laika\/theme\/config\/BookConfig.html#navigationDepth:Option[Int]", "kind" : "val"}, {"label" : "metadata", "tail" : ": DocumentMetadata", "member" : "laika.theme.config.BookConfig.metadata", "link" : "laika\/theme\/config\/BookConfig.html#metadata:laika.ast.DocumentMetadata", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/theme\/config\/BookConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/theme\/config\/BookConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/theme\/config\/BookConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/theme\/config\/BookConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/theme\/config\/BookConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/theme\/config\/BookConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/theme\/config\/BookConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/BookConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/BookConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/BookConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/theme\/config\/BookConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/theme\/config\/BookConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/theme\/config\/BookConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/theme\/config\/BookConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/theme\/config\/BookConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/theme\/config\/BookConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/theme\/config\/BookConfig.html", "kind" : "case class"}, {"name" : "laika.theme.config.Color", "shortDescription" : "Represent a color value in a format compatible with CSS.", "object" : "laika\/theme\/config\/Color$.html", "members_class" : [{"label" : "displayValue", "tail" : ": String", "member" : "laika.theme.config.Color.displayValue", "link" : "laika\/theme\/config\/Color.html#displayValue:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/theme\/config\/Color.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/theme\/config\/Color.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/theme\/config\/Color.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/theme\/config\/Color.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/theme\/config\/Color.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/theme\/config\/Color.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/theme\/config\/Color.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/Color.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/Color.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/Color.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/theme\/config\/Color.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/theme\/config\/Color.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/theme\/config\/Color.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/theme\/config\/Color.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/theme\/config\/Color.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/theme\/config\/Color.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/theme\/config\/Color.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/theme\/config\/Color.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/theme\/config\/Color.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "validate", "tail" : "(): Option[String]", "member" : "laika.theme.config.Color.validate", "link" : "laika\/theme\/config\/Color.html#validate:Option[String]", "kind" : "abstract def"}], "members_object" : [{"label" : "hex", "tail" : "(hexValue: String): Color", "member" : "laika.theme.config.Color.hex", "link" : "laika\/theme\/config\/Color$.html#hex(hexValue:String):laika.theme.config.Color", "kind" : "def"}, {"label" : "rgba", "tail" : "(red: Int, green: Int, blue: Int, alpha: Float): Color", "member" : "laika.theme.config.Color.rgba", "link" : "laika\/theme\/config\/Color$.html#rgba(red:Int,green:Int,blue:Int,alpha:Float):laika.theme.config.Color", "kind" : "def"}, {"label" : "rgb", "tail" : "(red: Int, green: Int, blue: Int): Color", "member" : "laika.theme.config.Color.rgb", "link" : "laika\/theme\/config\/Color$.html#rgb(red:Int,green:Int,blue:Int):laika.theme.config.Color", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/theme\/config\/Color$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/theme\/config\/Color$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/theme\/config\/Color$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/theme\/config\/Color$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/theme\/config\/Color$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/theme\/config\/Color$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/theme\/config\/Color$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/Color$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/Color$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/Color$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/theme\/config\/Color$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/theme\/config\/Color$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/theme\/config\/Color$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/theme\/config\/Color$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/theme\/config\/Color$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/theme\/config\/Color$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/theme\/config\/Color$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/theme\/config\/Color$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/theme\/config\/Color$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/theme\/config\/Color.html", "kind" : "class"}, {"name" : "laika.theme.config.EmbeddedFont", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/theme\/config\/EmbeddedFont.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/theme\/config\/EmbeddedFont.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/theme\/config\/EmbeddedFont.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/theme\/config\/EmbeddedFont.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/theme\/config\/EmbeddedFont.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/theme\/config\/EmbeddedFont.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/theme\/config\/EmbeddedFont.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/EmbeddedFont.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/EmbeddedFont.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/EmbeddedFont.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/theme\/config\/EmbeddedFont.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/theme\/config\/EmbeddedFont.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/theme\/config\/EmbeddedFont.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/theme\/config\/EmbeddedFont.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/theme\/config\/EmbeddedFont.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/theme\/config\/EmbeddedFont.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/theme\/config\/EmbeddedFont.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/theme\/config\/EmbeddedFont.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/theme\/config\/EmbeddedFont.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "path", "tail" : "(): Path", "member" : "laika.theme.config.EmbeddedFont.path", "link" : "laika\/theme\/config\/EmbeddedFont.html#path:laika.ast.Path", "kind" : "abstract def"}], "shortDescription" : "Base trait for the types of embedded fonts Laika supports, which are either a file-system or classpath resource.", "trait" : "laika\/theme\/config\/EmbeddedFont.html", "kind" : "trait"}, {"name" : "laika.theme.config.EmbeddedFontFile", "shortDescription" : "Represent a font resource from the file system.", "members_case class" : [{"label" : "path", "tail" : ": Path", "member" : "laika.theme.config.EmbeddedFontFile.path", "link" : "laika\/theme\/config\/EmbeddedFontFile.html#path:laika.ast.Path", "kind" : "val"}, {"member" : "laika.theme.config.EmbeddedFontFile#<init>", "error" : "unsupported entity"}, {"label" : "file", "tail" : ": File", "member" : "laika.theme.config.EmbeddedFontFile.file", "link" : "laika\/theme\/config\/EmbeddedFontFile.html#file:java.io.File", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/theme\/config\/EmbeddedFontFile.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/theme\/config\/EmbeddedFontFile.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/theme\/config\/EmbeddedFontFile.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/theme\/config\/EmbeddedFontFile.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/theme\/config\/EmbeddedFontFile.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/theme\/config\/EmbeddedFontFile.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/theme\/config\/EmbeddedFontFile.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/EmbeddedFontFile.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/EmbeddedFontFile.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/EmbeddedFontFile.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/theme\/config\/EmbeddedFontFile.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/theme\/config\/EmbeddedFontFile.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/theme\/config\/EmbeddedFontFile.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/theme\/config\/EmbeddedFontFile.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/theme\/config\/EmbeddedFontFile.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/theme\/config\/EmbeddedFontFile.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/theme\/config\/EmbeddedFontFile.html", "kind" : "case class"}, {"name" : "laika.theme.config.EmbeddedFontResource", "shortDescription" : "Represent a font files as a classpath resource.", "members_case class" : [{"label" : "path", "tail" : ": Path", "member" : "laika.theme.config.EmbeddedFontResource.path", "link" : "laika\/theme\/config\/EmbeddedFontResource.html#path:laika.ast.Path", "kind" : "val"}, {"member" : "laika.theme.config.EmbeddedFontResource#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : ": String", "member" : "laika.theme.config.EmbeddedFontResource.name", "link" : "laika\/theme\/config\/EmbeddedFontResource.html#name:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/theme\/config\/EmbeddedFontResource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/theme\/config\/EmbeddedFontResource.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/theme\/config\/EmbeddedFontResource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/theme\/config\/EmbeddedFontResource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/theme\/config\/EmbeddedFontResource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/theme\/config\/EmbeddedFontResource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/theme\/config\/EmbeddedFontResource.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/EmbeddedFontResource.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/EmbeddedFontResource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/EmbeddedFontResource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/theme\/config\/EmbeddedFontResource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/theme\/config\/EmbeddedFontResource.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/theme\/config\/EmbeddedFontResource.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/theme\/config\/EmbeddedFontResource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/theme\/config\/EmbeddedFontResource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/theme\/config\/EmbeddedFontResource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/theme\/config\/EmbeddedFontResource.html", "kind" : "case class"}, {"name" : "laika.theme.config.Font", "shortDescription" : "Represents a font resource, either based on a local classpath or file system resource,or a web font URL, or both.", "object" : "laika\/theme\/config\/Font$.html", "members_object" : [{"label" : "webCSS", "tail" : "(url: String): Font", "member" : "laika.theme.config.Font.webCSS", "link" : "laika\/theme\/config\/Font$.html#webCSS(url:String):laika.theme.config.Font", "kind" : "def"}, {"label" : "embedResource", "tail" : "(name: String): Font", "member" : "laika.theme.config.Font.embedResource", "link" : "laika\/theme\/config\/Font$.html#embedResource(name:String):laika.theme.config.Font", "kind" : "def"}, {"label" : "embedFile", "tail" : "(file: File): Font", "member" : "laika.theme.config.Font.embedFile", "link" : "laika\/theme\/config\/Font$.html#embedFile(file:java.io.File):laika.theme.config.Font", "kind" : "def"}, {"label" : "embedFile", "tail" : "(name: String): Font", "member" : "laika.theme.config.Font.embedFile", "link" : "laika\/theme\/config\/Font$.html#embedFile(name:String):laika.theme.config.Font", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/theme\/config\/Font$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/theme\/config\/Font$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/theme\/config\/Font$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/theme\/config\/Font$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/theme\/config\/Font$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/theme\/config\/Font$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/theme\/config\/Font$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/Font$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/Font$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/Font$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/theme\/config\/Font$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/theme\/config\/Font$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/theme\/config\/Font$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/theme\/config\/Font$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/theme\/config\/Font$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/theme\/config\/Font$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/theme\/config\/Font$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/theme\/config\/Font$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/theme\/config\/Font$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "definedAs", "tail" : "(family: String, weight: FontWeight, style: FontStyle): FontDefinition", "member" : "laika.theme.config.Font.definedAs", "link" : "laika\/theme\/config\/Font.html#definedAs(family:String,weight:laika.theme.config.FontWeight,style:laika.theme.config.FontStyle):laika.theme.config.FontDefinition", "kind" : "def"}, {"label" : "webCSS", "tail" : "(url: String): Font", "member" : "laika.theme.config.Font.webCSS", "link" : "laika\/theme\/config\/Font.html#webCSS(url:String):laika.theme.config.Font", "kind" : "def"}, {"label" : "embedResource", "tail" : "(name: String): Font", "member" : "laika.theme.config.Font.embedResource", "link" : "laika\/theme\/config\/Font.html#embedResource(name:String):laika.theme.config.Font", "kind" : "def"}, {"label" : "embedFile", "tail" : "(file: File): Font", "member" : "laika.theme.config.Font.embedFile", "link" : "laika\/theme\/config\/Font.html#embedFile(file:java.io.File):laika.theme.config.Font", "kind" : "def"}, {"label" : "embedFile", "tail" : "(name: String): Font", "member" : "laika.theme.config.Font.embedFile", "link" : "laika\/theme\/config\/Font.html#embedFile(name:String):laika.theme.config.Font", "kind" : "def"}, {"label" : "webCSS", "tail" : ": Option[String]", "member" : "laika.theme.config.Font.webCSS", "link" : "laika\/theme\/config\/Font.html#webCSS:Option[String]", "kind" : "val"}, {"label" : "embedResource", "tail" : ": Option[EmbeddedFont]", "member" : "laika.theme.config.Font.embedResource", "link" : "laika\/theme\/config\/Font.html#embedResource:Option[laika.theme.config.EmbeddedFont]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/theme\/config\/Font.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/theme\/config\/Font.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/theme\/config\/Font.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/theme\/config\/Font.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/theme\/config\/Font.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/theme\/config\/Font.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/theme\/config\/Font.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/Font.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/Font.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/Font.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/theme\/config\/Font.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/theme\/config\/Font.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/theme\/config\/Font.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/theme\/config\/Font.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/theme\/config\/Font.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/theme\/config\/Font.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/theme\/config\/Font.html", "kind" : "case class"}, {"name" : "laika.theme.config.FontDefinition", "shortDescription" : "Represent a full font definition, combining the font resource (file and\/or web URL) plus themapping to a family name, font weight and style.", "object" : "laika\/theme\/config\/FontDefinition$.html", "members_object" : [{"label" : "defaultKey", "tail" : ": DefaultKey[Seq[FontDefinition]]", "member" : "laika.theme.config.FontDefinition.defaultKey", "link" : "laika\/theme\/config\/FontDefinition$.html#defaultKey:laika.config.DefaultKey[Seq[laika.theme.config.FontDefinition]]", "kind" : "implicit val"}, {"label" : "encoder", "tail" : ": ConfigEncoder[FontDefinition]", "member" : "laika.theme.config.FontDefinition.encoder", "link" : "laika\/theme\/config\/FontDefinition$.html#encoder:laika.config.ConfigEncoder[laika.theme.config.FontDefinition]", "kind" : "implicit val"}, {"label" : "decoder", "tail" : ": ConfigDecoder[FontDefinition]", "member" : "laika.theme.config.FontDefinition.decoder", "link" : "laika\/theme\/config\/FontDefinition$.html#decoder:laika.config.ConfigDecoder[laika.theme.config.FontDefinition]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/theme\/config\/FontDefinition$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/theme\/config\/FontDefinition$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/theme\/config\/FontDefinition$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/theme\/config\/FontDefinition$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/theme\/config\/FontDefinition$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/theme\/config\/FontDefinition$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/theme\/config\/FontDefinition$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/FontDefinition$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/FontDefinition$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/FontDefinition$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/theme\/config\/FontDefinition$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/theme\/config\/FontDefinition$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/theme\/config\/FontDefinition$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/theme\/config\/FontDefinition$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/theme\/config\/FontDefinition$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/theme\/config\/FontDefinition$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/theme\/config\/FontDefinition$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/theme\/config\/FontDefinition$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/theme\/config\/FontDefinition$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "laika.theme.config.FontDefinition#<init>", "error" : "unsupported entity"}, {"label" : "style", "tail" : ": FontStyle", "member" : "laika.theme.config.FontDefinition.style", "link" : "laika\/theme\/config\/FontDefinition.html#style:laika.theme.config.FontStyle", "kind" : "val"}, {"label" : "weight", "tail" : ": FontWeight", "member" : "laika.theme.config.FontDefinition.weight", "link" : "laika\/theme\/config\/FontDefinition.html#weight:laika.theme.config.FontWeight", "kind" : "val"}, {"label" : "family", "tail" : ": String", "member" : "laika.theme.config.FontDefinition.family", "link" : "laika\/theme\/config\/FontDefinition.html#family:String", "kind" : "val"}, {"label" : "resource", "tail" : ": Font", "member" : "laika.theme.config.FontDefinition.resource", "link" : "laika\/theme\/config\/FontDefinition.html#resource:laika.theme.config.Font", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/theme\/config\/FontDefinition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/theme\/config\/FontDefinition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/theme\/config\/FontDefinition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/theme\/config\/FontDefinition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/theme\/config\/FontDefinition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/theme\/config\/FontDefinition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/theme\/config\/FontDefinition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/FontDefinition.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/FontDefinition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/FontDefinition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/theme\/config\/FontDefinition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/theme\/config\/FontDefinition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/theme\/config\/FontDefinition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/theme\/config\/FontDefinition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/theme\/config\/FontDefinition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/theme\/config\/FontDefinition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/theme\/config\/FontDefinition.html", "kind" : "case class"}, {"name" : "laika.theme.config.FontStyle", "shortDescription" : "Enumeration for the valid font styles that can be assigned to a font resource, compatible with CSS properties.", "object" : "laika\/theme\/config\/FontStyle$.html", "members_class" : [{"label" : "value", "tail" : ": String", "member" : "laika.theme.config.FontStyle.value", "link" : "laika\/theme\/config\/FontStyle.html#value:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/theme\/config\/FontStyle.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/theme\/config\/FontStyle.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/theme\/config\/FontStyle.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/theme\/config\/FontStyle.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/theme\/config\/FontStyle.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/theme\/config\/FontStyle.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/theme\/config\/FontStyle.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/FontStyle.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/FontStyle.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/FontStyle.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/theme\/config\/FontStyle.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/theme\/config\/FontStyle.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/theme\/config\/FontStyle.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/theme\/config\/FontStyle.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/theme\/config\/FontStyle.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/theme\/config\/FontStyle.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/theme\/config\/FontStyle.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/theme\/config\/FontStyle.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/theme\/config\/FontStyle.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "fromString", "tail" : "(value: String): Option[FontStyle]", "member" : "laika.theme.config.FontStyle.fromString", "link" : "laika\/theme\/config\/FontStyle$.html#fromString(value:String):Option[laika.theme.config.FontStyle]", "kind" : "def"}, {"label" : "Italic", "tail" : "", "member" : "laika.theme.config.FontStyle.Italic", "link" : "laika\/theme\/config\/FontStyle$.html#Italic", "kind" : "object"}, {"label" : "Normal", "tail" : "", "member" : "laika.theme.config.FontStyle.Normal", "link" : "laika\/theme\/config\/FontStyle$.html#Normal", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/theme\/config\/FontStyle$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/theme\/config\/FontStyle$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/theme\/config\/FontStyle$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/theme\/config\/FontStyle$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/theme\/config\/FontStyle$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/theme\/config\/FontStyle$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/theme\/config\/FontStyle$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/FontStyle$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/FontStyle$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/FontStyle$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/theme\/config\/FontStyle$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/theme\/config\/FontStyle$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/theme\/config\/FontStyle$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/theme\/config\/FontStyle$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/theme\/config\/FontStyle$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/theme\/config\/FontStyle$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/theme\/config\/FontStyle$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/theme\/config\/FontStyle$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/theme\/config\/FontStyle$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/theme\/config\/FontStyle.html", "kind" : "class"}, {"name" : "laika.theme.config.FontWeight", "shortDescription" : "Enumeration for the valid font weights that can be assigned to a font resource, compatible with CSS properties.", "object" : "laika\/theme\/config\/FontWeight$.html", "members_class" : [{"label" : "value", "tail" : ": String", "member" : "laika.theme.config.FontWeight.value", "link" : "laika\/theme\/config\/FontWeight.html#value:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/theme\/config\/FontWeight.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/theme\/config\/FontWeight.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/theme\/config\/FontWeight.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/theme\/config\/FontWeight.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/theme\/config\/FontWeight.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/theme\/config\/FontWeight.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/theme\/config\/FontWeight.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/FontWeight.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/FontWeight.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/FontWeight.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/theme\/config\/FontWeight.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/theme\/config\/FontWeight.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/theme\/config\/FontWeight.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/theme\/config\/FontWeight.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/theme\/config\/FontWeight.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/theme\/config\/FontWeight.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/theme\/config\/FontWeight.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/theme\/config\/FontWeight.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/theme\/config\/FontWeight.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "fromString", "tail" : "(value: String): Option[FontWeight]", "member" : "laika.theme.config.FontWeight.fromString", "link" : "laika\/theme\/config\/FontWeight$.html#fromString(value:String):Option[laika.theme.config.FontWeight]", "kind" : "def"}, {"label" : "900", "tail" : "", "member" : "laika.theme.config.FontWeight.900", "link" : "laika\/theme\/config\/FontWeight$.html#900", "kind" : "object"}, {"label" : "800", "tail" : "", "member" : "laika.theme.config.FontWeight.800", "link" : "laika\/theme\/config\/FontWeight$.html#800", "kind" : "object"}, {"label" : "700", "tail" : "", "member" : "laika.theme.config.FontWeight.700", "link" : "laika\/theme\/config\/FontWeight$.html#700", "kind" : "object"}, {"label" : "600", "tail" : "", "member" : "laika.theme.config.FontWeight.600", "link" : "laika\/theme\/config\/FontWeight$.html#600", "kind" : "object"}, {"label" : "500", "tail" : "", "member" : "laika.theme.config.FontWeight.500", "link" : "laika\/theme\/config\/FontWeight$.html#500", "kind" : "object"}, {"label" : "400", "tail" : "", "member" : "laika.theme.config.FontWeight.400", "link" : "laika\/theme\/config\/FontWeight$.html#400", "kind" : "object"}, {"label" : "300", "tail" : "", "member" : "laika.theme.config.FontWeight.300", "link" : "laika\/theme\/config\/FontWeight$.html#300", "kind" : "object"}, {"label" : "200", "tail" : "", "member" : "laika.theme.config.FontWeight.200", "link" : "laika\/theme\/config\/FontWeight$.html#200", "kind" : "object"}, {"label" : "100", "tail" : "", "member" : "laika.theme.config.FontWeight.100", "link" : "laika\/theme\/config\/FontWeight$.html#100", "kind" : "object"}, {"label" : "Normal", "tail" : "", "member" : "laika.theme.config.FontWeight.Normal", "link" : "laika\/theme\/config\/FontWeight$.html#Normal", "kind" : "object"}, {"label" : "Bold", "tail" : "", "member" : "laika.theme.config.FontWeight.Bold", "link" : "laika\/theme\/config\/FontWeight$.html#Bold", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/theme\/config\/FontWeight$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/theme\/config\/FontWeight$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/theme\/config\/FontWeight$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/theme\/config\/FontWeight$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/theme\/config\/FontWeight$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/theme\/config\/FontWeight$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/theme\/config\/FontWeight$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/FontWeight$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/FontWeight$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/theme\/config\/FontWeight$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/theme\/config\/FontWeight$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/theme\/config\/FontWeight$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/theme\/config\/FontWeight$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/theme\/config\/FontWeight$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/theme\/config\/FontWeight$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/theme\/config\/FontWeight$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/theme\/config\/FontWeight$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/theme\/config\/FontWeight$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/theme\/config\/FontWeight$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/theme\/config\/FontWeight.html", "kind" : "class"}], "laika.rst" : [{"name" : "laika.rst.BaseParsers", "shortDescription" : "", "object" : "laika\/rst\/BaseParsers$.html", "members_object" : [{"label" : "footnoteLabel", "tail" : ": Parser[FootnoteLabel]", "member" : "laika.rst.BaseParsers.footnoteLabel", "link" : "laika\/rst\/BaseParsers$.html#footnoteLabel:laika.parse.Parser[laika.ast.FootnoteLabel]", "kind" : "val"}, {"label" : "sizeAndUnit", "tail" : ": Parser[Length]", "member" : "laika.rst.BaseParsers.sizeAndUnit", "link" : "laika\/rst\/BaseParsers$.html#sizeAndUnit:laika.parse.Parser[laika.ast.Length]", "kind" : "val"}, {"label" : "simpleRefName", "tail" : ": Parser[String]", "member" : "laika.rst.BaseParsers.simpleRefName", "link" : "laika\/rst\/BaseParsers$.html#simpleRefName:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "punctuationChar", "tail" : ": Characters[String]", "member" : "laika.rst.BaseParsers.punctuationChar", "link" : "laika\/rst\/BaseParsers$.html#punctuationChar:laika.parse.text.Characters[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/BaseParsers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/BaseParsers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/BaseParsers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/BaseParsers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/BaseParsers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/BaseParsers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/BaseParsers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/BaseParsers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/BaseParsers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/BaseParsers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/BaseParsers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/BaseParsers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/BaseParsers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/BaseParsers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/BaseParsers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/BaseParsers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/BaseParsers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/BaseParsers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/BaseParsers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.rst.BlockParsers", "shortDescription" : "Provides the parsers for all types of block-level elements of reStructuredText.", "object" : "laika\/rst\/BlockParsers$.html", "members_object" : [{"label" : "createBlockListParser", "tail" : "(blockParser: Parser[Block]): Parser[Seq[Block]]", "member" : "laika.rst.BlockParsers.createBlockListParser", "link" : "laika\/rst\/BlockParsers$.html#createBlockListParser(blockParser:laika.parse.Parser[laika.ast.Block]):laika.parse.Parser[Seq[laika.ast.Block]]", "kind" : "def"}, {"label" : "literalBlock", "tail" : ": Parser[Block]", "member" : "laika.rst.BlockParsers.literalBlock", "link" : "laika\/rst\/BlockParsers$.html#literalBlock:laika.parse.Parser[laika.ast.Block]", "kind" : "val"}, {"label" : "blockQuote", "tail" : ": BlockParserBuilder", "member" : "laika.rst.BlockParsers.blockQuote", "link" : "laika\/rst\/BlockParsers$.html#blockQuote:laika.bundle.BlockParserBuilder", "kind" : "lazy val"}, {"label" : "doctest", "tail" : ": BlockParserBuilder", "member" : "laika.rst.BlockParsers.doctest", "link" : "laika\/rst\/BlockParsers$.html#doctest:laika.bundle.BlockParserBuilder", "kind" : "val"}, {"label" : "headerWithUnderline", "tail" : ": BlockParserBuilder", "member" : "laika.rst.BlockParsers.headerWithUnderline", "link" : "laika\/rst\/BlockParsers$.html#headerWithUnderline:laika.bundle.BlockParserBuilder", "kind" : "lazy val"}, {"label" : "headerWithOverline", "tail" : ": BlockParserBuilder", "member" : "laika.rst.BlockParsers.headerWithOverline", "link" : "laika\/rst\/BlockParsers$.html#headerWithOverline:laika.bundle.BlockParserBuilder", "kind" : "lazy val"}, {"label" : "paragraph", "tail" : ": BlockParserBuilder", "member" : "laika.rst.BlockParsers.paragraph", "link" : "laika\/rst\/BlockParsers$.html#paragraph:laika.bundle.BlockParserBuilder", "kind" : "lazy val"}, {"label" : "transition", "tail" : ": BlockParserBuilder", "member" : "laika.rst.BlockParsers.transition", "link" : "laika\/rst\/BlockParsers$.html#transition:laika.bundle.BlockParserBuilder", "kind" : "val"}, {"label" : "ws", "tail" : ": Characters[String]", "member" : "laika.rst.BlockParsers.ws", "link" : "laika\/rst\/BlockParsers$.html#ws:laika.parse.text.Characters[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/BlockParsers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/BlockParsers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/BlockParsers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/BlockParsers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/BlockParsers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/BlockParsers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/BlockParsers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/BlockParsers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/BlockParsers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/BlockParsers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/BlockParsers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/BlockParsers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/BlockParsers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/BlockParsers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/BlockParsers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/BlockParsers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/BlockParsers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/BlockParsers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/BlockParsers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.rst.ExplicitBlockParsers", "shortDescription" : "Provides the parsers for all types of explicit block elements.", "object" : "laika\/rst\/ExplicitBlockParsers$.html", "members_class" : [{"label" : "comment", "tail" : ": Parser[Comment]", "member" : "laika.rst.ExplicitBlockParsers.comment", "link" : "laika\/rst\/ExplicitBlockParsers.html#comment:laika.parse.Parser[laika.ast.Comment]", "kind" : "val"}, {"label" : "linkTarget", "tail" : ": Parser[Block with Span]", "member" : "laika.rst.ExplicitBlockParsers.linkTarget", "link" : "laika\/rst\/ExplicitBlockParsers.html#linkTarget:laika.parse.Parser[laika.ast.Blockwithlaika.ast.Span]", "kind" : "lazy val"}, {"label" : "citation", "tail" : ": Parser[Citation]", "member" : "laika.rst.ExplicitBlockParsers.citation", "link" : "laika\/rst\/ExplicitBlockParsers.html#citation:laika.parse.Parser[laika.ast.Citation]", "kind" : "lazy val"}, {"label" : "footnote", "tail" : ": Parser[FootnoteDefinition]", "member" : "laika.rst.ExplicitBlockParsers.footnote", "link" : "laika\/rst\/ExplicitBlockParsers.html#footnote:laika.parse.Parser[laika.ast.FootnoteDefinition]", "kind" : "lazy val"}, {"label" : "explicitBlockItem", "tail" : ": PrefixedParser[Block]", "member" : "laika.rst.ExplicitBlockParsers.explicitBlockItem", "link" : "laika\/rst\/ExplicitBlockParsers.html#explicitBlockItem:laika.parse.text.PrefixedParser[laika.ast.Block]", "kind" : "lazy val"}, {"member" : "laika.rst.ExplicitBlockParsers#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ExplicitBlockParsers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ExplicitBlockParsers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ExplicitBlockParsers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ExplicitBlockParsers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ExplicitBlockParsers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ExplicitBlockParsers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ExplicitBlockParsers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ExplicitBlockParsers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ExplicitBlockParsers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ExplicitBlockParsers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ExplicitBlockParsers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ExplicitBlockParsers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/ExplicitBlockParsers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ExplicitBlockParsers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/ExplicitBlockParsers.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/ExplicitBlockParsers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ExplicitBlockParsers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ExplicitBlockParsers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ExplicitBlockParsers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "shortAnonymousLinkTarget", "tail" : ": BlockParserBuilder", "member" : "laika.rst.ExplicitBlockParsers.shortAnonymousLinkTarget", "link" : "laika\/rst\/ExplicitBlockParsers$.html#shortAnonymousLinkTarget:laika.bundle.BlockParserBuilder", "kind" : "lazy val"}, {"label" : "allBlocks", "tail" : ": BlockParserBuilder", "member" : "laika.rst.ExplicitBlockParsers.allBlocks", "link" : "laika\/rst\/ExplicitBlockParsers$.html#allBlocks:laika.bundle.BlockParserBuilder", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ExplicitBlockParsers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ExplicitBlockParsers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ExplicitBlockParsers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ExplicitBlockParsers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ExplicitBlockParsers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ExplicitBlockParsers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ExplicitBlockParsers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ExplicitBlockParsers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ExplicitBlockParsers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ExplicitBlockParsers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ExplicitBlockParsers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ExplicitBlockParsers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/ExplicitBlockParsers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ExplicitBlockParsers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/ExplicitBlockParsers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/ExplicitBlockParsers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ExplicitBlockParsers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ExplicitBlockParsers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ExplicitBlockParsers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/rst\/ExplicitBlockParsers.html", "kind" : "class"}, {"name" : "laika.rst.InlineParsers", "shortDescription" : "Provides all inline parsers for reStructuredText.", "object" : "laika\/rst\/InlineParsers$.html", "members_object" : [{"label" : "email", "tail" : ": SpanParserBuilder", "member" : "laika.rst.InlineParsers.email", "link" : "laika\/rst\/InlineParsers$.html#email:laika.bundle.SpanParserBuilder", "kind" : "lazy val"}, {"label" : "uri", "tail" : ": SpanParserBuilder", "member" : "laika.rst.InlineParsers.uri", "link" : "laika\/rst\/InlineParsers$.html#uri:laika.bundle.SpanParserBuilder", "kind" : "lazy val"}, {"label" : "simpleLinkRef", "tail" : ": SpanParserBuilder", "member" : "laika.rst.InlineParsers.simpleLinkRef", "link" : "laika\/rst\/InlineParsers$.html#simpleLinkRef:laika.bundle.SpanParserBuilder", "kind" : "lazy val"}, {"label" : "phraseLinkRef", "tail" : ": SpanParserBuilder", "member" : "laika.rst.InlineParsers.phraseLinkRef", "link" : "laika\/rst\/InlineParsers$.html#phraseLinkRef:laika.bundle.SpanParserBuilder", "kind" : "lazy val"}, {"label" : "interpretedTextWithRoleSuffix", "tail" : "(defaultTextRole: String): SpanParserBuilder", "member" : "laika.rst.InlineParsers.interpretedTextWithRoleSuffix", "link" : "laika\/rst\/InlineParsers$.html#interpretedTextWithRoleSuffix(defaultTextRole:String):laika.bundle.SpanParserBuilder", "kind" : "def"}, {"label" : "interpretedTextWithRolePrefix", "tail" : ": SpanParserBuilder", "member" : "laika.rst.InlineParsers.interpretedTextWithRolePrefix", "link" : "laika\/rst\/InlineParsers$.html#interpretedTextWithRolePrefix:laika.bundle.SpanParserBuilder", "kind" : "lazy val"}, {"label" : "internalTarget", "tail" : ": SpanParserBuilder", "member" : "laika.rst.InlineParsers.internalTarget", "link" : "laika\/rst\/InlineParsers$.html#internalTarget:laika.bundle.SpanParserBuilder", "kind" : "lazy val"}, {"label" : "substitutionRef", "tail" : ": SpanParserBuilder", "member" : "laika.rst.InlineParsers.substitutionRef", "link" : "laika\/rst\/InlineParsers$.html#substitutionRef:laika.bundle.SpanParserBuilder", "kind" : "lazy val"}, {"label" : "citationRef", "tail" : ": SpanParserBuilder", "member" : "laika.rst.InlineParsers.citationRef", "link" : "laika\/rst\/InlineParsers$.html#citationRef:laika.bundle.SpanParserBuilder", "kind" : "lazy val"}, {"label" : "footnoteRef", "tail" : ": SpanParserBuilder", "member" : "laika.rst.InlineParsers.footnoteRef", "link" : "laika\/rst\/InlineParsers$.html#footnoteRef:laika.bundle.SpanParserBuilder", "kind" : "lazy val"}, {"label" : "inlineLiteral", "tail" : ": SpanParserBuilder", "member" : "laika.rst.InlineParsers.inlineLiteral", "link" : "laika\/rst\/InlineParsers$.html#inlineLiteral:laika.bundle.SpanParserBuilder", "kind" : "lazy val"}, {"label" : "strong", "tail" : ": SpanParserBuilder", "member" : "laika.rst.InlineParsers.strong", "link" : "laika\/rst\/InlineParsers$.html#strong:laika.bundle.SpanParserBuilder", "kind" : "lazy val"}, {"label" : "em", "tail" : ": SpanParserBuilder", "member" : "laika.rst.InlineParsers.em", "link" : "laika\/rst\/InlineParsers$.html#em:laika.bundle.SpanParserBuilder", "kind" : "lazy val"}, {"label" : "markupEnd", "tail" : "(end: PrefixedParser[String]): PrefixedParser[String]", "member" : "laika.rst.InlineParsers.markupEnd", "link" : "laika\/rst\/InlineParsers$.html#markupEnd(end:laika.parse.text.PrefixedParser[String]):laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "markupEnd", "tail" : "(end: String): PrefixedParser[String]", "member" : "laika.rst.InlineParsers.markupEnd", "link" : "laika\/rst\/InlineParsers$.html#markupEnd(end:String):laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "markupStart", "tail" : "(start: PrefixedParser[String], end: Parser[String]): PrefixedParser[Any]", "member" : "laika.rst.InlineParsers.markupStart", "link" : "laika\/rst\/InlineParsers$.html#markupStart(start:laika.parse.text.PrefixedParser[String],end:laika.parse.Parser[String]):laika.parse.text.PrefixedParser[Any]", "kind" : "def"}, {"label" : "markupStart", "tail" : "(start: String, end: String): PrefixedParser[Any]", "member" : "laika.rst.InlineParsers.markupStart", "link" : "laika\/rst\/InlineParsers$.html#markupStart(start:String,end:String):laika.parse.text.PrefixedParser[Any]", "kind" : "def"}, {"label" : "escapedChar", "tail" : ": Parser[String]", "member" : "laika.rst.InlineParsers.escapedChar", "link" : "laika\/rst\/InlineParsers$.html#escapedChar:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/InlineParsers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/InlineParsers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/InlineParsers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/InlineParsers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/InlineParsers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/InlineParsers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/InlineParsers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/InlineParsers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/InlineParsers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/InlineParsers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/InlineParsers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/InlineParsers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/InlineParsers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/InlineParsers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/InlineParsers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/InlineParsers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/InlineParsers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/InlineParsers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/InlineParsers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.rst.ListParsers", "shortDescription" : "Provides the parsers for all reStructuredText list types.", "object" : "laika\/rst\/ListParsers$.html", "members_object" : [{"label" : "lineBlock", "tail" : ": BlockParserBuilder", "member" : "laika.rst.ListParsers.lineBlock", "link" : "laika\/rst\/ListParsers$.html#lineBlock:laika.bundle.BlockParserBuilder", "kind" : "lazy val"}, {"label" : "optionList", "tail" : ": BlockParserBuilder", "member" : "laika.rst.ListParsers.optionList", "link" : "laika\/rst\/ListParsers$.html#optionList:laika.bundle.BlockParserBuilder", "kind" : "lazy val"}, {"label" : "fieldList", "tail" : ": BlockParserBuilder", "member" : "laika.rst.ListParsers.fieldList", "link" : "laika\/rst\/ListParsers$.html#fieldList:laika.bundle.BlockParserBuilder", "kind" : "lazy val"}, {"label" : "definitionList", "tail" : ": BlockParserBuilder", "member" : "laika.rst.ListParsers.definitionList", "link" : "laika\/rst\/ListParsers$.html#definitionList:laika.bundle.BlockParserBuilder", "kind" : "lazy val"}, {"label" : "enumList", "tail" : ": BlockParserBuilder", "member" : "laika.rst.ListParsers.enumList", "link" : "laika\/rst\/ListParsers$.html#enumList:laika.bundle.BlockParserBuilder", "kind" : "lazy val"}, {"label" : "bulletList", "tail" : ": BlockParserBuilder", "member" : "laika.rst.ListParsers.bulletList", "link" : "laika\/rst\/ListParsers$.html#bulletList:laika.bundle.BlockParserBuilder", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ListParsers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ListParsers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ListParsers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ListParsers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ListParsers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ListParsers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ListParsers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ListParsers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ListParsers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ListParsers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ListParsers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ListParsers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/ListParsers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ListParsers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/ListParsers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/ListParsers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ListParsers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ListParsers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ListParsers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.rst.TableParsers", "shortDescription" : "Provides parsers for the two table types supported by reStructuredText.", "object" : "laika\/rst\/TableParsers$.html", "members_object" : [{"label" : "simpleTable", "tail" : ": BlockParserBuilder", "member" : "laika.rst.TableParsers.simpleTable", "link" : "laika\/rst\/TableParsers$.html#simpleTable:laika.bundle.BlockParserBuilder", "kind" : "lazy val"}, {"label" : "gridTable", "tail" : ": BlockParserBuilder", "member" : "laika.rst.TableParsers.gridTable", "link" : "laika\/rst\/TableParsers$.html#gridTable:laika.bundle.BlockParserBuilder", "kind" : "lazy val"}, {"label" : "TableBuilder", "tail" : "", "member" : "laika.rst.TableParsers.TableBuilder", "link" : "laika\/rst\/TableParsers$.html#TableBuilderextendsAnyRef", "kind" : "class"}, {"label" : "ColumnBuilder", "tail" : "", "member" : "laika.rst.TableParsers.ColumnBuilder", "link" : "laika\/rst\/TableParsers$.html#ColumnBuilderextendsAnyRef", "kind" : "class"}, {"label" : "RowBuilder", "tail" : "", "member" : "laika.rst.TableParsers.RowBuilder", "link" : "laika\/rst\/TableParsers$.html#RowBuilderextendsAnyRef", "kind" : "class"}, {"label" : "CellBuilderRef", "tail" : "", "member" : "laika.rst.TableParsers.CellBuilderRef", "link" : "laika\/rst\/TableParsers$.html#CellBuilderRefextendsAnyRef", "kind" : "class"}, {"label" : "CellBuilder", "tail" : "", "member" : "laika.rst.TableParsers.CellBuilder", "link" : "laika\/rst\/TableParsers$.html#CellBuilderextendsAnyRef", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/TableParsers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/TableParsers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/TableParsers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/TableParsers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/TableParsers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/TableParsers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/TableParsers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/TableParsers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/TableParsers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/TableParsers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/TableParsers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/TableParsers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/TableParsers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/TableParsers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/TableParsers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/TableParsers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/TableParsers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/TableParsers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/TableParsers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.fop" : [], "laika.parse.directive" : [{"name" : "laika.parse.directive.BlockDirectiveParsers", "shortDescription" : "Provides the parser definitions for block directives in markup documents.", "object" : "laika\/parse\/directive\/BlockDirectiveParsers$.html", "members_object" : [{"label" : "blockDirectiveParser", "tail" : "(directives: Map[String, directive.Blocks.Directive])(recParsers: RecursiveParsers): PrefixedParser[Block]", "member" : "laika.parse.directive.BlockDirectiveParsers.blockDirectiveParser", "link" : "laika\/parse\/directive\/BlockDirectiveParsers$.html#blockDirectiveParser(directives:Map[String,laika.directive.Blocks.Directive])(recParsers:laika.parse.markup.RecursiveParsers):laika.parse.text.PrefixedParser[laika.ast.Block]", "kind" : "def"}, {"label" : "blockDirective", "tail" : "(directives: Map[String, directive.Blocks.Directive]): BlockParserBuilder", "member" : "laika.parse.directive.BlockDirectiveParsers.blockDirective", "link" : "laika\/parse\/directive\/BlockDirectiveParsers$.html#blockDirective(directives:Map[String,laika.directive.Blocks.Directive]):laika.bundle.BlockParserBuilder", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/directive\/BlockDirectiveParsers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/directive\/BlockDirectiveParsers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/directive\/BlockDirectiveParsers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/directive\/BlockDirectiveParsers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/directive\/BlockDirectiveParsers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/directive\/BlockDirectiveParsers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/directive\/BlockDirectiveParsers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/directive\/BlockDirectiveParsers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/directive\/BlockDirectiveParsers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/directive\/BlockDirectiveParsers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/directive\/BlockDirectiveParsers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/directive\/BlockDirectiveParsers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/directive\/BlockDirectiveParsers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/directive\/BlockDirectiveParsers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/directive\/BlockDirectiveParsers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/directive\/BlockDirectiveParsers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/directive\/BlockDirectiveParsers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/directive\/BlockDirectiveParsers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/directive\/BlockDirectiveParsers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.directive.ConfigHeaderParser", "shortDescription" : "Provides parser implementation for configuration header sectionsin text markup files, which are expected to be in HOCON format.", "object" : "laika\/parse\/directive\/ConfigHeaderParser$.html", "members_object" : [{"label" : "merge", "tail" : "(config: Config, values: Seq[(String, ConfigValue)]): Config", "member" : "laika.parse.directive.ConfigHeaderParser.merge", "link" : "laika\/parse\/directive\/ConfigHeaderParser$.html#merge(config:laika.config.Config,values:Seq[(String,laika.config.ConfigValue)]):laika.config.Config", "kind" : "def"}, {"label" : "forTextParser", "tail" : "(parser: Parser[String]): Parser[ConfigParser]", "member" : "laika.parse.directive.ConfigHeaderParser.forTextParser", "link" : "laika\/parse\/directive\/ConfigHeaderParser$.html#forTextParser(parser:laika.parse.Parser[String]):laika.parse.Parser[laika.config.ConfigParser]", "kind" : "def"}, {"label" : "betweenLines", "tail" : "(startDelim: String, endDelim: String): Parser[ConfigParser]", "member" : "laika.parse.directive.ConfigHeaderParser.betweenLines", "link" : "laika\/parse\/directive\/ConfigHeaderParser$.html#betweenLines(startDelim:String,endDelim:String):laika.parse.Parser[laika.config.ConfigParser]", "kind" : "def"}, {"label" : "withDefaultLineDelimiters", "tail" : "(): Parser[ConfigParser]", "member" : "laika.parse.directive.ConfigHeaderParser.withDefaultLineDelimiters", "link" : "laika\/parse\/directive\/ConfigHeaderParser$.html#withDefaultLineDelimiters:laika.parse.Parser[laika.config.ConfigParser]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/directive\/ConfigHeaderParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/directive\/ConfigHeaderParser$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/directive\/ConfigHeaderParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/directive\/ConfigHeaderParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/directive\/ConfigHeaderParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/directive\/ConfigHeaderParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/directive\/ConfigHeaderParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/directive\/ConfigHeaderParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/directive\/ConfigHeaderParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/directive\/ConfigHeaderParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/directive\/ConfigHeaderParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/directive\/ConfigHeaderParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/directive\/ConfigHeaderParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/directive\/ConfigHeaderParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/directive\/ConfigHeaderParser$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/directive\/ConfigHeaderParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/directive\/ConfigHeaderParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/directive\/ConfigHeaderParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/directive\/ConfigHeaderParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.directive.DirectiveParsers", "shortDescription" : "Parsers for all types of custom directives that can be used in templates or as inline or block elements in markup documents.", "object" : "laika\/parse\/directive\/DirectiveParsers$.html", "members_object" : [{"label" : "nestedBraces", "tail" : ": PrefixedParser[Text]", "member" : "laika.parse.directive.DirectiveParsers.nestedBraces", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#nestedBraces:laika.parse.text.PrefixedParser[laika.ast.Text]", "kind" : "val"}, {"label" : "directiveParser", "tail" : "(bodyContent: BodyParserBuilder, escapedText: EscapedTextParsers, supportsCustomFence: Boolean): Parser[ParsedDirective]", "member" : "laika.parse.directive.DirectiveParsers.directiveParser", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#directiveParser(bodyContent:laika.parse.directive.DirectiveParsers.BodyParserBuilder,escapedText:laika.parse.markup.EscapedTextParsers,supportsCustomFence:Boolean):laika.parse.Parser[laika.parse.directive.DirectiveParsers.ParsedDirective]", "kind" : "def"}, {"label" : "declarationParser", "tail" : "(escapedText: EscapedTextParsers, supportsCustomFence: Boolean): Parser[(String, ObjectBuilderValue, String)]", "member" : "laika.parse.directive.DirectiveParsers.declarationParser", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#declarationParser(escapedText:laika.parse.markup.EscapedTextParsers,supportsCustomFence:Boolean):laika.parse.Parser[(String,laika.parse.hocon.ObjectBuilderValue,String)]", "kind" : "def"}, {"label" : "nameDecl", "tail" : ": Parser[String]", "member" : "laika.parse.directive.DirectiveParsers.nameDecl", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#nameDecl:laika.parse.Parser[String]", "kind" : "lazy val"}, {"label" : "wsOrNl", "tail" : ": Parser[String]", "member" : "laika.parse.directive.DirectiveParsers.wsOrNl", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#wsOrNl:laika.parse.Parser[String]", "kind" : "lazy val"}, {"label" : "ParsedDirective", "tail" : "", "member" : "laika.parse.directive.DirectiveParsers.ParsedDirective", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#ParsedDirectiveextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Part", "tail" : "", "member" : "laika.parse.directive.DirectiveParsers.Part", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#PartextendsProductwithSerializable", "kind" : "case class"}, {"label" : "hoconReference", "tail" : "(f: (Key, Boolean, SourceFragment) ⇒ T, e: (InvalidSpan) ⇒ T): PrefixedParser[T]", "member" : "laika.parse.directive.DirectiveParsers.hoconReference", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#hoconReference[T](f:(laika.config.Key,Boolean,laika.parse.SourceFragment)=>T,e:laika.ast.InvalidSpan=>T):laika.parse.text.PrefixedParser[T]", "kind" : "def"}, {"label" : "BodyParserBuilder", "tail" : "", "member" : "laika.parse.directive.DirectiveParsers.BodyParserBuilder", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#BodyParserBuilder=laika.parse.directive.DirectiveParsers.DirectiveSpec=>laika.parse.Parser[Option[laika.parse.SourceFragment]]", "kind" : "type"}, {"label" : "DirectiveSpec", "tail" : "", "member" : "laika.parse.directive.DirectiveParsers.DirectiveSpec", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#DirectiveSpecextendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/directive\/DirectiveParsers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/directive\/DirectiveParsers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.directive.SpanDirectiveParsers", "shortDescription" : "Provides the parser definitions for span directives in markup documents.", "object" : "laika\/parse\/directive\/SpanDirectiveParsers$.html", "members_object" : [{"label" : "spanDirectiveParser", "tail" : "(directives: Map[String, directive.Spans.Directive])(recParsers: RecursiveSpanParsers): PrefixedParser[Span]", "member" : "laika.parse.directive.SpanDirectiveParsers.spanDirectiveParser", "link" : "laika\/parse\/directive\/SpanDirectiveParsers$.html#spanDirectiveParser(directives:Map[String,laika.directive.Spans.Directive])(recParsers:laika.parse.markup.RecursiveSpanParsers):laika.parse.text.PrefixedParser[laika.ast.Span]", "kind" : "def"}, {"label" : "spanDirective", "tail" : "(directives: Map[String, directive.Spans.Directive]): SpanParserBuilder", "member" : "laika.parse.directive.SpanDirectiveParsers.spanDirective", "link" : "laika\/parse\/directive\/SpanDirectiveParsers$.html#spanDirective(directives:Map[String,laika.directive.Spans.Directive]):laika.bundle.SpanParserBuilder", "kind" : "def"}, {"label" : "contextRef", "tail" : ": SpanParserBuilder", "member" : "laika.parse.directive.SpanDirectiveParsers.contextRef", "link" : "laika\/parse\/directive\/SpanDirectiveParsers$.html#contextRef:laika.bundle.SpanParserBuilder", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/directive\/SpanDirectiveParsers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/directive\/SpanDirectiveParsers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/directive\/SpanDirectiveParsers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/directive\/SpanDirectiveParsers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/directive\/SpanDirectiveParsers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/directive\/SpanDirectiveParsers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/directive\/SpanDirectiveParsers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/directive\/SpanDirectiveParsers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/directive\/SpanDirectiveParsers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/directive\/SpanDirectiveParsers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/directive\/SpanDirectiveParsers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/directive\/SpanDirectiveParsers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/directive\/SpanDirectiveParsers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/directive\/SpanDirectiveParsers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/directive\/SpanDirectiveParsers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/directive\/SpanDirectiveParsers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/directive\/SpanDirectiveParsers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/directive\/SpanDirectiveParsers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/directive\/SpanDirectiveParsers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.directive.TemplateParsers", "shortDescription" : "Provides the parsers for directives and context references in templates.", "members_class" : [{"label" : "RecursiveSpanParserDelegate", "tail" : "", "member" : "laika.parse.markup.DefaultRecursiveSpanParsers.RecursiveSpanParserDelegate", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#RecursiveSpanParserDelegateextendsRecursiveSpanParser", "kind" : "class"}, {"label" : "getSyntaxHighlighter", "tail" : "(language: String): Option[RecursiveSpanParser]", "member" : "laika.parse.directive.TemplateParsers.getSyntaxHighlighter", "link" : "laika\/parse\/directive\/TemplateParsers.html#getSyntaxHighlighter(language:String):Option[laika.parse.markup.RecursiveSpanParser]", "kind" : "def"}, {"label" : "templateRoot", "tail" : ": Parser[TemplateRoot]", "member" : "laika.parse.directive.TemplateParsers.templateRoot", "link" : "laika\/parse\/directive\/TemplateParsers.html#templateRoot:laika.parse.Parser[laika.ast.TemplateRoot]", "kind" : "lazy val"}, {"label" : "templateSpans", "tail" : ": Parser[List[TemplateSpan]]", "member" : "laika.parse.directive.TemplateParsers.templateSpans", "link" : "laika\/parse\/directive\/TemplateParsers.html#templateSpans:laika.parse.Parser[List[laika.ast.TemplateSpan]]", "kind" : "lazy val"}, {"label" : "templateDirective", "tail" : ": PrefixedParser[TemplateSpan]", "member" : "laika.parse.directive.TemplateParsers.templateDirective", "link" : "laika\/parse\/directive\/TemplateParsers.html#templateDirective:laika.parse.text.PrefixedParser[laika.ast.TemplateSpan]", "kind" : "lazy val"}, {"label" : "spanParsers", "tail" : ": Seq[PrefixedParser[Span]]", "member" : "laika.parse.directive.TemplateParsers.spanParsers", "link" : "laika\/parse\/directive\/TemplateParsers.html#spanParsers:Seq[laika.parse.text.PrefixedParser[laika.ast.Span]]", "kind" : "lazy val"}, {"member" : "laika.parse.directive.TemplateParsers#<init>", "error" : "unsupported entity"}, {"label" : "recursiveSpans", "tail" : "(): RecursiveSpanParser", "member" : "laika.parse.markup.DefaultRecursiveSpanParsers.recursiveSpans", "link" : "laika\/parse\/directive\/TemplateParsers.html#recursiveSpans:laika.parse.markup.RecursiveSpanParser", "kind" : "def"}, {"label" : "recursiveSpans", "tail" : "(parser: Parser[SourceFragment]): InlineParser[Span, List[Span]]", "member" : "laika.parse.markup.DefaultRecursiveSpanParsers.recursiveSpans", "link" : "laika\/parse\/directive\/TemplateParsers.html#recursiveSpans(parser:laika.parse.Parser[laika.parse.SourceFragment]):laika.parse.markup.InlineParser[laika.ast.Span,List[laika.ast.Span]]", "kind" : "def"}, {"label" : "recursiveSpans", "tail" : "(p: DelimitedText): InlineParser[Span, List[Span]]", "member" : "laika.parse.markup.DefaultRecursiveSpanParsers.recursiveSpans", "link" : "laika\/parse\/directive\/TemplateParsers.html#recursiveSpans(p:laika.parse.text.DelimitedText):laika.parse.markup.InlineParser[laika.ast.Span,List[laika.ast.Span]]", "kind" : "def"}, {"label" : "defaultSpanParser", "tail" : ": InlineParser[Span, List[Span]]", "member" : "laika.parse.markup.DefaultRecursiveSpanParsers.defaultSpanParser", "link" : "laika\/parse\/directive\/TemplateParsers.html#defaultSpanParser:laika.parse.markup.InlineParser[laika.ast.Span,List[laika.ast.Span]]", "kind" : "lazy val"}, {"label" : "escapedUntil", "tail" : "(char: Char, chars: Char*): Parser[String]", "member" : "laika.parse.markup.DefaultEscapedTextParsers.escapedUntil", "link" : "laika\/parse\/directive\/TemplateParsers.html#escapedUntil(char:Char,chars:Char*):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "escapedText", "tail" : "(p: DelimitedText): Parser[String]", "member" : "laika.parse.markup.DefaultEscapedTextParsers.escapedText", "link" : "laika\/parse\/directive\/TemplateParsers.html#escapedText(p:laika.parse.text.DelimitedText):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "escapeSequence", "tail" : ": PrefixedParser[String]", "member" : "laika.parse.markup.DefaultEscapedTextParsers.escapeSequence", "link" : "laika\/parse\/directive\/TemplateParsers.html#escapeSequence:laika.parse.text.PrefixedParser[String]", "kind" : "lazy val"}, {"label" : "escapedChar", "tail" : ": Parser[String]", "member" : "laika.parse.markup.DefaultEscapedTextParsers.escapedChar", "link" : "laika\/parse\/directive\/TemplateParsers.html#escapedChar:laika.parse.Parser[String]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/directive\/TemplateParsers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/directive\/TemplateParsers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/directive\/TemplateParsers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/directive\/TemplateParsers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/directive\/TemplateParsers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/directive\/TemplateParsers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/directive\/TemplateParsers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/directive\/TemplateParsers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/directive\/TemplateParsers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/directive\/TemplateParsers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/directive\/TemplateParsers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/directive\/TemplateParsers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/directive\/TemplateParsers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/directive\/TemplateParsers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/directive\/TemplateParsers.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/directive\/TemplateParsers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/directive\/TemplateParsers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/directive\/TemplateParsers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/directive\/TemplateParsers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/parse\/directive\/TemplateParsers.html", "kind" : "class"}], "org.apache.fop.apps" : [{"name" : "org.apache.fop.apps.FOUserAgentFactory", "shortDescription" : "An adapter class that is necessary as Apache FOP does not allow for a ResourceResolver to get specified per Fop instance in its public API.", "object" : "org\/apache\/fop\/apps\/FOUserAgentFactory$.html", "members_object" : [{"label" : "createFOUserAgent", "tail" : "(fopFactory: FopFactory, resourceResolver: ResourceResolver): FOUserAgent", "member" : "org.apache.fop.apps.FOUserAgentFactory.createFOUserAgent", "link" : "org\/apache\/fop\/apps\/FOUserAgentFactory$.html#createFOUserAgent(fopFactory:org.apache.fop.apps.FopFactory,resourceResolver:org.apache.xmlgraphics.io.ResourceResolver):org.apache.fop.apps.FOUserAgent", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/fop\/apps\/FOUserAgentFactory$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/fop\/apps\/FOUserAgentFactory$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/fop\/apps\/FOUserAgentFactory$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/fop\/apps\/FOUserAgentFactory$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/fop\/apps\/FOUserAgentFactory$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/fop\/apps\/FOUserAgentFactory$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/fop\/apps\/FOUserAgentFactory$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/fop\/apps\/FOUserAgentFactory$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/fop\/apps\/FOUserAgentFactory$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/fop\/apps\/FOUserAgentFactory$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/fop\/apps\/FOUserAgentFactory$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/fop\/apps\/FOUserAgentFactory$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/fop\/apps\/FOUserAgentFactory$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/fop\/apps\/FOUserAgentFactory$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/fop\/apps\/FOUserAgentFactory$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/fop\/apps\/FOUserAgentFactory$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/fop\/apps\/FOUserAgentFactory$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/fop\/apps\/FOUserAgentFactory$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/fop\/apps\/FOUserAgentFactory$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "laika" : [], "laika.rst.ast" : [{"name" : "laika.rst.ast.Classifier", "shortDescription" : "A classifier for a term in a definition list.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Classifier", "member" : "laika.rst.ast.Classifier.withOptions", "link" : "laika\/rst\/ast\/Classifier.html#withOptions(options:laika.ast.Options):laika.rst.ast.Classifier", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Span]): Classifier", "member" : "laika.rst.ast.Classifier.withContent", "link" : "laika\/rst\/ast\/Classifier.html#withContent(newContent:Seq[laika.ast.Span]):laika.rst.ast.Classifier", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.rst.ast.Classifier.Self", "link" : "laika\/rst\/ast\/Classifier.html#Self=laika.rst.ast.Classifier", "kind" : "type"}, {"member" : "laika.rst.ast.Classifier#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.rst.ast.Classifier.options", "link" : "laika\/rst\/ast\/Classifier.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Span]", "member" : "laika.rst.ast.Classifier.content", "link" : "laika\/rst\/ast\/Classifier.html#content:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "extractText", "tail" : "(): String", "member" : "laika.ast.SpanContainer.extractText", "link" : "laika\/rst\/ast\/Classifier.html#extractText:String", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.SpanContainer.rewriteChildren", "link" : "laika\/rst\/ast\/Classifier.html#rewriteChildren(rules:laika.ast.RewriteRules):SpanContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/rst\/ast\/Classifier.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/rst\/ast\/Classifier.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/rst\/ast\/Classifier.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/rst\/ast\/Classifier.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/rst\/ast\/Classifier.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/rst\/ast\/Classifier.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/rst\/ast\/Classifier.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/rst\/ast\/Classifier.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/rst\/ast\/Classifier.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/Classifier.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/Classifier.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/rst\/ast\/Classifier.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/rst\/ast\/Classifier.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/rst\/ast\/Classifier.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ast\/Classifier.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ast\/Classifier.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ast\/Classifier.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ast\/Classifier.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ast\/Classifier.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ast\/Classifier.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ast\/Classifier.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/Classifier.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/Classifier.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/Classifier.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ast\/Classifier.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ast\/Classifier.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ast\/Classifier.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ast\/Classifier.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ast\/Classifier.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ast\/Classifier.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rst\/ast\/Classifier.html", "kind" : "case class"}, {"name" : "laika.rst.ast.Contents", "shortDescription" : "Generates a table of contents element inside a topic.", "members_case class" : [{"label" : "unresolvedMessage", "tail" : ": String", "member" : "laika.rst.ast.Contents.unresolvedMessage", "link" : "laika\/rst\/ast\/Contents.html#unresolvedMessage:String", "kind" : "lazy val"}, {"label" : "resolve", "tail" : "(cursor: DocumentCursor): Block", "member" : "laika.rst.ast.Contents.resolve", "link" : "laika\/rst\/ast\/Contents.html#resolve(cursor:laika.ast.DocumentCursor):laika.ast.Block", "kind" : "def"}, {"label" : "withOptions", "tail" : "(options: Options): Contents", "member" : "laika.rst.ast.Contents.withOptions", "link" : "laika\/rst\/ast\/Contents.html#withOptions(options:laika.ast.Options):laika.rst.ast.Contents", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.rst.ast.Contents.Self", "link" : "laika\/rst\/ast\/Contents.html#Self=laika.rst.ast.Contents", "kind" : "type"}, {"member" : "laika.rst.ast.Contents#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.rst.ast.Contents.options", "link" : "laika\/rst\/ast\/Contents.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "local", "tail" : ": Boolean", "member" : "laika.rst.ast.Contents.local", "link" : "laika\/rst\/ast\/Contents.html#local:Boolean", "kind" : "val"}, {"label" : "depth", "tail" : ": Int", "member" : "laika.rst.ast.Contents.depth", "link" : "laika\/rst\/ast\/Contents.html#depth:Int", "kind" : "val"}, {"label" : "source", "tail" : ": SourceFragment", "member" : "laika.rst.ast.Contents.source", "link" : "laika\/rst\/ast\/Contents.html#source:laika.parse.SourceFragment", "kind" : "val"}, {"label" : "title", "tail" : ": String", "member" : "laika.rst.ast.Contents.title", "link" : "laika\/rst\/ast\/Contents.html#title:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/rst\/ast\/Contents.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/rst\/ast\/Contents.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/rst\/ast\/Contents.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/rst\/ast\/Contents.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/Contents.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/Contents.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/rst\/ast\/Contents.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/rst\/ast\/Contents.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/rst\/ast\/Contents.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ast\/Contents.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ast\/Contents.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ast\/Contents.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ast\/Contents.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ast\/Contents.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ast\/Contents.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ast\/Contents.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/Contents.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/Contents.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/Contents.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ast\/Contents.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ast\/Contents.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ast\/Contents.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ast\/Contents.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ast\/Contents.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ast\/Contents.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rst\/ast\/Contents.html", "kind" : "case class"}, {"name" : "laika.rst.ast.CustomizedTextRole", "shortDescription" : "Temporary element to represent a customized text role that can be applied to spans of interpreted text.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): CustomizedTextRole", "member" : "laika.rst.ast.CustomizedTextRole.withOptions", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#withOptions(options:laika.ast.Options):laika.rst.ast.CustomizedTextRole", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.rst.ast.CustomizedTextRole.Self", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#Self=laika.rst.ast.CustomizedTextRole", "kind" : "type"}, {"member" : "laika.rst.ast.CustomizedTextRole#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.rst.ast.CustomizedTextRole.options", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "apply", "tail" : ": (String) ⇒ Span", "member" : "laika.rst.ast.CustomizedTextRole.apply", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#apply:String=>laika.ast.Span", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "laika.rst.ast.CustomizedTextRole.name", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#name:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ast\/CustomizedTextRole.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ast\/CustomizedTextRole.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rst\/ast\/CustomizedTextRole.html", "kind" : "case class"}, {"name" : "laika.rst.ast.DoctestBlock", "shortDescription" : "Represents an interactive Python session.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): DoctestBlock", "member" : "laika.rst.ast.DoctestBlock.withOptions", "link" : "laika\/rst\/ast\/DoctestBlock.html#withOptions(options:laika.ast.Options):laika.rst.ast.DoctestBlock", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.rst.ast.DoctestBlock.Self", "link" : "laika\/rst\/ast\/DoctestBlock.html#Self=laika.rst.ast.DoctestBlock", "kind" : "type"}, {"member" : "laika.rst.ast.DoctestBlock#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.rst.ast.DoctestBlock.options", "link" : "laika\/rst\/ast\/DoctestBlock.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": String", "member" : "laika.rst.ast.DoctestBlock.content", "link" : "laika\/rst\/ast\/DoctestBlock.html#content:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/rst\/ast\/DoctestBlock.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/rst\/ast\/DoctestBlock.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/rst\/ast\/DoctestBlock.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/rst\/ast\/DoctestBlock.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/DoctestBlock.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/DoctestBlock.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/rst\/ast\/DoctestBlock.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/rst\/ast\/DoctestBlock.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/rst\/ast\/DoctestBlock.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ast\/DoctestBlock.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ast\/DoctestBlock.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ast\/DoctestBlock.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ast\/DoctestBlock.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ast\/DoctestBlock.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ast\/DoctestBlock.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ast\/DoctestBlock.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/DoctestBlock.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/DoctestBlock.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/DoctestBlock.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ast\/DoctestBlock.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ast\/DoctestBlock.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ast\/DoctestBlock.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ast\/DoctestBlock.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ast\/DoctestBlock.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ast\/DoctestBlock.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rst\/ast\/DoctestBlock.html", "kind" : "case class"}, {"name" : "laika.rst.ast.Field", "shortDescription" : "A single entry in a field list consisting of name and body.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Field", "member" : "laika.rst.ast.Field.withOptions", "link" : "laika\/rst\/ast\/Field.html#withOptions(options:laika.ast.Options):laika.rst.ast.Field", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Block]): Field", "member" : "laika.rst.ast.Field.withContent", "link" : "laika\/rst\/ast\/Field.html#withContent(newContent:Seq[laika.ast.Block]):laika.rst.ast.Field", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Field", "member" : "laika.rst.ast.Field.rewriteChildren", "link" : "laika\/rst\/ast\/Field.html#rewriteChildren(rules:laika.ast.RewriteRules):laika.rst.ast.Field", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.rst.ast.Field.Self", "link" : "laika\/rst\/ast\/Field.html#Self=laika.rst.ast.Field", "kind" : "type"}, {"member" : "laika.rst.ast.Field#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.rst.ast.Field.options", "link" : "laika\/rst\/ast\/Field.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Block]", "member" : "laika.rst.ast.Field.content", "link" : "laika\/rst\/ast\/Field.html#content:Seq[laika.ast.Block]", "kind" : "val"}, {"label" : "name", "tail" : ": Seq[Span]", "member" : "laika.rst.ast.Field.name", "link" : "laika\/rst\/ast\/Field.html#name:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "rewriteBlocks", "tail" : "(rules: RewriteRule[Block]): Self", "member" : "laika.ast.BlockContainer.rewriteBlocks", "link" : "laika\/rst\/ast\/Field.html#rewriteBlocks(rules:laika.ast.RewriteRule[laika.ast.Block]):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/rst\/ast\/Field.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/rst\/ast\/Field.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/rst\/ast\/Field.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/rst\/ast\/Field.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/rst\/ast\/Field.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/rst\/ast\/Field.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/rst\/ast\/Field.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/rst\/ast\/Field.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/rst\/ast\/Field.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/Field.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/Field.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/rst\/ast\/Field.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/rst\/ast\/Field.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/rst\/ast\/Field.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ast\/Field.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ast\/Field.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ast\/Field.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ast\/Field.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ast\/Field.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ast\/Field.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ast\/Field.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/Field.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/Field.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/Field.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ast\/Field.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ast\/Field.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ast\/Field.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ast\/Field.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ast\/Field.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ast\/Field.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rst\/ast\/Field.html", "kind" : "case class"}, {"name" : "laika.rst.ast.FieldList", "shortDescription" : "A two-column table-like structure used for bibliographic fields or directive options.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): FieldList", "member" : "laika.rst.ast.FieldList.withOptions", "link" : "laika\/rst\/ast\/FieldList.html#withOptions(options:laika.ast.Options):laika.rst.ast.FieldList", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): FieldList", "member" : "laika.rst.ast.FieldList.rewriteChildren", "link" : "laika\/rst\/ast\/FieldList.html#rewriteChildren(rules:laika.ast.RewriteRules):laika.rst.ast.FieldList", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.rst.ast.FieldList.Self", "link" : "laika\/rst\/ast\/FieldList.html#Self=laika.rst.ast.FieldList", "kind" : "type"}, {"member" : "laika.rst.ast.FieldList#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.rst.ast.FieldList.options", "link" : "laika\/rst\/ast\/FieldList.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Field]", "member" : "laika.rst.ast.FieldList.content", "link" : "laika\/rst\/ast\/FieldList.html#content:Seq[laika.rst.ast.Field]", "kind" : "val"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/rst\/ast\/FieldList.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/rst\/ast\/FieldList.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/rst\/ast\/FieldList.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/rst\/ast\/FieldList.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/rst\/ast\/FieldList.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/rst\/ast\/FieldList.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/rst\/ast\/FieldList.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/rst\/ast\/FieldList.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/rst\/ast\/FieldList.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/FieldList.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/FieldList.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/rst\/ast\/FieldList.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/rst\/ast\/FieldList.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/rst\/ast\/FieldList.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ast\/FieldList.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ast\/FieldList.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ast\/FieldList.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ast\/FieldList.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ast\/FieldList.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ast\/FieldList.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ast\/FieldList.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/FieldList.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/FieldList.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/FieldList.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ast\/FieldList.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ast\/FieldList.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ast\/FieldList.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ast\/FieldList.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ast\/FieldList.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ast\/FieldList.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rst\/ast\/FieldList.html", "kind" : "case class"}, {"name" : "laika.rst.ast.Include", "shortDescription" : "Temporary element representing a file inclusion.", "members_case class" : [{"label" : "unresolvedMessage", "tail" : ": String", "member" : "laika.rst.ast.Include.unresolvedMessage", "link" : "laika\/rst\/ast\/Include.html#unresolvedMessage:String", "kind" : "lazy val"}, {"label" : "resolve", "tail" : "(cursor: DocumentCursor): Block", "member" : "laika.rst.ast.Include.resolve", "link" : "laika\/rst\/ast\/Include.html#resolve(cursor:laika.ast.DocumentCursor):laika.ast.Block", "kind" : "def"}, {"label" : "withOptions", "tail" : "(options: Options): Include", "member" : "laika.rst.ast.Include.withOptions", "link" : "laika\/rst\/ast\/Include.html#withOptions(options:laika.ast.Options):laika.rst.ast.Include", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.rst.ast.Include.Self", "link" : "laika\/rst\/ast\/Include.html#Self=laika.rst.ast.Include", "kind" : "type"}, {"member" : "laika.rst.ast.Include#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.rst.ast.Include.options", "link" : "laika\/rst\/ast\/Include.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "source", "tail" : ": SourceFragment", "member" : "laika.rst.ast.Include.source", "link" : "laika\/rst\/ast\/Include.html#source:laika.parse.SourceFragment", "kind" : "val"}, {"label" : "path", "tail" : ": String", "member" : "laika.rst.ast.Include.path", "link" : "laika\/rst\/ast\/Include.html#path:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/rst\/ast\/Include.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/rst\/ast\/Include.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/rst\/ast\/Include.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/rst\/ast\/Include.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/Include.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/Include.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/rst\/ast\/Include.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/rst\/ast\/Include.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/rst\/ast\/Include.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ast\/Include.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ast\/Include.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ast\/Include.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ast\/Include.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ast\/Include.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ast\/Include.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ast\/Include.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/Include.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/Include.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/Include.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ast\/Include.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ast\/Include.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ast\/Include.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ast\/Include.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ast\/Include.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ast\/Include.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rst\/ast\/Include.html", "kind" : "case class"}, {"name" : "laika.rst.ast.InterpretedText", "shortDescription" : "Temporary element to represent interpreted text with its associated role name.", "members_case class" : [{"label" : "unresolvedMessage", "tail" : ": String", "member" : "laika.rst.ast.InterpretedText.unresolvedMessage", "link" : "laika\/rst\/ast\/InterpretedText.html#unresolvedMessage:String", "kind" : "lazy val"}, {"label" : "withOptions", "tail" : "(options: Options): InterpretedText", "member" : "laika.rst.ast.InterpretedText.withOptions", "link" : "laika\/rst\/ast\/InterpretedText.html#withOptions(options:laika.ast.Options):laika.rst.ast.InterpretedText", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.rst.ast.InterpretedText.Self", "link" : "laika\/rst\/ast\/InterpretedText.html#Self=laika.rst.ast.InterpretedText", "kind" : "type"}, {"member" : "laika.rst.ast.InterpretedText#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.rst.ast.InterpretedText.options", "link" : "laika\/rst\/ast\/InterpretedText.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "source", "tail" : ": SourceFragment", "member" : "laika.rst.ast.InterpretedText.source", "link" : "laika\/rst\/ast\/InterpretedText.html#source:laika.parse.SourceFragment", "kind" : "val"}, {"label" : "content", "tail" : ": String", "member" : "laika.rst.ast.InterpretedText.content", "link" : "laika\/rst\/ast\/InterpretedText.html#content:String", "kind" : "val"}, {"label" : "role", "tail" : ": String", "member" : "laika.rst.ast.InterpretedText.role", "link" : "laika\/rst\/ast\/InterpretedText.html#role:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/rst\/ast\/InterpretedText.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/rst\/ast\/InterpretedText.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/rst\/ast\/InterpretedText.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/rst\/ast\/InterpretedText.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/InterpretedText.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/InterpretedText.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/rst\/ast\/InterpretedText.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/rst\/ast\/InterpretedText.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/rst\/ast\/InterpretedText.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ast\/InterpretedText.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ast\/InterpretedText.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ast\/InterpretedText.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ast\/InterpretedText.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ast\/InterpretedText.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ast\/InterpretedText.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ast\/InterpretedText.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/InterpretedText.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/InterpretedText.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/InterpretedText.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ast\/InterpretedText.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ast\/InterpretedText.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ast\/InterpretedText.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ast\/InterpretedText.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ast\/InterpretedText.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ast\/InterpretedText.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rst\/ast\/InterpretedText.html", "kind" : "case class"}, {"name" : "laika.rst.ast.Line", "shortDescription" : "A single line inside a line block.", "object" : "laika\/rst\/ast\/Line$.html", "members_object" : [{"label" : "createSpanContainer", "tail" : "(spans: Seq[Span]): Line", "member" : "laika.rst.ast.Line.createSpanContainer", "link" : "laika\/rst\/ast\/Line$.html#createSpanContainer(spans:Seq[laika.ast.Span]):laika.rst.ast.Line", "kind" : "def"}, {"label" : "ContainerType", "tail" : "", "member" : "laika.rst.ast.Line.ContainerType", "link" : "laika\/rst\/ast\/Line$.html#ContainerType=laika.rst.ast.Line", "kind" : "type"}, {"label" : "apply", "tail" : "(span: Span, spans: Span*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/rst\/ast\/Line$.html#apply(span:laika.ast.Span,spans:laika.ast.Span*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "apply", "tail" : "(text: String, texts: String*): ContainerType", "member" : "laika.ast.SpanContainerCompanion.apply", "link" : "laika\/rst\/ast\/Line$.html#apply(text:String,texts:String*):SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "empty", "tail" : "(): ContainerType", "member" : "laika.ast.SpanContainerCompanion.empty", "link" : "laika\/rst\/ast\/Line$.html#empty:SpanContainerCompanion.this.ContainerType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ast\/Line$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ast\/Line$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ast\/Line$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ast\/Line$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ast\/Line$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ast\/Line$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ast\/Line$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/Line$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/Line$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/Line$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ast\/Line$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ast\/Line$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/ast\/Line$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ast\/Line$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/ast\/Line$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/ast\/Line$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ast\/Line$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ast\/Line$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ast\/Line$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): Line", "member" : "laika.rst.ast.Line.withOptions", "link" : "laika\/rst\/ast\/Line.html#withOptions(options:laika.ast.Options):laika.rst.ast.Line", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Span]): Line", "member" : "laika.rst.ast.Line.withContent", "link" : "laika\/rst\/ast\/Line.html#withContent(newContent:Seq[laika.ast.Span]):laika.rst.ast.Line", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.rst.ast.Line.Self", "link" : "laika\/rst\/ast\/Line.html#Self=laika.rst.ast.Line", "kind" : "type"}, {"member" : "laika.rst.ast.Line#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.rst.ast.Line.options", "link" : "laika\/rst\/ast\/Line.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Span]", "member" : "laika.rst.ast.Line.content", "link" : "laika\/rst\/ast\/Line.html#content:Seq[laika.ast.Span]", "kind" : "val"}, {"label" : "extractText", "tail" : "(): String", "member" : "laika.ast.SpanContainer.extractText", "link" : "laika\/rst\/ast\/Line.html#extractText:String", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.SpanContainer.rewriteChildren", "link" : "laika\/rst\/ast\/Line.html#rewriteChildren(rules:laika.ast.RewriteRules):SpanContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/rst\/ast\/Line.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/rst\/ast\/Line.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/rst\/ast\/Line.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/rst\/ast\/Line.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/rst\/ast\/Line.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/rst\/ast\/Line.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/rst\/ast\/Line.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/rst\/ast\/Line.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/rst\/ast\/Line.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/Line.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/Line.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/rst\/ast\/Line.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/rst\/ast\/Line.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/rst\/ast\/Line.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ast\/Line.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ast\/Line.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ast\/Line.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ast\/Line.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ast\/Line.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ast\/Line.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ast\/Line.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/Line.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/Line.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/Line.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ast\/Line.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ast\/Line.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ast\/Line.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ast\/Line.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ast\/Line.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ast\/Line.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rst\/ast\/Line.html", "kind" : "case class"}, {"name" : "laika.rst.ast.LineBlock", "shortDescription" : "A block containing lines which preserve line breaks and optionally nested line blocks.", "object" : "laika\/rst\/ast\/LineBlock$.html", "members_object" : [{"label" : "apply", "tail" : "(item: LineBlockItem, items: LineBlockItem*): LineBlock", "member" : "laika.rst.ast.LineBlock.apply", "link" : "laika\/rst\/ast\/LineBlock$.html#apply(item:laika.rst.ast.LineBlockItem,items:laika.rst.ast.LineBlockItem*):laika.rst.ast.LineBlock", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ast\/LineBlock$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ast\/LineBlock$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ast\/LineBlock$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ast\/LineBlock$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ast\/LineBlock$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ast\/LineBlock$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ast\/LineBlock$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/LineBlock$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/LineBlock$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/LineBlock$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ast\/LineBlock$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ast\/LineBlock$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/ast\/LineBlock$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ast\/LineBlock$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/ast\/LineBlock$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/ast\/LineBlock$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ast\/LineBlock$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ast\/LineBlock$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ast\/LineBlock$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): LineBlock", "member" : "laika.rst.ast.LineBlock.withOptions", "link" : "laika\/rst\/ast\/LineBlock.html#withOptions(options:laika.ast.Options):laika.rst.ast.LineBlock", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): LineBlock", "member" : "laika.rst.ast.LineBlock.rewriteChildren", "link" : "laika\/rst\/ast\/LineBlock.html#rewriteChildren(rules:laika.ast.RewriteRules):laika.rst.ast.LineBlock", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.rst.ast.LineBlock.Self", "link" : "laika\/rst\/ast\/LineBlock.html#Self=laika.rst.ast.LineBlock", "kind" : "type"}, {"member" : "laika.rst.ast.LineBlock#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.rst.ast.LineBlock.options", "link" : "laika\/rst\/ast\/LineBlock.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[LineBlockItem]", "member" : "laika.rst.ast.LineBlock.content", "link" : "laika\/rst\/ast\/LineBlock.html#content:Seq[laika.rst.ast.LineBlockItem]", "kind" : "val"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/rst\/ast\/LineBlock.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/rst\/ast\/LineBlock.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/rst\/ast\/LineBlock.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/rst\/ast\/LineBlock.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/rst\/ast\/LineBlock.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/rst\/ast\/LineBlock.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/rst\/ast\/LineBlock.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/rst\/ast\/LineBlock.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/LineBlock.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/LineBlock.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/rst\/ast\/LineBlock.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/rst\/ast\/LineBlock.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/rst\/ast\/LineBlock.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ast\/LineBlock.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ast\/LineBlock.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ast\/LineBlock.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ast\/LineBlock.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ast\/LineBlock.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ast\/LineBlock.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ast\/LineBlock.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/LineBlock.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/LineBlock.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/LineBlock.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ast\/LineBlock.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ast\/LineBlock.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ast\/LineBlock.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ast\/LineBlock.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ast\/LineBlock.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ast\/LineBlock.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rst\/ast\/LineBlock.html", "kind" : "case class"}, {"name" : "laika.rst.ast.LineBlockItem", "shortDescription" : "A single item inside a line block.", "members_class" : [{"member" : "laika.rst.ast.LineBlockItem#<init>", "error" : "unsupported entity"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/rst\/ast\/LineBlockItem.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/rst\/ast\/LineBlockItem.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/rst\/ast\/LineBlockItem.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/rst\/ast\/LineBlockItem.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/rst\/ast\/LineBlockItem.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/LineBlockItem.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/LineBlockItem.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/rst\/ast\/LineBlockItem.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/rst\/ast\/LineBlockItem.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/rst\/ast\/LineBlockItem.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/rst\/ast\/LineBlockItem.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/rst\/ast\/LineBlockItem.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ast\/LineBlockItem.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ast\/LineBlockItem.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ast\/LineBlockItem.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ast\/LineBlockItem.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ast\/LineBlockItem.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ast\/LineBlockItem.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ast\/LineBlockItem.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/LineBlockItem.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/LineBlockItem.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/LineBlockItem.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ast\/LineBlockItem.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ast\/LineBlockItem.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/ast\/LineBlockItem.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ast\/LineBlockItem.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/ast\/LineBlockItem.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/ast\/LineBlockItem.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ast\/LineBlockItem.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ast\/LineBlockItem.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ast\/LineBlockItem.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "laika.rst.ast.LineBlockItem.Self", "error" : "unsupported entity"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.RewritableContainer.rewriteChildren", "link" : "laika\/rst\/ast\/LineBlockItem.html#rewriteChildren(rules:laika.ast.RewriteRules):RewritableContainer.this.Self", "kind" : "abstract def"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/rst\/ast\/LineBlockItem.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/rst\/ast\/LineBlockItem.html#options:laika.ast.Options", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/rst\/ast\/LineBlockItem.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/rst\/ast\/LineBlockItem.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/rst\/ast\/LineBlockItem.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "class" : "laika\/rst\/ast\/LineBlockItem.html", "kind" : "class"}, {"name" : "laika.rst.ast.OptionArgument", "shortDescription" : "A single option argument.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): OptionArgument", "member" : "laika.rst.ast.OptionArgument.withOptions", "link" : "laika\/rst\/ast\/OptionArgument.html#withOptions(options:laika.ast.Options):laika.rst.ast.OptionArgument", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.rst.ast.OptionArgument.Self", "link" : "laika\/rst\/ast\/OptionArgument.html#Self=laika.rst.ast.OptionArgument", "kind" : "type"}, {"member" : "laika.rst.ast.OptionArgument#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.rst.ast.OptionArgument.options", "link" : "laika\/rst\/ast\/OptionArgument.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "delimiter", "tail" : ": String", "member" : "laika.rst.ast.OptionArgument.delimiter", "link" : "laika\/rst\/ast\/OptionArgument.html#delimiter:String", "kind" : "val"}, {"label" : "value", "tail" : ": String", "member" : "laika.rst.ast.OptionArgument.value", "link" : "laika\/rst\/ast\/OptionArgument.html#value:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/rst\/ast\/OptionArgument.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/rst\/ast\/OptionArgument.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/rst\/ast\/OptionArgument.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/rst\/ast\/OptionArgument.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/OptionArgument.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/OptionArgument.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/rst\/ast\/OptionArgument.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/rst\/ast\/OptionArgument.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/rst\/ast\/OptionArgument.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ast\/OptionArgument.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ast\/OptionArgument.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ast\/OptionArgument.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ast\/OptionArgument.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ast\/OptionArgument.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ast\/OptionArgument.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ast\/OptionArgument.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/OptionArgument.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/OptionArgument.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/OptionArgument.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ast\/OptionArgument.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ast\/OptionArgument.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ast\/OptionArgument.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ast\/OptionArgument.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ast\/OptionArgument.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ast\/OptionArgument.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rst\/ast\/OptionArgument.html", "kind" : "case class"}, {"name" : "laika.rst.ast.OptionList", "shortDescription" : "A list of command line options and descriptions.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): OptionList", "member" : "laika.rst.ast.OptionList.withOptions", "link" : "laika\/rst\/ast\/OptionList.html#withOptions(options:laika.ast.Options):laika.rst.ast.OptionList", "kind" : "def"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): OptionList", "member" : "laika.rst.ast.OptionList.rewriteChildren", "link" : "laika\/rst\/ast\/OptionList.html#rewriteChildren(rules:laika.ast.RewriteRules):laika.rst.ast.OptionList", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.rst.ast.OptionList.Self", "link" : "laika\/rst\/ast\/OptionList.html#Self=laika.rst.ast.OptionList", "kind" : "type"}, {"member" : "laika.rst.ast.OptionList#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.rst.ast.OptionList.options", "link" : "laika\/rst\/ast\/OptionList.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[OptionListItem]", "member" : "laika.rst.ast.OptionList.content", "link" : "laika\/rst\/ast\/OptionList.html#content:Seq[laika.rst.ast.OptionListItem]", "kind" : "val"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/rst\/ast\/OptionList.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/rst\/ast\/OptionList.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/rst\/ast\/OptionList.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/rst\/ast\/OptionList.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/rst\/ast\/OptionList.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/rst\/ast\/OptionList.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/rst\/ast\/OptionList.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/rst\/ast\/OptionList.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/rst\/ast\/OptionList.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/OptionList.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/OptionList.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/rst\/ast\/OptionList.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/rst\/ast\/OptionList.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/rst\/ast\/OptionList.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ast\/OptionList.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ast\/OptionList.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ast\/OptionList.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ast\/OptionList.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ast\/OptionList.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ast\/OptionList.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ast\/OptionList.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/OptionList.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/OptionList.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/OptionList.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ast\/OptionList.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ast\/OptionList.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ast\/OptionList.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ast\/OptionList.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ast\/OptionList.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ast\/OptionList.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rst\/ast\/OptionList.html", "kind" : "case class"}, {"name" : "laika.rst.ast.OptionListItem", "shortDescription" : "A single item in an option list.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): OptionListItem", "member" : "laika.rst.ast.OptionListItem.withOptions", "link" : "laika\/rst\/ast\/OptionListItem.html#withOptions(options:laika.ast.Options):laika.rst.ast.OptionListItem", "kind" : "def"}, {"label" : "withContent", "tail" : "(newContent: Seq[Block]): OptionListItem", "member" : "laika.rst.ast.OptionListItem.withContent", "link" : "laika\/rst\/ast\/OptionListItem.html#withContent(newContent:Seq[laika.ast.Block]):laika.rst.ast.OptionListItem", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.rst.ast.OptionListItem.Self", "link" : "laika\/rst\/ast\/OptionListItem.html#Self=laika.rst.ast.OptionListItem", "kind" : "type"}, {"member" : "laika.rst.ast.OptionListItem#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.rst.ast.OptionListItem.options", "link" : "laika\/rst\/ast\/OptionListItem.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Seq[Block]", "member" : "laika.rst.ast.OptionListItem.content", "link" : "laika\/rst\/ast\/OptionListItem.html#content:Seq[laika.ast.Block]", "kind" : "val"}, {"label" : "programOptions", "tail" : ": Seq[ProgramOption]", "member" : "laika.rst.ast.OptionListItem.programOptions", "link" : "laika\/rst\/ast\/OptionListItem.html#programOptions:Seq[laika.rst.ast.ProgramOption]", "kind" : "val"}, {"label" : "rewriteChildren", "tail" : "(rules: RewriteRules): Self", "member" : "laika.ast.BlockContainer.rewriteChildren", "link" : "laika\/rst\/ast\/OptionListItem.html#rewriteChildren(rules:laika.ast.RewriteRules):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteBlocks", "tail" : "(rules: RewriteRule[Block]): Self", "member" : "laika.ast.BlockContainer.rewriteBlocks", "link" : "laika\/rst\/ast\/OptionListItem.html#rewriteBlocks(rules:laika.ast.RewriteRule[laika.ast.Block]):BlockContainer.this.Self", "kind" : "def"}, {"label" : "rewriteSpans", "tail" : "(rule: RewriteRule[Span]): Self", "member" : "laika.ast.RewritableContainer.rewriteSpans", "link" : "laika\/rst\/ast\/OptionListItem.html#rewriteSpans(rule:laika.ast.RewriteRule[laika.ast.Span]):RewritableContainer.this.Self", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "laika.ast.ElementContainer.toString", "link" : "laika\/rst\/ast\/OptionListItem.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Element, B]): List[B]", "member" : "laika.ast.ElementTraversal.collect", "link" : "laika\/rst\/ast\/OptionListItem.html#collect[B](pf:PartialFunction[laika.ast.Element,B]):List[B]", "kind" : "def"}, {"label" : "select", "tail" : "(p: (Element) ⇒ Boolean): List[Element]", "member" : "laika.ast.ElementTraversal.select", "link" : "laika\/rst\/ast\/OptionListItem.html#select(p:laika.ast.Element=>Boolean):List[laika.ast.Element]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Element) ⇒ Unit): Unit", "member" : "laika.ast.ElementTraversal.foreach", "link" : "laika\/rst\/ast\/OptionListItem.html#foreach(f:laika.ast.Element=>Unit):Unit", "kind" : "def"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/rst\/ast\/OptionListItem.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/rst\/ast\/OptionListItem.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/rst\/ast\/OptionListItem.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/rst\/ast\/OptionListItem.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/OptionListItem.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/OptionListItem.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/rst\/ast\/OptionListItem.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/rst\/ast\/OptionListItem.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/rst\/ast\/OptionListItem.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ast\/OptionListItem.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ast\/OptionListItem.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ast\/OptionListItem.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ast\/OptionListItem.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ast\/OptionListItem.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ast\/OptionListItem.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ast\/OptionListItem.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/OptionListItem.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/OptionListItem.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/OptionListItem.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ast\/OptionListItem.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ast\/OptionListItem.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ast\/OptionListItem.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ast\/OptionListItem.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ast\/OptionListItem.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ast\/OptionListItem.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rst\/ast\/OptionListItem.html", "kind" : "case class"}, {"name" : "laika.rst.ast.OverlineAndUnderline", "shortDescription" : "Header decoration consisting of both an overline and an underline.", "members_case class" : [{"member" : "laika.rst.ast.OverlineAndUnderline#<init>", "error" : "unsupported entity"}, {"label" : "char", "tail" : ": Char", "member" : "laika.rst.ast.OverlineAndUnderline.char", "link" : "laika\/rst\/ast\/OverlineAndUnderline.html#char:Char", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ast\/OverlineAndUnderline.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ast\/OverlineAndUnderline.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ast\/OverlineAndUnderline.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ast\/OverlineAndUnderline.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ast\/OverlineAndUnderline.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ast\/OverlineAndUnderline.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ast\/OverlineAndUnderline.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/OverlineAndUnderline.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/OverlineAndUnderline.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/OverlineAndUnderline.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ast\/OverlineAndUnderline.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ast\/OverlineAndUnderline.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ast\/OverlineAndUnderline.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ast\/OverlineAndUnderline.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ast\/OverlineAndUnderline.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ast\/OverlineAndUnderline.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rst\/ast\/OverlineAndUnderline.html", "kind" : "case class"}, {"name" : "laika.rst.ast.ProgramOption", "shortDescription" : "A single option, including its name and all arguments, but not the description.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): ProgramOption", "member" : "laika.rst.ast.ProgramOption.withOptions", "link" : "laika\/rst\/ast\/ProgramOption.html#withOptions(options:laika.ast.Options):laika.rst.ast.ProgramOption", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.rst.ast.ProgramOption.Self", "link" : "laika\/rst\/ast\/ProgramOption.html#Self=laika.rst.ast.ProgramOption", "kind" : "type"}, {"member" : "laika.rst.ast.ProgramOption#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.rst.ast.ProgramOption.options", "link" : "laika\/rst\/ast\/ProgramOption.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "argument", "tail" : ": Option[OptionArgument]", "member" : "laika.rst.ast.ProgramOption.argument", "link" : "laika\/rst\/ast\/ProgramOption.html#argument:Option[laika.rst.ast.OptionArgument]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "laika.rst.ast.ProgramOption.name", "link" : "laika\/rst\/ast\/ProgramOption.html#name:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/rst\/ast\/ProgramOption.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/rst\/ast\/ProgramOption.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/rst\/ast\/ProgramOption.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/rst\/ast\/ProgramOption.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/ProgramOption.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/ProgramOption.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/rst\/ast\/ProgramOption.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/rst\/ast\/ProgramOption.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/rst\/ast\/ProgramOption.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ast\/ProgramOption.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ast\/ProgramOption.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ast\/ProgramOption.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ast\/ProgramOption.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ast\/ProgramOption.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ast\/ProgramOption.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ast\/ProgramOption.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/ProgramOption.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/ProgramOption.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/ProgramOption.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ast\/ProgramOption.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ast\/ProgramOption.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ast\/ProgramOption.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ast\/ProgramOption.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ast\/ProgramOption.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ast\/ProgramOption.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rst\/ast\/ProgramOption.html", "kind" : "case class"}, {"name" : "laika.rst.ast.ReferenceName", "shortDescription" : "Represent a reference name.", "members_case class" : [{"label" : "normalized", "tail" : ": String", "member" : "laika.rst.ast.ReferenceName.normalized", "link" : "laika\/rst\/ast\/ReferenceName.html#normalized:String", "kind" : "lazy val"}, {"member" : "laika.rst.ast.ReferenceName#<init>", "error" : "unsupported entity"}, {"label" : "original", "tail" : ": String", "member" : "laika.rst.ast.ReferenceName.original", "link" : "laika\/rst\/ast\/ReferenceName.html#original:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ast\/ReferenceName.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ast\/ReferenceName.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ast\/ReferenceName.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ast\/ReferenceName.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ast\/ReferenceName.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ast\/ReferenceName.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ast\/ReferenceName.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/ReferenceName.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/ReferenceName.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/ReferenceName.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ast\/ReferenceName.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ast\/ReferenceName.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ast\/ReferenceName.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ast\/ReferenceName.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ast\/ReferenceName.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ast\/ReferenceName.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rst\/ast\/ReferenceName.html", "kind" : "case class"}, {"name" : "laika.rst.ast.RstStyle", "shortDescription" : "Constants for style names wrapped in Options instances which are commonly used by Laika's reStructuredText parsers and rewrite rules.", "object" : "laika\/rst\/ast\/RstStyle$.html", "members_object" : [{"label" : "titleReference", "tail" : ": Options", "member" : "laika.rst.ast.RstStyle.titleReference", "link" : "laika\/rst\/ast\/RstStyle$.html#titleReference:laika.ast.Options", "kind" : "val"}, {"label" : "superscript", "tail" : ": Options", "member" : "laika.rst.ast.RstStyle.superscript", "link" : "laika\/rst\/ast\/RstStyle$.html#superscript:laika.ast.Options", "kind" : "val"}, {"label" : "subscript", "tail" : ": Options", "member" : "laika.rst.ast.RstStyle.subscript", "link" : "laika\/rst\/ast\/RstStyle$.html#subscript:laika.ast.Options", "kind" : "val"}, {"label" : "sidebar", "tail" : ": Options", "member" : "laika.rst.ast.RstStyle.sidebar", "link" : "laika\/rst\/ast\/RstStyle$.html#sidebar:laika.ast.Options", "kind" : "val"}, {"label" : "subtitle", "tail" : ": Options", "member" : "laika.rst.ast.RstStyle.subtitle", "link" : "laika\/rst\/ast\/RstStyle$.html#subtitle:laika.ast.Options", "kind" : "val"}, {"label" : "rubric", "tail" : ": Options", "member" : "laika.rst.ast.RstStyle.rubric", "link" : "laika\/rst\/ast\/RstStyle$.html#rubric:laika.ast.Options", "kind" : "val"}, {"label" : "topic", "tail" : ": Options", "member" : "laika.rst.ast.RstStyle.topic", "link" : "laika\/rst\/ast\/RstStyle$.html#topic:laika.ast.Options", "kind" : "val"}, {"label" : "admonition", "tail" : ": Options", "member" : "laika.rst.ast.RstStyle.admonition", "link" : "laika\/rst\/ast\/RstStyle$.html#admonition:laika.ast.Options", "kind" : "val"}, {"label" : "compound", "tail" : ": Options", "member" : "laika.rst.ast.RstStyle.compound", "link" : "laika\/rst\/ast\/RstStyle$.html#compound:laika.ast.Options", "kind" : "val"}, {"label" : "fieldList", "tail" : ": Options", "member" : "laika.rst.ast.RstStyle.fieldList", "link" : "laika\/rst\/ast\/RstStyle$.html#fieldList:laika.ast.Options", "kind" : "val"}, {"label" : "fieldBody", "tail" : ": Options", "member" : "laika.rst.ast.RstStyle.fieldBody", "link" : "laika\/rst\/ast\/RstStyle$.html#fieldBody:laika.ast.Options", "kind" : "val"}, {"label" : "fieldName", "tail" : ": Options", "member" : "laika.rst.ast.RstStyle.fieldName", "link" : "laika\/rst\/ast\/RstStyle$.html#fieldName:laika.ast.Options", "kind" : "val"}, {"label" : "description", "tail" : ": Options", "member" : "laika.rst.ast.RstStyle.description", "link" : "laika\/rst\/ast\/RstStyle$.html#description:laika.ast.Options", "kind" : "val"}, {"label" : "optionList", "tail" : ": Options", "member" : "laika.rst.ast.RstStyle.optionList", "link" : "laika\/rst\/ast\/RstStyle$.html#optionList:laika.ast.Options", "kind" : "val"}, {"label" : "option", "tail" : ": Options", "member" : "laika.rst.ast.RstStyle.option", "link" : "laika\/rst\/ast\/RstStyle$.html#option:laika.ast.Options", "kind" : "val"}, {"label" : "target", "tail" : ": Options", "member" : "laika.rst.ast.RstStyle.target", "link" : "laika\/rst\/ast\/RstStyle$.html#target:laika.ast.Options", "kind" : "val"}, {"label" : "lineBlock", "tail" : ": Options", "member" : "laika.rst.ast.RstStyle.lineBlock", "link" : "laika\/rst\/ast\/RstStyle$.html#lineBlock:laika.ast.Options", "kind" : "val"}, {"label" : "line", "tail" : ": Options", "member" : "laika.rst.ast.RstStyle.line", "link" : "laika\/rst\/ast\/RstStyle$.html#line:laika.ast.Options", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ast\/RstStyle$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ast\/RstStyle$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ast\/RstStyle$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ast\/RstStyle$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ast\/RstStyle$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ast\/RstStyle$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ast\/RstStyle$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/RstStyle$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/RstStyle$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/RstStyle$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ast\/RstStyle$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ast\/RstStyle$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/ast\/RstStyle$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ast\/RstStyle$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/ast\/RstStyle$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/ast\/RstStyle$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ast\/RstStyle$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ast\/RstStyle$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ast\/RstStyle$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.rst.ast.SubstitutionDefinition", "shortDescription" : "A substitution definition with its span content that will be inserted wherever this substitution is referenced in flow content.", "members_case class" : [{"label" : "withOptions", "tail" : "(options: Options): SubstitutionDefinition", "member" : "laika.rst.ast.SubstitutionDefinition.withOptions", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#withOptions(options:laika.ast.Options):laika.rst.ast.SubstitutionDefinition", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.rst.ast.SubstitutionDefinition.Self", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#Self=laika.rst.ast.SubstitutionDefinition", "kind" : "type"}, {"member" : "laika.rst.ast.SubstitutionDefinition#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.rst.ast.SubstitutionDefinition.options", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "content", "tail" : ": Span", "member" : "laika.rst.ast.SubstitutionDefinition.content", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#content:laika.ast.Span", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "laika.rst.ast.SubstitutionDefinition.name", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#name:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ast\/SubstitutionDefinition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rst\/ast\/SubstitutionDefinition.html", "kind" : "case class"}, {"name" : "laika.rst.ast.SubstitutionReference", "shortDescription" : "Refers to a substitution definition with the same name.", "members_case class" : [{"label" : "unresolvedMessage", "tail" : ": String", "member" : "laika.rst.ast.SubstitutionReference.unresolvedMessage", "link" : "laika\/rst\/ast\/SubstitutionReference.html#unresolvedMessage:String", "kind" : "lazy val"}, {"label" : "withOptions", "tail" : "(options: Options): SubstitutionReference", "member" : "laika.rst.ast.SubstitutionReference.withOptions", "link" : "laika\/rst\/ast\/SubstitutionReference.html#withOptions(options:laika.ast.Options):laika.rst.ast.SubstitutionReference", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.rst.ast.SubstitutionReference.Self", "link" : "laika\/rst\/ast\/SubstitutionReference.html#Self=laika.rst.ast.SubstitutionReference", "kind" : "type"}, {"member" : "laika.rst.ast.SubstitutionReference#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Options", "member" : "laika.rst.ast.SubstitutionReference.options", "link" : "laika\/rst\/ast\/SubstitutionReference.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "source", "tail" : ": SourceFragment", "member" : "laika.rst.ast.SubstitutionReference.source", "link" : "laika\/rst\/ast\/SubstitutionReference.html#source:laika.parse.SourceFragment", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "laika.rst.ast.SubstitutionReference.name", "link" : "laika\/rst\/ast\/SubstitutionReference.html#name:String", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/rst\/ast\/SubstitutionReference.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/rst\/ast\/SubstitutionReference.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/rst\/ast\/SubstitutionReference.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/rst\/ast\/SubstitutionReference.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/SubstitutionReference.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/rst\/ast\/SubstitutionReference.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/rst\/ast\/SubstitutionReference.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/rst\/ast\/SubstitutionReference.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/rst\/ast\/SubstitutionReference.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ast\/SubstitutionReference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ast\/SubstitutionReference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ast\/SubstitutionReference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ast\/SubstitutionReference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ast\/SubstitutionReference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ast\/SubstitutionReference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ast\/SubstitutionReference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/SubstitutionReference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/SubstitutionReference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/SubstitutionReference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ast\/SubstitutionReference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ast\/SubstitutionReference.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ast\/SubstitutionReference.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ast\/SubstitutionReference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ast\/SubstitutionReference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ast\/SubstitutionReference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rst\/ast\/SubstitutionReference.html", "kind" : "case class"}, {"name" : "laika.rst.ast.Underline", "shortDescription" : "Header decoration consisting of an underline only.", "members_case class" : [{"member" : "laika.rst.ast.Underline#<init>", "error" : "unsupported entity"}, {"label" : "char", "tail" : ": Char", "member" : "laika.rst.ast.Underline.char", "link" : "laika\/rst\/ast\/Underline.html#char:Char", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ast\/Underline.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ast\/Underline.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ast\/Underline.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ast\/Underline.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ast\/Underline.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ast\/Underline.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ast\/Underline.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/Underline.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/Underline.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ast\/Underline.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ast\/Underline.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ast\/Underline.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ast\/Underline.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ast\/Underline.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ast\/Underline.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ast\/Underline.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rst\/ast\/Underline.html", "kind" : "case class"}], "laika.parse.markup" : [{"name" : "laika.parse.markup.BlockParsers", "members_trait" : [{"label" : "indentedBlockWithLevel", "tail" : "(minIndent: Int, linePredicate: ⇒ Parser[Any], endsOnBlankLine: Boolean, firstLineIndented: Boolean, maxIndent: Int): Parser[(BlockSource, Int)]", "member" : "laika.parse.markup.BlockParsers.indentedBlockWithLevel", "link" : "laika\/parse\/markup\/BlockParsers.html#indentedBlockWithLevel(minIndent:Int,linePredicate:=>laika.parse.Parser[Any],endsOnBlankLine:Boolean,firstLineIndented:Boolean,maxIndent:Int):laika.parse.Parser[(laika.parse.BlockSource,Int)]", "kind" : "def"}, {"label" : "indentedBlock", "tail" : "(minIndent: Int, linePredicate: ⇒ Parser[Any], endsOnBlankLine: Boolean, firstLineIndented: Boolean, maxIndent: Int): Parser[BlockSource]", "member" : "laika.parse.markup.BlockParsers.indentedBlock", "link" : "laika\/parse\/markup\/BlockParsers.html#indentedBlock(minIndent:Int,linePredicate:=>laika.parse.Parser[Any],endsOnBlankLine:Boolean,firstLineIndented:Boolean,maxIndent:Int):laika.parse.Parser[laika.parse.BlockSource]", "kind" : "def"}, {"label" : "block", "tail" : "(firstLinePrefix: Parser[Any], linePrefix: ⇒ Parser[Any], nextBlockPrefix: ⇒ Parser[Any]): Parser[BlockSource]", "member" : "laika.parse.markup.BlockParsers.block", "link" : "laika\/parse\/markup\/BlockParsers.html#block(firstLinePrefix:laika.parse.Parser[Any],linePrefix:=>laika.parse.Parser[Any],nextBlockPrefix:=>laika.parse.Parser[Any]):laika.parse.Parser[laika.parse.BlockSource]", "kind" : "def"}, {"label" : "block", "tail" : "(firstLinePrefix: Parser[Any], linePrefix: ⇒ Parser[Any]): Parser[BlockSource]", "member" : "laika.parse.markup.BlockParsers.block", "link" : "laika\/parse\/markup\/BlockParsers.html#block(firstLinePrefix:laika.parse.Parser[Any],linePrefix:=>laika.parse.Parser[Any]):laika.parse.Parser[laika.parse.BlockSource]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/markup\/BlockParsers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/markup\/BlockParsers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/markup\/BlockParsers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/markup\/BlockParsers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/markup\/BlockParsers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/markup\/BlockParsers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/markup\/BlockParsers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/BlockParsers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/BlockParsers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/BlockParsers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/markup\/BlockParsers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/markup\/BlockParsers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/markup\/BlockParsers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/markup\/BlockParsers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/markup\/BlockParsers.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/markup\/BlockParsers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/markup\/BlockParsers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/markup\/BlockParsers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/markup\/BlockParsers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Provides base parsers that abstract aspects of block parsing common to most lightweight markup languages.", "object" : "laika\/parse\/markup\/BlockParsers$.html", "members_object" : [{"label" : "indentedBlockWithLevel", "tail" : "(minIndent: Int, linePredicate: ⇒ Parser[Any], endsOnBlankLine: Boolean, firstLineIndented: Boolean, maxIndent: Int): Parser[(BlockSource, Int)]", "member" : "laika.parse.markup.BlockParsers.indentedBlockWithLevel", "link" : "laika\/parse\/markup\/BlockParsers$.html#indentedBlockWithLevel(minIndent:Int,linePredicate:=>laika.parse.Parser[Any],endsOnBlankLine:Boolean,firstLineIndented:Boolean,maxIndent:Int):laika.parse.Parser[(laika.parse.BlockSource,Int)]", "kind" : "def"}, {"label" : "indentedBlock", "tail" : "(minIndent: Int, linePredicate: ⇒ Parser[Any], endsOnBlankLine: Boolean, firstLineIndented: Boolean, maxIndent: Int): Parser[BlockSource]", "member" : "laika.parse.markup.BlockParsers.indentedBlock", "link" : "laika\/parse\/markup\/BlockParsers$.html#indentedBlock(minIndent:Int,linePredicate:=>laika.parse.Parser[Any],endsOnBlankLine:Boolean,firstLineIndented:Boolean,maxIndent:Int):laika.parse.Parser[laika.parse.BlockSource]", "kind" : "def"}, {"label" : "block", "tail" : "(firstLinePrefix: Parser[Any], linePrefix: ⇒ Parser[Any], nextBlockPrefix: ⇒ Parser[Any]): Parser[BlockSource]", "member" : "laika.parse.markup.BlockParsers.block", "link" : "laika\/parse\/markup\/BlockParsers$.html#block(firstLinePrefix:laika.parse.Parser[Any],linePrefix:=>laika.parse.Parser[Any],nextBlockPrefix:=>laika.parse.Parser[Any]):laika.parse.Parser[laika.parse.BlockSource]", "kind" : "def"}, {"label" : "block", "tail" : "(firstLinePrefix: Parser[Any], linePrefix: ⇒ Parser[Any]): Parser[BlockSource]", "member" : "laika.parse.markup.BlockParsers.block", "link" : "laika\/parse\/markup\/BlockParsers$.html#block(firstLinePrefix:laika.parse.Parser[Any],linePrefix:=>laika.parse.Parser[Any]):laika.parse.Parser[laika.parse.BlockSource]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/markup\/BlockParsers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/markup\/BlockParsers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/markup\/BlockParsers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/markup\/BlockParsers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/markup\/BlockParsers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/markup\/BlockParsers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/markup\/BlockParsers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/BlockParsers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/BlockParsers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/BlockParsers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/markup\/BlockParsers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/markup\/BlockParsers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/markup\/BlockParsers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/markup\/BlockParsers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/markup\/BlockParsers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/markup\/BlockParsers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/markup\/BlockParsers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/markup\/BlockParsers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/markup\/BlockParsers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/parse\/markup\/BlockParsers.html", "kind" : "trait"}, {"name" : "laika.parse.markup.DefaultEscapedTextParsers", "members_trait" : [{"label" : "escapedUntil", "tail" : "(char: Char, chars: Char*): Parser[String]", "member" : "laika.parse.markup.DefaultEscapedTextParsers.escapedUntil", "link" : "laika\/parse\/markup\/DefaultEscapedTextParsers.html#escapedUntil(char:Char,chars:Char*):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "escapedText", "tail" : "(p: DelimitedText): Parser[String]", "member" : "laika.parse.markup.DefaultEscapedTextParsers.escapedText", "link" : "laika\/parse\/markup\/DefaultEscapedTextParsers.html#escapedText(p:laika.parse.text.DelimitedText):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "escapeSequence", "tail" : ": PrefixedParser[String]", "member" : "laika.parse.markup.DefaultEscapedTextParsers.escapeSequence", "link" : "laika\/parse\/markup\/DefaultEscapedTextParsers.html#escapeSequence:laika.parse.text.PrefixedParser[String]", "kind" : "lazy val"}, {"label" : "escapedChar", "tail" : ": Parser[String]", "member" : "laika.parse.markup.DefaultEscapedTextParsers.escapedChar", "link" : "laika\/parse\/markup\/DefaultEscapedTextParsers.html#escapedChar:laika.parse.Parser[String]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/markup\/DefaultEscapedTextParsers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/markup\/DefaultEscapedTextParsers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/markup\/DefaultEscapedTextParsers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/markup\/DefaultEscapedTextParsers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/markup\/DefaultEscapedTextParsers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/markup\/DefaultEscapedTextParsers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/markup\/DefaultEscapedTextParsers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/DefaultEscapedTextParsers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/DefaultEscapedTextParsers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/DefaultEscapedTextParsers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/markup\/DefaultEscapedTextParsers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/markup\/DefaultEscapedTextParsers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/markup\/DefaultEscapedTextParsers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/markup\/DefaultEscapedTextParsers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/markup\/DefaultEscapedTextParsers.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/markup\/DefaultEscapedTextParsers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/markup\/DefaultEscapedTextParsers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/markup\/DefaultEscapedTextParsers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/markup\/DefaultEscapedTextParsers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Default implementation for parsing escape sequences.", "trait" : "laika\/parse\/markup\/DefaultEscapedTextParsers.html", "kind" : "trait"}, {"name" : "laika.parse.markup.DefaultRecursiveParsers", "members_trait" : [{"label" : "RecursiveSpanParserDelegate", "tail" : "", "member" : "laika.parse.markup.DefaultRecursiveSpanParsers.RecursiveSpanParserDelegate", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#RecursiveSpanParserDelegateextendsRecursiveSpanParser", "kind" : "class"}, {"label" : "recursiveBlocks", "tail" : "(): RecursiveBlockParser", "member" : "laika.parse.markup.DefaultRecursiveParsers.recursiveBlocks", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#recursiveBlocks:laika.parse.markup.RecursiveBlockParser", "kind" : "def"}, {"label" : "recursiveBlocks", "tail" : "(p: Parser[BlockSource]): Parser[Seq[Block]]", "member" : "laika.parse.markup.DefaultRecursiveParsers.recursiveBlocks", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#recursiveBlocks(p:laika.parse.Parser[laika.parse.BlockSource]):laika.parse.Parser[Seq[laika.ast.Block]]", "kind" : "def"}, {"label" : "maxNestLevel", "tail" : ": Int", "member" : "laika.parse.markup.DefaultRecursiveParsers.maxNestLevel", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#maxNestLevel:Int", "kind" : "val"}, {"label" : "recursiveSpans", "tail" : "(): RecursiveSpanParser", "member" : "laika.parse.markup.DefaultRecursiveSpanParsers.recursiveSpans", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#recursiveSpans:laika.parse.markup.RecursiveSpanParser", "kind" : "def"}, {"label" : "recursiveSpans", "tail" : "(parser: Parser[SourceFragment]): InlineParser[Span, List[Span]]", "member" : "laika.parse.markup.DefaultRecursiveSpanParsers.recursiveSpans", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#recursiveSpans(parser:laika.parse.Parser[laika.parse.SourceFragment]):laika.parse.markup.InlineParser[laika.ast.Span,List[laika.ast.Span]]", "kind" : "def"}, {"label" : "recursiveSpans", "tail" : "(p: DelimitedText): InlineParser[Span, List[Span]]", "member" : "laika.parse.markup.DefaultRecursiveSpanParsers.recursiveSpans", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#recursiveSpans(p:laika.parse.text.DelimitedText):laika.parse.markup.InlineParser[laika.ast.Span,List[laika.ast.Span]]", "kind" : "def"}, {"label" : "defaultSpanParser", "tail" : ": InlineParser[Span, List[Span]]", "member" : "laika.parse.markup.DefaultRecursiveSpanParsers.defaultSpanParser", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#defaultSpanParser:laika.parse.markup.InlineParser[laika.ast.Span,List[laika.ast.Span]]", "kind" : "lazy val"}, {"label" : "escapedUntil", "tail" : "(char: Char, chars: Char*): Parser[String]", "member" : "laika.parse.markup.DefaultEscapedTextParsers.escapedUntil", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#escapedUntil(char:Char,chars:Char*):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "escapedText", "tail" : "(p: DelimitedText): Parser[String]", "member" : "laika.parse.markup.DefaultEscapedTextParsers.escapedText", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#escapedText(p:laika.parse.text.DelimitedText):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "escapeSequence", "tail" : ": PrefixedParser[String]", "member" : "laika.parse.markup.DefaultEscapedTextParsers.escapeSequence", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#escapeSequence:laika.parse.text.PrefixedParser[String]", "kind" : "lazy val"}, {"label" : "escapedChar", "tail" : ": Parser[String]", "member" : "laika.parse.markup.DefaultEscapedTextParsers.escapedChar", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#escapedChar:laika.parse.Parser[String]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "blockList", "tail" : "(p: ⇒ Parser[Block]): Parser[Seq[Block]]", "member" : "laika.parse.markup.DefaultRecursiveParsers.blockList", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#blockList(p:=>laika.parse.Parser[laika.ast.Block]):laika.parse.Parser[Seq[laika.ast.Block]]", "kind" : "abstract def"}, {"label" : "fallbackBlock", "tail" : "(): Parser[Block]", "member" : "laika.parse.markup.DefaultRecursiveParsers.fallbackBlock", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#fallbackBlock:laika.parse.Parser[laika.ast.Block]", "kind" : "abstract def"}, {"label" : "nestedBlock", "tail" : "(): Parser[Block]", "member" : "laika.parse.markup.DefaultRecursiveParsers.nestedBlock", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#nestedBlock:laika.parse.Parser[laika.ast.Block]", "kind" : "abstract def"}, {"label" : "rootBlock", "tail" : "(): Parser[Block]", "member" : "laika.parse.markup.DefaultRecursiveParsers.rootBlock", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#rootBlock:laika.parse.Parser[laika.ast.Block]", "kind" : "abstract def"}, {"label" : "spanParsers", "tail" : "(): Seq[PrefixedParser[Span]]", "member" : "laika.parse.markup.DefaultRecursiveSpanParsers.spanParsers", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#spanParsers:Seq[laika.parse.text.PrefixedParser[laika.ast.Span]]", "kind" : "abstract def"}, {"label" : "paragraphInterruptions", "tail" : "(position: BlockPosition): Parser[Block]", "member" : "laika.parse.markup.RecursiveParsers.paragraphInterruptions", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#paragraphInterruptions(position:laika.bundle.BlockPosition):laika.parse.Parser[laika.ast.Block]", "kind" : "abstract def"}, {"label" : "getSyntaxHighlighter", "tail" : "(language: String): Option[RecursiveSpanParser]", "member" : "laika.parse.markup.RecursiveSpanParsers.getSyntaxHighlighter", "link" : "laika\/parse\/markup\/DefaultRecursiveParsers.html#getSyntaxHighlighter(language:String):Option[laika.parse.markup.RecursiveSpanParser]", "kind" : "abstract def"}], "shortDescription" : "Default implementation for parsing inline markup and blocks recursively.", "trait" : "laika\/parse\/markup\/DefaultRecursiveParsers.html", "kind" : "trait"}, {"name" : "laika.parse.markup.DefaultRecursiveSpanParsers", "members_trait" : [{"label" : "RecursiveSpanParserDelegate", "tail" : "", "member" : "laika.parse.markup.DefaultRecursiveSpanParsers.RecursiveSpanParserDelegate", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#RecursiveSpanParserDelegateextendsRecursiveSpanParser", "kind" : "class"}, {"label" : "recursiveSpans", "tail" : "(): RecursiveSpanParser", "member" : "laika.parse.markup.DefaultRecursiveSpanParsers.recursiveSpans", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#recursiveSpans:laika.parse.markup.RecursiveSpanParser", "kind" : "def"}, {"label" : "recursiveSpans", "tail" : "(parser: Parser[SourceFragment]): InlineParser[Span, List[Span]]", "member" : "laika.parse.markup.DefaultRecursiveSpanParsers.recursiveSpans", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#recursiveSpans(parser:laika.parse.Parser[laika.parse.SourceFragment]):laika.parse.markup.InlineParser[laika.ast.Span,List[laika.ast.Span]]", "kind" : "def"}, {"label" : "recursiveSpans", "tail" : "(p: DelimitedText): InlineParser[Span, List[Span]]", "member" : "laika.parse.markup.DefaultRecursiveSpanParsers.recursiveSpans", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#recursiveSpans(p:laika.parse.text.DelimitedText):laika.parse.markup.InlineParser[laika.ast.Span,List[laika.ast.Span]]", "kind" : "def"}, {"label" : "defaultSpanParser", "tail" : ": InlineParser[Span, List[Span]]", "member" : "laika.parse.markup.DefaultRecursiveSpanParsers.defaultSpanParser", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#defaultSpanParser:laika.parse.markup.InlineParser[laika.ast.Span,List[laika.ast.Span]]", "kind" : "lazy val"}, {"label" : "escapedUntil", "tail" : "(char: Char, chars: Char*): Parser[String]", "member" : "laika.parse.markup.DefaultEscapedTextParsers.escapedUntil", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#escapedUntil(char:Char,chars:Char*):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "escapedText", "tail" : "(p: DelimitedText): Parser[String]", "member" : "laika.parse.markup.DefaultEscapedTextParsers.escapedText", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#escapedText(p:laika.parse.text.DelimitedText):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "escapeSequence", "tail" : ": PrefixedParser[String]", "member" : "laika.parse.markup.DefaultEscapedTextParsers.escapeSequence", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#escapeSequence:laika.parse.text.PrefixedParser[String]", "kind" : "lazy val"}, {"label" : "escapedChar", "tail" : ": Parser[String]", "member" : "laika.parse.markup.DefaultEscapedTextParsers.escapedChar", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#escapedChar:laika.parse.Parser[String]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "spanParsers", "tail" : "(): Seq[PrefixedParser[Span]]", "member" : "laika.parse.markup.DefaultRecursiveSpanParsers.spanParsers", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#spanParsers:Seq[laika.parse.text.PrefixedParser[laika.ast.Span]]", "kind" : "abstract def"}, {"label" : "getSyntaxHighlighter", "tail" : "(language: String): Option[RecursiveSpanParser]", "member" : "laika.parse.markup.RecursiveSpanParsers.getSyntaxHighlighter", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#getSyntaxHighlighter(language:String):Option[laika.parse.markup.RecursiveSpanParser]", "kind" : "abstract def"}], "shortDescription" : "Default implementation for parsing inline markup recursively.", "trait" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html", "kind" : "trait"}, {"name" : "laika.parse.markup.DocumentParser", "shortDescription" : "Responsible for creating the top level parsers for text markup and template documents,by combining the parser for the root element with a parser for an (optional) configurationheader.", "object" : "laika\/parse\/markup\/DocumentParser$.html", "members_object" : [{"label" : "forParser", "tail" : "(p: (Path) ⇒ Parser[T]): (DocumentInput) ⇒ Either[ParserError, T]", "member" : "laika.parse.markup.DocumentParser.forParser", "link" : "laika\/parse\/markup\/DocumentParser$.html#forParser[T](p:laika.ast.Path=>laika.parse.Parser[T]):laika.parse.markup.DocumentParser.DocumentInput=>Either[laika.parse.markup.DocumentParser.ParserError,T]", "kind" : "def"}, {"label" : "forStyleSheets", "tail" : "(parser: Parser[Set[StyleDeclaration]]): (DocumentInput) ⇒ Either[ParserError, StyleDeclarationSet]", "member" : "laika.parse.markup.DocumentParser.forStyleSheets", "link" : "laika\/parse\/markup\/DocumentParser$.html#forStyleSheets(parser:laika.parse.Parser[Set[laika.ast.StyleDeclaration]]):laika.parse.markup.DocumentParser.DocumentInput=>Either[laika.parse.markup.DocumentParser.ParserError,laika.ast.StyleDeclarationSet]", "kind" : "def"}, {"label" : "forTemplate", "tail" : "(rootParser: Parser[TemplateRoot], configProvider: ConfigProvider): (DocumentInput) ⇒ Either[ParserError, TemplateDocument]", "member" : "laika.parse.markup.DocumentParser.forTemplate", "link" : "laika\/parse\/markup\/DocumentParser$.html#forTemplate(rootParser:laika.parse.Parser[laika.ast.TemplateRoot],configProvider:laika.bundle.ConfigProvider):laika.parse.markup.DocumentParser.DocumentInput=>Either[laika.parse.markup.DocumentParser.ParserError,laika.ast.TemplateDocument]", "kind" : "def"}, {"label" : "forMarkup", "tail" : "(rootParser: Parser[RootElement], configProvider: ConfigProvider): (DocumentInput) ⇒ Either[ParserError, UnresolvedDocument]", "member" : "laika.parse.markup.DocumentParser.forMarkup", "link" : "laika\/parse\/markup\/DocumentParser$.html#forMarkup(rootParser:laika.parse.Parser[laika.ast.RootElement],configProvider:laika.bundle.ConfigProvider):laika.parse.markup.DocumentParser.DocumentInput=>Either[laika.parse.markup.DocumentParser.ParserError,laika.ast.UnresolvedDocument]", "kind" : "def"}, {"label" : "forMarkup", "tail" : "(markupParser: MarkupFormat, markupExtensions: MarkupExtensions, configProvider: ConfigProvider): (DocumentInput) ⇒ Either[ParserError, UnresolvedDocument]", "member" : "laika.parse.markup.DocumentParser.forMarkup", "link" : "laika\/parse\/markup\/DocumentParser$.html#forMarkup(markupParser:laika.factory.MarkupFormat,markupExtensions:laika.bundle.MarkupExtensions,configProvider:laika.bundle.ConfigProvider):laika.parse.markup.DocumentParser.DocumentInput=>Either[laika.parse.markup.DocumentParser.ParserError,laika.ast.UnresolvedDocument]", "kind" : "def"}, {"label" : "InvalidDocument", "tail" : "", "member" : "laika.parse.markup.DocumentParser.InvalidDocument", "link" : "laika\/parse\/markup\/DocumentParser$.html#InvalidDocument", "kind" : "object"}, {"label" : "InvalidDocument", "tail" : "", "member" : "laika.parse.markup.DocumentParser.InvalidDocument", "link" : "laika\/parse\/markup\/DocumentParser$.html#InvalidDocumentextendsRuntimeExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "InvalidDocuments", "tail" : "", "member" : "laika.parse.markup.DocumentParser.InvalidDocuments", "link" : "laika\/parse\/markup\/DocumentParser$.html#InvalidDocuments", "kind" : "object"}, {"label" : "InvalidDocuments", "tail" : "", "member" : "laika.parse.markup.DocumentParser.InvalidDocuments", "link" : "laika\/parse\/markup\/DocumentParser$.html#InvalidDocumentsextendsRuntimeExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "ParserError", "tail" : "", "member" : "laika.parse.markup.DocumentParser.ParserError", "link" : "laika\/parse\/markup\/DocumentParser$.html#ParserError", "kind" : "object"}, {"label" : "ParserError", "tail" : "", "member" : "laika.parse.markup.DocumentParser.ParserError", "link" : "laika\/parse\/markup\/DocumentParser$.html#ParserErrorextendsRuntimeExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "DocumentInput", "tail" : "", "member" : "laika.parse.markup.DocumentParser.DocumentInput", "link" : "laika\/parse\/markup\/DocumentParser$.html#DocumentInputextendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/markup\/DocumentParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/markup\/DocumentParser$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/markup\/DocumentParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/markup\/DocumentParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/markup\/DocumentParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/markup\/DocumentParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/markup\/DocumentParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/DocumentParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/DocumentParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/DocumentParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/markup\/DocumentParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/markup\/DocumentParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/markup\/DocumentParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/markup\/DocumentParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/markup\/DocumentParser$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/markup\/DocumentParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/markup\/DocumentParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/markup\/DocumentParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/markup\/DocumentParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.markup.EndDelimiter", "shortDescription" : "The result in case the end delimiter for the text has been parsed.", "members_case class" : [{"member" : "laika.parse.markup.EndDelimiter#<init>", "error" : "unsupported entity"}, {"label" : "capturedText", "tail" : ": String", "member" : "laika.parse.markup.EndDelimiter.capturedText", "link" : "laika\/parse\/markup\/EndDelimiter.html#capturedText:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/markup\/EndDelimiter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/markup\/EndDelimiter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/markup\/EndDelimiter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/markup\/EndDelimiter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/markup\/EndDelimiter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/markup\/EndDelimiter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/markup\/EndDelimiter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/EndDelimiter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/EndDelimiter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/EndDelimiter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/markup\/EndDelimiter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/markup\/EndDelimiter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/markup\/EndDelimiter.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/markup\/EndDelimiter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/markup\/EndDelimiter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/markup\/EndDelimiter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/parse\/markup\/EndDelimiter.html", "kind" : "case class"}, {"name" : "laika.parse.markup.EscapedTextParsers", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/markup\/EscapedTextParsers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/markup\/EscapedTextParsers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/markup\/EscapedTextParsers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/markup\/EscapedTextParsers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/markup\/EscapedTextParsers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/markup\/EscapedTextParsers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/markup\/EscapedTextParsers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/EscapedTextParsers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/EscapedTextParsers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/EscapedTextParsers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/markup\/EscapedTextParsers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/markup\/EscapedTextParsers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/markup\/EscapedTextParsers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/markup\/EscapedTextParsers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/markup\/EscapedTextParsers.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/markup\/EscapedTextParsers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/markup\/EscapedTextParsers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/markup\/EscapedTextParsers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/markup\/EscapedTextParsers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "escapedUntil", "tail" : "(char: Char, chars: Char*): Parser[String]", "member" : "laika.parse.markup.EscapedTextParsers.escapedUntil", "link" : "laika\/parse\/markup\/EscapedTextParsers.html#escapedUntil(char:Char,chars:Char*):laika.parse.Parser[String]", "kind" : "abstract def"}, {"label" : "escapedText", "tail" : "(p: DelimitedText): Parser[String]", "member" : "laika.parse.markup.EscapedTextParsers.escapedText", "link" : "laika\/parse\/markup\/EscapedTextParsers.html#escapedText(p:laika.parse.text.DelimitedText):laika.parse.Parser[String]", "kind" : "abstract def"}, {"label" : "escapeSequence", "tail" : "(): PrefixedParser[String]", "member" : "laika.parse.markup.EscapedTextParsers.escapeSequence", "link" : "laika\/parse\/markup\/EscapedTextParsers.html#escapeSequence:laika.parse.text.PrefixedParser[String]", "kind" : "abstract def"}], "shortDescription" : "Provides parsers for escaped text, custom span parser implementationscan use these without knowing the rules of the host markup language forescaping text.", "trait" : "laika\/parse\/markup\/EscapedTextParsers.html", "kind" : "trait"}, {"name" : "laika.parse.markup.InlineDelimiter", "shortDescription" : "Delimiter implementation for parsing inline spans that distinguishesbetween a delimiter that marks the end of the span and a delimiterthat marks the start of a nested span.", "members_class" : [{"label" : "atEOF", "tail" : "(charsConsumed: Int, source: SourceCursor): Parsed[InlineResult]", "member" : "laika.parse.markup.InlineDelimiter.atEOF", "link" : "laika\/parse\/markup\/InlineDelimiter.html#atEOF(charsConsumed:Int,source:laika.parse.SourceCursor):laika.parse.Parsed[laika.parse.markup.InlineResult]", "kind" : "def"}, {"label" : "atStartChar", "tail" : "(startChar: Char, charsConsumed: Int, source: SourceCursor): DelimiterResult[InlineResult]", "member" : "laika.parse.markup.InlineDelimiter.atStartChar", "link" : "laika\/parse\/markup\/InlineDelimiter.html#atStartChar(startChar:Char,charsConsumed:Int,source:laika.parse.SourceCursor):laika.parse.text.DelimiterResult[laika.parse.markup.InlineResult]", "kind" : "def"}, {"label" : "startChars", "tail" : ": Set[Char]", "member" : "laika.parse.markup.InlineDelimiter.startChars", "link" : "laika\/parse\/markup\/InlineDelimiter.html#startChars:scala.collection.immutable.Set[Char]", "kind" : "val"}, {"member" : "laika.parse.markup.InlineDelimiter#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/markup\/InlineDelimiter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/markup\/InlineDelimiter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/markup\/InlineDelimiter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/markup\/InlineDelimiter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/markup\/InlineDelimiter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/markup\/InlineDelimiter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/markup\/InlineDelimiter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/InlineDelimiter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/InlineDelimiter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/InlineDelimiter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/markup\/InlineDelimiter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/markup\/InlineDelimiter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/markup\/InlineDelimiter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/markup\/InlineDelimiter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/markup\/InlineDelimiter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/markup\/InlineDelimiter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/markup\/InlineDelimiter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/markup\/InlineDelimiter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/markup\/InlineDelimiter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/parse\/markup\/InlineDelimiter.html", "kind" : "class"}, {"name" : "laika.parse.markup.InlineParser", "members_trait" : [{"label" : "withSource", "tail" : "(): Parser[(To, String)]", "member" : "laika.parse.Parser.withSource", "link" : "laika\/parse\/markup\/InlineParser.html#withSource:laika.parse.Parser[(T,String)]", "kind" : "def"}, {"label" : "withContext", "tail" : "(): Parser[(To, SourceFragment)]", "member" : "laika.parse.Parser.withContext", "link" : "laika\/parse\/markup\/InlineParser.html#withContext:laika.parse.Parser[(T,laika.parse.SourceFragment)]", "kind" : "def"}, {"label" : "withPosition", "tail" : "(): Parser[(To, Position)]", "member" : "laika.parse.Parser.withPosition", "link" : "laika\/parse\/markup\/InlineParser.html#withPosition:laika.parse.Parser[(T,laika.parse.Position)]", "kind" : "def"}, {"label" : "count", "tail" : "(): Parser[Int]", "member" : "laika.parse.Parser.count", "link" : "laika\/parse\/markup\/InlineParser.html#count:laika.parse.Parser[Int]", "kind" : "def"}, {"label" : "source", "tail" : "(): Parser[String]", "member" : "laika.parse.Parser.source", "link" : "laika\/parse\/markup\/InlineParser.html#source:laika.parse.Parser[String]", "kind" : "def"}, {"label" : "cursor", "tail" : "(): Parser[SourceFragment]", "member" : "laika.parse.Parser.cursor", "link" : "laika\/parse\/markup\/InlineParser.html#cursor:laika.parse.Parser[laika.parse.SourceFragment]", "kind" : "def"}, {"label" : "withCursor", "tail" : "(): Parser[(To, SourceFragment)]", "member" : "laika.parse.Parser.withCursor", "link" : "laika\/parse\/markup\/InlineParser.html#withCursor:laika.parse.Parser[(T,laika.parse.SourceFragment)]", "kind" : "def"}, {"label" : "withFailureMessage", "tail" : "(msg: String): Parser[To]", "member" : "laika.parse.Parser.withFailureMessage", "link" : "laika\/parse\/markup\/InlineParser.html#withFailureMessage(msg:String):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(pf: PartialFunction[Failure, Parser[U]]): Parser[U]", "member" : "laika.parse.Parser.recoverWith", "link" : "laika\/parse\/markup\/InlineParser.html#recoverWith[U>:T](pf:PartialFunction[laika.parse.Failure,laika.parse.Parser[U]]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "handleErrorWith", "tail" : "(f: (Failure) ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.handleErrorWith", "link" : "laika\/parse\/markup\/InlineParser.html#handleErrorWith[U>:T](f:laika.parse.Failure=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "repWith", "tail" : "(next: (U) ⇒ Parser[U]): Parser[List[U]]", "member" : "laika.parse.Parser.repWith", "link" : "laika\/parse\/markup\/InlineParser.html#repWith[U>:T](next:U=>laika.parse.Parser[U]):laika.parse.Parser[List[U]]", "kind" : "def"}, {"label" : "repUntil", "tail" : "(endCondition: Parser[U]): Parser[(List[To], Option[U])]", "member" : "laika.parse.Parser.repUntil", "link" : "laika\/parse\/markup\/InlineParser.html#repUntil[U](endCondition:laika.parse.Parser[U]):laika.parse.Parser[(List[T],Option[U])]", "kind" : "def"}, {"label" : "?", "tail" : "(): Parser[Option[To]]", "member" : "laika.parse.Parser.?", "link" : "laika\/parse\/markup\/InlineParser.html#?:laika.parse.Parser[Option[T]]", "kind" : "def"}, {"label" : "+", "tail" : "(): Repeat[To]", "member" : "laika.parse.Parser.+", "link" : "laika\/parse\/markup\/InlineParser.html#+:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "*", "tail" : "(): Repeat[To]", "member" : "laika.parse.Parser.*", "link" : "laika\/parse\/markup\/InlineParser.html#*:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(separator: String): Repeat[To]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/markup\/InlineParser.html#rep(separator:String):laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(separator: Parser[Unit]): Repeat[To]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/markup\/InlineParser.html#rep(separator:laika.parse.Parser[Unit]):laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(): Repeat[To]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/markup\/InlineParser.html#rep:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : ">>", "tail" : "(fq: (To) ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.>>", "link" : "laika\/parse\/markup\/InlineParser.html#>>[U](fq:T=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "evalMap", "tail" : "(f: (To) ⇒ Either[String, U]): Parser[U]", "member" : "laika.parse.Parser.evalMap", "link" : "laika\/parse\/markup\/InlineParser.html#evalMap[U](f:T=>Either[String,U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[To, U], error: (To) ⇒ String): Parser[U]", "member" : "laika.parse.Parser.collect", "link" : "laika\/parse\/markup\/InlineParser.html#collect[U](f:PartialFunction[T,U],error:T=>String):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "void", "tail" : "(): Parser[Unit]", "member" : "laika.parse.Parser.void", "link" : "laika\/parse\/markup\/InlineParser.html#void:laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "as", "tail" : "(v: ⇒ U): Parser[U]", "member" : "laika.parse.Parser.as", "link" : "laika\/parse\/markup\/InlineParser.html#as[U](v:=>U):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "^^", "tail" : "(f: (To) ⇒ U): Parser[U]", "member" : "laika.parse.Parser.^^", "link" : "laika\/parse\/markup\/InlineParser.html#^^[U](f:T=>U):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "|", "tail" : "(value: String)(ev: <:<[To, String]): Parser[String]", "member" : "laika.parse.Parser.|", "link" : "laika\/parse\/markup\/InlineParser.html#|(value:String)(implicitev:T<:<String):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "|", "tail" : "(p: ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.|", "link" : "laika\/parse\/markup\/InlineParser.html#|[U>:T](p:=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "<~", "tail" : "(p: Parser[U]): Parser[To]", "member" : "laika.parse.Parser.<~", "link" : "laika\/parse\/markup\/InlineParser.html#<~[U](p:laika.parse.Parser[U]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "<~", "tail" : "(value: String): Parser[To]", "member" : "laika.parse.Parser.<~", "link" : "laika\/parse\/markup\/InlineParser.html#<~(value:String):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "~>", "tail" : "(p: Parser[U]): Parser[U]", "member" : "laika.parse.Parser.~>", "link" : "laika\/parse\/markup\/InlineParser.html#~>[U](p:laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "~>", "tail" : "(value: String): Parser[String]", "member" : "laika.parse.Parser.~>", "link" : "laika\/parse\/markup\/InlineParser.html#~>(value:String):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "~", "tail" : "(p: Parser[U]): Parser[~[To, U]]", "member" : "laika.parse.Parser.~", "link" : "laika\/parse\/markup\/InlineParser.html#~[U](p:laika.parse.Parser[U]):laika.parse.Parser[T~U]", "kind" : "def"}, {"label" : "~", "tail" : "(value: String): Parser[~[To, String]]", "member" : "laika.parse.Parser.~", "link" : "laika\/parse\/markup\/InlineParser.html#~(value:String):laika.parse.Parser[T~String]", "kind" : "def"}, {"label" : "orElse", "tail" : "(p0: ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.orElse", "link" : "laika\/parse\/markup\/InlineParser.html#orElse[U>:T](p0:=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (To) ⇒ U): Parser[U]", "member" : "laika.parse.Parser.map", "link" : "laika\/parse\/markup\/InlineParser.html#map[U](f:T=>U):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (To) ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.flatMap", "link" : "laika\/parse\/markup\/InlineParser.html#flatMap[U](f:T=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "parse", "tail" : "(in: String): Parsed[To]", "member" : "laika.parse.Parser.parse", "link" : "laika\/parse\/markup\/InlineParser.html#parse(in:String):laika.parse.Parsed[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/markup\/InlineParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/markup\/InlineParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/markup\/InlineParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/markup\/InlineParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/markup\/InlineParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/markup\/InlineParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/markup\/InlineParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/InlineParser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/InlineParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/InlineParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/markup\/InlineParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/markup\/InlineParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/markup\/InlineParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/markup\/InlineParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/markup\/InlineParser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/markup\/InlineParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/markup\/InlineParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/markup\/InlineParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/markup\/InlineParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "embedAll", "tail" : "(parsers: ⇒ Seq[PrefixedParser[Elem]]): InlineParser[Elem, To]", "member" : "laika.parse.markup.InlineParser.embedAll", "link" : "laika\/parse\/markup\/InlineParser.html#embedAll(parsers:=>Seq[laika.parse.text.PrefixedParser[Elem]]):laika.parse.markup.InlineParser[Elem,To]", "kind" : "abstract def"}, {"label" : "embed", "tail" : "(parser: ⇒ PrefixedParser[Elem]): InlineParser[Elem, To]", "member" : "laika.parse.markup.InlineParser.embed", "link" : "laika\/parse\/markup\/InlineParser.html#embed(parser:=>laika.parse.text.PrefixedParser[Elem]):laika.parse.markup.InlineParser[Elem,To]", "kind" : "abstract def"}, {"label" : "parse", "tail" : "(in: SourceCursor): Parsed[To]", "member" : "laika.parse.Parser.parse", "link" : "laika\/parse\/markup\/InlineParser.html#parse(in:laika.parse.SourceCursor):laika.parse.Parsed[T]", "kind" : "abstract def"}], "shortDescription" : "Generic base parser that parses inline elements with potentially nested spans.", "trait" : "laika\/parse\/markup\/InlineParser.html", "kind" : "trait"}, {"name" : "laika.parse.markup.InlineParsers", "members_trait" : [{"label" : "text", "tail" : "(parser: ⇒ DelimitedText): InlineParser[String, String]", "member" : "laika.parse.markup.InlineParsers.text", "link" : "laika\/parse\/markup\/InlineParsers.html#text(parser:=>laika.parse.text.DelimitedText):laika.parse.markup.InlineParser[String,String]", "kind" : "def"}, {"label" : "spans", "tail" : "(parser: ⇒ DelimitedText): InlineParser[Span, List[Span]]", "member" : "laika.parse.markup.InlineParsers.spans", "link" : "laika\/parse\/markup\/InlineParsers.html#spans(parser:=>laika.parse.text.DelimitedText):laika.parse.markup.InlineParser[laika.ast.Span,List[laika.ast.Span]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/markup\/InlineParsers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/markup\/InlineParsers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/markup\/InlineParsers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/markup\/InlineParsers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/markup\/InlineParsers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/markup\/InlineParsers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/markup\/InlineParsers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/InlineParsers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/InlineParsers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/InlineParsers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/markup\/InlineParsers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/markup\/InlineParsers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/markup\/InlineParsers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/markup\/InlineParsers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/markup\/InlineParsers.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/markup\/InlineParsers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/markup\/InlineParsers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/markup\/InlineParsers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/markup\/InlineParsers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Provides base parsers that abstract aspects of inline parsing common to most lightweight markup languages.", "object" : "laika\/parse\/markup\/InlineParsers$.html", "members_object" : [{"label" : "text", "tail" : "(parser: ⇒ DelimitedText): InlineParser[String, String]", "member" : "laika.parse.markup.InlineParsers.text", "link" : "laika\/parse\/markup\/InlineParsers$.html#text(parser:=>laika.parse.text.DelimitedText):laika.parse.markup.InlineParser[String,String]", "kind" : "def"}, {"label" : "spans", "tail" : "(parser: ⇒ DelimitedText): InlineParser[Span, List[Span]]", "member" : "laika.parse.markup.InlineParsers.spans", "link" : "laika\/parse\/markup\/InlineParsers$.html#spans(parser:=>laika.parse.text.DelimitedText):laika.parse.markup.InlineParser[laika.ast.Span,List[laika.ast.Span]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/markup\/InlineParsers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/markup\/InlineParsers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/markup\/InlineParsers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/markup\/InlineParsers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/markup\/InlineParsers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/markup\/InlineParsers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/markup\/InlineParsers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/InlineParsers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/InlineParsers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/InlineParsers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/markup\/InlineParsers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/markup\/InlineParsers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/markup\/InlineParsers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/markup\/InlineParsers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/markup\/InlineParsers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/markup\/InlineParsers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/markup\/InlineParsers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/markup\/InlineParsers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/markup\/InlineParsers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/parse\/markup\/InlineParsers.html", "kind" : "trait"}, {"name" : "laika.parse.markup.InlineResult", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/markup\/InlineResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/markup\/InlineResult.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/markup\/InlineResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/markup\/InlineResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/markup\/InlineResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/markup\/InlineResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/markup\/InlineResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/InlineResult.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/InlineResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/InlineResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/markup\/InlineResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/markup\/InlineResult.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/markup\/InlineResult.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/markup\/InlineResult.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/markup\/InlineResult.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/markup\/InlineResult.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/markup\/InlineResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/markup\/InlineResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/markup\/InlineResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "The result of text parsed with an InlineDelimiter.", "trait" : "laika\/parse\/markup\/InlineResult.html", "kind" : "trait"}, {"name" : "laika.parse.markup.NestedDelimiter", "shortDescription" : "The result in case the start character of a nested span has been parsed.", "members_case class" : [{"member" : "laika.parse.markup.NestedDelimiter#<init>", "error" : "unsupported entity"}, {"label" : "capturedText", "tail" : ": String", "member" : "laika.parse.markup.NestedDelimiter.capturedText", "link" : "laika\/parse\/markup\/NestedDelimiter.html#capturedText:String", "kind" : "val"}, {"label" : "startChar", "tail" : ": Char", "member" : "laika.parse.markup.NestedDelimiter.startChar", "link" : "laika\/parse\/markup\/NestedDelimiter.html#startChar:Char", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/markup\/NestedDelimiter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/markup\/NestedDelimiter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/markup\/NestedDelimiter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/markup\/NestedDelimiter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/markup\/NestedDelimiter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/markup\/NestedDelimiter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/markup\/NestedDelimiter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/NestedDelimiter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/NestedDelimiter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/NestedDelimiter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/markup\/NestedDelimiter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/markup\/NestedDelimiter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/markup\/NestedDelimiter.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/markup\/NestedDelimiter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/markup\/NestedDelimiter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/markup\/NestedDelimiter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/parse\/markup\/NestedDelimiter.html", "kind" : "case class"}, {"name" : "laika.parse.markup.RecursiveBlockParser", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/markup\/RecursiveBlockParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/markup\/RecursiveBlockParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/markup\/RecursiveBlockParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/markup\/RecursiveBlockParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/markup\/RecursiveBlockParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/markup\/RecursiveBlockParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/markup\/RecursiveBlockParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/RecursiveBlockParser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/RecursiveBlockParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/RecursiveBlockParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/markup\/RecursiveBlockParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/markup\/RecursiveBlockParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/markup\/RecursiveBlockParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/markup\/RecursiveBlockParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/markup\/RecursiveBlockParser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/markup\/RecursiveBlockParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/markup\/RecursiveBlockParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/markup\/RecursiveBlockParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/markup\/RecursiveBlockParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "parse", "tail" : "(in: SourceFragment): Parsed[Seq[Block]]", "member" : "laika.parse.markup.RecursiveBlockParser.parse", "link" : "laika\/parse\/markup\/RecursiveBlockParser.html#parse(in:laika.parse.SourceFragment):laika.parse.Parsed[Seq[laika.ast.Block]]", "kind" : "abstract def"}, {"label" : "parseAndRecover", "tail" : "(in: SourceFragment): Seq[Block]", "member" : "laika.parse.markup.RecursiveBlockParser.parseAndRecover", "link" : "laika\/parse\/markup\/RecursiveBlockParser.html#parseAndRecover(in:laika.parse.SourceFragment):Seq[laika.ast.Block]", "kind" : "abstract def"}], "shortDescription" : "Parses a sequence of blocks based on the available block types of the host markup language.", "trait" : "laika\/parse\/markup\/RecursiveBlockParser.html", "kind" : "trait"}, {"name" : "laika.parse.markup.RecursiveParsers", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/markup\/RecursiveParsers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/markup\/RecursiveParsers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/markup\/RecursiveParsers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/markup\/RecursiveParsers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/markup\/RecursiveParsers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/markup\/RecursiveParsers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/markup\/RecursiveParsers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/RecursiveParsers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/RecursiveParsers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/RecursiveParsers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/markup\/RecursiveParsers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/markup\/RecursiveParsers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/markup\/RecursiveParsers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/markup\/RecursiveParsers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/markup\/RecursiveParsers.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/markup\/RecursiveParsers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/markup\/RecursiveParsers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/markup\/RecursiveParsers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/markup\/RecursiveParsers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "paragraphInterruptions", "tail" : "(position: BlockPosition): Parser[Block]", "member" : "laika.parse.markup.RecursiveParsers.paragraphInterruptions", "link" : "laika\/parse\/markup\/RecursiveParsers.html#paragraphInterruptions(position:laika.bundle.BlockPosition):laika.parse.Parser[laika.ast.Block]", "kind" : "abstract def"}, {"label" : "recursiveBlocks", "tail" : "(): RecursiveBlockParser", "member" : "laika.parse.markup.RecursiveParsers.recursiveBlocks", "link" : "laika\/parse\/markup\/RecursiveParsers.html#recursiveBlocks:laika.parse.markup.RecursiveBlockParser", "kind" : "abstract def"}, {"label" : "recursiveBlocks", "tail" : "(p: Parser[BlockSource]): Parser[Seq[Block]]", "member" : "laika.parse.markup.RecursiveParsers.recursiveBlocks", "link" : "laika\/parse\/markup\/RecursiveParsers.html#recursiveBlocks(p:laika.parse.Parser[laika.parse.BlockSource]):laika.parse.Parser[Seq[laika.ast.Block]]", "kind" : "abstract def"}, {"label" : "getSyntaxHighlighter", "tail" : "(language: String): Option[RecursiveSpanParser]", "member" : "laika.parse.markup.RecursiveSpanParsers.getSyntaxHighlighter", "link" : "laika\/parse\/markup\/RecursiveParsers.html#getSyntaxHighlighter(language:String):Option[laika.parse.markup.RecursiveSpanParser]", "kind" : "abstract def"}, {"label" : "recursiveSpans", "tail" : "(): RecursiveSpanParser", "member" : "laika.parse.markup.RecursiveSpanParsers.recursiveSpans", "link" : "laika\/parse\/markup\/RecursiveParsers.html#recursiveSpans:laika.parse.markup.RecursiveSpanParser", "kind" : "abstract def"}, {"label" : "recursiveSpans", "tail" : "(parser: Parser[SourceFragment]): InlineParser[Span, List[Span]]", "member" : "laika.parse.markup.RecursiveSpanParsers.recursiveSpans", "link" : "laika\/parse\/markup\/RecursiveParsers.html#recursiveSpans(parser:laika.parse.Parser[laika.parse.SourceFragment]):laika.parse.markup.InlineParser[laika.ast.Span,List[laika.ast.Span]]", "kind" : "abstract def"}, {"label" : "recursiveSpans", "tail" : "(parser: DelimitedText): InlineParser[Span, List[Span]]", "member" : "laika.parse.markup.RecursiveSpanParsers.recursiveSpans", "link" : "laika\/parse\/markup\/RecursiveParsers.html#recursiveSpans(parser:laika.parse.text.DelimitedText):laika.parse.markup.InlineParser[laika.ast.Span,List[laika.ast.Span]]", "kind" : "abstract def"}, {"label" : "escapedUntil", "tail" : "(char: Char, chars: Char*): Parser[String]", "member" : "laika.parse.markup.EscapedTextParsers.escapedUntil", "link" : "laika\/parse\/markup\/RecursiveParsers.html#escapedUntil(char:Char,chars:Char*):laika.parse.Parser[String]", "kind" : "abstract def"}, {"label" : "escapedText", "tail" : "(p: DelimitedText): Parser[String]", "member" : "laika.parse.markup.EscapedTextParsers.escapedText", "link" : "laika\/parse\/markup\/RecursiveParsers.html#escapedText(p:laika.parse.text.DelimitedText):laika.parse.Parser[String]", "kind" : "abstract def"}, {"label" : "escapeSequence", "tail" : "(): PrefixedParser[String]", "member" : "laika.parse.markup.EscapedTextParsers.escapeSequence", "link" : "laika\/parse\/markup\/RecursiveParsers.html#escapeSequence:laika.parse.text.PrefixedParser[String]", "kind" : "abstract def"}], "shortDescription" : "Provides parsers for nested blocks, custom block parser implementations can use these without knowingthe available span or block types of the host markup language.", "trait" : "laika\/parse\/markup\/RecursiveParsers.html", "kind" : "trait"}, {"name" : "laika.parse.markup.RecursiveSpanParser", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/markup\/RecursiveSpanParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/markup\/RecursiveSpanParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/markup\/RecursiveSpanParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/markup\/RecursiveSpanParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/markup\/RecursiveSpanParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/markup\/RecursiveSpanParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/markup\/RecursiveSpanParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/RecursiveSpanParser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/RecursiveSpanParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/RecursiveSpanParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/markup\/RecursiveSpanParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/markup\/RecursiveSpanParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/markup\/RecursiveSpanParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/markup\/RecursiveSpanParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/markup\/RecursiveSpanParser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/markup\/RecursiveSpanParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/markup\/RecursiveSpanParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/markup\/RecursiveSpanParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/markup\/RecursiveSpanParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "parse", "tail" : "(in: SourceFragment): Parsed[Seq[Span]]", "member" : "laika.parse.markup.RecursiveSpanParser.parse", "link" : "laika\/parse\/markup\/RecursiveSpanParser.html#parse(in:laika.parse.SourceFragment):laika.parse.Parsed[Seq[laika.ast.Span]]", "kind" : "abstract def"}, {"label" : "parseAndRecover", "tail" : "(in: SourceFragment): Seq[Span]", "member" : "laika.parse.markup.RecursiveSpanParser.parseAndRecover", "link" : "laika\/parse\/markup\/RecursiveSpanParser.html#parseAndRecover(in:laika.parse.SourceFragment):Seq[laika.ast.Span]", "kind" : "abstract def"}], "shortDescription" : "Parses a sequence of spans based on the available spans types of the host markup language.", "trait" : "laika\/parse\/markup\/RecursiveSpanParser.html", "kind" : "trait"}, {"name" : "laika.parse.markup.RecursiveSpanParsers", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getSyntaxHighlighter", "tail" : "(language: String): Option[RecursiveSpanParser]", "member" : "laika.parse.markup.RecursiveSpanParsers.getSyntaxHighlighter", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html#getSyntaxHighlighter(language:String):Option[laika.parse.markup.RecursiveSpanParser]", "kind" : "abstract def"}, {"label" : "recursiveSpans", "tail" : "(): RecursiveSpanParser", "member" : "laika.parse.markup.RecursiveSpanParsers.recursiveSpans", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html#recursiveSpans:laika.parse.markup.RecursiveSpanParser", "kind" : "abstract def"}, {"label" : "recursiveSpans", "tail" : "(parser: Parser[SourceFragment]): InlineParser[Span, List[Span]]", "member" : "laika.parse.markup.RecursiveSpanParsers.recursiveSpans", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html#recursiveSpans(parser:laika.parse.Parser[laika.parse.SourceFragment]):laika.parse.markup.InlineParser[laika.ast.Span,List[laika.ast.Span]]", "kind" : "abstract def"}, {"label" : "recursiveSpans", "tail" : "(parser: DelimitedText): InlineParser[Span, List[Span]]", "member" : "laika.parse.markup.RecursiveSpanParsers.recursiveSpans", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html#recursiveSpans(parser:laika.parse.text.DelimitedText):laika.parse.markup.InlineParser[laika.ast.Span,List[laika.ast.Span]]", "kind" : "abstract def"}, {"label" : "escapedUntil", "tail" : "(char: Char, chars: Char*): Parser[String]", "member" : "laika.parse.markup.EscapedTextParsers.escapedUntil", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html#escapedUntil(char:Char,chars:Char*):laika.parse.Parser[String]", "kind" : "abstract def"}, {"label" : "escapedText", "tail" : "(p: DelimitedText): Parser[String]", "member" : "laika.parse.markup.EscapedTextParsers.escapedText", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html#escapedText(p:laika.parse.text.DelimitedText):laika.parse.Parser[String]", "kind" : "abstract def"}, {"label" : "escapeSequence", "tail" : "(): PrefixedParser[String]", "member" : "laika.parse.markup.EscapedTextParsers.escapeSequence", "link" : "laika\/parse\/markup\/RecursiveSpanParsers.html#escapeSequence:laika.parse.text.PrefixedParser[String]", "kind" : "abstract def"}], "shortDescription" : "Provides parsers for nested spans, custom span parser implementationscan use these without knowing the available span types of the hostmarkup language.", "trait" : "laika\/parse\/markup\/RecursiveSpanParsers.html", "kind" : "trait"}, {"name" : "laika.parse.markup.RootParser", "shortDescription" : "Responsible of assembling all the block, inline, text and configuration parserssupported by a text markup language.", "members_class" : [{"label" : "RecursiveSpanParserDelegate", "tail" : "", "member" : "laika.parse.markup.DefaultRecursiveSpanParsers.RecursiveSpanParserDelegate", "link" : "laika\/parse\/markup\/DefaultRecursiveSpanParsers.html#RecursiveSpanParserDelegateextendsRecursiveSpanParser", "kind" : "class"}, {"label" : "paragraphInterruptions", "tail" : "(position: BlockPosition): Parser[Block]", "member" : "laika.parse.markup.RootParser.paragraphInterruptions", "link" : "laika\/parse\/markup\/RootParser.html#paragraphInterruptions(position:laika.bundle.BlockPosition):laika.parse.Parser[laika.ast.Block]", "kind" : "def"}, {"label" : "blockList", "tail" : "(p: ⇒ Parser[Block]): Parser[Seq[Block]]", "member" : "laika.parse.markup.RootParser.blockList", "link" : "laika\/parse\/markup\/RootParser.html#blockList(p:=>laika.parse.Parser[laika.ast.Block]):laika.parse.Parser[Seq[laika.ast.Block]]", "kind" : "def"}, {"label" : "spanParsers", "tail" : ": Seq[PrefixedParser[Span]]", "member" : "laika.parse.markup.RootParser.spanParsers", "link" : "laika\/parse\/markup\/RootParser.html#spanParsers:Seq[laika.parse.text.PrefixedParser[laika.ast.Span]]", "kind" : "lazy val"}, {"label" : "fallbackBlock", "tail" : ": Parser[Block]", "member" : "laika.parse.markup.RootParser.fallbackBlock", "link" : "laika\/parse\/markup\/RootParser.html#fallbackBlock:laika.parse.Parser[laika.ast.Block]", "kind" : "lazy val"}, {"label" : "nestedBlock", "tail" : ": Parser[Block]", "member" : "laika.parse.markup.RootParser.nestedBlock", "link" : "laika\/parse\/markup\/RootParser.html#nestedBlock:laika.parse.Parser[laika.ast.Block]", "kind" : "lazy val"}, {"label" : "rootBlock", "tail" : ": Parser[Block]", "member" : "laika.parse.markup.RootParser.rootBlock", "link" : "laika\/parse\/markup\/RootParser.html#rootBlock:laika.parse.Parser[laika.ast.Block]", "kind" : "lazy val"}, {"label" : "rootElement", "tail" : ": Parser[RootElement]", "member" : "laika.parse.markup.RootParser.rootElement", "link" : "laika\/parse\/markup\/RootParser.html#rootElement:laika.parse.Parser[laika.ast.RootElement]", "kind" : "lazy val"}, {"label" : "escapedChar", "tail" : ": Parser[String]", "member" : "laika.parse.markup.RootParser.escapedChar", "link" : "laika\/parse\/markup\/RootParser.html#escapedChar:laika.parse.Parser[String]", "kind" : "lazy val"}, {"label" : "getSyntaxHighlighter", "tail" : "(language: String): Option[RecursiveSpanParser]", "member" : "laika.parse.markup.RootParser.getSyntaxHighlighter", "link" : "laika\/parse\/markup\/RootParser.html#getSyntaxHighlighter(language:String):Option[laika.parse.markup.RecursiveSpanParser]", "kind" : "def"}, {"member" : "laika.parse.markup.RootParser#<init>", "error" : "unsupported entity"}, {"label" : "recursiveBlocks", "tail" : "(): RecursiveBlockParser", "member" : "laika.parse.markup.DefaultRecursiveParsers.recursiveBlocks", "link" : "laika\/parse\/markup\/RootParser.html#recursiveBlocks:laika.parse.markup.RecursiveBlockParser", "kind" : "def"}, {"label" : "recursiveBlocks", "tail" : "(p: Parser[BlockSource]): Parser[Seq[Block]]", "member" : "laika.parse.markup.DefaultRecursiveParsers.recursiveBlocks", "link" : "laika\/parse\/markup\/RootParser.html#recursiveBlocks(p:laika.parse.Parser[laika.parse.BlockSource]):laika.parse.Parser[Seq[laika.ast.Block]]", "kind" : "def"}, {"label" : "maxNestLevel", "tail" : ": Int", "member" : "laika.parse.markup.DefaultRecursiveParsers.maxNestLevel", "link" : "laika\/parse\/markup\/RootParser.html#maxNestLevel:Int", "kind" : "val"}, {"label" : "recursiveSpans", "tail" : "(): RecursiveSpanParser", "member" : "laika.parse.markup.DefaultRecursiveSpanParsers.recursiveSpans", "link" : "laika\/parse\/markup\/RootParser.html#recursiveSpans:laika.parse.markup.RecursiveSpanParser", "kind" : "def"}, {"label" : "recursiveSpans", "tail" : "(parser: Parser[SourceFragment]): InlineParser[Span, List[Span]]", "member" : "laika.parse.markup.DefaultRecursiveSpanParsers.recursiveSpans", "link" : "laika\/parse\/markup\/RootParser.html#recursiveSpans(parser:laika.parse.Parser[laika.parse.SourceFragment]):laika.parse.markup.InlineParser[laika.ast.Span,List[laika.ast.Span]]", "kind" : "def"}, {"label" : "recursiveSpans", "tail" : "(p: DelimitedText): InlineParser[Span, List[Span]]", "member" : "laika.parse.markup.DefaultRecursiveSpanParsers.recursiveSpans", "link" : "laika\/parse\/markup\/RootParser.html#recursiveSpans(p:laika.parse.text.DelimitedText):laika.parse.markup.InlineParser[laika.ast.Span,List[laika.ast.Span]]", "kind" : "def"}, {"label" : "defaultSpanParser", "tail" : ": InlineParser[Span, List[Span]]", "member" : "laika.parse.markup.DefaultRecursiveSpanParsers.defaultSpanParser", "link" : "laika\/parse\/markup\/RootParser.html#defaultSpanParser:laika.parse.markup.InlineParser[laika.ast.Span,List[laika.ast.Span]]", "kind" : "lazy val"}, {"label" : "escapedUntil", "tail" : "(char: Char, chars: Char*): Parser[String]", "member" : "laika.parse.markup.DefaultEscapedTextParsers.escapedUntil", "link" : "laika\/parse\/markup\/RootParser.html#escapedUntil(char:Char,chars:Char*):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "escapedText", "tail" : "(p: DelimitedText): Parser[String]", "member" : "laika.parse.markup.DefaultEscapedTextParsers.escapedText", "link" : "laika\/parse\/markup\/RootParser.html#escapedText(p:laika.parse.text.DelimitedText):laika.parse.Parser[String]", "kind" : "def"}, {"label" : "escapeSequence", "tail" : ": PrefixedParser[String]", "member" : "laika.parse.markup.DefaultEscapedTextParsers.escapeSequence", "link" : "laika\/parse\/markup\/RootParser.html#escapeSequence:laika.parse.text.PrefixedParser[String]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/markup\/RootParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/markup\/RootParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/markup\/RootParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/markup\/RootParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/markup\/RootParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/markup\/RootParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/markup\/RootParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/RootParser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/RootParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/markup\/RootParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/markup\/RootParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/markup\/RootParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/markup\/RootParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/markup\/RootParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/markup\/RootParser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/markup\/RootParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/markup\/RootParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/markup\/RootParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/markup\/RootParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/parse\/markup\/RootParser.html", "kind" : "class"}], "laika.render" : [{"name" : "laika.render.ASTFormatter", "shortDescription" : "Default factory for ASTFormatters, based on a provided RenderContext.", "object" : "laika\/render\/ASTFormatter$.html", "members_object" : [{"label" : "apply", "tail" : "(context: RenderContext[TextFormatter]): TextFormatter", "member" : "laika.render.ASTFormatter.apply", "link" : "laika\/render\/ASTFormatter$.html#apply(context:laika.factory.RenderContext[laika.render.TextFormatter]):laika.render.TextFormatter", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "laika\/render\/ASTFormatter$.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (TextFormatter) ⇒ A): (RenderContext[TextFormatter]) ⇒ A", "member" : "scala.Function1.andThen", "link" : "laika\/render\/ASTFormatter$.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ RenderContext[TextFormatter]): (A) ⇒ TextFormatter", "member" : "scala.Function1.compose", "link" : "laika\/render\/ASTFormatter$.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/ASTFormatter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/ASTFormatter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/ASTFormatter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/ASTFormatter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/ASTFormatter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/ASTFormatter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/ASTFormatter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/ASTFormatter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/ASTFormatter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/ASTFormatter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/ASTFormatter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/ASTFormatter$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/ASTFormatter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/ASTFormatter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/ASTFormatter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/ASTFormatter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/ASTFormatter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/ASTFormatter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.render.ASTRenderer", "shortDescription" : "Default renderer implementation for the Formatted AST output format.", "object" : "laika\/render\/ASTRenderer$.html", "members_object" : [{"label" : "apply", "tail" : "(fmt: TextFormatter, element: Element): String", "member" : "laika.render.ASTRenderer.apply", "link" : "laika\/render\/ASTRenderer$.html#apply(fmt:laika.render.TextFormatter,element:laika.ast.Element):String", "kind" : "def"}, {"label" : "maxTextWidth", "tail" : ": Int", "member" : "laika.render.ASTRenderer.maxTextWidth", "link" : "laika\/render\/ASTRenderer$.html#maxTextWidth:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function2.toString", "link" : "laika\/render\/ASTRenderer$.html#toString():String", "kind" : "def"}, {"label" : "tupled", "tail" : "(): ((TextFormatter, Element)) ⇒ String", "member" : "scala.Function2.tupled", "link" : "laika\/render\/ASTRenderer$.html#tupled:((T1,T2))=>R", "kind" : "def"}, {"label" : "curried", "tail" : "(): (TextFormatter) ⇒ (Element) ⇒ String", "member" : "scala.Function2.curried", "link" : "laika\/render\/ASTRenderer$.html#curried:T1=>(T2=>R)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/ASTRenderer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/ASTRenderer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/ASTRenderer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/ASTRenderer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/ASTRenderer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/ASTRenderer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/ASTRenderer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/ASTRenderer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/ASTRenderer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/ASTRenderer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/ASTRenderer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/ASTRenderer$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/ASTRenderer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/ASTRenderer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/ASTRenderer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/ASTRenderer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/ASTRenderer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/ASTRenderer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.render.BaseFormatter", "shortDescription" : "API basis for renderers that produce character output.", "members_class" : [{"label" : "indentedChildren", "tail" : "(elements: Seq[Element]): String", "member" : "laika.render.BaseFormatter.indentedChildren", "link" : "laika\/render\/BaseFormatter.html#indentedChildren(elements:Seq[laika.ast.Element]):String", "kind" : "def"}, {"label" : "childPerLine", "tail" : "(elements: Seq[Element]): String", "member" : "laika.render.BaseFormatter.childPerLine", "link" : "laika\/render\/BaseFormatter.html#childPerLine(elements:Seq[laika.ast.Element]):String", "kind" : "def"}, {"label" : "child", "tail" : "(element: Element): String", "member" : "laika.render.BaseFormatter.child", "link" : "laika\/render\/BaseFormatter.html#child(element:laika.ast.Element):String", "kind" : "def"}, {"label" : "children", "tail" : "(elements: Seq[Element]): String", "member" : "laika.render.BaseFormatter.children", "link" : "laika\/render\/BaseFormatter.html#children(elements:Seq[laika.ast.Element]):String", "kind" : "def"}, {"label" : "forMessage", "tail" : "(message: RuntimeMessage)(whenEnabled: String): String", "member" : "laika.render.BaseFormatter.forMessage", "link" : "laika\/render\/BaseFormatter.html#forMessage(message:laika.ast.RuntimeMessage)(whenEnabled:String):String", "kind" : "def"}, {"label" : "withMinIndentation", "tail" : "(minIndent: Int)(f: (Rep) ⇒ String): String", "member" : "laika.render.BaseFormatter.withMinIndentation", "link" : "laika\/render\/BaseFormatter.html#withMinIndentation(minIndent:Int)(f:Rep=>String):String", "kind" : "def"}, {"label" : "withoutIndentation", "tail" : "(f: (Rep) ⇒ String): String", "member" : "laika.render.BaseFormatter.withoutIndentation", "link" : "laika\/render\/BaseFormatter.html#withoutIndentation(f:Rep=>String):String", "kind" : "def"}, {"label" : "indented", "tail" : "(f: (Rep) ⇒ String): String", "member" : "laika.render.BaseFormatter.indented", "link" : "laika\/render\/BaseFormatter.html#indented(f:Rep=>String):String", "kind" : "def"}, {"label" : "newLine", "tail" : ": String", "member" : "laika.render.BaseFormatter.newLine", "link" : "laika\/render\/BaseFormatter.html#newLine:String", "kind" : "val"}, {"member" : "laika.render.BaseFormatter#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/BaseFormatter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/BaseFormatter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/BaseFormatter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/BaseFormatter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/BaseFormatter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/BaseFormatter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/BaseFormatter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/BaseFormatter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/BaseFormatter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/BaseFormatter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/BaseFormatter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/BaseFormatter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/render\/BaseFormatter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/BaseFormatter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/BaseFormatter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/BaseFormatter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/BaseFormatter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/BaseFormatter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/BaseFormatter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withIndentation", "tail" : "(newIndentation: Indentation): Rep", "member" : "laika.render.BaseFormatter.withIndentation", "link" : "laika\/render\/BaseFormatter.html#withIndentation(newIndentation:laika.render.Indentation):Rep", "kind" : "abstract def"}, {"label" : "withChild", "tail" : "(element: Element): Rep", "member" : "laika.render.BaseFormatter.withChild", "link" : "laika\/render\/BaseFormatter.html#withChild(element:laika.ast.Element):Rep", "kind" : "abstract def"}], "class" : "laika\/render\/BaseFormatter.html", "kind" : "class"}, {"name" : "laika.render.FOFormatter", "shortDescription" : "API for renderers that produce XSL-FO output.", "object" : "laika\/render\/FOFormatter$.html", "members_object" : [{"label" : "apply", "tail" : "(context: RenderContext[FOFormatter]): FOFormatter", "member" : "laika.render.FOFormatter.apply", "link" : "laika\/render\/FOFormatter$.html#apply(context:laika.factory.RenderContext[laika.render.FOFormatter]):laika.render.FOFormatter", "kind" : "def"}, {"label" : "BookmarkTitle", "tail" : "", "member" : "laika.render.FOFormatter.BookmarkTitle", "link" : "laika\/render\/FOFormatter$.html#BookmarkTitleextendsElementwithBlockwithTextContainerwithProductwithSerializable", "kind" : "case class"}, {"label" : "FootnoteBody", "tail" : "", "member" : "laika.render.FOFormatter.FootnoteBody", "link" : "laika\/render\/FOFormatter$.html#FootnoteBodyextendsElementwithBlockwithBlockContainerwithProductwithSerializable", "kind" : "case class"}, {"label" : "ListItemBody", "tail" : "", "member" : "laika.render.FOFormatter.ListItemBody", "link" : "laika\/render\/FOFormatter$.html#ListItemBodyextendsElementwithBlockwithBlockContainerwithProductwithSerializable", "kind" : "case class"}, {"label" : "ListItemLabel", "tail" : "", "member" : "laika.render.FOFormatter.ListItemLabel", "link" : "laika\/render\/FOFormatter$.html#ListItemLabelextendsElementwithBlockwithProductwithSerializable", "kind" : "case class"}, {"label" : "PageNumberCitation", "tail" : "", "member" : "laika.render.FOFormatter.PageNumberCitation", "link" : "laika\/render\/FOFormatter$.html#PageNumberCitationextendsElementwithSpanwithProductwithSerializable", "kind" : "case class"}, {"label" : "Leader", "tail" : "", "member" : "laika.render.FOFormatter.Leader", "link" : "laika\/render\/FOFormatter$.html#LeaderextendsElementwithSpanwithProductwithSerializable", "kind" : "case class"}, {"label" : "Preamble", "tail" : "", "member" : "laika.render.FOFormatter.Preamble", "link" : "laika\/render\/FOFormatter$.html#PreambleextendsElementwithBlockwithProductwithSerializable", "kind" : "case class"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "laika\/render\/FOFormatter$.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (FOFormatter) ⇒ A): (RenderContext[FOFormatter]) ⇒ A", "member" : "scala.Function1.andThen", "link" : "laika\/render\/FOFormatter$.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ RenderContext[FOFormatter]): (A) ⇒ FOFormatter", "member" : "scala.Function1.compose", "link" : "laika\/render\/FOFormatter$.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/FOFormatter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/FOFormatter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/FOFormatter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/FOFormatter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/FOFormatter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/FOFormatter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/FOFormatter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/FOFormatter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/FOFormatter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/FOFormatter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/FOFormatter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/FOFormatter$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/FOFormatter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/FOFormatter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/FOFormatter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/FOFormatter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/FOFormatter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/FOFormatter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "bookmarkTitle", "tail" : "(title: BookmarkTitle): String", "member" : "laika.render.FOFormatter.bookmarkTitle", "link" : "laika\/render\/FOFormatter.html#bookmarkTitle(title:laika.render.FOFormatter.BookmarkTitle):String", "kind" : "def"}, {"label" : "bookmark", "tail" : "(bookmark: NavigationItem): String", "member" : "laika.render.FOFormatter.bookmark", "link" : "laika\/render\/FOFormatter.html#bookmark(bookmark:laika.ast.NavigationItem):String", "kind" : "def"}, {"label" : "bookmarkTree", "tail" : "(tree: NavigationList): String", "member" : "laika.render.FOFormatter.bookmarkTree", "link" : "laika\/render\/FOFormatter.html#bookmarkTree(tree:laika.ast.NavigationList):String", "kind" : "def"}, {"label" : "rawText", "tail" : "(styleHint: Element, content: String, attr: (String, String)*): String", "member" : "laika.render.FOFormatter.rawText", "link" : "laika\/render\/FOFormatter.html#rawText(styleHint:laika.ast.Element,content:String,attr:(String,String)*):String", "kind" : "def"}, {"label" : "textBlockWithWS", "tail" : "(styleHint: Element, content: String, attr: (String, String)*): String", "member" : "laika.render.FOFormatter.textBlockWithWS", "link" : "laika\/render\/FOFormatter.html#textBlockWithWS(styleHint:laika.ast.Element,content:String,attr:(String,String)*):String", "kind" : "def"}, {"label" : "textWithWS", "tail" : "(styleHint: Element, content: String, attr: (String, String)*): String", "member" : "laika.render.FOFormatter.textWithWS", "link" : "laika\/render\/FOFormatter.html#textWithWS(styleHint:laika.ast.Element,content:String,attr:(String,String)*):String", "kind" : "def"}, {"label" : "text", "tail" : "(styleHint: Element, content: String, attr: (String, String)*): String", "member" : "laika.render.FOFormatter.text", "link" : "laika\/render\/FOFormatter.html#text(styleHint:laika.ast.Element,content:String,attr:(String,String)*):String", "kind" : "def"}, {"label" : "footnote", "tail" : "(styleHint: Element, label: String, body: Seq[Block], options: Options): String", "member" : "laika.render.FOFormatter.footnote", "link" : "laika\/render\/FOFormatter.html#footnote(styleHint:laika.ast.Element,label:String,body:Seq[laika.ast.Block],options:laika.ast.Options):String", "kind" : "def"}, {"label" : "listItemBody", "tail" : "(styleHint: Element, content: Seq[Block], attr: (String, String)*): String", "member" : "laika.render.FOFormatter.listItemBody", "link" : "laika\/render\/FOFormatter.html#listItemBody(styleHint:laika.ast.Element,content:Seq[laika.ast.Block],attr:(String,String)*):String", "kind" : "def"}, {"label" : "listItemLabel", "tail" : "(styleHint: Element, content: Block, attr: (String, String)*): String", "member" : "laika.render.FOFormatter.listItemLabel", "link" : "laika\/render\/FOFormatter.html#listItemLabel(styleHint:laika.ast.Element,content:laika.ast.Block,attr:(String,String)*):String", "kind" : "def"}, {"label" : "listItem", "tail" : "(styleHint: Element, label: Seq[Span], body: Seq[Block], attr: (String, String)*): String", "member" : "laika.render.FOFormatter.listItem", "link" : "laika\/render\/FOFormatter.html#listItem(styleHint:laika.ast.Element,label:Seq[laika.ast.Span],body:Seq[laika.ast.Block],attr:(String,String)*):String", "kind" : "def"}, {"label" : "externalGraphic", "tail" : "(styleHint: Element, src: String, width: Option[Length], height: Option[Length]): String", "member" : "laika.render.FOFormatter.externalGraphic", "link" : "laika\/render\/FOFormatter.html#externalGraphic(styleHint:laika.ast.Element,src:String,width:Option[laika.ast.Length],height:Option[laika.ast.Length]):String", "kind" : "def"}, {"label" : "externalLink", "tail" : "(styleHint: Element, url: String, content: Seq[Span], attr: (String, String)*): String", "member" : "laika.render.FOFormatter.externalLink", "link" : "laika\/render\/FOFormatter.html#externalLink(styleHint:laika.ast.Element,url:String,content:Seq[laika.ast.Span],attr:(String,String)*):String", "kind" : "def"}, {"label" : "internalLinkTarget", "tail" : "(element: Element): String", "member" : "laika.render.FOFormatter.internalLinkTarget", "link" : "laika\/render\/FOFormatter.html#internalLinkTarget(element:laika.ast.Element):String", "kind" : "def"}, {"label" : "internalLink", "tail" : "(styleHint: Element, target: Path, content: Seq[Span], attr: (String, String)*): String", "member" : "laika.render.FOFormatter.internalLink", "link" : "laika\/render\/FOFormatter.html#internalLink(styleHint:laika.ast.Element,target:laika.ast.Path,content:Seq[laika.ast.Span],attr:(String,String)*):String", "kind" : "def"}, {"label" : "inline", "tail" : "(styleHint: Element, content: Seq[Span], attr: (String, String)*): String", "member" : "laika.render.FOFormatter.inline", "link" : "laika\/render\/FOFormatter.html#inline(styleHint:laika.ast.Element,content:Seq[laika.ast.Span],attr:(String,String)*):String", "kind" : "def"}, {"label" : "blockWithWS", "tail" : "(styleHint: Element, content: Seq[Span], attr: (String, String)*): String", "member" : "laika.render.FOFormatter.blockWithWS", "link" : "laika\/render\/FOFormatter.html#blockWithWS(styleHint:laika.ast.Element,content:Seq[laika.ast.Span],attr:(String,String)*):String", "kind" : "def"}, {"label" : "block", "tail" : "(styleHint: Element, attr: (String, String)*): String", "member" : "laika.render.FOFormatter.block", "link" : "laika\/render\/FOFormatter.html#block(styleHint:laika.ast.Element,attr:(String,String)*):String", "kind" : "def"}, {"label" : "block", "tail" : "(styleHint: Element, content: Seq[Span], attr: (String, String)*): String", "member" : "laika.render.FOFormatter.block", "link" : "laika\/render\/FOFormatter.html#block(styleHint:laika.ast.Element,content:Seq[laika.ast.Span],attr:(String,String)*):String", "kind" : "def"}, {"label" : "listBlock", "tail" : "(styleHint: Element, content: Seq[ListItem], attr: (String, String)*): String", "member" : "laika.render.FOFormatter.listBlock", "link" : "laika\/render\/FOFormatter.html#listBlock(styleHint:laika.ast.Element,content:Seq[laika.ast.ListItem],attr:(String,String)*):String", "kind" : "def"}, {"label" : "blockContainer", "tail" : "(styleHint: Element, content: Seq[Block], attr: (String, String)*): String", "member" : "laika.render.FOFormatter.blockContainer", "link" : "laika\/render\/FOFormatter.html#blockContainer(styleHint:laika.ast.Element,content:Seq[laika.ast.Block],attr:(String,String)*):String", "kind" : "def"}, {"label" : "buildLocalId", "tail" : "(ref: String): String", "member" : "laika.render.FOFormatter.buildLocalId", "link" : "laika\/render\/FOFormatter.html#buildLocalId(ref:String):String", "kind" : "def"}, {"label" : "buildId", "tail" : "(path: Path): String", "member" : "laika.render.FOFormatter.buildId", "link" : "laika\/render\/FOFormatter.html#buildId(path:laika.ast.Path):String", "kind" : "def"}, {"label" : "withCitation", "tail" : "(ref: String)(f: (Citation) ⇒ String): String", "member" : "laika.render.FOFormatter.withCitation", "link" : "laika\/render\/FOFormatter.html#withCitation(ref:String)(f:laika.ast.Citation=>String):String", "kind" : "def"}, {"label" : "withFootnote", "tail" : "(ref: String)(f: (Footnote) ⇒ String): String", "member" : "laika.render.FOFormatter.withFootnote", "link" : "laika\/render\/FOFormatter.html#withFootnote(ref:String)(f:laika.ast.Footnote=>String):String", "kind" : "def"}, {"label" : "attributes", "tail" : "(tag: String, element: Element, attrs: Seq[(String, String)]): String", "member" : "laika.render.FOFormatter.attributes", "link" : "laika\/render\/FOFormatter.html#attributes(tag:String,element:laika.ast.Element,attrs:Seq[(String,String)]):String", "kind" : "def"}, {"label" : "withIndentation", "tail" : "(newIndentation: Indentation): FOFormatter", "member" : "laika.render.FOFormatter.withIndentation", "link" : "laika\/render\/FOFormatter.html#withIndentation(newIndentation:laika.render.Indentation):laika.render.FOFormatter", "kind" : "def"}, {"label" : "withChild", "tail" : "(element: Element): FOFormatter", "member" : "laika.render.FOFormatter.withChild", "link" : "laika\/render\/FOFormatter.html#withChild(element:laika.ast.Element):laika.render.FOFormatter", "kind" : "def"}, {"label" : "StyleHint", "tail" : "", "member" : "laika.render.FOFormatter.StyleHint", "link" : "laika\/render\/FOFormatter.html#StyleHint=laika.ast.Element", "kind" : "type"}, {"member" : "laika.render.FOFormatter#<init>", "error" : "unsupported entity"}, {"label" : "messageFilter", "tail" : ": MessageFilter", "member" : "laika.render.FOFormatter.messageFilter", "link" : "laika\/render\/FOFormatter.html#messageFilter:laika.ast.MessageFilter", "kind" : "val"}, {"label" : "indentation", "tail" : ": Indentation", "member" : "laika.render.FOFormatter.indentation", "link" : "laika\/render\/FOFormatter.html#indentation:laika.render.Indentation", "kind" : "val"}, {"label" : "styles", "tail" : ": StyleDeclarationSet", "member" : "laika.render.FOFormatter.styles", "link" : "laika\/render\/FOFormatter.html#styles:laika.ast.StyleDeclarationSet", "kind" : "val"}, {"label" : "path", "tail" : ": Path", "member" : "laika.render.FOFormatter.path", "link" : "laika\/render\/FOFormatter.html#path:laika.ast.Path", "kind" : "val"}, {"label" : "pathTranslator", "tail" : ": PathTranslator", "member" : "laika.render.FOFormatter.pathTranslator", "link" : "laika\/render\/FOFormatter.html#pathTranslator:laika.rewrite.nav.PathTranslator", "kind" : "val"}, {"label" : "parents", "tail" : ": List[Element]", "member" : "laika.render.FOFormatter.parents", "link" : "laika\/render\/FOFormatter.html#parents:List[laika.ast.Element]", "kind" : "val"}, {"label" : "currentElement", "tail" : ": Element", "member" : "laika.render.FOFormatter.currentElement", "link" : "laika\/render\/FOFormatter.html#currentElement:laika.ast.Element", "kind" : "val"}, {"label" : "renderChild", "tail" : ": (FOFormatter, Element) ⇒ String", "member" : "laika.render.FOFormatter.renderChild", "link" : "laika\/render\/FOFormatter.html#renderChild:(laika.render.FOFormatter,laika.ast.Element)=>String", "kind" : "val"}, {"label" : "filterAttributes", "tail" : "(tagName: String, attributes: Seq[(String, String)]): Seq[(String, String)]", "member" : "laika.render.FOProperties.filterAttributes", "link" : "laika\/render\/FOFormatter.html#filterAttributes(tagName:String,attributes:Seq[(String,String)]):Seq[(String,String)]", "kind" : "def"}, {"label" : "internalLink", "tail" : "(path: Path): String", "member" : "laika.render.TagFormatter.internalLink", "link" : "laika\/render\/FOFormatter.html#internalLink(path:laika.ast.Path):String", "kind" : "def"}, {"label" : "internalLink", "tail" : "(path: RelativePath): String", "member" : "laika.render.TagFormatter.internalLink", "link" : "laika\/render\/FOFormatter.html#internalLink(path:laika.ast.RelativePath):String", "kind" : "def"}, {"label" : "attribute", "tail" : "(name: String, value: String): String", "member" : "laika.render.TagFormatter.attribute", "link" : "laika\/render\/FOFormatter.html#attribute(name:String,value:String):String", "kind" : "def"}, {"label" : "optAttributes", "tail" : "(attrs: (String, Option[String])*): Seq[(String, String)]", "member" : "laika.render.TagFormatter.optAttributes", "link" : "laika\/render\/FOFormatter.html#optAttributes(attrs:(String,Option[String])*):Seq[(String,String)]", "kind" : "def"}, {"label" : "attributes", "tail" : "(attrs: Seq[(String, String)]): String", "member" : "laika.render.TagFormatter.attributes", "link" : "laika\/render\/FOFormatter.html#attributes(attrs:Seq[(String,String)]):String", "kind" : "def"}, {"label" : "emptyElement", "tail" : "(tagName: String): String", "member" : "laika.render.TagFormatter.emptyElement", "link" : "laika\/render\/FOFormatter.html#emptyElement(tagName:String):String", "kind" : "def"}, {"label" : "emptyElement", "tail" : "(tagName: String, styleHint: StyleHint, attrs: (String, String)*): String", "member" : "laika.render.TagFormatter.emptyElement", "link" : "laika\/render\/FOFormatter.html#emptyElement(tagName:String,styleHint:TagFormatter.this.StyleHint,attrs:(String,String)*):String", "kind" : "def"}, {"label" : "textElement", "tail" : "(tagName: String, styleHint: StyleHint, txt: String, attrs: (String, String)*): String", "member" : "laika.render.TagFormatter.textElement", "link" : "laika\/render\/FOFormatter.html#textElement(tagName:String,styleHint:TagFormatter.this.StyleHint,txt:String,attrs:(String,String)*):String", "kind" : "def"}, {"label" : "rawElement", "tail" : "(tagName: String, styleHint: StyleHint, content: String, attrs: (String, String)*): String", "member" : "laika.render.TagFormatter.rawElement", "link" : "laika\/render\/FOFormatter.html#rawElement(tagName:String,styleHint:TagFormatter.this.StyleHint,content:String,attrs:(String,String)*):String", "kind" : "def"}, {"label" : "indentedElement", "tail" : "(tagName: String, styleHint: StyleHint, content: Seq[Element], attrs: (String, String)*): String", "member" : "laika.render.TagFormatter.indentedElement", "link" : "laika\/render\/FOFormatter.html#indentedElement(tagName:String,styleHint:TagFormatter.this.StyleHint,content:Seq[laika.ast.Element],attrs:(String,String)*):String", "kind" : "def"}, {"label" : "element", "tail" : "(tagName: String, styleHint: StyleHint, content: Seq[Element], attrs: (String, String)*): String", "member" : "laika.render.TagFormatter.element", "link" : "laika\/render\/FOFormatter.html#element(tagName:String,styleHint:TagFormatter.this.StyleHint,content:Seq[laika.ast.Element],attrs:(String,String)*):String", "kind" : "def"}, {"label" : "comment", "tail" : "(content: String): String", "member" : "laika.render.TagFormatter.comment", "link" : "laika\/render\/FOFormatter.html#comment(content:String):String", "kind" : "def"}, {"label" : "text", "tail" : "(str: String): String", "member" : "laika.render.TagFormatter.text", "link" : "laika\/render\/FOFormatter.html#text(str:String):String", "kind" : "def"}, {"label" : "indentedChildren", "tail" : "(elements: Seq[Element]): String", "member" : "laika.render.BaseFormatter.indentedChildren", "link" : "laika\/render\/FOFormatter.html#indentedChildren(elements:Seq[laika.ast.Element]):String", "kind" : "def"}, {"label" : "childPerLine", "tail" : "(elements: Seq[Element]): String", "member" : "laika.render.BaseFormatter.childPerLine", "link" : "laika\/render\/FOFormatter.html#childPerLine(elements:Seq[laika.ast.Element]):String", "kind" : "def"}, {"label" : "child", "tail" : "(element: Element): String", "member" : "laika.render.BaseFormatter.child", "link" : "laika\/render\/FOFormatter.html#child(element:laika.ast.Element):String", "kind" : "def"}, {"label" : "children", "tail" : "(elements: Seq[Element]): String", "member" : "laika.render.BaseFormatter.children", "link" : "laika\/render\/FOFormatter.html#children(elements:Seq[laika.ast.Element]):String", "kind" : "def"}, {"label" : "forMessage", "tail" : "(message: RuntimeMessage)(whenEnabled: String): String", "member" : "laika.render.BaseFormatter.forMessage", "link" : "laika\/render\/FOFormatter.html#forMessage(message:laika.ast.RuntimeMessage)(whenEnabled:String):String", "kind" : "def"}, {"label" : "withMinIndentation", "tail" : "(minIndent: Int)(f: (FOFormatter) ⇒ String): String", "member" : "laika.render.BaseFormatter.withMinIndentation", "link" : "laika\/render\/FOFormatter.html#withMinIndentation(minIndent:Int)(f:Rep=>String):String", "kind" : "def"}, {"label" : "withoutIndentation", "tail" : "(f: (FOFormatter) ⇒ String): String", "member" : "laika.render.BaseFormatter.withoutIndentation", "link" : "laika\/render\/FOFormatter.html#withoutIndentation(f:Rep=>String):String", "kind" : "def"}, {"label" : "indented", "tail" : "(f: (FOFormatter) ⇒ String): String", "member" : "laika.render.BaseFormatter.indented", "link" : "laika\/render\/FOFormatter.html#indented(f:Rep=>String):String", "kind" : "def"}, {"label" : "newLine", "tail" : ": String", "member" : "laika.render.BaseFormatter.newLine", "link" : "laika\/render\/FOFormatter.html#newLine:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/FOFormatter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/FOFormatter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/FOFormatter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/FOFormatter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/FOFormatter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/FOFormatter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/FOFormatter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/FOFormatter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/FOFormatter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/FOFormatter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/FOFormatter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/FOFormatter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/FOFormatter.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/FOFormatter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/FOFormatter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/FOFormatter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/render\/FOFormatter.html", "kind" : "case class"}, {"name" : "laika.render.FOProperties", "members_trait" : [{"label" : "filterAttributes", "tail" : "(tagName: String, attributes: Seq[(String, String)]): Seq[(String, String)]", "member" : "laika.render.FOProperties.filterAttributes", "link" : "laika\/render\/FOProperties.html#filterAttributes(tagName:String,attributes:Seq[(String,String)]):Seq[(String,String)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/FOProperties.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/FOProperties.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/FOProperties.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/FOProperties.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/FOProperties.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/FOProperties.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/FOProperties.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/FOProperties.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/FOProperties.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/FOProperties.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/FOProperties.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/FOProperties.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/render\/FOProperties.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/FOProperties.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/FOProperties.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/FOProperties.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/FOProperties.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/FOProperties.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/FOProperties.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Mapping of XSL-FO tag names to their supported properties.", "trait" : "laika\/render\/FOProperties.html", "kind" : "trait"}, {"name" : "laika.render.FORenderer", "shortDescription" : "Default renderer implementation for the XSL-FO output format.", "object" : "laika\/render\/FORenderer$.html", "members_object" : [{"label" : "apply", "tail" : "(fmt: FOFormatter, element: Element): String", "member" : "laika.render.FORenderer.apply", "link" : "laika\/render\/FORenderer$.html#apply(fmt:laika.render.FOFormatter,element:laika.ast.Element):String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function2.toString", "link" : "laika\/render\/FORenderer$.html#toString():String", "kind" : "def"}, {"label" : "tupled", "tail" : "(): ((FOFormatter, Element)) ⇒ String", "member" : "scala.Function2.tupled", "link" : "laika\/render\/FORenderer$.html#tupled:((T1,T2))=>R", "kind" : "def"}, {"label" : "curried", "tail" : "(): (FOFormatter) ⇒ (Element) ⇒ String", "member" : "scala.Function2.curried", "link" : "laika\/render\/FORenderer$.html#curried:T1=>(T2=>R)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/FORenderer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/FORenderer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/FORenderer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/FORenderer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/FORenderer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/FORenderer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/FORenderer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/FORenderer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/FORenderer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/FORenderer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/FORenderer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/FORenderer$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/FORenderer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/FORenderer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/FORenderer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/FORenderer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/FORenderer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/FORenderer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.render.HTMLFormatter", "shortDescription" : "API for renderers that produce HTML output.", "object" : "laika\/render\/HTMLFormatter$.html", "members_object" : [{"label" : "apply", "tail" : "(context: RenderContext[HTMLFormatter]): HTMLFormatter", "member" : "laika.render.HTMLFormatter.apply", "link" : "laika\/render\/HTMLFormatter$.html#apply(context:laika.factory.RenderContext[laika.render.HTMLFormatter]):laika.render.HTMLFormatter", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "laika\/render\/HTMLFormatter$.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (HTMLFormatter) ⇒ A): (RenderContext[HTMLFormatter]) ⇒ A", "member" : "scala.Function1.andThen", "link" : "laika\/render\/HTMLFormatter$.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ RenderContext[HTMLFormatter]): (A) ⇒ HTMLFormatter", "member" : "scala.Function1.compose", "link" : "laika\/render\/HTMLFormatter$.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/HTMLFormatter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/HTMLFormatter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/HTMLFormatter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/HTMLFormatter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/HTMLFormatter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/HTMLFormatter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/HTMLFormatter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/HTMLFormatter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/HTMLFormatter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/HTMLFormatter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/HTMLFormatter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/HTMLFormatter$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/HTMLFormatter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/HTMLFormatter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/HTMLFormatter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/HTMLFormatter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/HTMLFormatter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/HTMLFormatter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "emptyElement", "tail" : "(tagName: String): String", "member" : "laika.render.HTMLFormatter.emptyElement", "link" : "laika\/render\/HTMLFormatter.html#emptyElement(tagName:String):String", "kind" : "def"}, {"label" : "emptyElement", "tail" : "(tagName: String, styleHint: StyleHint, attrs: (String, String)*): String", "member" : "laika.render.HTMLFormatter.emptyElement", "link" : "laika\/render\/HTMLFormatter.html#emptyElement(tagName:String,styleHint:HTMLFormatter.this.StyleHint,attrs:(String,String)*):String", "kind" : "def"}, {"label" : "attributes", "tail" : "(tag: String, styleHint: StyleHint, attrs: Seq[(String, String)]): String", "member" : "laika.render.HTMLFormatter.attributes", "link" : "laika\/render\/HTMLFormatter.html#attributes(tag:String,styleHint:HTMLFormatter.this.StyleHint,attrs:Seq[(String,String)]):String", "kind" : "def"}, {"label" : "withIndentation", "tail" : "(newIndentation: Indentation): HTMLFormatter", "member" : "laika.render.HTMLFormatter.withIndentation", "link" : "laika\/render\/HTMLFormatter.html#withIndentation(newIndentation:laika.render.Indentation):laika.render.HTMLFormatter", "kind" : "def"}, {"label" : "withChild", "tail" : "(element: Element): HTMLFormatter", "member" : "laika.render.HTMLFormatter.withChild", "link" : "laika\/render\/HTMLFormatter.html#withChild(element:laika.ast.Element):laika.render.HTMLFormatter", "kind" : "def"}, {"label" : "StyleHint", "tail" : "", "member" : "laika.render.HTMLFormatter.StyleHint", "link" : "laika\/render\/HTMLFormatter.html#StyleHint=laika.ast.Options", "kind" : "type"}, {"label" : "emptyTagClosingChar", "tail" : ": String", "member" : "laika.render.HTMLFormatter.emptyTagClosingChar", "link" : "laika\/render\/HTMLFormatter.html#emptyTagClosingChar:String", "kind" : "val"}, {"member" : "laika.render.HTMLFormatter#<init>", "error" : "unsupported entity"}, {"label" : "closeEmptyTags", "tail" : ": Boolean", "member" : "laika.render.HTMLFormatter.closeEmptyTags", "link" : "laika\/render\/HTMLFormatter.html#closeEmptyTags:Boolean", "kind" : "val"}, {"label" : "messageFilter", "tail" : ": MessageFilter", "member" : "laika.render.HTMLFormatter.messageFilter", "link" : "laika\/render\/HTMLFormatter.html#messageFilter:laika.ast.MessageFilter", "kind" : "val"}, {"label" : "indentation", "tail" : ": Indentation", "member" : "laika.render.HTMLFormatter.indentation", "link" : "laika\/render\/HTMLFormatter.html#indentation:laika.render.Indentation", "kind" : "val"}, {"label" : "path", "tail" : ": Path", "member" : "laika.render.HTMLFormatter.path", "link" : "laika\/render\/HTMLFormatter.html#path:laika.ast.Path", "kind" : "val"}, {"label" : "pathTranslator", "tail" : ": PathTranslator", "member" : "laika.render.HTMLFormatter.pathTranslator", "link" : "laika\/render\/HTMLFormatter.html#pathTranslator:laika.rewrite.nav.PathTranslator", "kind" : "val"}, {"label" : "parents", "tail" : ": List[Element]", "member" : "laika.render.HTMLFormatter.parents", "link" : "laika\/render\/HTMLFormatter.html#parents:List[laika.ast.Element]", "kind" : "val"}, {"label" : "currentElement", "tail" : ": Element", "member" : "laika.render.HTMLFormatter.currentElement", "link" : "laika\/render\/HTMLFormatter.html#currentElement:laika.ast.Element", "kind" : "val"}, {"label" : "renderChild", "tail" : ": (HTMLFormatter, Element) ⇒ String", "member" : "laika.render.HTMLFormatter.renderChild", "link" : "laika\/render\/HTMLFormatter.html#renderChild:(laika.render.HTMLFormatter,laika.ast.Element)=>String", "kind" : "val"}, {"label" : "internalLink", "tail" : "(path: Path): String", "member" : "laika.render.TagFormatter.internalLink", "link" : "laika\/render\/HTMLFormatter.html#internalLink(path:laika.ast.Path):String", "kind" : "def"}, {"label" : "internalLink", "tail" : "(path: RelativePath): String", "member" : "laika.render.TagFormatter.internalLink", "link" : "laika\/render\/HTMLFormatter.html#internalLink(path:laika.ast.RelativePath):String", "kind" : "def"}, {"label" : "attribute", "tail" : "(name: String, value: String): String", "member" : "laika.render.TagFormatter.attribute", "link" : "laika\/render\/HTMLFormatter.html#attribute(name:String,value:String):String", "kind" : "def"}, {"label" : "optAttributes", "tail" : "(attrs: (String, Option[String])*): Seq[(String, String)]", "member" : "laika.render.TagFormatter.optAttributes", "link" : "laika\/render\/HTMLFormatter.html#optAttributes(attrs:(String,Option[String])*):Seq[(String,String)]", "kind" : "def"}, {"label" : "attributes", "tail" : "(attrs: Seq[(String, String)]): String", "member" : "laika.render.TagFormatter.attributes", "link" : "laika\/render\/HTMLFormatter.html#attributes(attrs:Seq[(String,String)]):String", "kind" : "def"}, {"label" : "textElement", "tail" : "(tagName: String, styleHint: StyleHint, txt: String, attrs: (String, String)*): String", "member" : "laika.render.TagFormatter.textElement", "link" : "laika\/render\/HTMLFormatter.html#textElement(tagName:String,styleHint:TagFormatter.this.StyleHint,txt:String,attrs:(String,String)*):String", "kind" : "def"}, {"label" : "rawElement", "tail" : "(tagName: String, styleHint: StyleHint, content: String, attrs: (String, String)*): String", "member" : "laika.render.TagFormatter.rawElement", "link" : "laika\/render\/HTMLFormatter.html#rawElement(tagName:String,styleHint:TagFormatter.this.StyleHint,content:String,attrs:(String,String)*):String", "kind" : "def"}, {"label" : "indentedElement", "tail" : "(tagName: String, styleHint: StyleHint, content: Seq[Element], attrs: (String, String)*): String", "member" : "laika.render.TagFormatter.indentedElement", "link" : "laika\/render\/HTMLFormatter.html#indentedElement(tagName:String,styleHint:TagFormatter.this.StyleHint,content:Seq[laika.ast.Element],attrs:(String,String)*):String", "kind" : "def"}, {"label" : "element", "tail" : "(tagName: String, styleHint: StyleHint, content: Seq[Element], attrs: (String, String)*): String", "member" : "laika.render.TagFormatter.element", "link" : "laika\/render\/HTMLFormatter.html#element(tagName:String,styleHint:TagFormatter.this.StyleHint,content:Seq[laika.ast.Element],attrs:(String,String)*):String", "kind" : "def"}, {"label" : "comment", "tail" : "(content: String): String", "member" : "laika.render.TagFormatter.comment", "link" : "laika\/render\/HTMLFormatter.html#comment(content:String):String", "kind" : "def"}, {"label" : "text", "tail" : "(str: String): String", "member" : "laika.render.TagFormatter.text", "link" : "laika\/render\/HTMLFormatter.html#text(str:String):String", "kind" : "def"}, {"label" : "indentedChildren", "tail" : "(elements: Seq[Element]): String", "member" : "laika.render.BaseFormatter.indentedChildren", "link" : "laika\/render\/HTMLFormatter.html#indentedChildren(elements:Seq[laika.ast.Element]):String", "kind" : "def"}, {"label" : "childPerLine", "tail" : "(elements: Seq[Element]): String", "member" : "laika.render.BaseFormatter.childPerLine", "link" : "laika\/render\/HTMLFormatter.html#childPerLine(elements:Seq[laika.ast.Element]):String", "kind" : "def"}, {"label" : "child", "tail" : "(element: Element): String", "member" : "laika.render.BaseFormatter.child", "link" : "laika\/render\/HTMLFormatter.html#child(element:laika.ast.Element):String", "kind" : "def"}, {"label" : "children", "tail" : "(elements: Seq[Element]): String", "member" : "laika.render.BaseFormatter.children", "link" : "laika\/render\/HTMLFormatter.html#children(elements:Seq[laika.ast.Element]):String", "kind" : "def"}, {"label" : "forMessage", "tail" : "(message: RuntimeMessage)(whenEnabled: String): String", "member" : "laika.render.BaseFormatter.forMessage", "link" : "laika\/render\/HTMLFormatter.html#forMessage(message:laika.ast.RuntimeMessage)(whenEnabled:String):String", "kind" : "def"}, {"label" : "withMinIndentation", "tail" : "(minIndent: Int)(f: (HTMLFormatter) ⇒ String): String", "member" : "laika.render.BaseFormatter.withMinIndentation", "link" : "laika\/render\/HTMLFormatter.html#withMinIndentation(minIndent:Int)(f:Rep=>String):String", "kind" : "def"}, {"label" : "withoutIndentation", "tail" : "(f: (HTMLFormatter) ⇒ String): String", "member" : "laika.render.BaseFormatter.withoutIndentation", "link" : "laika\/render\/HTMLFormatter.html#withoutIndentation(f:Rep=>String):String", "kind" : "def"}, {"label" : "indented", "tail" : "(f: (HTMLFormatter) ⇒ String): String", "member" : "laika.render.BaseFormatter.indented", "link" : "laika\/render\/HTMLFormatter.html#indented(f:Rep=>String):String", "kind" : "def"}, {"label" : "newLine", "tail" : ": String", "member" : "laika.render.BaseFormatter.newLine", "link" : "laika\/render\/HTMLFormatter.html#newLine:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/HTMLFormatter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/HTMLFormatter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/HTMLFormatter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/HTMLFormatter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/HTMLFormatter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/HTMLFormatter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/HTMLFormatter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/HTMLFormatter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/HTMLFormatter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/HTMLFormatter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/HTMLFormatter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/HTMLFormatter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/HTMLFormatter.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/HTMLFormatter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/HTMLFormatter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/HTMLFormatter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/render\/HTMLFormatter.html", "kind" : "case class"}, {"name" : "laika.render.HTMLRenderer", "shortDescription" : "Default renderer implementation for the HTML output format.", "object" : "laika\/render\/HTMLRenderer$.html", "members_class" : [{"label" : "apply", "tail" : "(fmt: HTMLFormatter, element: Element): String", "member" : "laika.render.HTMLRenderer.apply", "link" : "laika\/render\/HTMLRenderer.html#apply(fmt:laika.render.HTMLFormatter,element:laika.ast.Element):String", "kind" : "def"}, {"member" : "laika.render.HTMLRenderer#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function2.toString", "link" : "laika\/render\/HTMLRenderer.html#toString():String", "kind" : "def"}, {"label" : "tupled", "tail" : "(): ((HTMLFormatter, Element)) ⇒ String", "member" : "scala.Function2.tupled", "link" : "laika\/render\/HTMLRenderer.html#tupled:((T1,T2))=>R", "kind" : "def"}, {"label" : "curried", "tail" : "(): (HTMLFormatter) ⇒ (Element) ⇒ String", "member" : "scala.Function2.curried", "link" : "laika\/render\/HTMLRenderer.html#curried:T1=>(T2=>R)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/HTMLRenderer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/HTMLRenderer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/HTMLRenderer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/HTMLRenderer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/HTMLRenderer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/HTMLRenderer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/HTMLRenderer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/HTMLRenderer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/HTMLRenderer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/HTMLRenderer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/HTMLRenderer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/HTMLRenderer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/HTMLRenderer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/HTMLRenderer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/HTMLRenderer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/HTMLRenderer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/HTMLRenderer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/HTMLRenderer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(fmt: HTMLFormatter, element: Element): String", "member" : "laika.render.HTMLRenderer.apply", "link" : "laika\/render\/HTMLRenderer$.html#apply(fmt:laika.render.HTMLFormatter,element:laika.ast.Element):String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function2.toString", "link" : "laika\/render\/HTMLRenderer$.html#toString():String", "kind" : "def"}, {"label" : "tupled", "tail" : "(): ((HTMLFormatter, Element)) ⇒ String", "member" : "scala.Function2.tupled", "link" : "laika\/render\/HTMLRenderer$.html#tupled:((T1,T2))=>R", "kind" : "def"}, {"label" : "curried", "tail" : "(): (HTMLFormatter) ⇒ (Element) ⇒ String", "member" : "scala.Function2.curried", "link" : "laika\/render\/HTMLRenderer$.html#curried:T1=>(T2=>R)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/HTMLRenderer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/HTMLRenderer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/HTMLRenderer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/HTMLRenderer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/HTMLRenderer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/HTMLRenderer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/HTMLRenderer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/HTMLRenderer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/HTMLRenderer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/HTMLRenderer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/HTMLRenderer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/HTMLRenderer$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/HTMLRenderer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/HTMLRenderer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/HTMLRenderer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/HTMLRenderer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/HTMLRenderer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/HTMLRenderer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/render\/HTMLRenderer.html", "kind" : "class"}, {"name" : "laika.render.Indentation", "shortDescription" : "Represents the current indentation level of a formatter instance.", "object" : "laika\/render\/Indentation$.html", "members_object" : [{"label" : "dotted", "tail" : ": Indentation", "member" : "laika.render.Indentation.dotted", "link" : "laika\/render\/Indentation$.html#dotted:laika.render.Indentation", "kind" : "val"}, {"label" : "default", "tail" : ": Indentation", "member" : "laika.render.Indentation.default", "link" : "laika\/render\/Indentation$.html#default:laika.render.Indentation", "kind" : "val"}, {"label" : "none", "tail" : ": Indentation", "member" : "laika.render.Indentation.none", "link" : "laika\/render\/Indentation$.html#none:laika.render.Indentation", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/Indentation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/Indentation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/Indentation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/Indentation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/Indentation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/Indentation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/Indentation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/Indentation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/Indentation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/Indentation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/Indentation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/Indentation$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/render\/Indentation$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/Indentation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/Indentation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/Indentation$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/Indentation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/Indentation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/Indentation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "nextLevel", "tail" : ": Indentation", "member" : "laika.render.Indentation.nextLevel", "link" : "laika\/render\/Indentation.html#nextLevel:laika.render.Indentation", "kind" : "lazy val"}, {"label" : "newLine", "tail" : ": String", "member" : "laika.render.Indentation.newLine", "link" : "laika\/render\/Indentation.html#newLine:String", "kind" : "val"}, {"member" : "laika.render.Indentation#<init>", "error" : "unsupported entity"}, {"label" : "dotted", "tail" : ": Boolean", "member" : "laika.render.Indentation.dotted", "link" : "laika\/render\/Indentation.html#dotted:Boolean", "kind" : "val"}, {"label" : "numSpaces", "tail" : ": Int", "member" : "laika.render.Indentation.numSpaces", "link" : "laika\/render\/Indentation.html#numSpaces:Int", "kind" : "val"}, {"label" : "currentLevel", "tail" : ": Int", "member" : "laika.render.Indentation.currentLevel", "link" : "laika\/render\/Indentation.html#currentLevel:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/Indentation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/Indentation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/Indentation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/Indentation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/Indentation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/Indentation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/Indentation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/Indentation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/Indentation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/Indentation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/Indentation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/Indentation.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/Indentation.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/Indentation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/Indentation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/Indentation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/render\/Indentation.html", "kind" : "case class"}, {"name" : "laika.render.TagFormatter", "shortDescription" : "Base type for formatters that produce tag-based output formats like XML or HTML.", "object" : "laika\/render\/TagFormatter$.html", "members_class" : [{"label" : "internalLink", "tail" : "(path: Path): String", "member" : "laika.render.TagFormatter.internalLink", "link" : "laika\/render\/TagFormatter.html#internalLink(path:laika.ast.Path):String", "kind" : "def"}, {"label" : "internalLink", "tail" : "(path: RelativePath): String", "member" : "laika.render.TagFormatter.internalLink", "link" : "laika\/render\/TagFormatter.html#internalLink(path:laika.ast.RelativePath):String", "kind" : "def"}, {"label" : "attribute", "tail" : "(name: String, value: String): String", "member" : "laika.render.TagFormatter.attribute", "link" : "laika\/render\/TagFormatter.html#attribute(name:String,value:String):String", "kind" : "def"}, {"label" : "optAttributes", "tail" : "(attrs: (String, Option[String])*): Seq[(String, String)]", "member" : "laika.render.TagFormatter.optAttributes", "link" : "laika\/render\/TagFormatter.html#optAttributes(attrs:(String,Option[String])*):Seq[(String,String)]", "kind" : "def"}, {"label" : "attributes", "tail" : "(attrs: Seq[(String, String)]): String", "member" : "laika.render.TagFormatter.attributes", "link" : "laika\/render\/TagFormatter.html#attributes(attrs:Seq[(String,String)]):String", "kind" : "def"}, {"label" : "emptyElement", "tail" : "(tagName: String): String", "member" : "laika.render.TagFormatter.emptyElement", "link" : "laika\/render\/TagFormatter.html#emptyElement(tagName:String):String", "kind" : "def"}, {"label" : "emptyElement", "tail" : "(tagName: String, styleHint: (TagFormatter.this)#StyleHint, attrs: (String, String)*): String", "member" : "laika.render.TagFormatter.emptyElement", "link" : "laika\/render\/TagFormatter.html#emptyElement(tagName:String,styleHint:TagFormatter.this.StyleHint,attrs:(String,String)*):String", "kind" : "def"}, {"label" : "textElement", "tail" : "(tagName: String, styleHint: (TagFormatter.this)#StyleHint, txt: String, attrs: (String, String)*): String", "member" : "laika.render.TagFormatter.textElement", "link" : "laika\/render\/TagFormatter.html#textElement(tagName:String,styleHint:TagFormatter.this.StyleHint,txt:String,attrs:(String,String)*):String", "kind" : "def"}, {"label" : "rawElement", "tail" : "(tagName: String, styleHint: (TagFormatter.this)#StyleHint, content: String, attrs: (String, String)*): String", "member" : "laika.render.TagFormatter.rawElement", "link" : "laika\/render\/TagFormatter.html#rawElement(tagName:String,styleHint:TagFormatter.this.StyleHint,content:String,attrs:(String,String)*):String", "kind" : "def"}, {"label" : "indentedElement", "tail" : "(tagName: String, styleHint: (TagFormatter.this)#StyleHint, content: Seq[Element], attrs: (String, String)*): String", "member" : "laika.render.TagFormatter.indentedElement", "link" : "laika\/render\/TagFormatter.html#indentedElement(tagName:String,styleHint:TagFormatter.this.StyleHint,content:Seq[laika.ast.Element],attrs:(String,String)*):String", "kind" : "def"}, {"label" : "element", "tail" : "(tagName: String, styleHint: (TagFormatter.this)#StyleHint, content: Seq[Element], attrs: (String, String)*): String", "member" : "laika.render.TagFormatter.element", "link" : "laika\/render\/TagFormatter.html#element(tagName:String,styleHint:TagFormatter.this.StyleHint,content:Seq[laika.ast.Element],attrs:(String,String)*):String", "kind" : "def"}, {"label" : "comment", "tail" : "(content: String): String", "member" : "laika.render.TagFormatter.comment", "link" : "laika\/render\/TagFormatter.html#comment(content:String):String", "kind" : "def"}, {"label" : "text", "tail" : "(str: String): String", "member" : "laika.render.TagFormatter.text", "link" : "laika\/render\/TagFormatter.html#text(str:String):String", "kind" : "def"}, {"member" : "laika.render.TagFormatter#<init>", "error" : "unsupported entity"}, {"label" : "indentedChildren", "tail" : "(elements: Seq[Element]): String", "member" : "laika.render.BaseFormatter.indentedChildren", "link" : "laika\/render\/TagFormatter.html#indentedChildren(elements:Seq[laika.ast.Element]):String", "kind" : "def"}, {"label" : "childPerLine", "tail" : "(elements: Seq[Element]): String", "member" : "laika.render.BaseFormatter.childPerLine", "link" : "laika\/render\/TagFormatter.html#childPerLine(elements:Seq[laika.ast.Element]):String", "kind" : "def"}, {"label" : "child", "tail" : "(element: Element): String", "member" : "laika.render.BaseFormatter.child", "link" : "laika\/render\/TagFormatter.html#child(element:laika.ast.Element):String", "kind" : "def"}, {"label" : "children", "tail" : "(elements: Seq[Element]): String", "member" : "laika.render.BaseFormatter.children", "link" : "laika\/render\/TagFormatter.html#children(elements:Seq[laika.ast.Element]):String", "kind" : "def"}, {"label" : "forMessage", "tail" : "(message: RuntimeMessage)(whenEnabled: String): String", "member" : "laika.render.BaseFormatter.forMessage", "link" : "laika\/render\/TagFormatter.html#forMessage(message:laika.ast.RuntimeMessage)(whenEnabled:String):String", "kind" : "def"}, {"label" : "withMinIndentation", "tail" : "(minIndent: Int)(f: (Rep) ⇒ String): String", "member" : "laika.render.BaseFormatter.withMinIndentation", "link" : "laika\/render\/TagFormatter.html#withMinIndentation(minIndent:Int)(f:Rep=>String):String", "kind" : "def"}, {"label" : "withoutIndentation", "tail" : "(f: (Rep) ⇒ String): String", "member" : "laika.render.BaseFormatter.withoutIndentation", "link" : "laika\/render\/TagFormatter.html#withoutIndentation(f:Rep=>String):String", "kind" : "def"}, {"label" : "indented", "tail" : "(f: (Rep) ⇒ String): String", "member" : "laika.render.BaseFormatter.indented", "link" : "laika\/render\/TagFormatter.html#indented(f:Rep=>String):String", "kind" : "def"}, {"label" : "newLine", "tail" : ": String", "member" : "laika.render.BaseFormatter.newLine", "link" : "laika\/render\/TagFormatter.html#newLine:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/TagFormatter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/TagFormatter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/TagFormatter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/TagFormatter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/TagFormatter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/TagFormatter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/TagFormatter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/TagFormatter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/TagFormatter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/TagFormatter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/TagFormatter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/TagFormatter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/render\/TagFormatter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/TagFormatter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/TagFormatter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/TagFormatter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/TagFormatter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/TagFormatter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/TagFormatter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "attributes", "tail" : "(tag: String, styleHint: (TagFormatter.this)#StyleHint, attrs: Seq[(String, String)]): String", "member" : "laika.render.TagFormatter.attributes", "link" : "laika\/render\/TagFormatter.html#attributes(tag:String,styleHint:TagFormatter.this.StyleHint,attrs:Seq[(String,String)]):String", "kind" : "abstract def"}, {"member" : "laika.render.TagFormatter.StyleHint", "error" : "unsupported entity"}, {"label" : "withIndentation", "tail" : "(newIndentation: Indentation): Rep", "member" : "laika.render.BaseFormatter.withIndentation", "link" : "laika\/render\/TagFormatter.html#withIndentation(newIndentation:laika.render.Indentation):Rep", "kind" : "abstract def"}, {"label" : "withChild", "tail" : "(element: Element): Rep", "member" : "laika.render.BaseFormatter.withChild", "link" : "laika\/render\/TagFormatter.html#withChild(element:laika.ast.Element):Rep", "kind" : "abstract def"}], "members_object" : [{"label" : "escape", "tail" : "(str: String, newLine: String): String", "member" : "laika.render.TagFormatter.escape", "link" : "laika\/render\/TagFormatter$.html#escape(str:String,newLine:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/TagFormatter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/TagFormatter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/TagFormatter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/TagFormatter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/TagFormatter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/TagFormatter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/TagFormatter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/TagFormatter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/TagFormatter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/TagFormatter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/TagFormatter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/TagFormatter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/render\/TagFormatter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/TagFormatter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/TagFormatter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/TagFormatter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/TagFormatter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/TagFormatter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/TagFormatter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/render\/TagFormatter.html", "kind" : "class"}, {"name" : "laika.render.TextFormatter", "shortDescription" : "API for renderers that produce text output.", "object" : "laika\/render\/TextFormatter$.html", "members_object" : [{"label" : "apply", "tail" : "(context: RenderContext[TextFormatter]): TextFormatter", "member" : "laika.render.TextFormatter.apply", "link" : "laika\/render\/TextFormatter$.html#apply(context:laika.factory.RenderContext[laika.render.TextFormatter]):laika.render.TextFormatter", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "laika\/render\/TextFormatter$.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (TextFormatter) ⇒ A): (RenderContext[TextFormatter]) ⇒ A", "member" : "scala.Function1.andThen", "link" : "laika\/render\/TextFormatter$.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ RenderContext[TextFormatter]): (A) ⇒ TextFormatter", "member" : "scala.Function1.compose", "link" : "laika\/render\/TextFormatter$.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/TextFormatter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/TextFormatter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/TextFormatter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/TextFormatter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/TextFormatter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/TextFormatter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/TextFormatter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/TextFormatter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/TextFormatter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/TextFormatter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/TextFormatter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/TextFormatter$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/TextFormatter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/TextFormatter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/TextFormatter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/TextFormatter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/TextFormatter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/TextFormatter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withIndentation", "tail" : "(newIndentation: Indentation): TextFormatter", "member" : "laika.render.TextFormatter.withIndentation", "link" : "laika\/render\/TextFormatter.html#withIndentation(newIndentation:laika.render.Indentation):laika.render.TextFormatter", "kind" : "def"}, {"label" : "withChild", "tail" : "(element: Element): TextFormatter", "member" : "laika.render.TextFormatter.withChild", "link" : "laika\/render\/TextFormatter.html#withChild(element:laika.ast.Element):laika.render.TextFormatter", "kind" : "def"}, {"member" : "laika.render.TextFormatter#<init>", "error" : "unsupported entity"}, {"label" : "indentation", "tail" : ": Indentation", "member" : "laika.render.TextFormatter.indentation", "link" : "laika\/render\/TextFormatter.html#indentation:laika.render.Indentation", "kind" : "val"}, {"label" : "parents", "tail" : ": List[Element]", "member" : "laika.render.TextFormatter.parents", "link" : "laika\/render\/TextFormatter.html#parents:List[laika.ast.Element]", "kind" : "val"}, {"label" : "currentElement", "tail" : ": Element", "member" : "laika.render.TextFormatter.currentElement", "link" : "laika\/render\/TextFormatter.html#currentElement:laika.ast.Element", "kind" : "val"}, {"label" : "renderChild", "tail" : ": (TextFormatter, Element) ⇒ String", "member" : "laika.render.TextFormatter.renderChild", "link" : "laika\/render\/TextFormatter.html#renderChild:(laika.render.TextFormatter,laika.ast.Element)=>String", "kind" : "val"}, {"label" : "indentedChildren", "tail" : "(elements: Seq[Element]): String", "member" : "laika.render.BaseFormatter.indentedChildren", "link" : "laika\/render\/TextFormatter.html#indentedChildren(elements:Seq[laika.ast.Element]):String", "kind" : "def"}, {"label" : "childPerLine", "tail" : "(elements: Seq[Element]): String", "member" : "laika.render.BaseFormatter.childPerLine", "link" : "laika\/render\/TextFormatter.html#childPerLine(elements:Seq[laika.ast.Element]):String", "kind" : "def"}, {"label" : "child", "tail" : "(element: Element): String", "member" : "laika.render.BaseFormatter.child", "link" : "laika\/render\/TextFormatter.html#child(element:laika.ast.Element):String", "kind" : "def"}, {"label" : "children", "tail" : "(elements: Seq[Element]): String", "member" : "laika.render.BaseFormatter.children", "link" : "laika\/render\/TextFormatter.html#children(elements:Seq[laika.ast.Element]):String", "kind" : "def"}, {"label" : "forMessage", "tail" : "(message: RuntimeMessage)(whenEnabled: String): String", "member" : "laika.render.BaseFormatter.forMessage", "link" : "laika\/render\/TextFormatter.html#forMessage(message:laika.ast.RuntimeMessage)(whenEnabled:String):String", "kind" : "def"}, {"label" : "withMinIndentation", "tail" : "(minIndent: Int)(f: (TextFormatter) ⇒ String): String", "member" : "laika.render.BaseFormatter.withMinIndentation", "link" : "laika\/render\/TextFormatter.html#withMinIndentation(minIndent:Int)(f:Rep=>String):String", "kind" : "def"}, {"label" : "withoutIndentation", "tail" : "(f: (TextFormatter) ⇒ String): String", "member" : "laika.render.BaseFormatter.withoutIndentation", "link" : "laika\/render\/TextFormatter.html#withoutIndentation(f:Rep=>String):String", "kind" : "def"}, {"label" : "indented", "tail" : "(f: (TextFormatter) ⇒ String): String", "member" : "laika.render.BaseFormatter.indented", "link" : "laika\/render\/TextFormatter.html#indented(f:Rep=>String):String", "kind" : "def"}, {"label" : "newLine", "tail" : ": String", "member" : "laika.render.BaseFormatter.newLine", "link" : "laika\/render\/TextFormatter.html#newLine:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/TextFormatter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/TextFormatter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/TextFormatter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/TextFormatter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/TextFormatter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/TextFormatter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/TextFormatter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/TextFormatter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/TextFormatter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/TextFormatter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/TextFormatter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/TextFormatter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/TextFormatter.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/TextFormatter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/TextFormatter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/TextFormatter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/render\/TextFormatter.html", "kind" : "case class"}, {"name" : "laika.render.XHTMLFormatter", "shortDescription" : "Default factory for XHTMLFormatters, based on a provided RenderContext.", "object" : "laika\/render\/XHTMLFormatter$.html", "members_object" : [{"label" : "apply", "tail" : "(context: RenderContext[HTMLFormatter]): HTMLFormatter", "member" : "laika.render.XHTMLFormatter.apply", "link" : "laika\/render\/XHTMLFormatter$.html#apply(context:laika.factory.RenderContext[laika.render.HTMLFormatter]):laika.render.HTMLFormatter", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "laika\/render\/XHTMLFormatter$.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (HTMLFormatter) ⇒ A): (RenderContext[HTMLFormatter]) ⇒ A", "member" : "scala.Function1.andThen", "link" : "laika\/render\/XHTMLFormatter$.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ RenderContext[HTMLFormatter]): (A) ⇒ HTMLFormatter", "member" : "scala.Function1.compose", "link" : "laika\/render\/XHTMLFormatter$.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/XHTMLFormatter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/XHTMLFormatter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/XHTMLFormatter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/XHTMLFormatter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/XHTMLFormatter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/XHTMLFormatter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/XHTMLFormatter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/XHTMLFormatter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/XHTMLFormatter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/XHTMLFormatter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/XHTMLFormatter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/XHTMLFormatter$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/XHTMLFormatter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/XHTMLFormatter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/XHTMLFormatter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/XHTMLFormatter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/XHTMLFormatter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/XHTMLFormatter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "laika.rst.std" : [{"name" : "laika.rst.std.StandardBlockDirectives", "shortDescription" : "Defines all supported standard block directives of the reStructuredText reference parser.", "members_class" : [{"label" : "blockDirectives", "tail" : ": List[Directive[Block]]", "member" : "laika.rst.std.StandardBlockDirectives.blockDirectives", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#blockDirectives:List[laika.rst.ext.Directives.Directive[laika.ast.Block]]", "kind" : "lazy val"}, {"label" : "rawDirective", "tail" : ": Directive[Block]", "member" : "laika.rst.std.StandardBlockDirectives.rawDirective", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#rawDirective:laika.rst.ext.Directives.Directive[laika.ast.Block]", "kind" : "lazy val"}, {"label" : "figure", "tail" : "(p: RecursiveParsers): DirectivePartBuilder[Block]", "member" : "laika.rst.std.StandardBlockDirectives.figure", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#figure(p:laika.parse.markup.RecursiveParsers):laika.rst.ext.Directives.DirectivePartBuilder[laika.ast.Block]", "kind" : "def"}, {"label" : "imageBlock", "tail" : "(p: RecursiveParsers): DirectivePartBuilder[Block]", "member" : "laika.rst.std.StandardBlockDirectives.imageBlock", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#imageBlock(p:laika.parse.markup.RecursiveParsers):laika.rst.ext.Directives.DirectivePartBuilder[laika.ast.Block]", "kind" : "def"}, {"label" : "code", "tail" : "(p: RecursiveParsers): DirectivePartBuilder[Block]", "member" : "laika.rst.std.StandardBlockDirectives.code", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#code(p:laika.parse.markup.RecursiveParsers):laika.rst.ext.Directives.DirectivePartBuilder[laika.ast.Block]", "kind" : "def"}, {"label" : "table", "tail" : "(p: RecursiveParsers): DirectivePartBuilder[Block]", "member" : "laika.rst.std.StandardBlockDirectives.table", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#table(p:laika.parse.markup.RecursiveParsers):laika.rst.ext.Directives.DirectivePartBuilder[laika.ast.Block]", "kind" : "def"}, {"label" : "parsedLiteral", "tail" : ": DirectivePartBuilder[Block]", "member" : "laika.rst.std.StandardBlockDirectives.parsedLiteral", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#parsedLiteral:laika.rst.ext.Directives.DirectivePartBuilder[laika.ast.Block]", "kind" : "lazy val"}, {"label" : "quotedBlock", "tail" : "(style: String): DirectivePartBuilder[Block]", "member" : "laika.rst.std.StandardBlockDirectives.quotedBlock", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#quotedBlock(style:String):laika.rst.ext.Directives.DirectivePartBuilder[laika.ast.Block]", "kind" : "def"}, {"label" : "include", "tail" : ": DirectivePartBuilder[Block]", "member" : "laika.rst.std.StandardBlockDirectives.include", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#include:laika.rst.ext.Directives.DirectivePartBuilder[laika.ast.Block]", "kind" : "lazy val"}, {"label" : "contents", "tail" : ": DirectivePartBuilder[Block]", "member" : "laika.rst.std.StandardBlockDirectives.contents", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#contents:laika.rst.ext.Directives.DirectivePartBuilder[laika.ast.Block]", "kind" : "lazy val"}, {"label" : "sectnum", "tail" : ": DirectivePartBuilder[Block]", "member" : "laika.rst.std.StandardBlockDirectives.sectnum", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#sectnum:laika.rst.ext.Directives.DirectivePartBuilder[laika.ast.Block]", "kind" : "lazy val"}, {"label" : "footer", "tail" : ": DirectivePartBuilder[Block]", "member" : "laika.rst.std.StandardBlockDirectives.footer", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#footer:laika.rst.ext.Directives.DirectivePartBuilder[laika.ast.Block]", "kind" : "lazy val"}, {"label" : "header", "tail" : ": DirectivePartBuilder[Block]", "member" : "laika.rst.std.StandardBlockDirectives.header", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#header:laika.rst.ext.Directives.DirectivePartBuilder[laika.ast.Block]", "kind" : "lazy val"}, {"label" : "meta", "tail" : ": DirectivePartBuilder[Block]", "member" : "laika.rst.std.StandardBlockDirectives.meta", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#meta:laika.rst.ext.Directives.DirectivePartBuilder[laika.ast.Block]", "kind" : "lazy val"}, {"label" : "titleDirective", "tail" : ": DirectivePartBuilder[EmbeddedConfigValue]", "member" : "laika.rst.std.StandardBlockDirectives.titleDirective", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#titleDirective:laika.rst.ext.Directives.DirectivePartBuilder[laika.ast.EmbeddedConfigValue]", "kind" : "lazy val"}, {"label" : "sidebar", "tail" : "(p: RecursiveParsers): DirectivePartBuilder[Block]", "member" : "laika.rst.std.StandardBlockDirectives.sidebar", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#sidebar(p:laika.parse.markup.RecursiveParsers):laika.rst.ext.Directives.DirectivePartBuilder[laika.ast.Block]", "kind" : "def"}, {"label" : "rubric", "tail" : ": DirectivePartBuilder[Block]", "member" : "laika.rst.std.StandardBlockDirectives.rubric", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#rubric:laika.rst.ext.Directives.DirectivePartBuilder[laika.ast.Block]", "kind" : "lazy val"}, {"label" : "topic", "tail" : ": DirectivePartBuilder[Block]", "member" : "laika.rst.std.StandardBlockDirectives.topic", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#topic:laika.rst.ext.Directives.DirectivePartBuilder[laika.ast.Block]", "kind" : "lazy val"}, {"label" : "admonition", "tail" : "(style: String, title: String): DirectivePartBuilder[Block]", "member" : "laika.rst.std.StandardBlockDirectives.admonition", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#admonition(style:String,title:String):laika.rst.ext.Directives.DirectivePartBuilder[laika.ast.Block]", "kind" : "def"}, {"label" : "genericAdmonition", "tail" : ": DirectivePartBuilder[Block]", "member" : "laika.rst.std.StandardBlockDirectives.genericAdmonition", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#genericAdmonition:laika.rst.ext.Directives.DirectivePartBuilder[laika.ast.Block]", "kind" : "lazy val"}, {"label" : "container", "tail" : ": DirectivePartBuilder[Block]", "member" : "laika.rst.std.StandardBlockDirectives.container", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#container:laika.rst.ext.Directives.DirectivePartBuilder[laika.ast.Block]", "kind" : "lazy val"}, {"label" : "compound", "tail" : ": DirectivePartBuilder[Block]", "member" : "laika.rst.std.StandardBlockDirectives.compound", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#compound:laika.rst.ext.Directives.DirectivePartBuilder[laika.ast.Block]", "kind" : "lazy val"}, {"member" : "laika.rst.std.StandardBlockDirectives#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/std\/StandardBlockDirectives.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/std\/StandardBlockDirectives.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/rst\/std\/StandardBlockDirectives.html", "kind" : "class"}, {"name" : "laika.rst.std.StandardDirectiveParsers", "shortDescription" : "Defines the custom argument and body parsers for the standard directives.", "object" : "laika\/rst\/std\/StandardDirectiveParsers$.html", "members_object" : [{"label" : "unicode", "tail" : "(input: SourceFragment): Either[String, String]", "member" : "laika.rst.std.StandardDirectiveParsers.unicode", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html#unicode(input:laika.parse.SourceFragment):Either[String,String]", "kind" : "def"}, {"label" : "target", "tail" : "(p: RecursiveParsers)(input: SourceFragment): Either[String, Span]", "member" : "laika.rst.std.StandardDirectiveParsers.target", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html#target(p:laika.parse.markup.RecursiveParsers)(input:laika.parse.SourceFragment):Either[String,laika.ast.Span]", "kind" : "def"}, {"label" : "captionAndLegend", "tail" : "(p: RecursiveParsers)(input: SourceFragment): Either[String, (Seq[Span], Seq[Block])]", "member" : "laika.rst.std.StandardDirectiveParsers.captionAndLegend", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html#captionAndLegend(p:laika.parse.markup.RecursiveParsers)(input:laika.parse.SourceFragment):Either[String,(Seq[laika.ast.Span],Seq[laika.ast.Block])]", "kind" : "def"}, {"label" : "table", "tail" : "(p: RecursiveParsers)(input: SourceFragment): Either[String, Block]", "member" : "laika.rst.std.StandardDirectiveParsers.table", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html#table(p:laika.parse.markup.RecursiveParsers)(input:laika.parse.SourceFragment):Either[String,laika.ast.Block]", "kind" : "def"}, {"label" : "standardSpans", "tail" : "(p: RecursiveParsers)(input: SourceFragment): Either[String, Seq[Span]]", "member" : "laika.rst.std.StandardDirectiveParsers.standardSpans", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html#standardSpans(p:laika.parse.markup.RecursiveParsers)(input:laika.parse.SourceFragment):Either[String,Seq[laika.ast.Span]]", "kind" : "def"}, {"label" : "parseDirectivePart", "tail" : "(parser: RecursiveSpanParser, source: SourceFragment): Either[String, Seq[Span]]", "member" : "laika.rst.std.StandardDirectiveParsers.parseDirectivePart", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html#parseDirectivePart(parser:laika.parse.markup.RecursiveSpanParser,source:laika.parse.SourceFragment):Either[String,Seq[laika.ast.Span]]", "kind" : "def"}, {"label" : "parseDirectivePart", "tail" : "(parser: Parser[T], source: SourceFragment): Either[String, T]", "member" : "laika.rst.std.StandardDirectiveParsers.parseDirectivePart", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html#parseDirectivePart[T](parser:laika.parse.Parser[T],source:laika.parse.SourceFragment):Either[String,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/std\/StandardDirectiveParsers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.rst.std.StandardDirectiveParts", "shortDescription" : "", "object" : "laika\/rst\/std\/StandardDirectiveParts$.html", "members_object" : [{"label" : "ImageResolver", "tail" : "", "member" : "laika.rst.std.StandardDirectiveParts.ImageResolver", "link" : "laika\/rst\/std\/StandardDirectiveParts$.html#ImageResolverextendsElementwithSpanResolverwithProductwithSerializable", "kind" : "case class"}, {"label" : "image", "tail" : "(p: RecursiveParsers): DirectivePartBuilder[Span]", "member" : "laika.rst.std.StandardDirectiveParts.image", "link" : "laika\/rst\/std\/StandardDirectiveParts$.html#image(p:laika.parse.markup.RecursiveParsers):laika.rst.ext.Directives.DirectivePartBuilder[laika.ast.Span]", "kind" : "def"}, {"label" : "toOptions", "tail" : "(id: Option[String], styles: Option[String]): Options", "member" : "laika.rst.std.StandardDirectiveParts.toOptions", "link" : "laika\/rst\/std\/StandardDirectiveParts$.html#toOptions(id:Option[String],styles:Option[String]):laika.ast.Options", "kind" : "def"}, {"label" : "stdOpt", "tail" : ": DirectivePartBuilder[Options]", "member" : "laika.rst.std.StandardDirectiveParts.stdOpt", "link" : "laika\/rst\/std\/StandardDirectiveParts$.html#stdOpt:laika.rst.ext.Directives.DirectivePartBuilder[laika.ast.Options]", "kind" : "val"}, {"label" : "classOpt", "tail" : ": DirectivePartBuilder[Option[String]]", "member" : "laika.rst.std.StandardDirectiveParts.classOpt", "link" : "laika\/rst\/std\/StandardDirectiveParts$.html#classOpt:laika.rst.ext.Directives.DirectivePartBuilder[Option[String]]", "kind" : "val"}, {"label" : "nameOpt", "tail" : ": DirectivePartBuilder[Option[String]]", "member" : "laika.rst.std.StandardDirectiveParts.nameOpt", "link" : "laika\/rst\/std\/StandardDirectiveParts$.html#nameOpt:laika.rst.ext.Directives.DirectivePartBuilder[Option[String]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/std\/StandardDirectiveParts$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/std\/StandardDirectiveParts$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/std\/StandardDirectiveParts$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/std\/StandardDirectiveParts$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/std\/StandardDirectiveParts$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/std\/StandardDirectiveParts$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/std\/StandardDirectiveParts$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/std\/StandardDirectiveParts$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/std\/StandardDirectiveParts$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/std\/StandardDirectiveParts$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/std\/StandardDirectiveParts$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/std\/StandardDirectiveParts$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/std\/StandardDirectiveParts$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/std\/StandardDirectiveParts$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/std\/StandardDirectiveParts$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/std\/StandardDirectiveParts$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/std\/StandardDirectiveParts$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/std\/StandardDirectiveParts$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/std\/StandardDirectiveParts$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.rst.std.StandardSpanDirectives", "shortDescription" : "Defines all supported standard span directives of the reStructuredText reference parser.", "members_class" : [{"label" : "spanDirectives", "tail" : ": List[Directive[Span]]", "member" : "laika.rst.std.StandardSpanDirectives.spanDirectives", "link" : "laika\/rst\/std\/StandardSpanDirectives.html#spanDirectives:List[laika.rst.ext.Directives.Directive[laika.ast.Span]]", "kind" : "lazy val"}, {"label" : "date", "tail" : ": DirectivePartBuilder[Span]", "member" : "laika.rst.std.StandardSpanDirectives.date", "link" : "laika\/rst\/std\/StandardSpanDirectives.html#date:laika.rst.ext.Directives.DirectivePartBuilder[laika.ast.Span]", "kind" : "lazy val"}, {"label" : "unicode", "tail" : ": DirectivePartBuilder[Span]", "member" : "laika.rst.std.StandardSpanDirectives.unicode", "link" : "laika\/rst\/std\/StandardSpanDirectives.html#unicode:laika.rst.ext.Directives.DirectivePartBuilder[laika.ast.Span]", "kind" : "lazy val"}, {"label" : "replace", "tail" : ": DirectivePartBuilder[Span]", "member" : "laika.rst.std.StandardSpanDirectives.replace", "link" : "laika\/rst\/std\/StandardSpanDirectives.html#replace:laika.rst.ext.Directives.DirectivePartBuilder[laika.ast.Span]", "kind" : "lazy val"}, {"member" : "laika.rst.std.StandardSpanDirectives#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/std\/StandardSpanDirectives.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/std\/StandardSpanDirectives.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/std\/StandardSpanDirectives.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/std\/StandardSpanDirectives.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/std\/StandardSpanDirectives.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/std\/StandardSpanDirectives.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/std\/StandardSpanDirectives.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/std\/StandardSpanDirectives.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/std\/StandardSpanDirectives.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/std\/StandardSpanDirectives.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/std\/StandardSpanDirectives.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/std\/StandardSpanDirectives.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/std\/StandardSpanDirectives.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/std\/StandardSpanDirectives.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/std\/StandardSpanDirectives.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/std\/StandardSpanDirectives.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/std\/StandardSpanDirectives.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/std\/StandardSpanDirectives.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/std\/StandardSpanDirectives.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/rst\/std\/StandardSpanDirectives.html", "kind" : "class"}, {"name" : "laika.rst.std.StandardTextRoles", "shortDescription" : "Defines all supported standard text roles of the reStructuredText reference parser.", "members_class" : [{"label" : "allRoles", "tail" : ": List[TextRole]", "member" : "laika.rst.std.StandardTextRoles.allRoles", "link" : "laika\/rst\/std\/StandardTextRoles.html#allRoles:List[laika.rst.ext.TextRoles.TextRole]", "kind" : "lazy val"}, {"label" : "rawTextRole", "tail" : ": TextRole", "member" : "laika.rst.std.StandardTextRoles.rawTextRole", "link" : "laika\/rst\/std\/StandardTextRoles.html#rawTextRole:laika.rst.ext.TextRoles.TextRole", "kind" : "lazy val"}, {"label" : "codeSpan", "tail" : ": TextRole", "member" : "laika.rst.std.StandardTextRoles.codeSpan", "link" : "laika\/rst\/std\/StandardTextRoles.html#codeSpan:laika.rst.ext.TextRoles.TextRole", "kind" : "lazy val"}, {"label" : "title", "tail" : ": TextRole", "member" : "laika.rst.std.StandardTextRoles.title", "link" : "laika\/rst\/std\/StandardTextRoles.html#title:laika.rst.ext.TextRoles.TextRole", "kind" : "lazy val"}, {"label" : "titleRef", "tail" : ": TextRole", "member" : "laika.rst.std.StandardTextRoles.titleRef", "link" : "laika\/rst\/std\/StandardTextRoles.html#titleRef:laika.rst.ext.TextRoles.TextRole", "kind" : "lazy val"}, {"label" : "sup", "tail" : ": TextRole", "member" : "laika.rst.std.StandardTextRoles.sup", "link" : "laika\/rst\/std\/StandardTextRoles.html#sup:laika.rst.ext.TextRoles.TextRole", "kind" : "lazy val"}, {"label" : "sub", "tail" : ": TextRole", "member" : "laika.rst.std.StandardTextRoles.sub", "link" : "laika\/rst\/std\/StandardTextRoles.html#sub:laika.rst.ext.TextRoles.TextRole", "kind" : "lazy val"}, {"label" : "superscript", "tail" : ": TextRole", "member" : "laika.rst.std.StandardTextRoles.superscript", "link" : "laika\/rst\/std\/StandardTextRoles.html#superscript:laika.rst.ext.TextRoles.TextRole", "kind" : "lazy val"}, {"label" : "subscript", "tail" : ": TextRole", "member" : "laika.rst.std.StandardTextRoles.subscript", "link" : "laika\/rst\/std\/StandardTextRoles.html#subscript:laika.rst.ext.TextRoles.TextRole", "kind" : "lazy val"}, {"label" : "literal", "tail" : ": TextRole", "member" : "laika.rst.std.StandardTextRoles.literal", "link" : "laika\/rst\/std\/StandardTextRoles.html#literal:laika.rst.ext.TextRoles.TextRole", "kind" : "lazy val"}, {"label" : "strong", "tail" : ": TextRole", "member" : "laika.rst.std.StandardTextRoles.strong", "link" : "laika\/rst\/std\/StandardTextRoles.html#strong:laika.rst.ext.TextRoles.TextRole", "kind" : "lazy val"}, {"label" : "emphasis", "tail" : ": TextRole", "member" : "laika.rst.std.StandardTextRoles.emphasis", "link" : "laika\/rst\/std\/StandardTextRoles.html#emphasis:laika.rst.ext.TextRoles.TextRole", "kind" : "lazy val"}, {"member" : "laika.rst.std.StandardTextRoles#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/std\/StandardTextRoles.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/std\/StandardTextRoles.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/std\/StandardTextRoles.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/std\/StandardTextRoles.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/std\/StandardTextRoles.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/std\/StandardTextRoles.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/std\/StandardTextRoles.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/std\/StandardTextRoles.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/std\/StandardTextRoles.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/std\/StandardTextRoles.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/std\/StandardTextRoles.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/std\/StandardTextRoles.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/std\/StandardTextRoles.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/std\/StandardTextRoles.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/std\/StandardTextRoles.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/std\/StandardTextRoles.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/std\/StandardTextRoles.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/std\/StandardTextRoles.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/std\/StandardTextRoles.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/rst\/std\/StandardTextRoles.html", "kind" : "class"}], "laika.rewrite" : [{"name" : "laika.rewrite.DefaultTemplatePath", "shortDescription" : "Provides the paths for default templates for all formats.", "object" : "laika\/rewrite\/DefaultTemplatePath$.html", "members_object" : [{"label" : "forFO", "tail" : "(): Path", "member" : "laika.rewrite.DefaultTemplatePath.forFO", "link" : "laika\/rewrite\/DefaultTemplatePath$.html#forFO:laika.ast.Path", "kind" : "def"}, {"label" : "forEPUB", "tail" : "(): Path", "member" : "laika.rewrite.DefaultTemplatePath.forEPUB", "link" : "laika\/rewrite\/DefaultTemplatePath$.html#forEPUB:laika.ast.Path", "kind" : "def"}, {"label" : "forHTML", "tail" : "(): Path", "member" : "laika.rewrite.DefaultTemplatePath.forHTML", "link" : "laika\/rewrite\/DefaultTemplatePath$.html#forHTML:laika.ast.Path", "kind" : "def"}, {"label" : "forSuffix", "tail" : "(suffix: String): Path", "member" : "laika.rewrite.DefaultTemplatePath.forSuffix", "link" : "laika\/rewrite\/DefaultTemplatePath$.html#forSuffix(suffix:String):laika.ast.Path", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/DefaultTemplatePath$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/DefaultTemplatePath$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/DefaultTemplatePath$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/DefaultTemplatePath$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/DefaultTemplatePath$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/DefaultTemplatePath$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/DefaultTemplatePath$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/DefaultTemplatePath$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/DefaultTemplatePath$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/DefaultTemplatePath$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/DefaultTemplatePath$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/DefaultTemplatePath$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/DefaultTemplatePath$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/DefaultTemplatePath$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/DefaultTemplatePath$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/DefaultTemplatePath$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/DefaultTemplatePath$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/DefaultTemplatePath$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/DefaultTemplatePath$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.rewrite.ReferenceResolver", "shortDescription" : "A resolver for context references in templates or markup documents.", "object" : "laika\/rewrite\/ReferenceResolver$.html", "members_object" : [{"label" : "forDocument", "tail" : "(document: Document, parent: TreeCursor, config: Config, position: TreePosition): ReferenceResolver", "member" : "laika.rewrite.ReferenceResolver.forDocument", "link" : "laika\/rewrite\/ReferenceResolver$.html#forDocument(document:laika.ast.Document,parent:laika.ast.TreeCursor,config:laika.config.Config,position:laika.ast.TreePosition):laika.rewrite.ReferenceResolver", "kind" : "def"}, {"label" : "CursorKeys", "tail" : "", "member" : "laika.rewrite.ReferenceResolver.CursorKeys", "link" : "laika\/rewrite\/ReferenceResolver$.html#CursorKeys", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/ReferenceResolver$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/ReferenceResolver$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/ReferenceResolver$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/ReferenceResolver$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/ReferenceResolver$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/ReferenceResolver$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/ReferenceResolver$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/ReferenceResolver$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/ReferenceResolver$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/ReferenceResolver$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/ReferenceResolver$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/ReferenceResolver$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/ReferenceResolver$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/ReferenceResolver$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/ReferenceResolver$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/ReferenceResolver$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/ReferenceResolver$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/ReferenceResolver$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/ReferenceResolver$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "resolve", "tail" : "(key: Key): ConfigResult[Option[ConfigValue]]", "member" : "laika.rewrite.ReferenceResolver.resolve", "link" : "laika\/rewrite\/ReferenceResolver.html#resolve(key:laika.config.Key):laika.config.Config.ConfigResult[Option[laika.config.ConfigValue]]", "kind" : "def"}, {"member" : "laika.rewrite.ReferenceResolver#<init>", "error" : "unsupported entity"}, {"label" : "config", "tail" : ": Config", "member" : "laika.rewrite.ReferenceResolver.config", "link" : "laika\/rewrite\/ReferenceResolver.html#config:laika.config.Config", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/ReferenceResolver.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/ReferenceResolver.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/ReferenceResolver.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/ReferenceResolver.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/ReferenceResolver.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/ReferenceResolver.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/ReferenceResolver.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/ReferenceResolver.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/ReferenceResolver.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/ReferenceResolver.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/ReferenceResolver.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/ReferenceResolver.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/ReferenceResolver.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/ReferenceResolver.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/ReferenceResolver.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/ReferenceResolver.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/ReferenceResolver.html", "kind" : "case class"}, {"name" : "laika.rewrite.TemplateContext", "shortDescription" : "", "object" : "laika\/rewrite\/TemplateContext$.html", "members_object" : [{"label" : "apply", "tail" : "(format: String): TemplateContext", "member" : "laika.rewrite.TemplateContext.apply", "link" : "laika\/rewrite\/TemplateContext$.html#apply(format:String):laika.rewrite.TemplateContext", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/TemplateContext$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/TemplateContext$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/TemplateContext$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/TemplateContext$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/TemplateContext$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/TemplateContext$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/TemplateContext$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/TemplateContext$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/TemplateContext$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/TemplateContext$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/TemplateContext$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/TemplateContext$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/TemplateContext$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/TemplateContext$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/TemplateContext$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/TemplateContext$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/TemplateContext$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/TemplateContext$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/TemplateContext$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "laika.rewrite.TemplateContext#<init>", "error" : "unsupported entity"}, {"label" : "finalFormat", "tail" : ": String", "member" : "laika.rewrite.TemplateContext.finalFormat", "link" : "laika\/rewrite\/TemplateContext.html#finalFormat:String", "kind" : "val"}, {"label" : "templateSuffix", "tail" : ": String", "member" : "laika.rewrite.TemplateContext.templateSuffix", "link" : "laika\/rewrite\/TemplateContext.html#templateSuffix:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/TemplateContext.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/TemplateContext.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/TemplateContext.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/TemplateContext.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/TemplateContext.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/TemplateContext.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/TemplateContext.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/TemplateContext.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/TemplateContext.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/TemplateContext.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/TemplateContext.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/TemplateContext.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/TemplateContext.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/TemplateContext.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/TemplateContext.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/TemplateContext.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/TemplateContext.html", "kind" : "case class"}, {"name" : "laika.rewrite.TemplateRewriter", "members_trait" : [{"label" : "rewriteRules", "tail" : "(cursor: DocumentCursor): RewriteRules", "member" : "laika.rewrite.TemplateRewriter.rewriteRules", "link" : "laika\/rewrite\/TemplateRewriter.html#rewriteRules(cursor:laika.ast.DocumentCursor):laika.ast.RewriteRules", "kind" : "def"}, {"label" : "applyTemplate", "tail" : "(cursor: DocumentCursor, template: TemplateDocument): Either[ConfigError, Document]", "member" : "laika.rewrite.TemplateRewriter.applyTemplate", "link" : "laika\/rewrite\/TemplateRewriter.html#applyTemplate(cursor:laika.ast.DocumentCursor,template:laika.ast.TemplateDocument):Either[laika.config.ConfigError,laika.ast.Document]", "kind" : "def"}, {"label" : "applyTemplates", "tail" : "(tree: DocumentTreeRoot, context: TemplateContext): Either[ConfigError, DocumentTreeRoot]", "member" : "laika.rewrite.TemplateRewriter.applyTemplates", "link" : "laika\/rewrite\/TemplateRewriter.html#applyTemplates(tree:laika.ast.DocumentTreeRoot,context:laika.rewrite.TemplateContext):Either[laika.config.ConfigError,laika.ast.DocumentTreeRoot]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/TemplateRewriter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/TemplateRewriter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/TemplateRewriter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/TemplateRewriter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/TemplateRewriter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/TemplateRewriter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/TemplateRewriter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/TemplateRewriter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/TemplateRewriter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/TemplateRewriter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/TemplateRewriter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/TemplateRewriter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/TemplateRewriter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/TemplateRewriter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/TemplateRewriter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/TemplateRewriter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/TemplateRewriter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/TemplateRewriter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/TemplateRewriter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "laika\/rewrite\/TemplateRewriter$.html", "members_object" : [{"label" : "rewriteRules", "tail" : "(cursor: DocumentCursor): RewriteRules", "member" : "laika.rewrite.TemplateRewriter.rewriteRules", "link" : "laika\/rewrite\/TemplateRewriter$.html#rewriteRules(cursor:laika.ast.DocumentCursor):laika.ast.RewriteRules", "kind" : "def"}, {"label" : "applyTemplate", "tail" : "(cursor: DocumentCursor, template: TemplateDocument): Either[ConfigError, Document]", "member" : "laika.rewrite.TemplateRewriter.applyTemplate", "link" : "laika\/rewrite\/TemplateRewriter$.html#applyTemplate(cursor:laika.ast.DocumentCursor,template:laika.ast.TemplateDocument):Either[laika.config.ConfigError,laika.ast.Document]", "kind" : "def"}, {"label" : "applyTemplates", "tail" : "(tree: DocumentTreeRoot, context: TemplateContext): Either[ConfigError, DocumentTreeRoot]", "member" : "laika.rewrite.TemplateRewriter.applyTemplates", "link" : "laika\/rewrite\/TemplateRewriter$.html#applyTemplates(tree:laika.ast.DocumentTreeRoot,context:laika.rewrite.TemplateContext):Either[laika.config.ConfigError,laika.ast.DocumentTreeRoot]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/TemplateRewriter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/TemplateRewriter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/TemplateRewriter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/TemplateRewriter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/TemplateRewriter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/TemplateRewriter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/TemplateRewriter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/TemplateRewriter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/TemplateRewriter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/TemplateRewriter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/TemplateRewriter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/TemplateRewriter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/TemplateRewriter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/TemplateRewriter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/TemplateRewriter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/TemplateRewriter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/TemplateRewriter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/TemplateRewriter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/TemplateRewriter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/rewrite\/TemplateRewriter.html", "kind" : "trait"}, {"name" : "laika.rewrite.Version", "shortDescription" : "Configuration for a single version of the documentation.", "object" : "laika\/rewrite\/Version$.html", "members_object" : [{"label" : "encoder", "tail" : ": ConfigEncoder[Version]", "member" : "laika.rewrite.Version.encoder", "link" : "laika\/rewrite\/Version$.html#encoder:laika.config.ConfigEncoder[laika.rewrite.Version]", "kind" : "implicit val"}, {"label" : "decoder", "tail" : ": ConfigDecoder[Version]", "member" : "laika.rewrite.Version.decoder", "link" : "laika\/rewrite\/Version$.html#decoder:laika.config.ConfigDecoder[laika.rewrite.Version]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/Version$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/Version$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/Version$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/Version$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/Version$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/Version$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/Version$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/Version$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/Version$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/Version$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/Version$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/Version$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/Version$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/Version$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/Version$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/Version$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/Version$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/Version$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/Version$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "laika.rewrite.Version#<init>", "error" : "unsupported entity"}, {"label" : "label", "tail" : ": Option[String]", "member" : "laika.rewrite.Version.label", "link" : "laika\/rewrite\/Version.html#label:Option[String]", "kind" : "val"}, {"label" : "fallbackLink", "tail" : ": String", "member" : "laika.rewrite.Version.fallbackLink", "link" : "laika\/rewrite\/Version.html#fallbackLink:String", "kind" : "val"}, {"label" : "pathSegment", "tail" : ": String", "member" : "laika.rewrite.Version.pathSegment", "link" : "laika\/rewrite\/Version.html#pathSegment:String", "kind" : "val"}, {"label" : "displayValue", "tail" : ": String", "member" : "laika.rewrite.Version.displayValue", "link" : "laika\/rewrite\/Version.html#displayValue:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/Version.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/Version.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/Version.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/Version.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/Version.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/Version.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/Version.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/Version.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/Version.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/Version.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/Version.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/Version.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/Version.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/Version.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/Version.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/Version.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/Version.html", "kind" : "case class"}, {"name" : "laika.rewrite.Versions", "shortDescription" : "Global configuration for versioned documentation.", "object" : "laika\/rewrite\/Versions$.html", "members_object" : [{"label" : "encoder", "tail" : ": ConfigEncoder[Versions]", "member" : "laika.rewrite.Versions.encoder", "link" : "laika\/rewrite\/Versions$.html#encoder:laika.config.ConfigEncoder[laika.rewrite.Versions]", "kind" : "implicit val"}, {"label" : "decoder", "tail" : ": ConfigDecoder[Versions]", "member" : "laika.rewrite.Versions.decoder", "link" : "laika\/rewrite\/Versions$.html#decoder:laika.config.ConfigDecoder[laika.rewrite.Versions]", "kind" : "implicit val"}, {"label" : "key", "tail" : ": DefaultKey[Versions]", "member" : "laika.rewrite.Versions.key", "link" : "laika\/rewrite\/Versions$.html#key:laika.config.DefaultKey[laika.rewrite.Versions]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/Versions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/Versions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/Versions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/Versions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/Versions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/Versions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/Versions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/Versions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/Versions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/Versions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/Versions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/Versions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/Versions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/Versions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/Versions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/Versions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/Versions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/Versions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/Versions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "allVersions", "tail" : "(): Seq[Version]", "member" : "laika.rewrite.Versions.allVersions", "link" : "laika\/rewrite\/Versions.html#allVersions:Seq[laika.rewrite.Version]", "kind" : "def"}, {"member" : "laika.rewrite.Versions#<init>", "error" : "unsupported entity"}, {"label" : "excludeFromScanning", "tail" : ": Seq[Path]", "member" : "laika.rewrite.Versions.excludeFromScanning", "link" : "laika\/rewrite\/Versions.html#excludeFromScanning:Seq[laika.ast.Path]", "kind" : "val"}, {"label" : "newerVersions", "tail" : ": Seq[Version]", "member" : "laika.rewrite.Versions.newerVersions", "link" : "laika\/rewrite\/Versions.html#newerVersions:Seq[laika.rewrite.Version]", "kind" : "val"}, {"label" : "olderVersions", "tail" : ": Seq[Version]", "member" : "laika.rewrite.Versions.olderVersions", "link" : "laika\/rewrite\/Versions.html#olderVersions:Seq[laika.rewrite.Version]", "kind" : "val"}, {"label" : "currentVersion", "tail" : ": Version", "member" : "laika.rewrite.Versions.currentVersion", "link" : "laika\/rewrite\/Versions.html#currentVersion:laika.rewrite.Version", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/Versions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/Versions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/Versions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/Versions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/Versions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/Versions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/Versions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/Versions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/Versions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/Versions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/Versions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/Versions.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/Versions.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/Versions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/Versions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/Versions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/Versions.html", "kind" : "case class"}], "laika.parse.css" : [{"name" : "laika.parse.css.CSSParsers", "shortDescription" : "Parsers for the subset of CSS supported by Laika.", "object" : "laika\/parse\/css\/CSSParsers$.html", "members_object" : [{"label" : "styleDeclarationSet", "tail" : ": Parser[Set[StyleDeclaration]]", "member" : "laika.parse.css.CSSParsers.styleDeclarationSet", "link" : "laika\/parse\/css\/CSSParsers$.html#styleDeclarationSet:laika.parse.Parser[Set[laika.ast.StyleDeclaration]]", "kind" : "lazy val"}, {"label" : "styleDeclarations", "tail" : ": Parser[Seq[StyleDeclaration]]", "member" : "laika.parse.css.CSSParsers.styleDeclarations", "link" : "laika\/parse\/css\/CSSParsers$.html#styleDeclarations:laika.parse.Parser[Seq[laika.ast.StyleDeclaration]]", "kind" : "val"}, {"label" : "comment", "tail" : ": Parser[Unit]", "member" : "laika.parse.css.CSSParsers.comment", "link" : "laika\/parse\/css\/CSSParsers$.html#comment:laika.parse.Parser[Unit]", "kind" : "val"}, {"label" : "style", "tail" : ": Parser[Style]", "member" : "laika.parse.css.CSSParsers.style", "link" : "laika\/parse\/css\/CSSParsers$.html#style:laika.parse.Parser[laika.parse.css.CSSParsers.Style]", "kind" : "val"}, {"label" : "styleValue", "tail" : ": Parser[String]", "member" : "laika.parse.css.CSSParsers.styleValue", "link" : "laika\/parse\/css\/CSSParsers$.html#styleValue:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "selectorGroup", "tail" : ": Parser[Seq[StyleSelector]]", "member" : "laika.parse.css.CSSParsers.selectorGroup", "link" : "laika\/parse\/css\/CSSParsers$.html#selectorGroup:laika.parse.Parser[Seq[laika.ast.StyleSelector]]", "kind" : "val"}, {"label" : "selector", "tail" : ": Parser[StyleSelector]", "member" : "laika.parse.css.CSSParsers.selector", "link" : "laika\/parse\/css\/CSSParsers$.html#selector:laika.parse.Parser[laika.ast.StyleSelector]", "kind" : "val"}, {"label" : "simpleSelectorSequence", "tail" : ": Parser[StyleSelector]", "member" : "laika.parse.css.CSSParsers.simpleSelectorSequence", "link" : "laika\/parse\/css\/CSSParsers$.html#simpleSelectorSequence:laika.parse.Parser[laika.ast.StyleSelector]", "kind" : "val"}, {"label" : "predicate", "tail" : ": Parser[StylePredicate]", "member" : "laika.parse.css.CSSParsers.predicate", "link" : "laika\/parse\/css\/CSSParsers$.html#predicate:laika.parse.Parser[laika.ast.StylePredicate]", "kind" : "val"}, {"label" : "typeSelector", "tail" : ": Parser[List[StylePredicate]]", "member" : "laika.parse.css.CSSParsers.typeSelector", "link" : "laika\/parse\/css\/CSSParsers$.html#typeSelector:laika.parse.Parser[List[laika.ast.StylePredicate]]", "kind" : "val"}, {"label" : "combinator", "tail" : ": Parser[Combinator]", "member" : "laika.parse.css.CSSParsers.combinator", "link" : "laika\/parse\/css\/CSSParsers$.html#combinator:laika.parse.Parser[laika.parse.css.CSSParsers.Combinator]", "kind" : "val"}, {"label" : "styleRefName", "tail" : ": Parser[String]", "member" : "laika.parse.css.CSSParsers.styleRefName", "link" : "laika\/parse\/css\/CSSParsers$.html#styleRefName:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "wsOrNl", "tail" : ": Parser[String]", "member" : "laika.parse.css.CSSParsers.wsOrNl", "link" : "laika\/parse\/css\/CSSParsers$.html#wsOrNl:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "Style", "tail" : "", "member" : "laika.parse.css.CSSParsers.Style", "link" : "laika\/parse\/css\/CSSParsers$.html#StyleextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Child", "tail" : "", "member" : "laika.parse.css.CSSParsers.Child", "link" : "laika\/parse\/css\/CSSParsers$.html#Child", "kind" : "object"}, {"label" : "Descendant", "tail" : "", "member" : "laika.parse.css.CSSParsers.Descendant", "link" : "laika\/parse\/css\/CSSParsers$.html#Descendant", "kind" : "object"}, {"label" : "Combinator", "tail" : "", "member" : "laika.parse.css.CSSParsers.Combinator", "link" : "laika\/parse\/css\/CSSParsers$.html#CombinatorextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/css\/CSSParsers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/css\/CSSParsers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/css\/CSSParsers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/css\/CSSParsers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/css\/CSSParsers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/css\/CSSParsers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/css\/CSSParsers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/css\/CSSParsers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/css\/CSSParsers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/css\/CSSParsers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/css\/CSSParsers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/css\/CSSParsers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/css\/CSSParsers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/css\/CSSParsers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/css\/CSSParsers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/css\/CSSParsers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/css\/CSSParsers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/css\/CSSParsers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/css\/CSSParsers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "laika.io.config" : [{"name" : "laika.io.config.IncludeHandler", "shortDescription" : "Internal utility that provides configuration files requested by include statements in otherconfiguration instances.", "object" : "laika\/io\/config\/IncludeHandler$.html", "members_object" : [{"label" : "load", "tail" : "(includes: Seq[RequestedInclude])(arg0: Sync[F], arg1: Runtime[F]): F[IncludeMap]", "member" : "laika.io.config.IncludeHandler.load", "link" : "laika\/io\/config\/IncludeHandler$.html#load[F[_]](includes:Seq[laika.io.config.IncludeHandler.RequestedInclude])(implicitevidence$1:cats.effect.Sync[F],implicitevidence$2:laika.io.runtime.Runtime[F]):F[laika.config.Config.IncludeMap]", "kind" : "def"}, {"label" : "LoadedInclude", "tail" : "", "member" : "laika.io.config.IncludeHandler.LoadedInclude", "link" : "laika\/io\/config\/IncludeHandler$.html#LoadedIncludeextendsProductwithSerializable", "kind" : "case class"}, {"label" : "RequestedInclude", "tail" : "", "member" : "laika.io.config.IncludeHandler.RequestedInclude", "link" : "laika\/io\/config\/IncludeHandler$.html#RequestedIncludeextendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/config\/IncludeHandler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/config\/IncludeHandler$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/config\/IncludeHandler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/config\/IncludeHandler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/config\/IncludeHandler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/config\/IncludeHandler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/config\/IncludeHandler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/config\/IncludeHandler$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/config\/IncludeHandler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/config\/IncludeHandler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/config\/IncludeHandler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/config\/IncludeHandler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/config\/IncludeHandler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/config\/IncludeHandler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/config\/IncludeHandler$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/config\/IncludeHandler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/config\/IncludeHandler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/config\/IncludeHandler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/config\/IncludeHandler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.io.config.ResourceLoader", "shortDescription" : "Internal utility for loading text resources from the file system, the classpath or via its URL.", "object" : "laika\/io\/config\/ResourceLoader$.html", "members_object" : [{"label" : "loadUrl", "tail" : "(url: URL)(arg0: Sync[F], arg1: Runtime[F]): F[Option[Either[ConfigResourceError, String]]]", "member" : "laika.io.config.ResourceLoader.loadUrl", "link" : "laika\/io\/config\/ResourceLoader$.html#loadUrl[F[_]](url:java.net.URL)(implicitevidence$7:cats.effect.Sync[F],implicitevidence$8:laika.io.runtime.Runtime[F]):F[Option[Either[laika.config.ConfigResourceError,String]]]", "kind" : "def"}, {"label" : "loadClasspathResource", "tail" : "(resource: String)(arg0: Sync[F], arg1: Runtime[F]): F[Option[Either[ConfigResourceError, String]]]", "member" : "laika.io.config.ResourceLoader.loadClasspathResource", "link" : "laika\/io\/config\/ResourceLoader$.html#loadClasspathResource[F[_]](resource:String)(implicitevidence$5:cats.effect.Sync[F],implicitevidence$6:laika.io.runtime.Runtime[F]):F[Option[Either[laika.config.ConfigResourceError,String]]]", "kind" : "def"}, {"label" : "loadFile", "tail" : "(file: File)(arg0: Sync[F], arg1: Runtime[F]): F[Option[Either[ConfigResourceError, String]]]", "member" : "laika.io.config.ResourceLoader.loadFile", "link" : "laika\/io\/config\/ResourceLoader$.html#loadFile[F[_]](file:java.io.File)(implicitevidence$3:cats.effect.Sync[F],implicitevidence$4:laika.io.runtime.Runtime[F]):F[Option[Either[laika.config.ConfigResourceError,String]]]", "kind" : "def"}, {"label" : "loadFile", "tail" : "(file: String)(arg0: Sync[F], arg1: Runtime[F]): F[Option[Either[ConfigResourceError, String]]]", "member" : "laika.io.config.ResourceLoader.loadFile", "link" : "laika\/io\/config\/ResourceLoader$.html#loadFile[F[_]](file:String)(implicitevidence$1:cats.effect.Sync[F],implicitevidence$2:laika.io.runtime.Runtime[F]):F[Option[Either[laika.config.ConfigResourceError,String]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/config\/ResourceLoader$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/config\/ResourceLoader$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/config\/ResourceLoader$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/config\/ResourceLoader$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/config\/ResourceLoader$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/config\/ResourceLoader$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/config\/ResourceLoader$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/config\/ResourceLoader$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/config\/ResourceLoader$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/config\/ResourceLoader$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/config\/ResourceLoader$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/config\/ResourceLoader$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/config\/ResourceLoader$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/config\/ResourceLoader$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/config\/ResourceLoader$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/config\/ResourceLoader$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/config\/ResourceLoader$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/config\/ResourceLoader$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/config\/ResourceLoader$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.io.config.SiteConfig", "shortDescription" : "Configuration for special folders in Laika's site output.", "object" : "laika\/io\/config\/SiteConfig$.html", "members_object" : [{"label" : "apiPath", "tail" : "(config: Config): Path", "member" : "laika.io.config.SiteConfig.apiPath", "link" : "laika\/io\/config\/SiteConfig$.html#apiPath(config:laika.config.Config):laika.ast.Path", "kind" : "def"}, {"label" : "downloadPath", "tail" : "(config: Config): Path", "member" : "laika.io.config.SiteConfig.downloadPath", "link" : "laika\/io\/config\/SiteConfig$.html#downloadPath(config:laika.config.Config):laika.ast.Path", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/io\/config\/SiteConfig$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/io\/config\/SiteConfig$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/io\/config\/SiteConfig$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/io\/config\/SiteConfig$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/io\/config\/SiteConfig$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/io\/config\/SiteConfig$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/io\/config\/SiteConfig$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/config\/SiteConfig$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/config\/SiteConfig$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/io\/config\/SiteConfig$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/io\/config\/SiteConfig$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/io\/config\/SiteConfig$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/io\/config\/SiteConfig$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/io\/config\/SiteConfig$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/io\/config\/SiteConfig$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/io\/config\/SiteConfig$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/io\/config\/SiteConfig$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/io\/config\/SiteConfig$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/io\/config\/SiteConfig$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org" : [], "laika.markdown" : [{"name" : "laika.markdown.BlockParsers", "shortDescription" : "Provides all block parsers for Markdown text except for for lists which are factored out into a separate parser object and those blocks dealing with verbatim HTML markup which this library treats as an optional feature that has to be explicitly mixed in.", "object" : "laika\/markdown\/BlockParsers$.html", "members_object" : [{"label" : "fallbackParagraph", "tail" : ": BlockParserBuilder", "member" : "laika.markdown.BlockParsers.fallbackParagraph", "link" : "laika\/markdown\/BlockParsers$.html#fallbackParagraph:laika.bundle.BlockParserBuilder", "kind" : "val"}, {"label" : "quotedBlock", "tail" : ": BlockParserBuilder", "member" : "laika.markdown.BlockParsers.quotedBlock", "link" : "laika\/markdown\/BlockParsers$.html#quotedBlock:laika.bundle.BlockParserBuilder", "kind" : "val"}, {"label" : "literalBlocks", "tail" : ": BlockParserBuilder", "member" : "laika.markdown.BlockParsers.literalBlocks", "link" : "laika\/markdown\/BlockParsers$.html#literalBlocks:laika.bundle.BlockParserBuilder", "kind" : "val"}, {"label" : "rules", "tail" : ": BlockParserBuilder", "member" : "laika.markdown.BlockParsers.rules", "link" : "laika\/markdown\/BlockParsers$.html#rules:laika.bundle.BlockParserBuilder", "kind" : "val"}, {"label" : "atxHeader", "tail" : ": BlockParserBuilder", "member" : "laika.markdown.BlockParsers.atxHeader", "link" : "laika\/markdown\/BlockParsers$.html#atxHeader:laika.bundle.BlockParserBuilder", "kind" : "val"}, {"label" : "linkTarget", "tail" : ": BlockParserBuilder", "member" : "laika.markdown.BlockParsers.linkTarget", "link" : "laika\/markdown\/BlockParsers$.html#linkTarget:laika.bundle.BlockParserBuilder", "kind" : "val"}, {"label" : "nestedHeaderOrParagraph", "tail" : ": BlockParserBuilder", "member" : "laika.markdown.BlockParsers.nestedHeaderOrParagraph", "link" : "laika\/markdown\/BlockParsers$.html#nestedHeaderOrParagraph:laika.bundle.BlockParserBuilder", "kind" : "lazy val"}, {"label" : "rootHeaderOrParagraph", "tail" : ": BlockParserBuilder", "member" : "laika.markdown.BlockParsers.rootHeaderOrParagraph", "link" : "laika\/markdown\/BlockParsers$.html#rootHeaderOrParagraph:laika.bundle.BlockParserBuilder", "kind" : "lazy val"}, {"label" : "decoratedBlock", "tail" : "(firstLinePrefix: Parser[Any], linePrefix: Parser[Any], nextBlockPrefix: Parser[Any]): Parser[BlockSource]", "member" : "laika.markdown.BlockParsers.decoratedBlock", "link" : "laika\/markdown\/BlockParsers$.html#decoratedBlock(firstLinePrefix:laika.parse.Parser[Any],linePrefix:laika.parse.Parser[Any],nextBlockPrefix:laika.parse.Parser[Any]):laika.parse.Parser[laika.parse.BlockSource]", "kind" : "def"}, {"label" : "mdBlock", "tail" : "(firstLinePrefix: Parser[Any], linePrefix: Parser[Any], nextBlockPrefix: Parser[Any]): Parser[BlockSource]", "member" : "laika.markdown.BlockParsers.mdBlock", "link" : "laika\/markdown\/BlockParsers$.html#mdBlock(firstLinePrefix:laika.parse.Parser[Any],linePrefix:laika.parse.Parser[Any],nextBlockPrefix:laika.parse.Parser[Any]):laika.parse.Parser[laika.parse.BlockSource]", "kind" : "def"}, {"label" : "setextDecoration", "tail" : ": Parser[String]", "member" : "laika.markdown.BlockParsers.setextDecoration", "link" : "laika\/markdown\/BlockParsers$.html#setextDecoration:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "insignificantSpaces", "tail" : ": Parser[Unit]", "member" : "laika.markdown.BlockParsers.insignificantSpaces", "link" : "laika\/markdown\/BlockParsers$.html#insignificantSpaces:laika.parse.Parser[Unit]", "kind" : "val"}, {"label" : "tabOrSpace", "tail" : ": Parser[Unit]", "member" : "laika.markdown.BlockParsers.tabOrSpace", "link" : "laika\/markdown\/BlockParsers$.html#tabOrSpace:laika.parse.Parser[Unit]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/markdown\/BlockParsers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/markdown\/BlockParsers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/markdown\/BlockParsers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/markdown\/BlockParsers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/markdown\/BlockParsers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/markdown\/BlockParsers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/markdown\/BlockParsers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/BlockParsers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/BlockParsers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/BlockParsers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/markdown\/BlockParsers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/markdown\/BlockParsers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/markdown\/BlockParsers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/markdown\/BlockParsers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/markdown\/BlockParsers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/markdown\/BlockParsers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/markdown\/BlockParsers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/markdown\/BlockParsers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/markdown\/BlockParsers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.markdown.HTMLParsers", "shortDescription" : "Parses verbatim HTML elements which may interleave with standard Markdown markup.", "object" : "laika\/markdown\/HTMLParsers$.html", "members_object" : [{"label" : "htmlBlockFragment", "tail" : ": BlockParserBuilder", "member" : "laika.markdown.HTMLParsers.htmlBlockFragment", "link" : "laika\/markdown\/HTMLParsers$.html#htmlBlockFragment:laika.bundle.BlockParserBuilder", "kind" : "lazy val"}, {"label" : "htmlBlockElement", "tail" : ": Parser[Block]", "member" : "laika.markdown.HTMLParsers.htmlBlockElement", "link" : "laika\/markdown\/HTMLParsers$.html#htmlBlockElement:laika.parse.Parser[laika.ast.Block]", "kind" : "lazy val"}, {"label" : "htmlBlock", "tail" : ": Parser[HTMLBlock]", "member" : "laika.markdown.HTMLParsers.htmlBlock", "link" : "laika\/markdown\/HTMLParsers$.html#htmlBlock:laika.parse.Parser[laika.markdown.ast.HTMLBlock]", "kind" : "lazy val"}, {"label" : "htmlBlockStart", "tail" : ": Parser[HTMLStartTag]", "member" : "laika.markdown.HTMLParsers.htmlBlockStart", "link" : "laika\/markdown\/HTMLParsers$.html#htmlBlockStart:laika.parse.Parser[laika.markdown.ast.HTMLStartTag]", "kind" : "val"}, {"label" : "htmlBlockElements", "tail" : ": Set[String]", "member" : "laika.markdown.HTMLParsers.htmlBlockElements", "link" : "laika\/markdown\/HTMLParsers$.html#htmlBlockElements:Set[String]", "kind" : "val"}, {"label" : "htmlSpanInsideBlock", "tail" : ": PrefixedParser[HTMLSpan]", "member" : "laika.markdown.HTMLParsers.htmlSpanInsideBlock", "link" : "laika\/markdown\/HTMLParsers$.html#htmlSpanInsideBlock:laika.parse.text.PrefixedParser[laika.markdown.ast.HTMLSpan]", "kind" : "lazy val"}, {"label" : "htmlCharRef", "tail" : ": SpanParserBuilder", "member" : "laika.markdown.HTMLParsers.htmlCharRef", "link" : "laika\/markdown\/HTMLParsers$.html#htmlCharRef:laika.bundle.SpanParserBuilder", "kind" : "val"}, {"label" : "htmlSpan", "tail" : ": SpanParserBuilder", "member" : "laika.markdown.HTMLParsers.htmlSpan", "link" : "laika\/markdown\/HTMLParsers$.html#htmlSpan:laika.bundle.SpanParserBuilder", "kind" : "val"}, {"label" : "htmlElementWithNestedMarkdown", "tail" : "(recParsers: RecursiveSpanParsers): Parser[HTMLElement]", "member" : "laika.markdown.HTMLParsers.htmlElementWithNestedMarkdown", "link" : "laika\/markdown\/HTMLParsers$.html#htmlElementWithNestedMarkdown(recParsers:laika.parse.markup.RecursiveSpanParsers):laika.parse.Parser[laika.markdown.ast.HTMLElement]", "kind" : "def"}, {"label" : "htmlElement", "tail" : ": Parser[HTMLElement]", "member" : "laika.markdown.HTMLParsers.htmlElement", "link" : "laika\/markdown\/HTMLParsers$.html#htmlElement:laika.parse.Parser[laika.markdown.ast.HTMLElement]", "kind" : "lazy val"}, {"label" : "htmlStartTag", "tail" : ": Parser[HTMLStartTag]", "member" : "laika.markdown.HTMLParsers.htmlStartTag", "link" : "laika\/markdown\/HTMLParsers$.html#htmlStartTag:laika.parse.Parser[laika.markdown.ast.HTMLStartTag]", "kind" : "val"}, {"label" : "htmlEmptyElement", "tail" : ": Parser[HTMLEmptyElement]", "member" : "laika.markdown.HTMLParsers.htmlEmptyElement", "link" : "laika\/markdown\/HTMLParsers$.html#htmlEmptyElement:laika.parse.Parser[laika.markdown.ast.HTMLEmptyElement]", "kind" : "val"}, {"label" : "htmlScriptElement", "tail" : ": Parser[HTMLScriptElement]", "member" : "laika.markdown.HTMLParsers.htmlScriptElement", "link" : "laika\/markdown\/HTMLParsers$.html#htmlScriptElement:laika.parse.Parser[laika.markdown.ast.HTMLScriptElement]", "kind" : "val"}, {"label" : "htmlComment", "tail" : ": Parser[HTMLComment]", "member" : "laika.markdown.HTMLParsers.htmlComment", "link" : "laika\/markdown\/HTMLParsers$.html#htmlComment:laika.parse.Parser[laika.markdown.ast.HTMLComment]", "kind" : "val"}, {"label" : "htmlEndTag", "tail" : "(tagName: String): DelimitedText", "member" : "laika.markdown.HTMLParsers.htmlEndTag", "link" : "laika\/markdown\/HTMLParsers$.html#htmlEndTag(tagName:String):laika.parse.text.DelimitedText", "kind" : "def"}, {"label" : "htmlEndTag", "tail" : ": Parser[HTMLEndTag]", "member" : "laika.markdown.HTMLParsers.htmlEndTag", "link" : "laika\/markdown\/HTMLParsers$.html#htmlEndTag:laika.parse.Parser[laika.markdown.ast.HTMLEndTag]", "kind" : "val"}, {"label" : "htmlTagContent", "tail" : ": Parser[~[String, List[HTMLAttribute]]]", "member" : "laika.markdown.HTMLParsers.htmlTagContent", "link" : "laika\/markdown\/HTMLParsers$.html#htmlTagContent:laika.parse.Parser[String~List[laika.markdown.ast.HTMLAttribute]]", "kind" : "val"}, {"label" : "htmlTagName", "tail" : ": Parser[String]", "member" : "laika.markdown.HTMLParsers.htmlTagName", "link" : "laika\/markdown\/HTMLParsers$.html#htmlTagName:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "htmlAttribute", "tail" : ": Parser[HTMLAttribute]", "member" : "laika.markdown.HTMLParsers.htmlAttribute", "link" : "laika\/markdown\/HTMLParsers$.html#htmlAttribute:laika.parse.Parser[laika.markdown.ast.HTMLAttribute]", "kind" : "val"}, {"label" : "htmlAttributeValue", "tail" : ": Parser[(List[TextContainer], Option[Char])]", "member" : "laika.markdown.HTMLParsers.htmlAttributeValue", "link" : "laika\/markdown\/HTMLParsers$.html#htmlAttributeValue:laika.parse.Parser[(List[laika.ast.TextContainer],Option[Char])]", "kind" : "val"}, {"label" : "htmlQuotedAttributeValue", "tail" : "(c: String): Parser[(List[TextContainer], Option[Char])]", "member" : "laika.markdown.HTMLParsers.htmlQuotedAttributeValue", "link" : "laika\/markdown\/HTMLParsers$.html#htmlQuotedAttributeValue(c:String):laika.parse.Parser[(List[laika.ast.TextContainer],Option[Char])]", "kind" : "def"}, {"label" : "htmlUnquotedAttributeValue", "tail" : ": Parser[(List[TextContainer], Option[Char])]", "member" : "laika.markdown.HTMLParsers.htmlUnquotedAttributeValue", "link" : "laika\/markdown\/HTMLParsers$.html#htmlUnquotedAttributeValue:laika.parse.Parser[(List[laika.ast.TextContainer],Option[Char])]", "kind" : "val"}, {"label" : "htmlAttributeName", "tail" : ": Parser[String]", "member" : "laika.markdown.HTMLParsers.htmlAttributeName", "link" : "laika\/markdown\/HTMLParsers$.html#htmlAttributeName:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "htmlCharReference", "tail" : ": PrefixedParser[HTMLCharacterReference]", "member" : "laika.markdown.HTMLParsers.htmlCharReference", "link" : "laika\/markdown\/HTMLParsers$.html#htmlCharReference:laika.parse.text.PrefixedParser[laika.markdown.ast.HTMLCharacterReference]", "kind" : "val"}, {"label" : "htmlNumericReference", "tail" : ": Parser[String]", "member" : "laika.markdown.HTMLParsers.htmlNumericReference", "link" : "laika\/markdown\/HTMLParsers$.html#htmlNumericReference:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "htmlNamedReference", "tail" : ": Parser[String]", "member" : "laika.markdown.HTMLParsers.htmlNamedReference", "link" : "laika\/markdown\/HTMLParsers$.html#htmlNamedReference:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "htmlDecReference", "tail" : ": Parser[String]", "member" : "laika.markdown.HTMLParsers.htmlDecReference", "link" : "laika\/markdown\/HTMLParsers$.html#htmlDecReference:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "htmlHexReference", "tail" : ": Parser[String]", "member" : "laika.markdown.HTMLParsers.htmlHexReference", "link" : "laika\/markdown\/HTMLParsers$.html#htmlHexReference:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "htmlWS", "tail" : ": Parser[String]", "member" : "laika.markdown.HTMLParsers.htmlWS", "link" : "laika\/markdown\/HTMLParsers$.html#htmlWS:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/markdown\/HTMLParsers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/markdown\/HTMLParsers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/markdown\/HTMLParsers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/markdown\/HTMLParsers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/markdown\/HTMLParsers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/markdown\/HTMLParsers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/markdown\/HTMLParsers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/HTMLParsers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/HTMLParsers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/HTMLParsers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/markdown\/HTMLParsers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/markdown\/HTMLParsers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/markdown\/HTMLParsers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/markdown\/HTMLParsers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/markdown\/HTMLParsers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/markdown\/HTMLParsers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/markdown\/HTMLParsers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/markdown\/HTMLParsers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/markdown\/HTMLParsers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.markdown.InlineParsers", "shortDescription" : "Provides all inline parsers for Markdown text except for those dealing with verbatim HTML markup which this library treats as an optional feature that has to be explicitly mixed in.", "object" : "laika\/markdown\/InlineParsers$.html", "members_object" : [{"label" : "simpleLink", "tail" : ": SpanParserBuilder", "member" : "laika.markdown.InlineParsers.simpleLink", "link" : "laika\/markdown\/InlineParsers$.html#simpleLink:laika.bundle.SpanParserBuilder", "kind" : "val"}, {"label" : "image", "tail" : ": SpanParserBuilder", "member" : "laika.markdown.InlineParsers.image", "link" : "laika\/markdown\/InlineParsers$.html#image:laika.bundle.SpanParserBuilder", "kind" : "val"}, {"label" : "link", "tail" : ": SpanParserBuilder", "member" : "laika.markdown.InlineParsers.link", "link" : "laika\/markdown\/InlineParsers$.html#link:laika.bundle.SpanParserBuilder", "kind" : "lazy val"}, {"label" : "RecParser", "tail" : "", "member" : "laika.markdown.InlineParsers.RecParser", "link" : "laika\/markdown\/InlineParsers$.html#RecParser=String=>List[laika.ast.Span]", "kind" : "type"}, {"label" : "literalSpan", "tail" : ": SpanParserBuilder", "member" : "laika.markdown.InlineParsers.literalSpan", "link" : "laika\/markdown\/InlineParsers$.html#literalSpan:laika.bundle.SpanParserBuilder", "kind" : "val"}, {"label" : "literalEnclosedByDoubleChar", "tail" : ": PrefixedParser[Literal]", "member" : "laika.markdown.InlineParsers.literalEnclosedByDoubleChar", "link" : "laika\/markdown\/InlineParsers$.html#literalEnclosedByDoubleChar:laika.parse.text.PrefixedParser[laika.ast.Literal]", "kind" : "val"}, {"label" : "literalEnclosedBySingleChar", "tail" : ": PrefixedParser[Literal]", "member" : "laika.markdown.InlineParsers.literalEnclosedBySingleChar", "link" : "laika\/markdown\/InlineParsers$.html#literalEnclosedBySingleChar:laika.parse.text.PrefixedParser[laika.ast.Literal]", "kind" : "val"}, {"label" : "enclosedByDoubleChar", "tail" : "(c: Char)(recParsers: RecursiveSpanParsers): PrefixedParser[List[Span]]", "member" : "laika.markdown.InlineParsers.enclosedByDoubleChar", "link" : "laika\/markdown\/InlineParsers$.html#enclosedByDoubleChar(c:Char)(implicitrecParsers:laika.parse.markup.RecursiveSpanParsers):laika.parse.text.PrefixedParser[List[laika.ast.Span]]", "kind" : "def"}, {"label" : "enclosedBySingleChar", "tail" : "(c: Char)(recParsers: RecursiveSpanParsers): PrefixedParser[List[Span]]", "member" : "laika.markdown.InlineParsers.enclosedBySingleChar", "link" : "laika\/markdown\/InlineParsers$.html#enclosedBySingleChar(c:Char)(implicitrecParsers:laika.parse.markup.RecursiveSpanParsers):laika.parse.text.PrefixedParser[List[laika.ast.Span]]", "kind" : "def"}, {"label" : "enclosedByUnderscore", "tail" : ": SpanParserBuilder", "member" : "laika.markdown.InlineParsers.enclosedByUnderscore", "link" : "laika\/markdown\/InlineParsers$.html#enclosedByUnderscore:laika.bundle.SpanParserBuilder", "kind" : "val"}, {"label" : "enclosedByAsterisk", "tail" : ": SpanParserBuilder", "member" : "laika.markdown.InlineParsers.enclosedByAsterisk", "link" : "laika\/markdown\/InlineParsers$.html#enclosedByAsterisk:laika.bundle.SpanParserBuilder", "kind" : "val"}, {"label" : "span", "tail" : "(start: PrefixedParser[Any], end: PrefixedParser[String])(recParsers: RecursiveSpanParsers): PrefixedParser[List[Span]]", "member" : "laika.markdown.InlineParsers.span", "link" : "laika\/markdown\/InlineParsers$.html#span(start:laika.parse.text.PrefixedParser[Any],end:laika.parse.text.PrefixedParser[String])(implicitrecParsers:laika.parse.markup.RecursiveSpanParsers):laika.parse.text.PrefixedParser[List[laika.ast.Span]]", "kind" : "def"}, {"label" : "em", "tail" : "(char: Char)(recParsers: RecursiveSpanParsers): PrefixedParser[Emphasized]", "member" : "laika.markdown.InlineParsers.em", "link" : "laika\/markdown\/InlineParsers$.html#em(char:Char)(implicitrecParsers:laika.parse.markup.RecursiveSpanParsers):laika.parse.text.PrefixedParser[laika.ast.Emphasized]", "kind" : "def"}, {"label" : "strong", "tail" : "(char: Char)(recParsers: RecursiveSpanParsers): PrefixedParser[Strong]", "member" : "laika.markdown.InlineParsers.strong", "link" : "laika\/markdown\/InlineParsers$.html#strong(char:Char)(implicitrecParsers:laika.parse.markup.RecursiveSpanParsers):laika.parse.text.PrefixedParser[laika.ast.Strong]", "kind" : "def"}, {"label" : "lineBreak", "tail" : ": SpanParserBuilder", "member" : "laika.markdown.InlineParsers.lineBreak", "link" : "laika\/markdown\/InlineParsers$.html#lineBreak:laika.bundle.SpanParserBuilder", "kind" : "val"}, {"label" : "escapedChar", "tail" : ": Parser[String]", "member" : "laika.markdown.InlineParsers.escapedChar", "link" : "laika\/markdown\/InlineParsers$.html#escapedChar:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/markdown\/InlineParsers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/markdown\/InlineParsers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/markdown\/InlineParsers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/markdown\/InlineParsers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/markdown\/InlineParsers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/markdown\/InlineParsers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/markdown\/InlineParsers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/InlineParsers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/InlineParsers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/InlineParsers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/markdown\/InlineParsers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/markdown\/InlineParsers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/markdown\/InlineParsers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/markdown\/InlineParsers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/markdown\/InlineParsers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/markdown\/InlineParsers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/markdown\/InlineParsers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/markdown\/InlineParsers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/markdown\/InlineParsers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.markdown.ListParsers", "shortDescription" : "Provides parsers for bullet lists (\"unordered list\" in the Markdown spec)and enumerated lists (\"ordered list\" in the Markdown spec).", "object" : "laika\/markdown\/ListParsers$.html", "members_object" : [{"label" : "enumLists", "tail" : ": BlockParserBuilderOps", "member" : "laika.markdown.ListParsers.enumLists", "link" : "laika\/markdown\/ListParsers$.html#enumLists:laika.bundle.BlockParserBuilderOps", "kind" : "val"}, {"label" : "bulletLists", "tail" : ": BlockParserBuilderOps", "member" : "laika.markdown.ListParsers.bulletLists", "link" : "laika\/markdown\/ListParsers$.html#bulletLists:laika.bundle.BlockParserBuilderOps", "kind" : "val"}, {"label" : "list", "tail" : "(itemStartChar: Parser[Any], itemStartRest: Parser[Any], newList: (List[I]) ⇒ T, newItem: (Int, Seq[Block]) ⇒ I)(recParsers: RecursiveParsers): Parser[T]", "member" : "laika.markdown.ListParsers.list", "link" : "laika\/markdown\/ListParsers$.html#list[T<:laika.ast.Block,I<:laika.ast.ListItem](itemStartChar:laika.parse.Parser[Any],itemStartRest:laika.parse.Parser[Any],newList:List[I]=>T,newItem:(Int,Seq[laika.ast.Block])=>I)(implicitrecParsers:laika.parse.markup.RecursiveParsers):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "enumListItemStart", "tail" : ": Parser[String]", "member" : "laika.markdown.ListParsers.enumListItemStart", "link" : "laika\/markdown\/ListParsers$.html#enumListItemStart:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "bulletListItemStart", "tail" : ": Parser[String]", "member" : "laika.markdown.ListParsers.bulletListItemStart", "link" : "laika\/markdown\/ListParsers$.html#bulletListItemStart:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/markdown\/ListParsers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/markdown\/ListParsers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/markdown\/ListParsers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/markdown\/ListParsers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/markdown\/ListParsers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/markdown\/ListParsers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/markdown\/ListParsers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ListParsers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ListParsers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/markdown\/ListParsers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/markdown\/ListParsers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/markdown\/ListParsers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/markdown\/ListParsers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/markdown\/ListParsers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/markdown\/ListParsers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/markdown\/ListParsers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/markdown\/ListParsers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/markdown\/ListParsers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/markdown\/ListParsers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "laika.bundle" : [{"name" : "laika.bundle.BlockParser", "shortDescription" : "Builder API for block parsers.", "object" : "laika\/bundle\/BlockParser$.html", "members_object" : [{"label" : "withEscapedText", "tail" : "(factory: (EscapedTextParsers) ⇒ Parser[Block]): BlockParserBuilderOps", "member" : "laika.bundle.BlockParser.withEscapedText", "link" : "laika\/bundle\/BlockParser$.html#withEscapedText(factory:laika.parse.markup.EscapedTextParsers=>laika.parse.Parser[laika.ast.Block]):laika.bundle.BlockParserBuilderOps", "kind" : "def"}, {"label" : "withSpans", "tail" : "(factory: (RecursiveSpanParsers) ⇒ Parser[Block]): BlockParserBuilderOps", "member" : "laika.bundle.BlockParser.withSpans", "link" : "laika\/bundle\/BlockParser$.html#withSpans(factory:laika.parse.markup.RecursiveSpanParsers=>laika.parse.Parser[laika.ast.Block]):laika.bundle.BlockParserBuilderOps", "kind" : "def"}, {"label" : "recursive", "tail" : "(factory: (RecursiveParsers) ⇒ Parser[Block]): BlockParserBuilderOps", "member" : "laika.bundle.BlockParser.recursive", "link" : "laika\/bundle\/BlockParser$.html#recursive(factory:laika.parse.markup.RecursiveParsers=>laika.parse.Parser[laika.ast.Block]):laika.bundle.BlockParserBuilderOps", "kind" : "def"}, {"label" : "standalone", "tail" : "(parser: Parser[Block]): BlockParserBuilderOps", "member" : "laika.bundle.BlockParser.standalone", "link" : "laika\/bundle\/BlockParser$.html#standalone(parser:laika.parse.Parser[laika.ast.Block]):laika.bundle.BlockParserBuilderOps", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/BlockParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/BlockParser$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/BlockParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/BlockParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/BlockParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/BlockParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/BlockParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/BlockParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/BlockParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/BlockParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/BlockParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/BlockParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/bundle\/BlockParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/BlockParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/bundle\/BlockParser$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/bundle\/BlockParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/BlockParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/BlockParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/BlockParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.bundle.BlockParserBuilder", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/BlockParserBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/BlockParserBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/BlockParserBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/BlockParserBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/BlockParserBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/BlockParserBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/BlockParserBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/BlockParserBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/BlockParserBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/BlockParserBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/BlockParserBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/BlockParserBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/bundle\/BlockParserBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/BlockParserBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/bundle\/BlockParserBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/bundle\/BlockParserBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/BlockParserBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/BlockParserBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/BlockParserBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createParser", "tail" : "(recursiveParsers: RecursiveParsers): BlockParserDefinition", "member" : "laika.bundle.ParserBuilder.createParser", "link" : "laika\/bundle\/BlockParserBuilder.html#createParser(recursiveParsers:laika.parse.markup.RecursiveParsers):T", "kind" : "abstract def"}], "shortDescription" : "Builds a block parser definition lazily by passing the recursive parsersof the host language.", "trait" : "laika\/bundle\/BlockParserBuilder.html", "kind" : "trait"}, {"name" : "laika.bundle.BlockParserBuilderOps", "shortDescription" : "Builder API for block parsers that allows to set the parser precedence.", "members_case class" : [{"label" : "interruptsParagraphWith", "tail" : "(lineCheck: PrefixedParser[Any]): BlockParserBuilderOps", "member" : "laika.bundle.BlockParserBuilderOps.interruptsParagraphWith", "link" : "laika\/bundle\/BlockParserBuilderOps.html#interruptsParagraphWith(lineCheck:laika.parse.text.PrefixedParser[Any]):laika.bundle.BlockParserBuilderOps", "kind" : "def"}, {"label" : "nestedOnly", "tail" : "(): BlockParserBuilderOps", "member" : "laika.bundle.BlockParserBuilderOps.nestedOnly", "link" : "laika\/bundle\/BlockParserBuilderOps.html#nestedOnly:laika.bundle.BlockParserBuilderOps", "kind" : "def"}, {"label" : "rootOnly", "tail" : "(): BlockParserBuilderOps", "member" : "laika.bundle.BlockParserBuilderOps.rootOnly", "link" : "laika\/bundle\/BlockParserBuilderOps.html#rootOnly:laika.bundle.BlockParserBuilderOps", "kind" : "def"}, {"label" : "withLowPrecedence", "tail" : "(): BlockParserBuilderOps", "member" : "laika.bundle.BlockParserBuilderOps.withLowPrecedence", "link" : "laika\/bundle\/BlockParserBuilderOps.html#withLowPrecedence:laika.bundle.BlockParserBuilderOps", "kind" : "def"}, {"label" : "createParser", "tail" : "(recursiveParsers: RecursiveParsers): BlockParserDefinition", "member" : "laika.bundle.BlockParserBuilderOps.createParser", "link" : "laika\/bundle\/BlockParserBuilderOps.html#createParser(recursiveParsers:laika.parse.markup.RecursiveParsers):laika.bundle.BlockParserDefinition", "kind" : "def"}, {"member" : "laika.bundle.BlockParserBuilderOps#<init>", "error" : "unsupported entity"}, {"label" : "paragraphLineCheck", "tail" : ": Option[PrefixedParser[Any]]", "member" : "laika.bundle.BlockParserBuilderOps.paragraphLineCheck", "link" : "laika\/bundle\/BlockParserBuilderOps.html#paragraphLineCheck:Option[laika.parse.text.PrefixedParser[Any]]", "kind" : "val"}, {"label" : "precedence", "tail" : ": Precedence", "member" : "laika.bundle.BlockParserBuilderOps.precedence", "link" : "laika\/bundle\/BlockParserBuilderOps.html#precedence:laika.bundle.Precedence", "kind" : "val"}, {"label" : "position", "tail" : ": BlockPosition", "member" : "laika.bundle.BlockParserBuilderOps.position", "link" : "laika\/bundle\/BlockParserBuilderOps.html#position:laika.bundle.BlockPosition", "kind" : "val"}, {"label" : "recursive", "tail" : ": Boolean", "member" : "laika.bundle.BlockParserBuilderOps.recursive", "link" : "laika\/bundle\/BlockParserBuilderOps.html#recursive:Boolean", "kind" : "val"}, {"label" : "parserFactory", "tail" : ": (RecursiveParsers) ⇒ Parser[Block]", "member" : "laika.bundle.BlockParserBuilderOps.parserFactory", "link" : "laika\/bundle\/BlockParserBuilderOps.html#parserFactory:laika.parse.markup.RecursiveParsers=>laika.parse.Parser[laika.ast.Block]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/BlockParserBuilderOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/BlockParserBuilderOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/BlockParserBuilderOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/BlockParserBuilderOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/BlockParserBuilderOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/BlockParserBuilderOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/BlockParserBuilderOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/BlockParserBuilderOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/BlockParserBuilderOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/BlockParserBuilderOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/BlockParserBuilderOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/BlockParserBuilderOps.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/BlockParserBuilderOps.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/BlockParserBuilderOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/BlockParserBuilderOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/BlockParserBuilderOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/bundle\/BlockParserBuilderOps.html", "kind" : "case class"}, {"name" : "laika.bundle.BlockParserDefinition", "shortDescription" : "Defines a parser for a single kind of block element,like a quoted block or a bullet list for example.", "members_case class" : [{"member" : "laika.bundle.BlockParserDefinition#<init>", "error" : "unsupported entity"}, {"label" : "paragraphLineCheck", "tail" : ": Option[PrefixedParser[Any]]", "member" : "laika.bundle.BlockParserDefinition.paragraphLineCheck", "link" : "laika\/bundle\/BlockParserDefinition.html#paragraphLineCheck:Option[laika.parse.text.PrefixedParser[Any]]", "kind" : "val"}, {"label" : "precedence", "tail" : ": Precedence", "member" : "laika.bundle.BlockParserDefinition.precedence", "link" : "laika\/bundle\/BlockParserDefinition.html#precedence:laika.bundle.Precedence", "kind" : "val"}, {"label" : "position", "tail" : ": BlockPosition", "member" : "laika.bundle.BlockParserDefinition.position", "link" : "laika\/bundle\/BlockParserDefinition.html#position:laika.bundle.BlockPosition", "kind" : "val"}, {"label" : "isRecursive", "tail" : ": Boolean", "member" : "laika.bundle.BlockParserDefinition.isRecursive", "link" : "laika\/bundle\/BlockParserDefinition.html#isRecursive:Boolean", "kind" : "val"}, {"label" : "parser", "tail" : ": Parser[Block]", "member" : "laika.bundle.BlockParserDefinition.parser", "link" : "laika\/bundle\/BlockParserDefinition.html#parser:laika.parse.Parser[laika.ast.Block]", "kind" : "val"}, {"label" : "startChars", "tail" : ": Set[Char]", "member" : "laika.bundle.BlockParserDefinition.startChars", "link" : "laika\/bundle\/BlockParserDefinition.html#startChars:Set[Char]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/BlockParserDefinition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/BlockParserDefinition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/BlockParserDefinition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/BlockParserDefinition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/BlockParserDefinition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/BlockParserDefinition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/BlockParserDefinition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/BlockParserDefinition.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/BlockParserDefinition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/BlockParserDefinition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/BlockParserDefinition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/BlockParserDefinition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/BlockParserDefinition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/BlockParserDefinition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/BlockParserDefinition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/BlockParserDefinition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/bundle\/BlockParserDefinition.html", "kind" : "case class"}, {"name" : "laika.bundle.BlockPosition", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/BlockPosition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/BlockPosition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/BlockPosition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/BlockPosition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/BlockPosition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/BlockPosition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/BlockPosition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/BlockPosition.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/BlockPosition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/BlockPosition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/BlockPosition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/BlockPosition.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/bundle\/BlockPosition.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/BlockPosition.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/bundle\/BlockPosition.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/bundle\/BlockPosition.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/BlockPosition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/BlockPosition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/BlockPosition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Specifies the position a block element is allowed to appear in.", "object" : "laika\/bundle\/BlockPosition$.html", "members_object" : [{"label" : "NestedOnly", "tail" : "", "member" : "laika.bundle.BlockPosition.NestedOnly", "link" : "laika\/bundle\/BlockPosition$.html#NestedOnly", "kind" : "object"}, {"label" : "RootOnly", "tail" : "", "member" : "laika.bundle.BlockPosition.RootOnly", "link" : "laika\/bundle\/BlockPosition$.html#RootOnly", "kind" : "object"}, {"label" : "Any", "tail" : "", "member" : "laika.bundle.BlockPosition.Any", "link" : "laika\/bundle\/BlockPosition$.html#Any", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/BlockPosition$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/BlockPosition$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/BlockPosition$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/BlockPosition$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/BlockPosition$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/BlockPosition$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/BlockPosition$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/BlockPosition$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/BlockPosition$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/BlockPosition$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/BlockPosition$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/BlockPosition$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/bundle\/BlockPosition$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/BlockPosition$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/bundle\/BlockPosition$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/bundle\/BlockPosition$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/BlockPosition$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/BlockPosition$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/BlockPosition$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/bundle\/BlockPosition.html", "kind" : "trait"}, {"name" : "laika.bundle.BundleOrigin", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/BundleOrigin.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/BundleOrigin.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/BundleOrigin.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/BundleOrigin.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/BundleOrigin.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/BundleOrigin.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/BundleOrigin.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/BundleOrigin.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/BundleOrigin.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/BundleOrigin.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/BundleOrigin.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/BundleOrigin.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/bundle\/BundleOrigin.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/BundleOrigin.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/bundle\/BundleOrigin.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/bundle\/BundleOrigin.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/BundleOrigin.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/BundleOrigin.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/BundleOrigin.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Indicates whether an extension bundle is a built-in default provided by the library,a collection of extensions installed by a markup format or user-defined.", "object" : "laika\/bundle\/BundleOrigin$.html", "members_object" : [{"label" : "Mixed", "tail" : "", "member" : "laika.bundle.BundleOrigin.Mixed", "link" : "laika\/bundle\/BundleOrigin$.html#Mixed", "kind" : "object"}, {"label" : "User", "tail" : "", "member" : "laika.bundle.BundleOrigin.User", "link" : "laika\/bundle\/BundleOrigin$.html#User", "kind" : "object"}, {"label" : "Theme", "tail" : "", "member" : "laika.bundle.BundleOrigin.Theme", "link" : "laika\/bundle\/BundleOrigin$.html#Theme", "kind" : "object"}, {"label" : "Parser", "tail" : "", "member" : "laika.bundle.BundleOrigin.Parser", "link" : "laika\/bundle\/BundleOrigin$.html#Parser", "kind" : "object"}, {"label" : "Library", "tail" : "", "member" : "laika.bundle.BundleOrigin.Library", "link" : "laika\/bundle\/BundleOrigin$.html#Library", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/BundleOrigin$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/BundleOrigin$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/BundleOrigin$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/BundleOrigin$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/BundleOrigin$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/BundleOrigin$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/BundleOrigin$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/BundleOrigin$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/BundleOrigin$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/BundleOrigin$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/BundleOrigin$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/BundleOrigin$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/bundle\/BundleOrigin$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/BundleOrigin$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/bundle\/BundleOrigin$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/bundle\/BundleOrigin$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/BundleOrigin$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/BundleOrigin$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/BundleOrigin$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/bundle\/BundleOrigin.html", "kind" : "trait"}, {"name" : "laika.bundle.ConfigProvider", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/ConfigProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/ConfigProvider.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/ConfigProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/ConfigProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/ConfigProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/ConfigProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/ConfigProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/ConfigProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/ConfigProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/ConfigProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/ConfigProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/ConfigProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/bundle\/ConfigProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/ConfigProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/bundle\/ConfigProvider.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/bundle\/ConfigProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/ConfigProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/ConfigProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/ConfigProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "configDocument", "tail" : "(input: String): ConfigParser", "member" : "laika.bundle.ConfigProvider.configDocument", "link" : "laika\/bundle\/ConfigProvider.html#configDocument(input:String):laika.config.ConfigParser", "kind" : "abstract def"}, {"label" : "configHeader", "tail" : "(): Parser[ConfigParser]", "member" : "laika.bundle.ConfigProvider.configHeader", "link" : "laika\/bundle\/ConfigProvider.html#configHeader:laika.parse.Parser[laika.config.ConfigParser]", "kind" : "abstract def"}], "shortDescription" : "Responsible for providing the parsers for configuration filesand configuration headers in markup documents as part of anExtensionBundle.", "object" : "laika\/bundle\/ConfigProvider$.html", "members_object" : [{"label" : "empty", "tail" : ": ConfigProvider", "member" : "laika.bundle.ConfigProvider.empty", "link" : "laika\/bundle\/ConfigProvider$.html#empty:laika.bundle.ConfigProvider", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/ConfigProvider$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/ConfigProvider$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/ConfigProvider$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/ConfigProvider$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/ConfigProvider$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/ConfigProvider$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/ConfigProvider$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/ConfigProvider$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/ConfigProvider$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/ConfigProvider$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/ConfigProvider$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/ConfigProvider$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/bundle\/ConfigProvider$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/ConfigProvider$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/bundle\/ConfigProvider$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/bundle\/ConfigProvider$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/ConfigProvider$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/ConfigProvider$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/ConfigProvider$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/bundle\/ConfigProvider.html", "kind" : "trait"}, {"name" : "laika.bundle.DocumentTypeMatcher", "shortDescription" : "The default implementations for determining the document type of the input based on its path.", "object" : "laika\/bundle\/DocumentTypeMatcher$.html", "members_object" : [{"label" : "forMarkup", "tail" : "(fileSuffixes: Set[String]): PartialFunction[Path, DocumentType]", "member" : "laika.bundle.DocumentTypeMatcher.forMarkup", "link" : "laika\/bundle\/DocumentTypeMatcher$.html#forMarkup(fileSuffixes:Set[String]):PartialFunction[laika.ast.Path,laika.ast.DocumentType]", "kind" : "def"}, {"label" : "base", "tail" : ": PartialFunction[Path, DocumentType]", "member" : "laika.bundle.DocumentTypeMatcher.base", "link" : "laika\/bundle\/DocumentTypeMatcher$.html#base:PartialFunction[laika.ast.Path,laika.ast.DocumentType]", "kind" : "val"}, {"label" : "staticTargetFormats", "tail" : "(path: Path): TargetFormats", "member" : "laika.bundle.DocumentTypeMatcher.staticTargetFormats", "link" : "laika\/bundle\/DocumentTypeMatcher$.html#staticTargetFormats(path:laika.ast.Path):laika.rewrite.nav.TargetFormats", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/DocumentTypeMatcher$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/DocumentTypeMatcher$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/DocumentTypeMatcher$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/DocumentTypeMatcher$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/DocumentTypeMatcher$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/DocumentTypeMatcher$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/DocumentTypeMatcher$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/DocumentTypeMatcher$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/DocumentTypeMatcher$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/DocumentTypeMatcher$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/DocumentTypeMatcher$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/DocumentTypeMatcher$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/bundle\/DocumentTypeMatcher$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/DocumentTypeMatcher$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/bundle\/DocumentTypeMatcher$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/bundle\/DocumentTypeMatcher$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/DocumentTypeMatcher$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/DocumentTypeMatcher$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/DocumentTypeMatcher$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.bundle.ExtensionBundle", "members_trait" : [{"label" : "acceptRawContent", "tail" : "(): Boolean", "member" : "laika.bundle.ExtensionBundle.acceptRawContent", "link" : "laika\/bundle\/ExtensionBundle.html#acceptRawContent:Boolean", "kind" : "def"}, {"label" : "useInStrictMode", "tail" : "(): Boolean", "member" : "laika.bundle.ExtensionBundle.useInStrictMode", "link" : "laika\/bundle\/ExtensionBundle.html#useInStrictMode:Boolean", "kind" : "def"}, {"label" : "withBase", "tail" : "(base: ExtensionBundle): ExtensionBundle", "member" : "laika.bundle.ExtensionBundle.withBase", "link" : "laika\/bundle\/ExtensionBundle.html#withBase(base:laika.bundle.ExtensionBundle):laika.bundle.ExtensionBundle", "kind" : "def"}, {"label" : "processExtension", "tail" : "(): PartialFunction[ExtensionBundle, ExtensionBundle]", "member" : "laika.bundle.ExtensionBundle.processExtension", "link" : "laika\/bundle\/ExtensionBundle.html#processExtension:PartialFunction[laika.bundle.ExtensionBundle,laika.bundle.ExtensionBundle]", "kind" : "def"}, {"label" : "renderOverrides", "tail" : "(): Seq[RenderOverrides]", "member" : "laika.bundle.ExtensionBundle.renderOverrides", "link" : "laika\/bundle\/ExtensionBundle.html#renderOverrides:Seq[laika.bundle.RenderOverrides]", "kind" : "def"}, {"label" : "rewriteRules", "tail" : "(): Seq[(DocumentCursor) ⇒ RewriteRules]", "member" : "laika.bundle.ExtensionBundle.rewriteRules", "link" : "laika\/bundle\/ExtensionBundle.html#rewriteRules:Seq[laika.ast.DocumentCursor=>laika.ast.RewriteRules]", "kind" : "def"}, {"label" : "parsers", "tail" : "(): ParserBundle", "member" : "laika.bundle.ExtensionBundle.parsers", "link" : "laika\/bundle\/ExtensionBundle.html#parsers:laika.bundle.ParserBundle", "kind" : "def"}, {"label" : "slugBuilder", "tail" : "(): Option[(String) ⇒ String]", "member" : "laika.bundle.ExtensionBundle.slugBuilder", "link" : "laika\/bundle\/ExtensionBundle.html#slugBuilder:Option[String=>String]", "kind" : "def"}, {"label" : "docTypeMatcher", "tail" : "(): PartialFunction[Path, DocumentType]", "member" : "laika.bundle.ExtensionBundle.docTypeMatcher", "link" : "laika\/bundle\/ExtensionBundle.html#docTypeMatcher:PartialFunction[laika.ast.Path,laika.ast.DocumentType]", "kind" : "def"}, {"label" : "baseConfig", "tail" : "(): Config", "member" : "laika.bundle.ExtensionBundle.baseConfig", "link" : "laika\/bundle\/ExtensionBundle.html#baseConfig:laika.config.Config", "kind" : "def"}, {"label" : "origin", "tail" : "(): BundleOrigin", "member" : "laika.bundle.ExtensionBundle.origin", "link" : "laika\/bundle\/ExtensionBundle.html#origin:laika.bundle.BundleOrigin", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/ExtensionBundle.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/ExtensionBundle.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/ExtensionBundle.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/ExtensionBundle.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/ExtensionBundle.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/ExtensionBundle.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/ExtensionBundle.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/ExtensionBundle.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/ExtensionBundle.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/ExtensionBundle.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/ExtensionBundle.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/ExtensionBundle.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/bundle\/ExtensionBundle.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/ExtensionBundle.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/bundle\/ExtensionBundle.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/bundle\/ExtensionBundle.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/ExtensionBundle.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/ExtensionBundle.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/ExtensionBundle.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "description", "tail" : "(): String", "member" : "laika.bundle.ExtensionBundle.description", "link" : "laika\/bundle\/ExtensionBundle.html#description:String", "kind" : "abstract def"}], "shortDescription" : "An extension bundle is a collection of parser extensions, rewrite rules, render overridesand other features to be applied to parse, render and transform operations.", "object" : "laika\/bundle\/ExtensionBundle$.html", "members_object" : [{"label" : "LaikaDefaults", "tail" : "", "member" : "laika.bundle.ExtensionBundle.LaikaDefaults", "link" : "laika\/bundle\/ExtensionBundle$.html#LaikaDefaults", "kind" : "object"}, {"label" : "Empty", "tail" : "", "member" : "laika.bundle.ExtensionBundle.Empty", "link" : "laika\/bundle\/ExtensionBundle$.html#Empty", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/ExtensionBundle$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/ExtensionBundle$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/ExtensionBundle$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/ExtensionBundle$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/ExtensionBundle$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/ExtensionBundle$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/ExtensionBundle$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/ExtensionBundle$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/ExtensionBundle$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/ExtensionBundle$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/ExtensionBundle$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/ExtensionBundle$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/bundle\/ExtensionBundle$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/ExtensionBundle$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/bundle\/ExtensionBundle$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/bundle\/ExtensionBundle$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/ExtensionBundle$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/ExtensionBundle$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/ExtensionBundle$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/bundle\/ExtensionBundle.html", "kind" : "trait"}, {"name" : "laika.bundle.MarkupExtensions", "shortDescription" : "Bundles extensions for the text markup parsers defined for the host language to support additionalsyntax not recognized by the base parsers.", "members_case class" : [{"member" : "laika.bundle.MarkupExtensions#<init>", "error" : "unsupported entity"}, {"label" : "parserHooks", "tail" : ": ParserHooks", "member" : "laika.bundle.MarkupExtensions.parserHooks", "link" : "laika\/bundle\/MarkupExtensions.html#parserHooks:laika.bundle.ParserHooks", "kind" : "val"}, {"label" : "syntaxHighlighters", "tail" : ": Seq[SyntaxHighlighter]", "member" : "laika.bundle.MarkupExtensions.syntaxHighlighters", "link" : "laika\/bundle\/MarkupExtensions.html#syntaxHighlighters:Seq[laika.bundle.SyntaxHighlighter]", "kind" : "val"}, {"label" : "spanParsers", "tail" : ": Seq[SpanParserBuilder]", "member" : "laika.bundle.MarkupExtensions.spanParsers", "link" : "laika\/bundle\/MarkupExtensions.html#spanParsers:Seq[laika.bundle.SpanParserBuilder]", "kind" : "val"}, {"label" : "blockParsers", "tail" : ": Seq[BlockParserBuilder]", "member" : "laika.bundle.MarkupExtensions.blockParsers", "link" : "laika\/bundle\/MarkupExtensions.html#blockParsers:Seq[laika.bundle.BlockParserBuilder]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/MarkupExtensions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/MarkupExtensions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/MarkupExtensions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/MarkupExtensions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/MarkupExtensions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/MarkupExtensions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/MarkupExtensions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/MarkupExtensions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/MarkupExtensions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/MarkupExtensions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/MarkupExtensions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/MarkupExtensions.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/MarkupExtensions.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/MarkupExtensions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/MarkupExtensions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/MarkupExtensions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/bundle\/MarkupExtensions.html", "kind" : "case class"}, {"name" : "laika.bundle.ParserBuilder", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/ParserBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/ParserBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/ParserBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/ParserBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/ParserBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/ParserBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/ParserBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/ParserBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/ParserBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/ParserBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/ParserBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/ParserBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/bundle\/ParserBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/ParserBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/bundle\/ParserBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/bundle\/ParserBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/ParserBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/ParserBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/ParserBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createParser", "tail" : "(recursiveParsers: RecursiveParsers): T", "member" : "laika.bundle.ParserBuilder.createParser", "link" : "laika\/bundle\/ParserBuilder.html#createParser(recursiveParsers:laika.parse.markup.RecursiveParsers):T", "kind" : "abstract def"}], "shortDescription" : "Builds a parser definition lazily by passing the recursive parsersof the host language.", "trait" : "laika\/bundle\/ParserBuilder.html", "kind" : "trait"}, {"name" : "laika.bundle.ParserBundle", "shortDescription" : "Bundles a collection of all types of parsers used in a transformation.", "members_case class" : [{"label" : "markupExtensions", "tail" : "(): MarkupExtensions", "member" : "laika.bundle.ParserBundle.markupExtensions", "link" : "laika\/bundle\/ParserBundle.html#markupExtensions:laika.bundle.MarkupExtensions", "kind" : "def"}, {"label" : "withBase", "tail" : "(base: ParserBundle): ParserBundle", "member" : "laika.bundle.ParserBundle.withBase", "link" : "laika\/bundle\/ParserBundle.html#withBase(base:laika.bundle.ParserBundle):laika.bundle.ParserBundle", "kind" : "def"}, {"member" : "laika.bundle.ParserBundle#<init>", "error" : "unsupported entity"}, {"label" : "styleSheetParser", "tail" : ": Option[Parser[Set[StyleDeclaration]]]", "member" : "laika.bundle.ParserBundle.styleSheetParser", "link" : "laika\/bundle\/ParserBundle.html#styleSheetParser:Option[laika.parse.Parser[Set[laika.ast.StyleDeclaration]]]", "kind" : "val"}, {"label" : "templateParser", "tail" : ": Option[Parser[TemplateRoot]]", "member" : "laika.bundle.ParserBundle.templateParser", "link" : "laika\/bundle\/ParserBundle.html#templateParser:Option[laika.parse.Parser[laika.ast.TemplateRoot]]", "kind" : "val"}, {"label" : "configProvider", "tail" : ": Option[ConfigProvider]", "member" : "laika.bundle.ParserBundle.configProvider", "link" : "laika\/bundle\/ParserBundle.html#configProvider:Option[laika.bundle.ConfigProvider]", "kind" : "val"}, {"label" : "markupParserHooks", "tail" : ": Option[ParserHooks]", "member" : "laika.bundle.ParserBundle.markupParserHooks", "link" : "laika\/bundle\/ParserBundle.html#markupParserHooks:Option[laika.bundle.ParserHooks]", "kind" : "val"}, {"label" : "syntaxHighlighters", "tail" : ": Seq[SyntaxHighlighter]", "member" : "laika.bundle.ParserBundle.syntaxHighlighters", "link" : "laika\/bundle\/ParserBundle.html#syntaxHighlighters:Seq[laika.bundle.SyntaxHighlighter]", "kind" : "val"}, {"label" : "spanParsers", "tail" : ": Seq[SpanParserBuilder]", "member" : "laika.bundle.ParserBundle.spanParsers", "link" : "laika\/bundle\/ParserBundle.html#spanParsers:Seq[laika.bundle.SpanParserBuilder]", "kind" : "val"}, {"label" : "blockParsers", "tail" : ": Seq[BlockParserBuilder]", "member" : "laika.bundle.ParserBundle.blockParsers", "link" : "laika\/bundle\/ParserBundle.html#blockParsers:Seq[laika.bundle.BlockParserBuilder]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/ParserBundle.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/ParserBundle.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/ParserBundle.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/ParserBundle.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/ParserBundle.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/ParserBundle.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/ParserBundle.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/ParserBundle.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/ParserBundle.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/ParserBundle.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/ParserBundle.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/ParserBundle.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/ParserBundle.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/ParserBundle.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/ParserBundle.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/ParserBundle.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/bundle\/ParserBundle.html", "kind" : "case class"}, {"name" : "laika.bundle.ParserDefinition", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/ParserDefinition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/ParserDefinition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/ParserDefinition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/ParserDefinition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/ParserDefinition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/ParserDefinition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/ParserDefinition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/ParserDefinition.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/ParserDefinition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/ParserDefinition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/ParserDefinition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/ParserDefinition.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/bundle\/ParserDefinition.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/ParserDefinition.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/bundle\/ParserDefinition.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/bundle\/ParserDefinition.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/ParserDefinition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/ParserDefinition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/ParserDefinition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "precedence", "tail" : "(): Precedence", "member" : "laika.bundle.ParserDefinition.precedence", "link" : "laika\/bundle\/ParserDefinition.html#precedence:laika.bundle.Precedence", "kind" : "abstract def"}, {"label" : "isRecursive", "tail" : "(): Boolean", "member" : "laika.bundle.ParserDefinition.isRecursive", "link" : "laika\/bundle\/ParserDefinition.html#isRecursive:Boolean", "kind" : "abstract def"}, {"label" : "parser", "tail" : "(): Parser[E]", "member" : "laika.bundle.ParserDefinition.parser", "link" : "laika\/bundle\/ParserDefinition.html#parser:laika.parse.Parser[E]", "kind" : "abstract def"}], "shortDescription" : "Defines a parser for a single kind of text markup,like a literal text span or a bullet list for example.", "trait" : "laika\/bundle\/ParserDefinition.html", "kind" : "trait"}, {"name" : "laika.bundle.ParserHooks", "shortDescription" : "Hooks for markup parsers to control aspects beyond the individual span and blockparsers defined for the host language.", "members_case class" : [{"label" : "withBase", "tail" : "(base: ParserHooks): ParserHooks", "member" : "laika.bundle.ParserHooks.withBase", "link" : "laika\/bundle\/ParserHooks.html#withBase(base:laika.bundle.ParserHooks):laika.bundle.ParserHooks", "kind" : "def"}, {"member" : "laika.bundle.ParserHooks#<init>", "error" : "unsupported entity"}, {"label" : "preProcessInput", "tail" : ": (DocumentInput) ⇒ DocumentInput", "member" : "laika.bundle.ParserHooks.preProcessInput", "link" : "laika\/bundle\/ParserHooks.html#preProcessInput:laika.parse.markup.DocumentParser.DocumentInput=>laika.parse.markup.DocumentParser.DocumentInput", "kind" : "val"}, {"label" : "postProcessDocument", "tail" : ": (UnresolvedDocument) ⇒ UnresolvedDocument", "member" : "laika.bundle.ParserHooks.postProcessDocument", "link" : "laika\/bundle\/ParserHooks.html#postProcessDocument:laika.ast.UnresolvedDocument=>laika.ast.UnresolvedDocument", "kind" : "val"}, {"label" : "postProcessBlocks", "tail" : ": (Seq[Block]) ⇒ Seq[Block]", "member" : "laika.bundle.ParserHooks.postProcessBlocks", "link" : "laika\/bundle\/ParserHooks.html#postProcessBlocks:Seq[laika.ast.Block]=>Seq[laika.ast.Block]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/ParserHooks.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/ParserHooks.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/ParserHooks.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/ParserHooks.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/ParserHooks.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/ParserHooks.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/ParserHooks.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/ParserHooks.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/ParserHooks.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/ParserHooks.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/ParserHooks.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/ParserHooks.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/ParserHooks.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/ParserHooks.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/ParserHooks.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/ParserHooks.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/bundle\/ParserHooks.html", "kind" : "case class"}, {"name" : "laika.bundle.Precedence", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/Precedence.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/Precedence.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/Precedence.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/Precedence.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/Precedence.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/Precedence.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/Precedence.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/Precedence.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/Precedence.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/Precedence.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/Precedence.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/Precedence.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/bundle\/Precedence.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/Precedence.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/bundle\/Precedence.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/bundle\/Precedence.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/Precedence.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/Precedence.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/Precedence.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Indicates whether a parser should be applied before the base parsers ofthe host language (high precedence) or after them (low precedence).", "object" : "laika\/bundle\/Precedence$.html", "members_object" : [{"label" : "Low", "tail" : "", "member" : "laika.bundle.Precedence.Low", "link" : "laika\/bundle\/Precedence$.html#Low", "kind" : "object"}, {"label" : "High", "tail" : "", "member" : "laika.bundle.Precedence.High", "link" : "laika\/bundle\/Precedence$.html#High", "kind" : "object"}, {"label" : "ordering", "tail" : ": Ordering[Precedence]", "member" : "laika.bundle.Precedence.ordering", "link" : "laika\/bundle\/Precedence$.html#ordering:Ordering[laika.bundle.Precedence]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/Precedence$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/Precedence$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/Precedence$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/Precedence$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/Precedence$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/Precedence$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/Precedence$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/Precedence$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/Precedence$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/Precedence$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/Precedence$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/Precedence$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/bundle\/Precedence$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/Precedence$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/bundle\/Precedence$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/bundle\/Precedence$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/Precedence$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/Precedence$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/Precedence$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/bundle\/Precedence.html", "kind" : "trait"}, {"name" : "laika.bundle.RenderOverrides", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/RenderOverrides.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/RenderOverrides.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/RenderOverrides.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/RenderOverrides.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/RenderOverrides.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/RenderOverrides.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/RenderOverrides.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/RenderOverrides.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/RenderOverrides.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/RenderOverrides.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/RenderOverrides.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/RenderOverrides.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/bundle\/RenderOverrides.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/RenderOverrides.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/bundle\/RenderOverrides.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/bundle\/RenderOverrides.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/RenderOverrides.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/RenderOverrides.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/RenderOverrides.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "value", "tail" : "(): PartialFunction[(Formatter, Element), String]", "member" : "laika.bundle.RenderOverrides.value", "link" : "laika\/bundle\/RenderOverrides.html#value:PartialFunction[(RenderOverrides.this.Formatter,laika.ast.Element),String]", "kind" : "abstract def"}, {"member" : "laika.bundle.RenderOverrides.Formatter", "error" : "unsupported entity"}], "shortDescription" : "Collects custom render functions that adjust the rendered output of one or more AST nodes.", "trait" : "laika\/bundle\/RenderOverrides.html", "kind" : "trait"}, {"name" : "laika.bundle.SpanParser", "shortDescription" : "Builder API for span parsers.", "object" : "laika\/bundle\/SpanParser$.html", "members_object" : [{"label" : "recursive", "tail" : "(factory: (RecursiveSpanParsers) ⇒ PrefixedParser[Span]): SpanParserBuilderOps", "member" : "laika.bundle.SpanParser.recursive", "link" : "laika\/bundle\/SpanParser$.html#recursive(factory:laika.parse.markup.RecursiveSpanParsers=>laika.parse.text.PrefixedParser[laika.ast.Span]):laika.bundle.SpanParserBuilderOps", "kind" : "def"}, {"label" : "standalone", "tail" : "(parser: PrefixedParser[Span]): SpanParserBuilderOps", "member" : "laika.bundle.SpanParser.standalone", "link" : "laika\/bundle\/SpanParser$.html#standalone(parser:laika.parse.text.PrefixedParser[laika.ast.Span]):laika.bundle.SpanParserBuilderOps", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/SpanParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/SpanParser$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/SpanParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/SpanParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/SpanParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/SpanParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/SpanParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/SpanParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/SpanParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/SpanParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/SpanParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/SpanParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/bundle\/SpanParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/SpanParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/bundle\/SpanParser$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/bundle\/SpanParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/SpanParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/SpanParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/SpanParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.bundle.SpanParserBuilder", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/SpanParserBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/SpanParserBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/SpanParserBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/SpanParserBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/SpanParserBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/SpanParserBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/SpanParserBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/SpanParserBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/SpanParserBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/SpanParserBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/SpanParserBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/SpanParserBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/bundle\/SpanParserBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/SpanParserBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/bundle\/SpanParserBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/bundle\/SpanParserBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/SpanParserBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/SpanParserBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/SpanParserBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createParser", "tail" : "(recursiveParsers: RecursiveParsers): SpanParserDefinition", "member" : "laika.bundle.ParserBuilder.createParser", "link" : "laika\/bundle\/SpanParserBuilder.html#createParser(recursiveParsers:laika.parse.markup.RecursiveParsers):T", "kind" : "abstract def"}], "shortDescription" : "Builds a span parser definition lazily by passing the recursive parsersof the host language.", "trait" : "laika\/bundle\/SpanParserBuilder.html", "kind" : "trait"}, {"name" : "laika.bundle.SpanParserBuilderOps", "shortDescription" : "Builder API for span parsers that allows to set the parser precedence.", "members_case class" : [{"label" : "withLowPrecedence", "tail" : "(): SpanParserBuilderOps", "member" : "laika.bundle.SpanParserBuilderOps.withLowPrecedence", "link" : "laika\/bundle\/SpanParserBuilderOps.html#withLowPrecedence:laika.bundle.SpanParserBuilderOps", "kind" : "def"}, {"label" : "createParser", "tail" : "(recursiveParsers: RecursiveParsers): SpanParserDefinition", "member" : "laika.bundle.SpanParserBuilderOps.createParser", "link" : "laika\/bundle\/SpanParserBuilderOps.html#createParser(recursiveParsers:laika.parse.markup.RecursiveParsers):laika.bundle.SpanParserDefinition", "kind" : "def"}, {"member" : "laika.bundle.SpanParserBuilderOps#<init>", "error" : "unsupported entity"}, {"label" : "precedence", "tail" : ": Precedence", "member" : "laika.bundle.SpanParserBuilderOps.precedence", "link" : "laika\/bundle\/SpanParserBuilderOps.html#precedence:laika.bundle.Precedence", "kind" : "val"}, {"label" : "recursive", "tail" : ": Boolean", "member" : "laika.bundle.SpanParserBuilderOps.recursive", "link" : "laika\/bundle\/SpanParserBuilderOps.html#recursive:Boolean", "kind" : "val"}, {"label" : "parserFactory", "tail" : ": (RecursiveSpanParsers) ⇒ PrefixedParser[Span]", "member" : "laika.bundle.SpanParserBuilderOps.parserFactory", "link" : "laika\/bundle\/SpanParserBuilderOps.html#parserFactory:laika.parse.markup.RecursiveSpanParsers=>laika.parse.text.PrefixedParser[laika.ast.Span]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/SpanParserBuilderOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/SpanParserBuilderOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/SpanParserBuilderOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/SpanParserBuilderOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/SpanParserBuilderOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/SpanParserBuilderOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/SpanParserBuilderOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/SpanParserBuilderOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/SpanParserBuilderOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/SpanParserBuilderOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/SpanParserBuilderOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/SpanParserBuilderOps.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/SpanParserBuilderOps.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/SpanParserBuilderOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/SpanParserBuilderOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/SpanParserBuilderOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/bundle\/SpanParserBuilderOps.html", "kind" : "case class"}, {"name" : "laika.bundle.SpanParserDefinition", "shortDescription" : "Defines a parser for a single kind of span element,like a literal text span or a link reference for example.", "members_case class" : [{"member" : "laika.bundle.SpanParserDefinition#<init>", "error" : "unsupported entity"}, {"label" : "precedence", "tail" : ": Precedence", "member" : "laika.bundle.SpanParserDefinition.precedence", "link" : "laika\/bundle\/SpanParserDefinition.html#precedence:laika.bundle.Precedence", "kind" : "val"}, {"label" : "isRecursive", "tail" : ": Boolean", "member" : "laika.bundle.SpanParserDefinition.isRecursive", "link" : "laika\/bundle\/SpanParserDefinition.html#isRecursive:Boolean", "kind" : "val"}, {"label" : "parser", "tail" : ": Parser[Span]", "member" : "laika.bundle.SpanParserDefinition.parser", "link" : "laika\/bundle\/SpanParserDefinition.html#parser:laika.parse.Parser[laika.ast.Span]", "kind" : "val"}, {"label" : "startChars", "tail" : ": NonEmptySet[Char]", "member" : "laika.bundle.SpanParserDefinition.startChars", "link" : "laika\/bundle\/SpanParserDefinition.html#startChars:cats.data.NonEmptySet[Char]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/SpanParserDefinition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/SpanParserDefinition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/SpanParserDefinition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/SpanParserDefinition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/SpanParserDefinition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/SpanParserDefinition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/SpanParserDefinition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/SpanParserDefinition.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/SpanParserDefinition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/SpanParserDefinition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/SpanParserDefinition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/SpanParserDefinition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/SpanParserDefinition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/SpanParserDefinition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/SpanParserDefinition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/SpanParserDefinition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/bundle\/SpanParserDefinition.html", "kind" : "case class"}, {"name" : "laika.bundle.SyntaxHighlighter", "members_trait" : [{"label" : "rootParser", "tail" : ": Parser[Seq[CodeSpan]]", "member" : "laika.bundle.SyntaxHighlighter.rootParser", "link" : "laika\/bundle\/SyntaxHighlighter.html#rootParser:laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/bundle\/SyntaxHighlighter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/bundle\/SyntaxHighlighter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/bundle\/SyntaxHighlighter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/bundle\/SyntaxHighlighter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/bundle\/SyntaxHighlighter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/bundle\/SyntaxHighlighter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/bundle\/SyntaxHighlighter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/SyntaxHighlighter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/SyntaxHighlighter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/bundle\/SyntaxHighlighter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/bundle\/SyntaxHighlighter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/bundle\/SyntaxHighlighter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/bundle\/SyntaxHighlighter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/bundle\/SyntaxHighlighter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/bundle\/SyntaxHighlighter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/bundle\/SyntaxHighlighter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/bundle\/SyntaxHighlighter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/bundle\/SyntaxHighlighter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/bundle\/SyntaxHighlighter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "spanParsers", "tail" : "(): Seq[CodeSpanParser]", "member" : "laika.bundle.SyntaxHighlighter.spanParsers", "link" : "laika\/bundle\/SyntaxHighlighter.html#spanParsers:Seq[laika.parse.code.CodeSpanParser]", "kind" : "abstract def"}, {"label" : "language", "tail" : "(): NonEmptyList[String]", "member" : "laika.bundle.SyntaxHighlighter.language", "link" : "laika\/bundle\/SyntaxHighlighter.html#language:cats.data.NonEmptyList[String]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "laika\/bundle\/SyntaxHighlighter.html", "kind" : "trait"}], "laika.rst.bundle" : [{"name" : "laika.rst.bundle.DocInfoExtractor", "shortDescription" : "Responsible for extracting a docInfo block at the startof a reStructuredText document and inserting it into thedocInfo element in the config object for that document.", "object" : "laika\/rst\/bundle\/DocInfoExtractor$.html", "members_object" : [{"label" : "apply", "tail" : "(doc: UnresolvedDocument): UnresolvedDocument", "member" : "laika.rst.bundle.DocInfoExtractor.apply", "link" : "laika\/rst\/bundle\/DocInfoExtractor$.html#apply(doc:laika.ast.UnresolvedDocument):laika.ast.UnresolvedDocument", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "laika\/rst\/bundle\/DocInfoExtractor$.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (UnresolvedDocument) ⇒ A): (UnresolvedDocument) ⇒ A", "member" : "scala.Function1.andThen", "link" : "laika\/rst\/bundle\/DocInfoExtractor$.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ UnresolvedDocument): (A) ⇒ UnresolvedDocument", "member" : "scala.Function1.compose", "link" : "laika\/rst\/bundle\/DocInfoExtractor$.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/bundle\/DocInfoExtractor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/bundle\/DocInfoExtractor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/bundle\/DocInfoExtractor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/bundle\/DocInfoExtractor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/bundle\/DocInfoExtractor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/bundle\/DocInfoExtractor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/bundle\/DocInfoExtractor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/DocInfoExtractor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/DocInfoExtractor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/DocInfoExtractor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/bundle\/DocInfoExtractor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/bundle\/DocInfoExtractor$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/bundle\/DocInfoExtractor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/bundle\/DocInfoExtractor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/bundle\/DocInfoExtractor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/bundle\/DocInfoExtractor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/bundle\/DocInfoExtractor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/bundle\/DocInfoExtractor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.rst.bundle.ExtendedHTMLRenderer", "shortDescription" : "HTML renderer for special reStructuredText tree elements not part of the default document tree model.", "object" : "laika\/rst\/bundle\/ExtendedHTMLRenderer$.html", "members_class" : [{"label" : "custom", "tail" : ": PartialFunction[(HTMLFormatter, Element), String]", "member" : "laika.rst.bundle.ExtendedHTMLRenderer.custom", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer.html#custom:PartialFunction[(laika.render.HTMLFormatter,laika.ast.Element),String]", "kind" : "val"}, {"label" : "toTable", "tail" : "(fl: FieldList): Table", "member" : "laika.rst.bundle.ExtendedHTMLRenderer.toTable", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer.html#toTable(fl:laika.rst.ast.FieldList):laika.ast.Table", "kind" : "def"}, {"label" : "toTable", "tail" : "(ol: OptionList): Table", "member" : "laika.rst.bundle.ExtendedHTMLRenderer.toTable", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer.html#toTable(ol:laika.rst.ast.OptionList):laika.ast.Table", "kind" : "def"}, {"member" : "laika.rst.bundle.ExtendedHTMLRenderer#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "custom", "tail" : ": PartialFunction[(HTMLFormatter, Element), String]", "member" : "laika.rst.bundle.ExtendedHTMLRenderer.custom", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer$.html#custom:PartialFunction[(laika.render.HTMLFormatter,laika.ast.Element),String]", "kind" : "val"}, {"label" : "toTable", "tail" : "(fl: FieldList): Table", "member" : "laika.rst.bundle.ExtendedHTMLRenderer.toTable", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer$.html#toTable(fl:laika.rst.ast.FieldList):laika.ast.Table", "kind" : "def"}, {"label" : "toTable", "tail" : "(ol: OptionList): Table", "member" : "laika.rst.bundle.ExtendedHTMLRenderer.toTable", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer$.html#toTable(ol:laika.rst.ast.OptionList):laika.ast.Table", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/bundle\/ExtendedHTMLRenderer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/rst\/bundle\/ExtendedHTMLRenderer.html", "kind" : "class"}, {"name" : "laika.rst.bundle.LinkTargetProcessor", "shortDescription" : "Processes link targets in a sequence of blocks.", "object" : "laika\/rst\/bundle\/LinkTargetProcessor$.html", "members_object" : [{"label" : "apply", "tail" : "(blocks: Seq[Block]): Seq[Block]", "member" : "laika.rst.bundle.LinkTargetProcessor.apply", "link" : "laika\/rst\/bundle\/LinkTargetProcessor$.html#apply(blocks:Seq[laika.ast.Block]):Seq[laika.ast.Block]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "laika\/rst\/bundle\/LinkTargetProcessor$.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (Seq[Block]) ⇒ A): (Seq[Block]) ⇒ A", "member" : "scala.Function1.andThen", "link" : "laika\/rst\/bundle\/LinkTargetProcessor$.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ Seq[Block]): (A) ⇒ Seq[Block]", "member" : "scala.Function1.compose", "link" : "laika\/rst\/bundle\/LinkTargetProcessor$.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/bundle\/LinkTargetProcessor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/bundle\/LinkTargetProcessor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/bundle\/LinkTargetProcessor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/bundle\/LinkTargetProcessor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/bundle\/LinkTargetProcessor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/bundle\/LinkTargetProcessor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/bundle\/LinkTargetProcessor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/LinkTargetProcessor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/LinkTargetProcessor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/LinkTargetProcessor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/bundle\/LinkTargetProcessor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/bundle\/LinkTargetProcessor$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/bundle\/LinkTargetProcessor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/bundle\/LinkTargetProcessor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/bundle\/LinkTargetProcessor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/bundle\/LinkTargetProcessor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/bundle\/LinkTargetProcessor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/bundle\/LinkTargetProcessor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.rst.bundle.RawContentExtensions", "shortDescription" : "Registry for the standard extensions of ReStructuredText which allow forraw content pass-through.", "object" : "laika\/rst\/bundle\/RawContentExtensions$.html", "members_object" : [{"label" : "textRoles", "tail" : ": Seq[TextRole]", "member" : "laika.rst.bundle.RawContentExtensions.textRoles", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#textRoles:Seq[laika.rst.ext.TextRoles.TextRole]", "kind" : "lazy val"}, {"label" : "spanDirectives", "tail" : ": Seq[Nothing]", "member" : "laika.rst.bundle.RawContentExtensions.spanDirectives", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#spanDirectives:Seq[Nothing]", "kind" : "lazy val"}, {"label" : "blockDirectives", "tail" : ": Seq[Directive[Block]]", "member" : "laika.rst.bundle.RawContentExtensions.blockDirectives", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#blockDirectives:Seq[laika.rst.ext.Directives.Directive[laika.ast.Block]]", "kind" : "lazy val"}, {"label" : "acceptRawContent", "tail" : ": Boolean", "member" : "laika.rst.bundle.RawContentExtensions.acceptRawContent", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#acceptRawContent:Boolean", "kind" : "val"}, {"label" : "origin", "tail" : ": BundleOrigin", "member" : "laika.rst.bundle.RawContentExtensions.origin", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#origin:laika.bundle.BundleOrigin", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "laika.rst.bundle.RawContentExtensions.description", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#description:String", "kind" : "val"}, {"label" : "processExtension", "tail" : "(): PartialFunction[ExtensionBundle, ExtensionBundle]", "member" : "laika.rst.bundle.RstExtensionRegistry.processExtension", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#processExtension:PartialFunction[laika.bundle.ExtensionBundle,laika.bundle.ExtensionBundle]", "kind" : "def"}, {"label" : "defaultTextRole", "tail" : "(): Option[String]", "member" : "laika.rst.bundle.RstExtensionRegistry.defaultTextRole", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#defaultTextRole:Option[String]", "kind" : "def"}, {"label" : "useInStrictMode", "tail" : ": Boolean", "member" : "laika.rst.bundle.RstExtensionRegistry.useInStrictMode", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#useInStrictMode:Boolean", "kind" : "val"}, {"label" : "withBase", "tail" : "(base: ExtensionBundle): ExtensionBundle", "member" : "laika.bundle.ExtensionBundle.withBase", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#withBase(base:laika.bundle.ExtensionBundle):laika.bundle.ExtensionBundle", "kind" : "def"}, {"label" : "renderOverrides", "tail" : "(): Seq[RenderOverrides]", "member" : "laika.bundle.ExtensionBundle.renderOverrides", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#renderOverrides:Seq[laika.bundle.RenderOverrides]", "kind" : "def"}, {"label" : "rewriteRules", "tail" : "(): Seq[(DocumentCursor) ⇒ ast.RewriteRules]", "member" : "laika.bundle.ExtensionBundle.rewriteRules", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#rewriteRules:Seq[laika.ast.DocumentCursor=>laika.ast.RewriteRules]", "kind" : "def"}, {"label" : "parsers", "tail" : "(): ParserBundle", "member" : "laika.bundle.ExtensionBundle.parsers", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#parsers:laika.bundle.ParserBundle", "kind" : "def"}, {"label" : "slugBuilder", "tail" : "(): Option[(String) ⇒ String]", "member" : "laika.bundle.ExtensionBundle.slugBuilder", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#slugBuilder:Option[String=>String]", "kind" : "def"}, {"label" : "docTypeMatcher", "tail" : "(): PartialFunction[Path, DocumentType]", "member" : "laika.bundle.ExtensionBundle.docTypeMatcher", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#docTypeMatcher:PartialFunction[laika.ast.Path,laika.ast.DocumentType]", "kind" : "def"}, {"label" : "baseConfig", "tail" : "(): Config", "member" : "laika.bundle.ExtensionBundle.baseConfig", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#baseConfig:laika.config.Config", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/bundle\/RawContentExtensions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.rst.bundle.RewriteRules", "shortDescription" : " The default rewrite rules that get applied to the raw document tree after parsing reStructuredText markup.", "members_class" : [{"label" : "apply", "tail" : "(cursor: DocumentCursor): ast.RewriteRules", "member" : "laika.rst.bundle.RewriteRules.apply", "link" : "laika\/rst\/bundle\/RewriteRules.html#apply(cursor:laika.ast.DocumentCursor):laika.ast.RewriteRules", "kind" : "def"}, {"label" : "DefaultRules", "tail" : "", "member" : "laika.rst.bundle.RewriteRules.DefaultRules", "link" : "laika\/rst\/bundle\/RewriteRules.html#DefaultRulesextendsAnyRef", "kind" : "class"}, {"label" : "baseRoleElements", "tail" : ": Map[String, (String) ⇒ Span]", "member" : "laika.rst.bundle.RewriteRules.baseRoleElements", "link" : "laika\/rst\/bundle\/RewriteRules.html#baseRoleElements:Map[String,String=>laika.ast.Span]", "kind" : "val"}, {"member" : "laika.rst.bundle.RewriteRules#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "laika\/rst\/bundle\/RewriteRules.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (ast.RewriteRules) ⇒ A): (DocumentCursor) ⇒ A", "member" : "scala.Function1.andThen", "link" : "laika\/rst\/bundle\/RewriteRules.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ DocumentCursor): (A) ⇒ ast.RewriteRules", "member" : "scala.Function1.compose", "link" : "laika\/rst\/bundle\/RewriteRules.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/bundle\/RewriteRules.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/bundle\/RewriteRules.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/bundle\/RewriteRules.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/bundle\/RewriteRules.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/bundle\/RewriteRules.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/bundle\/RewriteRules.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/bundle\/RewriteRules.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/RewriteRules.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/RewriteRules.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/RewriteRules.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/bundle\/RewriteRules.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/bundle\/RewriteRules.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/bundle\/RewriteRules.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/bundle\/RewriteRules.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/bundle\/RewriteRules.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/bundle\/RewriteRules.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/bundle\/RewriteRules.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/bundle\/RewriteRules.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/rst\/bundle\/RewriteRules.html", "kind" : "class"}, {"name" : "laika.rst.bundle.RstExtension", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/bundle\/RstExtension.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/bundle\/RstExtension.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/bundle\/RstExtension.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/bundle\/RstExtension.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/bundle\/RstExtension.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/bundle\/RstExtension.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/bundle\/RstExtension.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/RstExtension.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/RstExtension.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/RstExtension.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/bundle\/RstExtension.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/bundle\/RstExtension.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/bundle\/RstExtension.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/bundle\/RstExtension.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/bundle\/RstExtension.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/bundle\/RstExtension.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/bundle\/RstExtension.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/bundle\/RstExtension.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/bundle\/RstExtension.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "part", "tail" : "(): (RecursiveParsers) ⇒ P", "member" : "laika.rst.bundle.RstExtension.part", "link" : "laika\/rst\/bundle\/RstExtension.html#part:laika.parse.markup.RecursiveParsers=>P", "kind" : "abstract def"}, {"label" : "name", "tail" : "(): String", "member" : "laika.rst.bundle.RstExtension.name", "link" : "laika\/rst\/bundle\/RstExtension.html#name:String", "kind" : "abstract def"}], "shortDescription" : "Common base trait for reStructuredText extensions (directives and text roles).", "object" : "laika\/rst\/bundle\/RstExtension$.html", "members_object" : [{"label" : "createAsMap", "tail" : "(ext: Seq[RstExtension[P]], recParsers: RecursiveParsers): Map[String, P]", "member" : "laika.rst.bundle.RstExtension.createAsMap", "link" : "laika\/rst\/bundle\/RstExtension$.html#createAsMap[P](ext:Seq[laika.rst.bundle.RstExtension[P]],recParsers:laika.parse.markup.RecursiveParsers):Map[String,P]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/bundle\/RstExtension$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/bundle\/RstExtension$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/bundle\/RstExtension$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/bundle\/RstExtension$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/bundle\/RstExtension$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/bundle\/RstExtension$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/bundle\/RstExtension$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/RstExtension$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/RstExtension$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/RstExtension$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/bundle\/RstExtension$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/bundle\/RstExtension$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/bundle\/RstExtension$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/bundle\/RstExtension$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/bundle\/RstExtension$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/bundle\/RstExtension$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/bundle\/RstExtension$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/bundle\/RstExtension$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/bundle\/RstExtension$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/rst\/bundle\/RstExtension.html", "kind" : "trait"}, {"name" : "laika.rst.bundle.RstExtensionRegistry", "members_trait" : [{"label" : "processExtension", "tail" : "(): PartialFunction[ExtensionBundle, ExtensionBundle]", "member" : "laika.rst.bundle.RstExtensionRegistry.processExtension", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#processExtension:PartialFunction[laika.bundle.ExtensionBundle,laika.bundle.ExtensionBundle]", "kind" : "def"}, {"label" : "defaultTextRole", "tail" : "(): Option[String]", "member" : "laika.rst.bundle.RstExtensionRegistry.defaultTextRole", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#defaultTextRole:Option[String]", "kind" : "def"}, {"label" : "useInStrictMode", "tail" : ": Boolean", "member" : "laika.rst.bundle.RstExtensionRegistry.useInStrictMode", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#useInStrictMode:Boolean", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "laika.rst.bundle.RstExtensionRegistry.description", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#description:String", "kind" : "val"}, {"label" : "acceptRawContent", "tail" : "(): Boolean", "member" : "laika.bundle.ExtensionBundle.acceptRawContent", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#acceptRawContent:Boolean", "kind" : "def"}, {"label" : "withBase", "tail" : "(base: ExtensionBundle): ExtensionBundle", "member" : "laika.bundle.ExtensionBundle.withBase", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#withBase(base:laika.bundle.ExtensionBundle):laika.bundle.ExtensionBundle", "kind" : "def"}, {"label" : "renderOverrides", "tail" : "(): Seq[RenderOverrides]", "member" : "laika.bundle.ExtensionBundle.renderOverrides", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#renderOverrides:Seq[laika.bundle.RenderOverrides]", "kind" : "def"}, {"label" : "rewriteRules", "tail" : "(): Seq[(DocumentCursor) ⇒ ast.RewriteRules]", "member" : "laika.bundle.ExtensionBundle.rewriteRules", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#rewriteRules:Seq[laika.ast.DocumentCursor=>laika.ast.RewriteRules]", "kind" : "def"}, {"label" : "parsers", "tail" : "(): ParserBundle", "member" : "laika.bundle.ExtensionBundle.parsers", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#parsers:laika.bundle.ParserBundle", "kind" : "def"}, {"label" : "slugBuilder", "tail" : "(): Option[(String) ⇒ String]", "member" : "laika.bundle.ExtensionBundle.slugBuilder", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#slugBuilder:Option[String=>String]", "kind" : "def"}, {"label" : "docTypeMatcher", "tail" : "(): PartialFunction[Path, DocumentType]", "member" : "laika.bundle.ExtensionBundle.docTypeMatcher", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#docTypeMatcher:PartialFunction[laika.ast.Path,laika.ast.DocumentType]", "kind" : "def"}, {"label" : "baseConfig", "tail" : "(): Config", "member" : "laika.bundle.ExtensionBundle.baseConfig", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#baseConfig:laika.config.Config", "kind" : "def"}, {"label" : "origin", "tail" : "(): BundleOrigin", "member" : "laika.bundle.ExtensionBundle.origin", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#origin:laika.bundle.BundleOrigin", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "textRoles", "tail" : "(): Seq[TextRole]", "member" : "laika.rst.bundle.RstExtensionRegistry.textRoles", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#textRoles:Seq[laika.rst.ext.TextRoles.TextRole]", "kind" : "abstract def"}, {"label" : "blockDirectives", "tail" : "(): Seq[Directive[Block]]", "member" : "laika.rst.bundle.RstExtensionRegistry.blockDirectives", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#blockDirectives:Seq[laika.rst.ext.Directives.Directive[laika.ast.Block]]", "kind" : "abstract def"}, {"label" : "spanDirectives", "tail" : "(): Seq[Directive[Span]]", "member" : "laika.rst.bundle.RstExtensionRegistry.spanDirectives", "link" : "laika\/rst\/bundle\/RstExtensionRegistry.html#spanDirectives:Seq[laika.rst.ext.Directives.Directive[laika.ast.Span]]", "kind" : "abstract def"}], "shortDescription" : "Registry for custom reStructuredText extensions.", "trait" : "laika\/rst\/bundle\/RstExtensionRegistry.html", "kind" : "trait"}, {"name" : "laika.rst.bundle.RstExtensionSupport", "shortDescription" : "Internal API that processes all extensions definedby one or more RstExtensionRegistries.", "object" : "laika\/rst\/bundle\/RstExtensionSupport$.html", "members_class" : [{"label" : "withDirectives", "tail" : "(newBlockDirectives: Seq[Directive[Block]], newSpanDirectives: Seq[Directive[Span]], newTextRoles: Seq[TextRole], newDefaultTextRole: Option[String]): RstExtensionSupport", "member" : "laika.rst.bundle.RstExtensionSupport.withDirectives", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#withDirectives(newBlockDirectives:Seq[laika.rst.ext.Directives.Directive[laika.ast.Block]],newSpanDirectives:Seq[laika.rst.ext.Directives.Directive[laika.ast.Span]],newTextRoles:Seq[laika.rst.ext.TextRoles.TextRole],newDefaultTextRole:Option[String]):laika.rst.bundle.RstExtensionSupport", "kind" : "def"}, {"label" : "parsers", "tail" : ": ParserBundle", "member" : "laika.rst.bundle.RstExtensionSupport.parsers", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#parsers:laika.bundle.ParserBundle", "kind" : "lazy val"}, {"label" : "rewriteRules", "tail" : "(): Seq[(DocumentCursor) ⇒ ast.RewriteRules]", "member" : "laika.rst.bundle.RstExtensionSupport.rewriteRules", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#rewriteRules:Seq[laika.ast.DocumentCursor=>laika.ast.RewriteRules]", "kind" : "def"}, {"label" : "useInStrictMode", "tail" : ": Boolean", "member" : "laika.rst.bundle.RstExtensionSupport.useInStrictMode", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#useInStrictMode:Boolean", "kind" : "val"}, {"label" : "origin", "tail" : ": BundleOrigin", "member" : "laika.rst.bundle.RstExtensionSupport.origin", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#origin:laika.bundle.BundleOrigin", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "laika.rst.bundle.RstExtensionSupport.description", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#description:String", "kind" : "val"}, {"member" : "laika.rst.bundle.RstExtensionSupport#<init>", "error" : "unsupported entity"}, {"label" : "acceptRawContent", "tail" : "(): Boolean", "member" : "laika.bundle.ExtensionBundle.acceptRawContent", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#acceptRawContent:Boolean", "kind" : "def"}, {"label" : "withBase", "tail" : "(base: ExtensionBundle): ExtensionBundle", "member" : "laika.bundle.ExtensionBundle.withBase", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#withBase(base:laika.bundle.ExtensionBundle):laika.bundle.ExtensionBundle", "kind" : "def"}, {"label" : "processExtension", "tail" : "(): PartialFunction[ExtensionBundle, ExtensionBundle]", "member" : "laika.bundle.ExtensionBundle.processExtension", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#processExtension:PartialFunction[laika.bundle.ExtensionBundle,laika.bundle.ExtensionBundle]", "kind" : "def"}, {"label" : "renderOverrides", "tail" : "(): Seq[RenderOverrides]", "member" : "laika.bundle.ExtensionBundle.renderOverrides", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#renderOverrides:Seq[laika.bundle.RenderOverrides]", "kind" : "def"}, {"label" : "slugBuilder", "tail" : "(): Option[(String) ⇒ String]", "member" : "laika.bundle.ExtensionBundle.slugBuilder", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#slugBuilder:Option[String=>String]", "kind" : "def"}, {"label" : "docTypeMatcher", "tail" : "(): PartialFunction[Path, DocumentType]", "member" : "laika.bundle.ExtensionBundle.docTypeMatcher", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#docTypeMatcher:PartialFunction[laika.ast.Path,laika.ast.DocumentType]", "kind" : "def"}, {"label" : "baseConfig", "tail" : "(): Config", "member" : "laika.bundle.ExtensionBundle.baseConfig", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#baseConfig:laika.config.Config", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/bundle\/RstExtensionSupport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "withDirectives", "tail" : "(newBlockDirectives: Seq[Directive[Block]], newSpanDirectives: Seq[Directive[Span]], newTextRoles: Seq[TextRole], newDefaultTextRole: Option[String]): RstExtensionSupport", "member" : "laika.rst.bundle.RstExtensionSupport.withDirectives", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#withDirectives(newBlockDirectives:Seq[laika.rst.ext.Directives.Directive[laika.ast.Block]],newSpanDirectives:Seq[laika.rst.ext.Directives.Directive[laika.ast.Span]],newTextRoles:Seq[laika.rst.ext.TextRoles.TextRole],newDefaultTextRole:Option[String]):laika.rst.bundle.RstExtensionSupport", "kind" : "def"}, {"label" : "parsers", "tail" : ": ParserBundle", "member" : "laika.rst.bundle.RstExtensionSupport.parsers", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#parsers:laika.bundle.ParserBundle", "kind" : "lazy val"}, {"label" : "rewriteRules", "tail" : "(): Seq[(DocumentCursor) ⇒ ast.RewriteRules]", "member" : "laika.rst.bundle.RstExtensionSupport.rewriteRules", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#rewriteRules:Seq[laika.ast.DocumentCursor=>laika.ast.RewriteRules]", "kind" : "def"}, {"label" : "useInStrictMode", "tail" : ": Boolean", "member" : "laika.rst.bundle.RstExtensionSupport.useInStrictMode", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#useInStrictMode:Boolean", "kind" : "val"}, {"label" : "origin", "tail" : ": BundleOrigin", "member" : "laika.rst.bundle.RstExtensionSupport.origin", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#origin:laika.bundle.BundleOrigin", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "laika.rst.bundle.RstExtensionSupport.description", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#description:String", "kind" : "val"}, {"label" : "acceptRawContent", "tail" : "(): Boolean", "member" : "laika.bundle.ExtensionBundle.acceptRawContent", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#acceptRawContent:Boolean", "kind" : "def"}, {"label" : "withBase", "tail" : "(base: ExtensionBundle): ExtensionBundle", "member" : "laika.bundle.ExtensionBundle.withBase", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#withBase(base:laika.bundle.ExtensionBundle):laika.bundle.ExtensionBundle", "kind" : "def"}, {"label" : "processExtension", "tail" : "(): PartialFunction[ExtensionBundle, ExtensionBundle]", "member" : "laika.bundle.ExtensionBundle.processExtension", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#processExtension:PartialFunction[laika.bundle.ExtensionBundle,laika.bundle.ExtensionBundle]", "kind" : "def"}, {"label" : "renderOverrides", "tail" : "(): Seq[RenderOverrides]", "member" : "laika.bundle.ExtensionBundle.renderOverrides", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#renderOverrides:Seq[laika.bundle.RenderOverrides]", "kind" : "def"}, {"label" : "slugBuilder", "tail" : "(): Option[(String) ⇒ String]", "member" : "laika.bundle.ExtensionBundle.slugBuilder", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#slugBuilder:Option[String=>String]", "kind" : "def"}, {"label" : "docTypeMatcher", "tail" : "(): PartialFunction[Path, DocumentType]", "member" : "laika.bundle.ExtensionBundle.docTypeMatcher", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#docTypeMatcher:PartialFunction[laika.ast.Path,laika.ast.DocumentType]", "kind" : "def"}, {"label" : "baseConfig", "tail" : "(): Config", "member" : "laika.bundle.ExtensionBundle.baseConfig", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#baseConfig:laika.config.Config", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/bundle\/RstExtensionSupport$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/rst\/bundle\/RstExtensionSupport.html", "kind" : "class"}, {"name" : "laika.rst.bundle.StandardExtensions", "shortDescription" : "Registry for all standard extensions of ReStructuredText as defined by thespecification, except for those which allow for raw content pass-through,which are kept separately in RawContentExtensions.", "object" : "laika\/rst\/bundle\/StandardExtensions$.html", "members_object" : [{"label" : "textRoles", "tail" : ": List[TextRole]", "member" : "laika.rst.bundle.StandardExtensions.textRoles", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#textRoles:List[laika.rst.ext.TextRoles.TextRole]", "kind" : "lazy val"}, {"label" : "spanDirectives", "tail" : ": List[Directive[Span]]", "member" : "laika.rst.bundle.StandardExtensions.spanDirectives", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#spanDirectives:List[laika.rst.ext.Directives.Directive[laika.ast.Span]]", "kind" : "lazy val"}, {"label" : "blockDirectives", "tail" : ": List[Directive[Block]]", "member" : "laika.rst.bundle.StandardExtensions.blockDirectives", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#blockDirectives:List[laika.rst.ext.Directives.Directive[laika.ast.Block]]", "kind" : "lazy val"}, {"label" : "origin", "tail" : ": BundleOrigin", "member" : "laika.rst.bundle.StandardExtensions.origin", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#origin:laika.bundle.BundleOrigin", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "laika.rst.bundle.StandardExtensions.description", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#description:String", "kind" : "val"}, {"label" : "processExtension", "tail" : "(): PartialFunction[ExtensionBundle, ExtensionBundle]", "member" : "laika.rst.bundle.RstExtensionRegistry.processExtension", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#processExtension:PartialFunction[laika.bundle.ExtensionBundle,laika.bundle.ExtensionBundle]", "kind" : "def"}, {"label" : "defaultTextRole", "tail" : "(): Option[String]", "member" : "laika.rst.bundle.RstExtensionRegistry.defaultTextRole", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#defaultTextRole:Option[String]", "kind" : "def"}, {"label" : "useInStrictMode", "tail" : ": Boolean", "member" : "laika.rst.bundle.RstExtensionRegistry.useInStrictMode", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#useInStrictMode:Boolean", "kind" : "val"}, {"label" : "acceptRawContent", "tail" : "(): Boolean", "member" : "laika.bundle.ExtensionBundle.acceptRawContent", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#acceptRawContent:Boolean", "kind" : "def"}, {"label" : "withBase", "tail" : "(base: ExtensionBundle): ExtensionBundle", "member" : "laika.bundle.ExtensionBundle.withBase", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#withBase(base:laika.bundle.ExtensionBundle):laika.bundle.ExtensionBundle", "kind" : "def"}, {"label" : "renderOverrides", "tail" : "(): Seq[RenderOverrides]", "member" : "laika.bundle.ExtensionBundle.renderOverrides", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#renderOverrides:Seq[laika.bundle.RenderOverrides]", "kind" : "def"}, {"label" : "rewriteRules", "tail" : "(): Seq[(DocumentCursor) ⇒ ast.RewriteRules]", "member" : "laika.bundle.ExtensionBundle.rewriteRules", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#rewriteRules:Seq[laika.ast.DocumentCursor=>laika.ast.RewriteRules]", "kind" : "def"}, {"label" : "parsers", "tail" : "(): ParserBundle", "member" : "laika.bundle.ExtensionBundle.parsers", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#parsers:laika.bundle.ParserBundle", "kind" : "def"}, {"label" : "slugBuilder", "tail" : "(): Option[(String) ⇒ String]", "member" : "laika.bundle.ExtensionBundle.slugBuilder", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#slugBuilder:Option[String=>String]", "kind" : "def"}, {"label" : "docTypeMatcher", "tail" : "(): PartialFunction[Path, DocumentType]", "member" : "laika.bundle.ExtensionBundle.docTypeMatcher", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#docTypeMatcher:PartialFunction[laika.ast.Path,laika.ast.DocumentType]", "kind" : "def"}, {"label" : "baseConfig", "tail" : "(): Config", "member" : "laika.bundle.ExtensionBundle.baseConfig", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#baseConfig:laika.config.Config", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/bundle\/StandardExtensions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/bundle\/StandardExtensions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "laika.rst.ext" : [{"name" : "laika.rst.ext.Directives", "shortDescription" : "API for creating directives, the extension mechanism of reStructuredText.", "object" : "laika\/rst\/ext\/Directives$.html", "members_object" : [{"label" : "BlockDirective", "tail" : "", "member" : "laika.rst.ext.Directives.BlockDirective", "link" : "laika\/rst\/ext\/Directives$.html#BlockDirective", "kind" : "object"}, {"label" : "SpanDirective", "tail" : "", "member" : "laika.rst.ext.Directives.SpanDirective", "link" : "laika\/rst\/ext\/Directives$.html#SpanDirective", "kind" : "object"}, {"label" : "Directive", "tail" : "", "member" : "laika.rst.ext.Directives.Directive", "link" : "laika\/rst\/ext\/Directives$.html#Directive[E<:laika.ast.Element]extendsRstExtension[laika.rst.ext.Directives.DirectivePartBuilder[E]]", "kind" : "class"}, {"label" : "Parts", "tail" : "", "member" : "laika.rst.ext.Directives.Parts", "link" : "laika\/rst\/ext\/Directives$.html#Parts", "kind" : "object"}, {"label" : "Converters", "tail" : "", "member" : "laika.rst.ext.Directives.Converters", "link" : "laika\/rst\/ext\/Directives$.html#Converters", "kind" : "object"}, {"label" : "ParsedDirective", "tail" : "", "member" : "laika.rst.ext.Directives.ParsedDirective", "link" : "laika\/rst\/ext\/Directives$.html#ParsedDirectiveextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Key", "tail" : "", "member" : "laika.rst.ext.Directives.Key", "link" : "laika\/rst\/ext\/Directives$.html#Key", "kind" : "object"}, {"label" : "Key", "tail" : "", "member" : "laika.rst.ext.Directives.Key", "link" : "laika\/rst\/ext\/Directives$.html#KeyextendsAnyRef", "kind" : "sealed trait"}, {"label" : "DirectivePartBuilder", "tail" : "", "member" : "laika.rst.ext.Directives.DirectivePartBuilder", "link" : "laika\/rst\/ext\/Directives$.html#DirectivePartBuilder[+A]extendslaika.rst.ext.Directives.DirectiveParserBuilder=>(laika.rst.ext.Directives.DirectiveParserBuilder,laika.rst.ext.Directives.DirectivePart[A])", "kind" : "abstract class"}, {"label" : "DirectivePart", "tail" : "", "member" : "laika.rst.ext.Directives.DirectivePart", "link" : "laika\/rst\/ext\/Directives$.html#DirectivePart[+A]extendslaika.rst.ext.Directives.ParsedDirective=>laika.rst.ext.ExtensionParsers.Result[A]", "kind" : "abstract class"}, {"label" : "Part", "tail" : "", "member" : "laika.rst.ext.Directives.Part", "link" : "laika\/rst\/ext\/Directives$.html#PartextendsProductwithSerializable", "kind" : "case class"}, {"label" : "DirectiveParserBuilder", "tail" : "", "member" : "laika.rst.ext.Directives.DirectiveParserBuilder", "link" : "laika\/rst\/ext\/Directives$.html#DirectiveParserBuilderextendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ext\/Directives$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ext\/Directives$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ext\/Directives$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ext\/Directives$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ext\/Directives$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ext\/Directives$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ext\/Directives$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ext\/Directives$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ext\/Directives$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ext\/Directives$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ext\/Directives$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ext\/Directives$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/ext\/Directives$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ext\/Directives$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/ext\/Directives$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/ext\/Directives$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ext\/Directives$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ext\/Directives$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ext\/Directives$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.rst.ext.ExtensionParsers", "shortDescription" : "Provides the parsers for all types of extensions (directives and text roles).", "object" : "laika\/rst\/ext\/ExtensionParsers$.html", "members_class" : [{"label" : "roleDirective", "tail" : ": Parser[Block]", "member" : "laika.rst.ext.ExtensionParsers.roleDirective", "link" : "laika\/rst\/ext\/ExtensionParsers.html#roleDirective:laika.parse.Parser[laika.ast.Block]", "kind" : "lazy val"}, {"label" : "blockDirective", "tail" : ": Parser[Block]", "member" : "laika.rst.ext.ExtensionParsers.blockDirective", "link" : "laika\/rst\/ext\/ExtensionParsers.html#blockDirective:laika.parse.Parser[laika.ast.Block]", "kind" : "lazy val"}, {"label" : "substitutionDefinition", "tail" : ": Parser[Block]", "member" : "laika.rst.ext.ExtensionParsers.substitutionDefinition", "link" : "laika\/rst\/ext\/ExtensionParsers.html#substitutionDefinition:laika.parse.Parser[laika.ast.Block]", "kind" : "lazy val"}, {"label" : "explicitBlockItem", "tail" : ": PrefixedParser[Block]", "member" : "laika.rst.ext.ExtensionParsers.explicitBlockItem", "link" : "laika\/rst\/ext\/ExtensionParsers.html#explicitBlockItem:laika.parse.text.PrefixedParser[laika.ast.Block]", "kind" : "lazy val"}, {"member" : "laika.rst.ext.ExtensionParsers#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ext\/ExtensionParsers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ext\/ExtensionParsers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ext\/ExtensionParsers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ext\/ExtensionParsers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ext\/ExtensionParsers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ext\/ExtensionParsers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ext\/ExtensionParsers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ext\/ExtensionParsers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ext\/ExtensionParsers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ext\/ExtensionParsers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ext\/ExtensionParsers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ext\/ExtensionParsers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/ext\/ExtensionParsers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ext\/ExtensionParsers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/ext\/ExtensionParsers.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/ext\/ExtensionParsers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ext\/ExtensionParsers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ext\/ExtensionParsers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ext\/ExtensionParsers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "allBlocks", "tail" : "(blockDirectives: Seq[Directive[Block]], spanDirectives: Seq[Directive[Span]], textRoles: Seq[TextRole], defaultTextRole: String): BlockParserBuilder", "member" : "laika.rst.ext.ExtensionParsers.allBlocks", "link" : "laika\/rst\/ext\/ExtensionParsers$.html#allBlocks(blockDirectives:Seq[laika.rst.ext.Directives.Directive[laika.ast.Block]],spanDirectives:Seq[laika.rst.ext.Directives.Directive[laika.ast.Span]],textRoles:Seq[laika.rst.ext.TextRoles.TextRole],defaultTextRole:String):laika.bundle.BlockParserBuilder", "kind" : "def"}, {"label" : "Result", "tail" : "", "member" : "laika.rst.ext.ExtensionParsers.Result", "link" : "laika\/rst\/ext\/ExtensionParsers$.html#Result[+A]=Either[String,A]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ext\/ExtensionParsers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ext\/ExtensionParsers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ext\/ExtensionParsers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ext\/ExtensionParsers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ext\/ExtensionParsers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ext\/ExtensionParsers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ext\/ExtensionParsers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ext\/ExtensionParsers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ext\/ExtensionParsers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ext\/ExtensionParsers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ext\/ExtensionParsers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ext\/ExtensionParsers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/ext\/ExtensionParsers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ext\/ExtensionParsers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/ext\/ExtensionParsers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/ext\/ExtensionParsers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ext\/ExtensionParsers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ext\/ExtensionParsers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ext\/ExtensionParsers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/rst\/ext\/ExtensionParsers.html", "kind" : "class"}, {"name" : "laika.rst.ext.TextRoles", "shortDescription" : "API for creating interpreted text roles, the extension mechanism for inline elements of reStructuredText.", "object" : "laika\/rst\/ext\/TextRoles$.html", "members_object" : [{"label" : "TextRole", "tail" : "", "member" : "laika.rst.ext.TextRoles.TextRole", "link" : "laika\/rst\/ext\/TextRoles$.html#TextRole", "kind" : "object"}, {"label" : "TextRole", "tail" : "", "member" : "laika.rst.ext.TextRoles.TextRole", "link" : "laika\/rst\/ext\/TextRoles$.html#TextRoleextendsRstExtension[laika.rst.ext.TextRoles.RoleDirectivePartBuilder[String=>laika.ast.Span]]", "kind" : "class"}, {"label" : "Parts", "tail" : "", "member" : "laika.rst.ext.TextRoles.Parts", "link" : "laika\/rst\/ext\/TextRoles$.html#Parts", "kind" : "object"}, {"label" : "RoleDirectivePart", "tail" : "", "member" : "laika.rst.ext.TextRoles.RoleDirectivePart", "link" : "laika\/rst\/ext\/TextRoles$.html#RoleDirectivePart[+A]extendslaika.rst.ext.Directives.ParsedDirective=>laika.rst.ext.ExtensionParsers.Result[A]", "kind" : "abstract class"}, {"label" : "RoleDirectivePartBuilder", "tail" : "", "member" : "laika.rst.ext.TextRoles.RoleDirectivePartBuilder", "link" : "laika\/rst\/ext\/TextRoles$.html#RoleDirectivePartBuilder[+A]extendslaika.rst.ext.TextRoles.RoleDirectiveParserBuilder=>(laika.rst.ext.TextRoles.RoleDirectiveParserBuilder,laika.rst.ext.TextRoles.RoleDirectivePart[A])", "kind" : "abstract class"}, {"label" : "RoleDirectiveParserBuilder", "tail" : "", "member" : "laika.rst.ext.TextRoles.RoleDirectiveParserBuilder", "link" : "laika\/rst\/ext\/TextRoles$.html#RoleDirectiveParserBuilderextendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rst\/ext\/TextRoles$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rst\/ext\/TextRoles$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rst\/ext\/TextRoles$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rst\/ext\/TextRoles$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rst\/ext\/TextRoles$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rst\/ext\/TextRoles$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rst\/ext\/TextRoles$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ext\/TextRoles$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ext\/TextRoles$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rst\/ext\/TextRoles$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rst\/ext\/TextRoles$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rst\/ext\/TextRoles$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rst\/ext\/TextRoles$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rst\/ext\/TextRoles$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rst\/ext\/TextRoles$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rst\/ext\/TextRoles$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rst\/ext\/TextRoles$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rst\/ext\/TextRoles$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rst\/ext\/TextRoles$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "laika.rewrite.link" : [{"name" : "laika.rewrite.link.AnonymousSelector", "shortDescription" : "An anonymous selector (usually matched by position).", "object" : "laika\/rewrite\/link\/AnonymousSelector$.html", "members_object" : [{"label" : "unique", "tail" : ": Boolean", "member" : "laika.rewrite.link.SequenceSelector.unique", "link" : "laika\/rewrite\/link\/AnonymousSelector$.html#unique:Boolean", "kind" : "val"}, {"label" : "global", "tail" : ": Boolean", "member" : "laika.rewrite.link.SequenceSelector.global", "link" : "laika\/rewrite\/link\/AnonymousSelector$.html#global:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/AnonymousSelector$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/AnonymousSelector$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/AnonymousSelector$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/AnonymousSelector$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/AnonymousSelector$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/AnonymousSelector$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/AnonymousSelector$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/AnonymousSelector$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/AnonymousSelector$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/AnonymousSelector$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/AnonymousSelector$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/AnonymousSelector$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/AnonymousSelector$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/link\/AnonymousSelector$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/AnonymousSelector$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/AnonymousSelector$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/AnonymousSelector$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.rewrite.link.ApiLinks", "shortDescription" : "", "object" : "laika\/rewrite\/link\/ApiLinks$.html", "members_object" : [{"label" : "encoder", "tail" : ": ConfigEncoder[ApiLinks]", "member" : "laika.rewrite.link.ApiLinks.encoder", "link" : "laika\/rewrite\/link\/ApiLinks$.html#encoder:laika.config.ConfigEncoder[laika.rewrite.link.ApiLinks]", "kind" : "implicit val"}, {"label" : "decoder", "tail" : ": ConfigDecoder[ApiLinks]", "member" : "laika.rewrite.link.ApiLinks.decoder", "link" : "laika\/rewrite\/link\/ApiLinks$.html#decoder:laika.config.ConfigDecoder[laika.rewrite.link.ApiLinks]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/ApiLinks$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/ApiLinks$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/ApiLinks$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/ApiLinks$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/ApiLinks$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/ApiLinks$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/ApiLinks$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/ApiLinks$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/ApiLinks$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/ApiLinks$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/ApiLinks$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/ApiLinks$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/link\/ApiLinks$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/ApiLinks$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/link\/ApiLinks$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/link\/ApiLinks$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/ApiLinks$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/ApiLinks$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/ApiLinks$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "laika.rewrite.link.ApiLinks#<init>", "error" : "unsupported entity"}, {"label" : "packageSummary", "tail" : ": String", "member" : "laika.rewrite.link.ApiLinks.packageSummary", "link" : "laika\/rewrite\/link\/ApiLinks.html#packageSummary:String", "kind" : "val"}, {"label" : "packagePrefix", "tail" : ": String", "member" : "laika.rewrite.link.ApiLinks.packagePrefix", "link" : "laika\/rewrite\/link\/ApiLinks.html#packagePrefix:String", "kind" : "val"}, {"label" : "baseUri", "tail" : ": String", "member" : "laika.rewrite.link.ApiLinks.baseUri", "link" : "laika\/rewrite\/link\/ApiLinks.html#baseUri:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/ApiLinks.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/ApiLinks.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/ApiLinks.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/ApiLinks.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/ApiLinks.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/ApiLinks.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/ApiLinks.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/ApiLinks.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/ApiLinks.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/ApiLinks.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/ApiLinks.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/ApiLinks.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/ApiLinks.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/ApiLinks.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/ApiLinks.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/ApiLinks.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/link\/ApiLinks.html", "kind" : "case class"}, {"name" : "laika.rewrite.link.AutonumberSelector", "shortDescription" : "An auto-number selector (usually matched by position).", "object" : "laika\/rewrite\/link\/AutonumberSelector$.html", "members_object" : [{"label" : "unique", "tail" : ": Boolean", "member" : "laika.rewrite.link.SequenceSelector.unique", "link" : "laika\/rewrite\/link\/AutonumberSelector$.html#unique:Boolean", "kind" : "val"}, {"label" : "global", "tail" : ": Boolean", "member" : "laika.rewrite.link.SequenceSelector.global", "link" : "laika\/rewrite\/link\/AutonumberSelector$.html#global:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/AutonumberSelector$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/AutonumberSelector$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/AutonumberSelector$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/AutonumberSelector$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/AutonumberSelector$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/AutonumberSelector$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/AutonumberSelector$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/AutonumberSelector$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/AutonumberSelector$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/AutonumberSelector$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/AutonumberSelector$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/AutonumberSelector$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/AutonumberSelector$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/link\/AutonumberSelector$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/AutonumberSelector$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/AutonumberSelector$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/AutonumberSelector$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.rewrite.link.AutosymbolSelector", "shortDescription" : "An auto-symbol selector (usually matched by position).", "object" : "laika\/rewrite\/link\/AutosymbolSelector$.html", "members_object" : [{"label" : "unique", "tail" : ": Boolean", "member" : "laika.rewrite.link.SequenceSelector.unique", "link" : "laika\/rewrite\/link\/AutosymbolSelector$.html#unique:Boolean", "kind" : "val"}, {"label" : "global", "tail" : ": Boolean", "member" : "laika.rewrite.link.SequenceSelector.global", "link" : "laika\/rewrite\/link\/AutosymbolSelector$.html#global:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/AutosymbolSelector$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/AutosymbolSelector$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/AutosymbolSelector$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/AutosymbolSelector$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/AutosymbolSelector$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/AutosymbolSelector$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/AutosymbolSelector$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/AutosymbolSelector$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/AutosymbolSelector$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/AutosymbolSelector$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/AutosymbolSelector$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/AutosymbolSelector$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/AutosymbolSelector$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/link\/AutosymbolSelector$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/AutosymbolSelector$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/AutosymbolSelector$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/AutosymbolSelector$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.rewrite.link.DocumentTargets", "shortDescription" : "Collects all tree elements from a document that can be referenced from other elements,like images, footnotes, citations and other inline targets.", "members_case class" : [{"label" : "targets", "tail" : ": Seq[TargetResolver]", "member" : "laika.rewrite.link.DocumentTargets.targets", "link" : "laika\/rewrite\/link\/DocumentTargets.html#targets:Seq[laika.rewrite.link.TargetResolver]", "kind" : "val"}, {"member" : "laika.rewrite.link.DocumentTargets#<init>", "error" : "unsupported entity"}, {"label" : "slugBuilder", "tail" : ": (String) ⇒ String", "member" : "laika.rewrite.link.DocumentTargets.slugBuilder", "link" : "laika\/rewrite\/link\/DocumentTargets.html#slugBuilder:String=>String", "kind" : "val"}, {"label" : "document", "tail" : ": Document", "member" : "laika.rewrite.link.DocumentTargets.document", "link" : "laika\/rewrite\/link\/DocumentTargets.html#document:laika.ast.Document", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/DocumentTargets.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/DocumentTargets.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/DocumentTargets.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/DocumentTargets.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/DocumentTargets.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/DocumentTargets.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/DocumentTargets.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/DocumentTargets.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/DocumentTargets.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/DocumentTargets.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/DocumentTargets.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/DocumentTargets.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/DocumentTargets.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/DocumentTargets.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/DocumentTargets.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/DocumentTargets.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/link\/DocumentTargets.html", "kind" : "case class"}, {"name" : "laika.rewrite.link.InvalidTarget", "shortDescription" : "", "members_case class" : [{"member" : "laika.rewrite.link.InvalidTarget#<init>", "error" : "unsupported entity"}, {"label" : "message", "tail" : ": String", "member" : "laika.rewrite.link.InvalidTarget.message", "link" : "laika\/rewrite\/link\/InvalidTarget.html#message:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/InvalidTarget.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/InvalidTarget.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/InvalidTarget.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/InvalidTarget.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/InvalidTarget.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/InvalidTarget.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/InvalidTarget.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/InvalidTarget.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/InvalidTarget.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/InvalidTarget.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/InvalidTarget.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/InvalidTarget.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/InvalidTarget.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/InvalidTarget.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/InvalidTarget.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/InvalidTarget.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/link\/InvalidTarget.html", "kind" : "case class"}, {"name" : "laika.rewrite.link.LinkAliasResolver", "shortDescription" : "", "object" : "laika\/rewrite\/link\/LinkAliasResolver$.html", "members_object" : [{"label" : "unresolved", "tail" : "(sourceSelector: TargetIdSelector, targetSelector: TargetIdSelector, targetFormats: TargetFormats): LinkAliasResolver", "member" : "laika.rewrite.link.LinkAliasResolver.unresolved", "link" : "laika\/rewrite\/link\/LinkAliasResolver$.html#unresolved(sourceSelector:laika.rewrite.link.TargetIdSelector,targetSelector:laika.rewrite.link.TargetIdSelector,targetFormats:laika.rewrite.nav.TargetFormats):laika.rewrite.link.LinkAliasResolver", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/LinkAliasResolver$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/LinkAliasResolver$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/LinkAliasResolver$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/LinkAliasResolver$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/LinkAliasResolver$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/LinkAliasResolver$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/LinkAliasResolver$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/LinkAliasResolver$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/LinkAliasResolver$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/LinkAliasResolver$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/LinkAliasResolver$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/LinkAliasResolver$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/link\/LinkAliasResolver$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/LinkAliasResolver$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/link\/LinkAliasResolver$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/link\/LinkAliasResolver$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/LinkAliasResolver$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/LinkAliasResolver$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/LinkAliasResolver$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "circularReference", "tail" : "(): LinkAliasResolver", "member" : "laika.rewrite.link.LinkAliasResolver.circularReference", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#circularReference:laika.rewrite.link.LinkAliasResolver", "kind" : "def"}, {"label" : "resolveWith", "tail" : "(referenceResolver: (LinkSource) ⇒ Option[Span]): LinkAliasResolver", "member" : "laika.rewrite.link.LinkAliasResolver.resolveWith", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#resolveWith(referenceResolver:laika.rewrite.link.LinkSource=>Option[laika.ast.Span]):laika.rewrite.link.LinkAliasResolver", "kind" : "def"}, {"label" : "replaceTarget", "tail" : "(rewrittenOriginal: Element): Option[Element]", "member" : "laika.rewrite.link.LinkAliasResolver.replaceTarget", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#replaceTarget(rewrittenOriginal:laika.ast.Element):Option[laika.ast.Element]", "kind" : "def"}, {"label" : "resolveReference", "tail" : "(linkSource: LinkSource): Option[Span]", "member" : "laika.rewrite.link.LinkAliasResolver.resolveReference", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#resolveReference(linkSource:laika.rewrite.link.LinkSource):Option[laika.ast.Span]", "kind" : "def"}, {"member" : "laika.rewrite.link.LinkAliasResolver#<init>", "error" : "unsupported entity"}, {"label" : "formats", "tail" : ": TargetFormats", "member" : "laika.rewrite.link.LinkAliasResolver.formats", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#formats:laika.rewrite.nav.TargetFormats", "kind" : "val"}, {"label" : "referenceResolver", "tail" : ": (LinkSource) ⇒ Option[Span]", "member" : "laika.rewrite.link.LinkAliasResolver.referenceResolver", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#referenceResolver:laika.rewrite.link.LinkSource=>Option[laika.ast.Span]", "kind" : "val"}, {"label" : "targetSelector", "tail" : ": TargetIdSelector", "member" : "laika.rewrite.link.LinkAliasResolver.targetSelector", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#targetSelector:laika.rewrite.link.TargetIdSelector", "kind" : "val"}, {"label" : "sourceSelector", "tail" : ": TargetIdSelector", "member" : "laika.rewrite.link.LinkAliasResolver.sourceSelector", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#sourceSelector:laika.rewrite.link.TargetIdSelector", "kind" : "val"}, {"label" : "precedence", "tail" : ": Int", "member" : "laika.rewrite.link.TargetResolver.precedence", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#precedence:Int", "kind" : "val"}, {"label" : "targetFormats", "tail" : ": TargetFormats", "member" : "laika.rewrite.link.TargetResolver.targetFormats", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#targetFormats:laika.rewrite.nav.TargetFormats", "kind" : "val"}, {"label" : "selector", "tail" : ": Selector", "member" : "laika.rewrite.link.TargetResolver.selector", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#selector:laika.rewrite.link.Selector", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/LinkAliasResolver.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/link\/LinkAliasResolver.html", "kind" : "case class"}, {"name" : "laika.rewrite.link.LinkConfig", "shortDescription" : "", "object" : "laika\/rewrite\/link\/LinkConfig$.html", "members_object" : [{"label" : "encoder", "tail" : ": ConfigEncoder[LinkConfig]", "member" : "laika.rewrite.link.LinkConfig.encoder", "link" : "laika\/rewrite\/link\/LinkConfig$.html#encoder:laika.config.ConfigEncoder[laika.rewrite.link.LinkConfig]", "kind" : "implicit val"}, {"label" : "decoder", "tail" : ": ConfigDecoder[LinkConfig]", "member" : "laika.rewrite.link.LinkConfig.decoder", "link" : "laika\/rewrite\/link\/LinkConfig$.html#decoder:laika.config.ConfigDecoder[laika.rewrite.link.LinkConfig]", "kind" : "implicit val"}, {"label" : "key", "tail" : ": DefaultKey[LinkConfig]", "member" : "laika.rewrite.link.LinkConfig.key", "link" : "laika\/rewrite\/link\/LinkConfig$.html#key:laika.config.DefaultKey[laika.rewrite.link.LinkConfig]", "kind" : "implicit val"}, {"label" : "empty", "tail" : ": LinkConfig", "member" : "laika.rewrite.link.LinkConfig.empty", "link" : "laika\/rewrite\/link\/LinkConfig$.html#empty:laika.rewrite.link.LinkConfig", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/LinkConfig$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/LinkConfig$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/LinkConfig$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/LinkConfig$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/LinkConfig$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/LinkConfig$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/LinkConfig$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/LinkConfig$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/LinkConfig$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/LinkConfig$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/LinkConfig$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/LinkConfig$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/link\/LinkConfig$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/LinkConfig$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/link\/LinkConfig$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/link\/LinkConfig$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/LinkConfig$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/LinkConfig$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/LinkConfig$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "laika.rewrite.link.LinkConfig#<init>", "error" : "unsupported entity"}, {"label" : "sourceLinks", "tail" : ": Seq[SourceLinks]", "member" : "laika.rewrite.link.LinkConfig.sourceLinks", "link" : "laika\/rewrite\/link\/LinkConfig.html#sourceLinks:Seq[laika.rewrite.link.SourceLinks]", "kind" : "val"}, {"label" : "apiLinks", "tail" : ": Seq[ApiLinks]", "member" : "laika.rewrite.link.LinkConfig.apiLinks", "link" : "laika\/rewrite\/link\/LinkConfig.html#apiLinks:Seq[laika.rewrite.link.ApiLinks]", "kind" : "val"}, {"label" : "excludeFromValidation", "tail" : ": Seq[Path]", "member" : "laika.rewrite.link.LinkConfig.excludeFromValidation", "link" : "laika\/rewrite\/link\/LinkConfig.html#excludeFromValidation:Seq[laika.ast.Path]", "kind" : "val"}, {"label" : "targets", "tail" : ": Seq[TargetDefinition]", "member" : "laika.rewrite.link.LinkConfig.targets", "link" : "laika\/rewrite\/link\/LinkConfig.html#targets:Seq[laika.rewrite.link.TargetDefinition]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/LinkConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/LinkConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/LinkConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/LinkConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/LinkConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/LinkConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/LinkConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/LinkConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/LinkConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/LinkConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/LinkConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/LinkConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/LinkConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/LinkConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/LinkConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/LinkConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/link\/LinkConfig.html", "kind" : "case class"}, {"name" : "laika.rewrite.link.LinkDefinitionSelector", "shortDescription" : "A selector for a definition for an internal or external link.", "members_case class" : [{"label" : "description", "tail" : ": String", "member" : "laika.rewrite.link.LinkDefinitionSelector.description", "link" : "laika\/rewrite\/link\/LinkDefinitionSelector.html#description:String", "kind" : "val"}, {"member" : "laika.rewrite.link.LinkDefinitionSelector#<init>", "error" : "unsupported entity"}, {"label" : "id", "tail" : ": String", "member" : "laika.rewrite.link.LinkDefinitionSelector.id", "link" : "laika\/rewrite\/link\/LinkDefinitionSelector.html#id:String", "kind" : "val"}, {"label" : "unique", "tail" : ": Boolean", "member" : "laika.rewrite.link.UniqueSelector.unique", "link" : "laika\/rewrite\/link\/LinkDefinitionSelector.html#unique:Boolean", "kind" : "val"}, {"label" : "global", "tail" : ": Boolean", "member" : "laika.rewrite.link.UniqueSelector.global", "link" : "laika\/rewrite\/link\/LinkDefinitionSelector.html#global:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/LinkDefinitionSelector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/LinkDefinitionSelector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/LinkDefinitionSelector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/LinkDefinitionSelector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/LinkDefinitionSelector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/LinkDefinitionSelector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/LinkDefinitionSelector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/LinkDefinitionSelector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/LinkDefinitionSelector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/LinkDefinitionSelector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/LinkDefinitionSelector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/LinkDefinitionSelector.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/LinkDefinitionSelector.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/LinkDefinitionSelector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/LinkDefinitionSelector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/LinkDefinitionSelector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/link\/LinkDefinitionSelector.html", "kind" : "case class"}, {"name" : "laika.rewrite.link.LinkResolver", "shortDescription" : "The default rewrite rules responsible for resolving link references that get applied to the raw document tree after parsing.", "members_class" : [{"label" : "apply", "tail" : "(cursor: DocumentCursor): RewriteRules", "member" : "laika.rewrite.link.LinkResolver.apply", "link" : "laika\/rewrite\/link\/LinkResolver.html#apply(cursor:laika.ast.DocumentCursor):laika.ast.RewriteRules", "kind" : "def"}, {"label" : "targets", "tail" : ": TreeTargets", "member" : "laika.rewrite.link.LinkResolver.targets", "link" : "laika\/rewrite\/link\/LinkResolver.html#targets:laika.rewrite.link.TreeTargets", "kind" : "val"}, {"member" : "laika.rewrite.link.LinkResolver#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "laika\/rewrite\/link\/LinkResolver.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (RewriteRules) ⇒ A): (DocumentCursor) ⇒ A", "member" : "scala.Function1.andThen", "link" : "laika\/rewrite\/link\/LinkResolver.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ DocumentCursor): (A) ⇒ RewriteRules", "member" : "scala.Function1.compose", "link" : "laika\/rewrite\/link\/LinkResolver.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/LinkResolver.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/LinkResolver.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/LinkResolver.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/LinkResolver.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/LinkResolver.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/LinkResolver.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/LinkResolver.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/LinkResolver.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/LinkResolver.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/LinkResolver.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/LinkResolver.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/LinkResolver.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/LinkResolver.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/link\/LinkResolver.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/link\/LinkResolver.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/LinkResolver.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/LinkResolver.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/LinkResolver.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/rewrite\/link\/LinkResolver.html", "kind" : "class"}, {"name" : "laika.rewrite.link.LinkSource", "shortDescription" : "Represents the source of a link, its document pathand the actual inline span that is representing the link.", "members_case class" : [{"member" : "laika.rewrite.link.LinkSource#<init>", "error" : "unsupported entity"}, {"label" : "path", "tail" : ": Path", "member" : "laika.rewrite.link.LinkSource.path", "link" : "laika\/rewrite\/link\/LinkSource.html#path:laika.ast.Path", "kind" : "val"}, {"label" : "span", "tail" : ": Span", "member" : "laika.rewrite.link.LinkSource.span", "link" : "laika\/rewrite\/link\/LinkSource.html#span:laika.ast.Span", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/LinkSource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/LinkSource.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/LinkSource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/LinkSource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/LinkSource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/LinkSource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/LinkSource.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/LinkSource.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/LinkSource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/LinkSource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/LinkSource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/LinkSource.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/LinkSource.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/LinkSource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/LinkSource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/LinkSource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/link\/LinkSource.html", "kind" : "case class"}, {"name" : "laika.rewrite.link.PathSelector", "shortDescription" : "A selector based on a path, optionally including a fragment component.", "members_case class" : [{"label" : "description", "tail" : ": String", "member" : "laika.rewrite.link.PathSelector.description", "link" : "laika\/rewrite\/link\/PathSelector.html#description:String", "kind" : "val"}, {"member" : "laika.rewrite.link.PathSelector#<init>", "error" : "unsupported entity"}, {"label" : "path", "tail" : ": Path", "member" : "laika.rewrite.link.PathSelector.path", "link" : "laika\/rewrite\/link\/PathSelector.html#path:laika.ast.Path", "kind" : "val"}, {"label" : "unique", "tail" : ": Boolean", "member" : "laika.rewrite.link.UniqueSelector.unique", "link" : "laika\/rewrite\/link\/PathSelector.html#unique:Boolean", "kind" : "val"}, {"label" : "global", "tail" : ": Boolean", "member" : "laika.rewrite.link.UniqueSelector.global", "link" : "laika\/rewrite\/link\/PathSelector.html#global:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/PathSelector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/PathSelector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/PathSelector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/PathSelector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/PathSelector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/PathSelector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/PathSelector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/PathSelector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/PathSelector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/PathSelector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/PathSelector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/PathSelector.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/PathSelector.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/PathSelector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/PathSelector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/PathSelector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/link\/PathSelector.html", "kind" : "case class"}, {"name" : "laika.rewrite.link.RecoveredTarget", "shortDescription" : "", "members_case class" : [{"member" : "laika.rewrite.link.RecoveredTarget#<init>", "error" : "unsupported entity"}, {"label" : "recoveredTarget", "tail" : ": ResolvedInternalTarget", "member" : "laika.rewrite.link.RecoveredTarget.recoveredTarget", "link" : "laika\/rewrite\/link\/RecoveredTarget.html#recoveredTarget:laika.ast.ResolvedInternalTarget", "kind" : "val"}, {"label" : "message", "tail" : ": String", "member" : "laika.rewrite.link.RecoveredTarget.message", "link" : "laika\/rewrite\/link\/RecoveredTarget.html#message:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/RecoveredTarget.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/RecoveredTarget.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/RecoveredTarget.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/RecoveredTarget.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/RecoveredTarget.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/RecoveredTarget.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/RecoveredTarget.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/RecoveredTarget.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/RecoveredTarget.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/RecoveredTarget.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/RecoveredTarget.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/RecoveredTarget.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/RecoveredTarget.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/RecoveredTarget.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/RecoveredTarget.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/RecoveredTarget.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/link\/RecoveredTarget.html", "kind" : "case class"}, {"name" : "laika.rewrite.link.ReferenceResolver", "shortDescription" : "", "object" : "laika\/rewrite\/link\/ReferenceResolver$.html", "members_object" : [{"label" : "resolveTarget", "tail" : "(target: Target, refPath: Path): Target", "member" : "laika.rewrite.link.ReferenceResolver.resolveTarget", "link" : "laika\/rewrite\/link\/ReferenceResolver$.html#resolveTarget(target:laika.ast.Target,refPath:laika.ast.Path):laika.ast.Target", "kind" : "def"}, {"label" : "resolveTarget", "tail" : "(target: RelativePath, refPath: Path): Target", "member" : "laika.rewrite.link.ReferenceResolver.resolveTarget", "link" : "laika\/rewrite\/link\/ReferenceResolver$.html#resolveTarget(target:laika.ast.RelativePath,refPath:laika.ast.Path):laika.ast.Target", "kind" : "def"}, {"label" : "internalLink", "tail" : "(target: Path): (LinkSource) ⇒ Option[Span]", "member" : "laika.rewrite.link.ReferenceResolver.internalLink", "link" : "laika\/rewrite\/link\/ReferenceResolver$.html#internalLink(target:laika.ast.Path):laika.rewrite.link.LinkSource=>Option[laika.ast.Span]", "kind" : "def"}, {"label" : "lift", "tail" : "(f: PartialFunction[LinkSource, Span]): (LinkSource) ⇒ Option[Span]", "member" : "laika.rewrite.link.ReferenceResolver.lift", "link" : "laika\/rewrite\/link\/ReferenceResolver$.html#lift(f:PartialFunction[laika.rewrite.link.LinkSource,laika.ast.Span]):laika.rewrite.link.LinkSource=>Option[laika.ast.Span]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/ReferenceResolver$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/ReferenceResolver$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/ReferenceResolver$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/ReferenceResolver$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/ReferenceResolver$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/ReferenceResolver$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/ReferenceResolver$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/ReferenceResolver$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/ReferenceResolver$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/ReferenceResolver$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/ReferenceResolver$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/ReferenceResolver$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/link\/ReferenceResolver$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/ReferenceResolver$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/link\/ReferenceResolver$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/link\/ReferenceResolver$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/ReferenceResolver$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/ReferenceResolver$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/ReferenceResolver$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.rewrite.link.Selector", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/Selector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/Selector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/Selector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/Selector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/Selector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/Selector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/Selector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/Selector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/Selector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/Selector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/Selector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/Selector.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/link\/Selector.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/Selector.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/link\/Selector.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/link\/Selector.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/Selector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/Selector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/Selector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "unique", "tail" : "(): Boolean", "member" : "laika.rewrite.link.Selector.unique", "link" : "laika\/rewrite\/link\/Selector.html#unique:Boolean", "kind" : "abstract def"}, {"label" : "global", "tail" : "(): Boolean", "member" : "laika.rewrite.link.Selector.global", "link" : "laika\/rewrite\/link\/Selector.html#global:Boolean", "kind" : "abstract def"}], "shortDescription" : "Represents a selector used for matching reference nodes to target nodes.", "trait" : "laika\/rewrite\/link\/Selector.html", "kind" : "trait"}, {"name" : "laika.rewrite.link.SequenceSelector", "members_trait" : [{"label" : "unique", "tail" : ": Boolean", "member" : "laika.rewrite.link.SequenceSelector.unique", "link" : "laika\/rewrite\/link\/SequenceSelector.html#unique:Boolean", "kind" : "val"}, {"label" : "global", "tail" : ": Boolean", "member" : "laika.rewrite.link.SequenceSelector.global", "link" : "laika\/rewrite\/link\/SequenceSelector.html#global:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/SequenceSelector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/SequenceSelector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/SequenceSelector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/SequenceSelector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/SequenceSelector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/SequenceSelector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/SequenceSelector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/SequenceSelector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/SequenceSelector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/SequenceSelector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/SequenceSelector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/SequenceSelector.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/link\/SequenceSelector.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/SequenceSelector.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/link\/SequenceSelector.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/link\/SequenceSelector.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/SequenceSelector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/SequenceSelector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/SequenceSelector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A selector that can be used for a sequence of targets.", "trait" : "laika\/rewrite\/link\/SequenceSelector.html", "kind" : "trait"}, {"name" : "laika.rewrite.link.SlugBuilder", "shortDescription" : "Default implementation for the logic that transforms section titles, document names and user-provided ids to a slug that is compatible with HTML\/XML ids, URLs and file names.", "object" : "laika\/rewrite\/link\/SlugBuilder$.html", "members_object" : [{"label" : "default", "tail" : "(text: String): String", "member" : "laika.rewrite.link.SlugBuilder.default", "link" : "laika\/rewrite\/link\/SlugBuilder$.html#default(text:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/SlugBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/SlugBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/SlugBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/SlugBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/SlugBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/SlugBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/SlugBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/SlugBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/SlugBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/SlugBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/SlugBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/SlugBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/link\/SlugBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/SlugBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/link\/SlugBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/link\/SlugBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/SlugBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/SlugBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/SlugBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.rewrite.link.SourceLinks", "shortDescription" : "", "object" : "laika\/rewrite\/link\/SourceLinks$.html", "members_object" : [{"label" : "encoder", "tail" : ": ConfigEncoder[SourceLinks]", "member" : "laika.rewrite.link.SourceLinks.encoder", "link" : "laika\/rewrite\/link\/SourceLinks$.html#encoder:laika.config.ConfigEncoder[laika.rewrite.link.SourceLinks]", "kind" : "implicit val"}, {"label" : "decoder", "tail" : ": ConfigDecoder[SourceLinks]", "member" : "laika.rewrite.link.SourceLinks.decoder", "link" : "laika\/rewrite\/link\/SourceLinks$.html#decoder:laika.config.ConfigDecoder[laika.rewrite.link.SourceLinks]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/SourceLinks$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/SourceLinks$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/SourceLinks$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/SourceLinks$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/SourceLinks$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/SourceLinks$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/SourceLinks$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/SourceLinks$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/SourceLinks$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/SourceLinks$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/SourceLinks$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/SourceLinks$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/link\/SourceLinks$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/SourceLinks$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/link\/SourceLinks$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/link\/SourceLinks$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/SourceLinks$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/SourceLinks$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/SourceLinks$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "laika.rewrite.link.SourceLinks#<init>", "error" : "unsupported entity"}, {"label" : "packagePrefix", "tail" : ": String", "member" : "laika.rewrite.link.SourceLinks.packagePrefix", "link" : "laika\/rewrite\/link\/SourceLinks.html#packagePrefix:String", "kind" : "val"}, {"label" : "suffix", "tail" : ": String", "member" : "laika.rewrite.link.SourceLinks.suffix", "link" : "laika\/rewrite\/link\/SourceLinks.html#suffix:String", "kind" : "val"}, {"label" : "baseUri", "tail" : ": String", "member" : "laika.rewrite.link.SourceLinks.baseUri", "link" : "laika\/rewrite\/link\/SourceLinks.html#baseUri:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/SourceLinks.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/SourceLinks.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/SourceLinks.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/SourceLinks.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/SourceLinks.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/SourceLinks.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/SourceLinks.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/SourceLinks.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/SourceLinks.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/SourceLinks.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/SourceLinks.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/SourceLinks.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/SourceLinks.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/SourceLinks.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/SourceLinks.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/SourceLinks.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/link\/SourceLinks.html", "kind" : "case class"}, {"name" : "laika.rewrite.link.TargetDefinition", "shortDescription" : "", "members_case class" : [{"member" : "laika.rewrite.link.TargetDefinition#<init>", "error" : "unsupported entity"}, {"label" : "target", "tail" : ": Target", "member" : "laika.rewrite.link.TargetDefinition.target", "link" : "laika\/rewrite\/link\/TargetDefinition.html#target:laika.ast.Target", "kind" : "val"}, {"label" : "id", "tail" : ": String", "member" : "laika.rewrite.link.TargetDefinition.id", "link" : "laika\/rewrite\/link\/TargetDefinition.html#id:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/TargetDefinition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/TargetDefinition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/TargetDefinition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/TargetDefinition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/TargetDefinition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/TargetDefinition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/TargetDefinition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/TargetDefinition.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/TargetDefinition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/TargetDefinition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/TargetDefinition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/TargetDefinition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/TargetDefinition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/TargetDefinition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/TargetDefinition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/TargetDefinition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/link\/TargetDefinition.html", "kind" : "case class"}, {"name" : "laika.rewrite.link.TargetIdSelector", "shortDescription" : "A selector for a rendered target in a document.", "members_case class" : [{"label" : "description", "tail" : ": String", "member" : "laika.rewrite.link.TargetIdSelector.description", "link" : "laika\/rewrite\/link\/TargetIdSelector.html#description:String", "kind" : "val"}, {"member" : "laika.rewrite.link.TargetIdSelector#<init>", "error" : "unsupported entity"}, {"label" : "id", "tail" : ": String", "member" : "laika.rewrite.link.TargetIdSelector.id", "link" : "laika\/rewrite\/link\/TargetIdSelector.html#id:String", "kind" : "val"}, {"label" : "unique", "tail" : ": Boolean", "member" : "laika.rewrite.link.UniqueSelector.unique", "link" : "laika\/rewrite\/link\/TargetIdSelector.html#unique:Boolean", "kind" : "val"}, {"label" : "global", "tail" : ": Boolean", "member" : "laika.rewrite.link.UniqueSelector.global", "link" : "laika\/rewrite\/link\/TargetIdSelector.html#global:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/TargetIdSelector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/TargetIdSelector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/TargetIdSelector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/TargetIdSelector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/TargetIdSelector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/TargetIdSelector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/TargetIdSelector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/TargetIdSelector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/TargetIdSelector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/TargetIdSelector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/TargetIdSelector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/TargetIdSelector.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/TargetIdSelector.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/TargetIdSelector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/TargetIdSelector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/TargetIdSelector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/link\/TargetIdSelector.html", "kind" : "case class"}, {"name" : "laika.rewrite.link.TargetReplacer", "shortDescription" : "", "object" : "laika\/rewrite\/link\/TargetReplacer$.html", "members_object" : [{"label" : "removeTarget", "tail" : ": (Block) ⇒ Option[Block]", "member" : "laika.rewrite.link.TargetReplacer.removeTarget", "link" : "laika\/rewrite\/link\/TargetReplacer$.html#removeTarget:laika.ast.Block=>Option[laika.ast.Block]", "kind" : "val"}, {"label" : "removeId", "tail" : ": (Block) ⇒ Option[Block]", "member" : "laika.rewrite.link.TargetReplacer.removeId", "link" : "laika\/rewrite\/link\/TargetReplacer$.html#removeId:laika.ast.Block=>Option[laika.ast.Block]", "kind" : "val"}, {"label" : "addId", "tail" : "(id: String): (Block) ⇒ Option[Block]", "member" : "laika.rewrite.link.TargetReplacer.addId", "link" : "laika\/rewrite\/link\/TargetReplacer$.html#addId(id:String):laika.ast.Block=>Option[laika.ast.Block]", "kind" : "def"}, {"label" : "lift", "tail" : "(f: PartialFunction[Block, Block]): (Block) ⇒ Option[Block]", "member" : "laika.rewrite.link.TargetReplacer.lift", "link" : "laika\/rewrite\/link\/TargetReplacer$.html#lift(f:PartialFunction[laika.ast.Block,laika.ast.Block]):laika.ast.Block=>Option[laika.ast.Block]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/TargetReplacer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/TargetReplacer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/TargetReplacer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/TargetReplacer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/TargetReplacer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/TargetReplacer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/TargetReplacer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/TargetReplacer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/TargetReplacer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/TargetReplacer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/TargetReplacer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/TargetReplacer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/link\/TargetReplacer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/TargetReplacer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/link\/TargetReplacer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/link\/TargetReplacer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/TargetReplacer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/TargetReplacer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/TargetReplacer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.rewrite.link.TargetResolver", "shortDescription" : "Represents a resolver for a target that has its final identifier generated(if necessary) and can be used to resolve matching reference nodes.", "object" : "laika\/rewrite\/link\/TargetResolver$.html", "members_class" : [{"label" : "precedence", "tail" : ": Int", "member" : "laika.rewrite.link.TargetResolver.precedence", "link" : "laika\/rewrite\/link\/TargetResolver.html#precedence:Int", "kind" : "val"}, {"label" : "targetFormats", "tail" : ": TargetFormats", "member" : "laika.rewrite.link.TargetResolver.targetFormats", "link" : "laika\/rewrite\/link\/TargetResolver.html#targetFormats:laika.rewrite.nav.TargetFormats", "kind" : "val"}, {"label" : "selector", "tail" : ": Selector", "member" : "laika.rewrite.link.TargetResolver.selector", "link" : "laika\/rewrite\/link\/TargetResolver.html#selector:laika.rewrite.link.Selector", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/TargetResolver.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/TargetResolver.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/TargetResolver.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/TargetResolver.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/TargetResolver.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/TargetResolver.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/TargetResolver.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/TargetResolver.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/TargetResolver.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/TargetResolver.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/TargetResolver.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/TargetResolver.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/link\/TargetResolver.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/TargetResolver.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/link\/TargetResolver.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/link\/TargetResolver.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/TargetResolver.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/TargetResolver.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/TargetResolver.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "replaceTarget", "tail" : "(rewrittenOriginal: Element): Option[Element]", "member" : "laika.rewrite.link.TargetResolver.replaceTarget", "link" : "laika\/rewrite\/link\/TargetResolver.html#replaceTarget(rewrittenOriginal:laika.ast.Element):Option[laika.ast.Element]", "kind" : "abstract def"}, {"label" : "resolveReference", "tail" : "(linkSource: LinkSource): Option[Span]", "member" : "laika.rewrite.link.TargetResolver.resolveReference", "link" : "laika\/rewrite\/link\/TargetResolver.html#resolveReference(linkSource:laika.rewrite.link.LinkSource):Option[laika.ast.Span]", "kind" : "abstract def"}], "members_object" : [{"label" : "forDelegate", "tail" : "(selector: Selector, delegate: TargetResolver): TargetResolver", "member" : "laika.rewrite.link.TargetResolver.forDelegate", "link" : "laika\/rewrite\/link\/TargetResolver$.html#forDelegate(selector:laika.rewrite.link.Selector,delegate:laika.rewrite.link.TargetResolver):laika.rewrite.link.TargetResolver", "kind" : "def"}, {"label" : "forDuplicateSelector", "tail" : "(selector: UniqueSelector, path: Path, targets: Seq[TargetResolver]): TargetResolver", "member" : "laika.rewrite.link.TargetResolver.forDuplicateSelector", "link" : "laika\/rewrite\/link\/TargetResolver$.html#forDuplicateSelector(selector:laika.rewrite.link.UniqueSelector,path:laika.ast.Path,targets:Seq[laika.rewrite.link.TargetResolver]):laika.rewrite.link.TargetResolver", "kind" : "def"}, {"label" : "forInvalidTarget", "tail" : "(selector: UniqueSelector, msg: String): TargetResolver", "member" : "laika.rewrite.link.TargetResolver.forInvalidTarget", "link" : "laika\/rewrite\/link\/TargetResolver$.html#forInvalidTarget(selector:laika.rewrite.link.UniqueSelector,msg:String):laika.rewrite.link.TargetResolver", "kind" : "def"}, {"label" : "forSpanTarget", "tail" : "(idSelector: TargetIdSelector, referenceResolver: (LinkSource) ⇒ Option[Span], targetFormats: TargetFormats): TargetResolver", "member" : "laika.rewrite.link.TargetResolver.forSpanTarget", "link" : "laika\/rewrite\/link\/TargetResolver$.html#forSpanTarget(idSelector:laika.rewrite.link.TargetIdSelector,referenceResolver:laika.rewrite.link.LinkSource=>Option[laika.ast.Span],targetFormats:laika.rewrite.nav.TargetFormats):laika.rewrite.link.TargetResolver", "kind" : "def"}, {"label" : "create", "tail" : "(selector: Selector, referenceResolver: (LinkSource) ⇒ Option[Span], targetResolver: (Block) ⇒ Option[Block], targetFormats: TargetFormats, precedence: Int): TargetResolver", "member" : "laika.rewrite.link.TargetResolver.create", "link" : "laika\/rewrite\/link\/TargetResolver$.html#create(selector:laika.rewrite.link.Selector,referenceResolver:laika.rewrite.link.LinkSource=>Option[laika.ast.Span],targetResolver:laika.ast.Block=>Option[laika.ast.Block],targetFormats:laika.rewrite.nav.TargetFormats,precedence:Int):laika.rewrite.link.TargetResolver", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/TargetResolver$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/TargetResolver$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/TargetResolver$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/TargetResolver$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/TargetResolver$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/TargetResolver$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/TargetResolver$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/TargetResolver$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/TargetResolver$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/TargetResolver$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/TargetResolver$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/TargetResolver$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/link\/TargetResolver$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/TargetResolver$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/link\/TargetResolver$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/link\/TargetResolver$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/TargetResolver$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/TargetResolver$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/TargetResolver$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/rewrite\/link\/TargetResolver.html", "kind" : "class"}, {"name" : "laika.rewrite.link.TargetSequenceResolver", "shortDescription" : "Represents a resolver for a sequence of targets where matching reference nodes get determined by position.", "members_case class" : [{"label" : "replaceTarget", "tail" : "(rewrittenOriginal: Element): Option[Element]", "member" : "laika.rewrite.link.TargetSequenceResolver.replaceTarget", "link" : "laika\/rewrite\/link\/TargetSequenceResolver.html#replaceTarget(rewrittenOriginal:laika.ast.Element):Option[laika.ast.Element]", "kind" : "def"}, {"label" : "resolveReference", "tail" : "(linkSource: LinkSource): Option[Span]", "member" : "laika.rewrite.link.TargetSequenceResolver.resolveReference", "link" : "laika\/rewrite\/link\/TargetSequenceResolver.html#resolveReference(linkSource:laika.rewrite.link.LinkSource):Option[laika.ast.Span]", "kind" : "def"}, {"member" : "laika.rewrite.link.TargetSequenceResolver#<init>", "error" : "unsupported entity"}, {"label" : "sel", "tail" : ": Selector", "member" : "laika.rewrite.link.TargetSequenceResolver.sel", "link" : "laika\/rewrite\/link\/TargetSequenceResolver.html#sel:laika.rewrite.link.Selector", "kind" : "val"}, {"label" : "targets", "tail" : ": Seq[TargetResolver]", "member" : "laika.rewrite.link.TargetSequenceResolver.targets", "link" : "laika\/rewrite\/link\/TargetSequenceResolver.html#targets:Seq[laika.rewrite.link.TargetResolver]", "kind" : "val"}, {"label" : "precedence", "tail" : ": Int", "member" : "laika.rewrite.link.TargetResolver.precedence", "link" : "laika\/rewrite\/link\/TargetSequenceResolver.html#precedence:Int", "kind" : "val"}, {"label" : "targetFormats", "tail" : ": TargetFormats", "member" : "laika.rewrite.link.TargetResolver.targetFormats", "link" : "laika\/rewrite\/link\/TargetSequenceResolver.html#targetFormats:laika.rewrite.nav.TargetFormats", "kind" : "val"}, {"label" : "selector", "tail" : ": Selector", "member" : "laika.rewrite.link.TargetResolver.selector", "link" : "laika\/rewrite\/link\/TargetSequenceResolver.html#selector:laika.rewrite.link.Selector", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/TargetSequenceResolver.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/TargetSequenceResolver.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/TargetSequenceResolver.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/TargetSequenceResolver.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/TargetSequenceResolver.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/TargetSequenceResolver.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/TargetSequenceResolver.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/TargetSequenceResolver.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/TargetSequenceResolver.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/TargetSequenceResolver.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/TargetSequenceResolver.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/TargetSequenceResolver.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/TargetSequenceResolver.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/TargetSequenceResolver.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/TargetSequenceResolver.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/TargetSequenceResolver.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/rewrite\/link\/TargetSequenceResolver.html", "kind" : "case class"}, {"name" : "laika.rewrite.link.TargetValidation", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/TargetValidation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/TargetValidation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/TargetValidation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/TargetValidation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/TargetValidation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/TargetValidation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/TargetValidation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/TargetValidation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/TargetValidation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/TargetValidation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/TargetValidation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/TargetValidation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/link\/TargetValidation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/TargetValidation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/link\/TargetValidation.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/link\/TargetValidation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/TargetValidation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/TargetValidation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/TargetValidation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "laika\/rewrite\/link\/TargetValidation.html", "kind" : "trait"}, {"name" : "laika.rewrite.link.TreeTargets", "shortDescription" : "Collects all elements from a document tree that can be referenced from other elements,like images, footnotes, citations and other inline targets.", "members_class" : [{"label" : "select", "tail" : "(scope: Path, selector: Selector): Option[TargetResolver]", "member" : "laika.rewrite.link.TreeTargets.select", "link" : "laika\/rewrite\/link\/TreeTargets.html#select(scope:laika.ast.Path,selector:laika.rewrite.link.Selector):Option[laika.rewrite.link.TargetResolver]", "kind" : "def"}, {"member" : "laika.rewrite.link.TreeTargets#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/TreeTargets.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/TreeTargets.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/TreeTargets.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/TreeTargets.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/TreeTargets.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/TreeTargets.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/TreeTargets.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/TreeTargets.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/TreeTargets.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/TreeTargets.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/TreeTargets.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/TreeTargets.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/link\/TreeTargets.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/TreeTargets.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/link\/TreeTargets.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/link\/TreeTargets.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/TreeTargets.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/TreeTargets.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/TreeTargets.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/rewrite\/link\/TreeTargets.html", "kind" : "class"}, {"name" : "laika.rewrite.link.UniqueSelector", "members_trait" : [{"label" : "unique", "tail" : ": Boolean", "member" : "laika.rewrite.link.UniqueSelector.unique", "link" : "laika\/rewrite\/link\/UniqueSelector.html#unique:Boolean", "kind" : "val"}, {"label" : "global", "tail" : ": Boolean", "member" : "laika.rewrite.link.UniqueSelector.global", "link" : "laika\/rewrite\/link\/UniqueSelector.html#global:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/UniqueSelector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/UniqueSelector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/UniqueSelector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/UniqueSelector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/UniqueSelector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/UniqueSelector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/UniqueSelector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/UniqueSelector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/UniqueSelector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/UniqueSelector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/UniqueSelector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/UniqueSelector.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/rewrite\/link\/UniqueSelector.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/UniqueSelector.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/link\/UniqueSelector.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/rewrite\/link\/UniqueSelector.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/UniqueSelector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/UniqueSelector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/UniqueSelector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "description", "tail" : "(): String", "member" : "laika.rewrite.link.UniqueSelector.description", "link" : "laika\/rewrite\/link\/UniqueSelector.html#description:String", "kind" : "abstract def"}], "shortDescription" : "A selector that can is a globally unique identifier.", "trait" : "laika\/rewrite\/link\/UniqueSelector.html", "kind" : "trait"}, {"name" : "laika.rewrite.link.ValidTarget", "shortDescription" : "", "object" : "laika\/rewrite\/link\/ValidTarget$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/rewrite\/link\/ValidTarget$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/rewrite\/link\/ValidTarget$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/rewrite\/link\/ValidTarget$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/rewrite\/link\/ValidTarget$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/rewrite\/link\/ValidTarget$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/rewrite\/link\/ValidTarget$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/rewrite\/link\/ValidTarget$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/ValidTarget$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/ValidTarget$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/rewrite\/link\/ValidTarget$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/rewrite\/link\/ValidTarget$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/rewrite\/link\/ValidTarget$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/rewrite\/link\/ValidTarget$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/rewrite\/link\/ValidTarget$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/rewrite\/link\/ValidTarget$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/rewrite\/link\/ValidTarget$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/rewrite\/link\/ValidTarget$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "laika.parse.hocon" : [{"name" : "laika.parse.hocon.ArrayBuilderValue", "shortDescription" : "An array value with all its elements.", "members_case class" : [{"member" : "laika.parse.hocon.ArrayBuilderValue#<init>", "error" : "unsupported entity"}, {"label" : "values", "tail" : ": Seq[ConfigBuilderValue]", "member" : "laika.parse.hocon.ArrayBuilderValue.values", "link" : "laika\/parse\/hocon\/ArrayBuilderValue.html#values:Seq[laika.parse.hocon.ConfigBuilderValue]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/hocon\/ArrayBuilderValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/hocon\/ArrayBuilderValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/hocon\/ArrayBuilderValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/hocon\/ArrayBuilderValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/hocon\/ArrayBuilderValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/hocon\/ArrayBuilderValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/hocon\/ArrayBuilderValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/ArrayBuilderValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/ArrayBuilderValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/ArrayBuilderValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/hocon\/ArrayBuilderValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/hocon\/ArrayBuilderValue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/hocon\/ArrayBuilderValue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/hocon\/ArrayBuilderValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/hocon\/ArrayBuilderValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/hocon\/ArrayBuilderValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/parse\/hocon\/ArrayBuilderValue.html", "kind" : "case class"}, {"name" : "laika.parse.hocon.BuilderField", "shortDescription" : "A single field of an object value.", "object" : "laika\/parse\/hocon\/BuilderField$.html", "members_object" : [{"label" : "apply", "tail" : "(key: Key, value: ConfigBuilderValue): BuilderField", "member" : "laika.parse.hocon.BuilderField.apply", "link" : "laika\/parse\/hocon\/BuilderField$.html#apply(key:laika.config.Key,value:laika.parse.hocon.ConfigBuilderValue):laika.parse.hocon.BuilderField", "kind" : "def"}, {"label" : "apply", "tail" : "(key: String, value: ConfigBuilderValue): BuilderField", "member" : "laika.parse.hocon.BuilderField.apply", "link" : "laika\/parse\/hocon\/BuilderField$.html#apply(key:String,value:laika.parse.hocon.ConfigBuilderValue):laika.parse.hocon.BuilderField", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/hocon\/BuilderField$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/hocon\/BuilderField$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/hocon\/BuilderField$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/hocon\/BuilderField$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/hocon\/BuilderField$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/hocon\/BuilderField$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/hocon\/BuilderField$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/BuilderField$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/BuilderField$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/BuilderField$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/hocon\/BuilderField$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/hocon\/BuilderField$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/hocon\/BuilderField$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/hocon\/BuilderField$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/hocon\/BuilderField$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/hocon\/BuilderField$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/hocon\/BuilderField$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/hocon\/BuilderField$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/hocon\/BuilderField$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "validKey", "tail" : "(): Key", "member" : "laika.parse.hocon.BuilderField.validKey", "link" : "laika\/parse\/hocon\/BuilderField.html#validKey:laika.config.Key", "kind" : "def"}, {"member" : "laika.parse.hocon.BuilderField#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": ConfigBuilderValue", "member" : "laika.parse.hocon.BuilderField.value", "link" : "laika\/parse\/hocon\/BuilderField.html#value:laika.parse.hocon.ConfigBuilderValue", "kind" : "val"}, {"label" : "key", "tail" : ": Either[InvalidStringValue, Key]", "member" : "laika.parse.hocon.BuilderField.key", "link" : "laika\/parse\/hocon\/BuilderField.html#key:Either[laika.parse.hocon.InvalidStringValue,laika.config.Key]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/hocon\/BuilderField.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/hocon\/BuilderField.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/hocon\/BuilderField.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/hocon\/BuilderField.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/hocon\/BuilderField.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/hocon\/BuilderField.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/hocon\/BuilderField.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/BuilderField.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/BuilderField.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/BuilderField.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/hocon\/BuilderField.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/hocon\/BuilderField.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/hocon\/BuilderField.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/hocon\/BuilderField.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/hocon\/BuilderField.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/hocon\/BuilderField.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/parse\/hocon\/BuilderField.html", "kind" : "case class"}, {"name" : "laika.parse.hocon.ConcatPart", "shortDescription" : "A single part of a concatenated value with the whitespace between this and the previous value preserved.", "members_case class" : [{"member" : "laika.parse.hocon.ConcatPart#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": ConfigBuilderValue", "member" : "laika.parse.hocon.ConcatPart.value", "link" : "laika\/parse\/hocon\/ConcatPart.html#value:laika.parse.hocon.ConfigBuilderValue", "kind" : "val"}, {"label" : "whitespace", "tail" : ": String", "member" : "laika.parse.hocon.ConcatPart.whitespace", "link" : "laika\/parse\/hocon\/ConcatPart.html#whitespace:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/hocon\/ConcatPart.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/hocon\/ConcatPart.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/hocon\/ConcatPart.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/hocon\/ConcatPart.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/hocon\/ConcatPart.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/hocon\/ConcatPart.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/hocon\/ConcatPart.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/ConcatPart.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/ConcatPart.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/ConcatPart.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/hocon\/ConcatPart.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/hocon\/ConcatPart.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/hocon\/ConcatPart.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/hocon\/ConcatPart.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/hocon\/ConcatPart.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/hocon\/ConcatPart.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/parse\/hocon\/ConcatPart.html", "kind" : "case class"}, {"name" : "laika.parse.hocon.ConcatValue", "shortDescription" : "A concatenated value (either all objects, all arrays, all simple values or invalid).", "members_case class" : [{"label" : "allParts", "tail" : ": Seq[ConcatPart]", "member" : "laika.parse.hocon.ConcatValue.allParts", "link" : "laika\/parse\/hocon\/ConcatValue.html#allParts:Seq[laika.parse.hocon.ConcatPart]", "kind" : "val"}, {"member" : "laika.parse.hocon.ConcatValue#<init>", "error" : "unsupported entity"}, {"label" : "rest", "tail" : ": Seq[ConcatPart]", "member" : "laika.parse.hocon.ConcatValue.rest", "link" : "laika\/parse\/hocon\/ConcatValue.html#rest:Seq[laika.parse.hocon.ConcatPart]", "kind" : "val"}, {"label" : "first", "tail" : ": ConfigBuilderValue", "member" : "laika.parse.hocon.ConcatValue.first", "link" : "laika\/parse\/hocon\/ConcatValue.html#first:laika.parse.hocon.ConfigBuilderValue", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/hocon\/ConcatValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/hocon\/ConcatValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/hocon\/ConcatValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/hocon\/ConcatValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/hocon\/ConcatValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/hocon\/ConcatValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/hocon\/ConcatValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/ConcatValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/ConcatValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/ConcatValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/hocon\/ConcatValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/hocon\/ConcatValue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/hocon\/ConcatValue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/hocon\/ConcatValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/hocon\/ConcatValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/hocon\/ConcatValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/parse\/hocon\/ConcatValue.html", "kind" : "case class"}, {"name" : "laika.parse.hocon.ConfigBuilderValue", "members_trait" : [{"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/parse\/hocon\/ConfigBuilderValue.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/parse\/hocon\/ConfigBuilderValue.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/hocon\/ConfigBuilderValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/hocon\/ConfigBuilderValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/hocon\/ConfigBuilderValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/hocon\/ConfigBuilderValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/hocon\/ConfigBuilderValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/hocon\/ConfigBuilderValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/hocon\/ConfigBuilderValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/ConfigBuilderValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/ConfigBuilderValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/ConfigBuilderValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/hocon\/ConfigBuilderValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/hocon\/ConfigBuilderValue.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/hocon\/ConfigBuilderValue.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/hocon\/ConfigBuilderValue.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/hocon\/ConfigBuilderValue.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/hocon\/ConfigBuilderValue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/hocon\/ConfigBuilderValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/hocon\/ConfigBuilderValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/hocon\/ConfigBuilderValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/parse\/hocon\/ConfigBuilderValue.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/parse\/hocon\/ConfigBuilderValue.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/parse\/hocon\/ConfigBuilderValue.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "The base trait of the interim configuration model (usually obtained from a HOCON parser).", "trait" : "laika\/parse\/hocon\/ConfigBuilderValue.html", "kind" : "trait"}, {"name" : "laika.parse.hocon.ConfigResolver", "shortDescription" : "Translates the interim configuration model (usually obtained from a HOCON parser)into the final object model.", "object" : "laika\/parse\/hocon\/ConfigResolver$.html", "members_object" : [{"label" : "extractErrors", "tail" : "(obj: ObjectBuilderValue): Seq[Failure]", "member" : "laika.parse.hocon.ConfigResolver.extractErrors", "link" : "laika\/parse\/hocon\/ConfigResolver$.html#extractErrors(obj:laika.parse.hocon.ObjectBuilderValue):Seq[laika.parse.Failure]", "kind" : "def"}, {"label" : "expandPaths", "tail" : "(obj: ObjectBuilderValue, key: Key): ObjectBuilderValue", "member" : "laika.parse.hocon.ConfigResolver.expandPaths", "link" : "laika\/parse\/hocon\/ConfigResolver$.html#expandPaths(obj:laika.parse.hocon.ObjectBuilderValue,key:laika.config.Key):laika.parse.hocon.ObjectBuilderValue", "kind" : "def"}, {"label" : "mergeObjects", "tail" : "(obj: ObjectBuilderValue): ObjectBuilderValue", "member" : "laika.parse.hocon.ConfigResolver.mergeObjects", "link" : "laika\/parse\/hocon\/ConfigResolver$.html#mergeObjects(obj:laika.parse.hocon.ObjectBuilderValue):laika.parse.hocon.ObjectBuilderValue", "kind" : "def"}, {"label" : "resolve", "tail" : "(root: ObjectBuilderValue, origin: Origin, fallback: Config, includes: IncludeMap): Either[ConfigError, ObjectValue]", "member" : "laika.parse.hocon.ConfigResolver.resolve", "link" : "laika\/parse\/hocon\/ConfigResolver$.html#resolve(root:laika.parse.hocon.ObjectBuilderValue,origin:laika.config.Origin,fallback:laika.config.Config,includes:laika.config.Config.IncludeMap):Either[laika.config.ConfigError,laika.config.ObjectValue]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/hocon\/ConfigResolver$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/hocon\/ConfigResolver$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/hocon\/ConfigResolver$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/hocon\/ConfigResolver$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/hocon\/ConfigResolver$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/hocon\/ConfigResolver$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/hocon\/ConfigResolver$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/ConfigResolver$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/ConfigResolver$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/ConfigResolver$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/hocon\/ConfigResolver$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/hocon\/ConfigResolver$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/hocon\/ConfigResolver$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/hocon\/ConfigResolver$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/hocon\/ConfigResolver$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/hocon\/ConfigResolver$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/hocon\/ConfigResolver$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/hocon\/ConfigResolver$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/hocon\/ConfigResolver$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.hocon.HoconParsers", "shortDescription" : "The parser implementation for the HOCON format.", "object" : "laika\/parse\/hocon\/HoconParsers$.html", "members_object" : [{"label" : "anyValue", "tail" : "(delimiter: NonEmptySet[Char]): Parser[ConfigBuilderValue]", "member" : "laika.parse.hocon.HoconParsers.anyValue", "link" : "laika\/parse\/hocon\/HoconParsers$.html#anyValue(delimiter:cats.data.NonEmptySet[Char]):laika.parse.Parser[laika.parse.hocon.ConfigBuilderValue]", "kind" : "def"}, {"label" : "rootObject", "tail" : ": Parser[ObjectBuilderValue]", "member" : "laika.parse.hocon.HoconParsers.rootObject", "link" : "laika\/parse\/hocon\/HoconParsers$.html#rootObject:laika.parse.Parser[laika.parse.hocon.ObjectBuilderValue]", "kind" : "lazy val"}, {"label" : "objectValue", "tail" : ": Parser[ConfigBuilderValue]", "member" : "laika.parse.hocon.HoconParsers.objectValue", "link" : "laika\/parse\/hocon\/HoconParsers$.html#objectValue:laika.parse.Parser[laika.parse.hocon.ConfigBuilderValue]", "kind" : "lazy val"}, {"label" : "arrayValue", "tail" : ": Parser[ConfigBuilderValue]", "member" : "laika.parse.hocon.HoconParsers.arrayValue", "link" : "laika\/parse\/hocon\/HoconParsers$.html#arrayValue:laika.parse.Parser[laika.parse.hocon.ConfigBuilderValue]", "kind" : "lazy val"}, {"label" : "wsOrComment", "tail" : ": Parser[Any]", "member" : "laika.parse.hocon.HoconParsers.wsOrComment", "link" : "laika\/parse\/hocon\/HoconParsers$.html#wsOrComment:laika.parse.Parser[Any]", "kind" : "val"}, {"label" : "comment", "tail" : ": Parser[String]", "member" : "laika.parse.hocon.HoconParsers.comment", "link" : "laika\/parse\/hocon\/HoconParsers$.html#comment:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "include", "tail" : ": Parser[ConfigBuilderValue]", "member" : "laika.parse.hocon.HoconParsers.include", "link" : "laika\/parse\/hocon\/HoconParsers$.html#include:laika.parse.Parser[laika.parse.hocon.ConfigBuilderValue]", "kind" : "val"}, {"label" : "substitutionValue", "tail" : ": Parser[ConfigBuilderValue]", "member" : "laika.parse.hocon.HoconParsers.substitutionValue", "link" : "laika\/parse\/hocon\/HoconParsers$.html#substitutionValue:laika.parse.Parser[laika.parse.hocon.ConfigBuilderValue]", "kind" : "val"}, {"label" : "concatenatedKey", "tail" : "(delimiter: NonEmptySet[Char]): Parser[Either[InvalidStringValue, Key]]", "member" : "laika.parse.hocon.HoconParsers.concatenatedKey", "link" : "laika\/parse\/hocon\/HoconParsers$.html#concatenatedKey(delimiter:cats.data.NonEmptySet[Char]):laika.parse.Parser[Either[laika.parse.hocon.InvalidStringValue,laika.config.Key]]", "kind" : "def"}, {"label" : "concatenatedValue", "tail" : "(delimiter: NonEmptySet[Char]): Parser[ConfigBuilderValue]", "member" : "laika.parse.hocon.HoconParsers.concatenatedValue", "link" : "laika\/parse\/hocon\/HoconParsers$.html#concatenatedValue(delimiter:cats.data.NonEmptySet[Char]):laika.parse.Parser[laika.parse.hocon.ConfigBuilderValue]", "kind" : "def"}, {"label" : "stringBuilderValue", "tail" : "(delimiter: NonEmptySet[Char]): Parser[ConfigBuilderValue]", "member" : "laika.parse.hocon.HoconParsers.stringBuilderValue", "link" : "laika\/parse\/hocon\/HoconParsers$.html#stringBuilderValue(delimiter:cats.data.NonEmptySet[Char]):laika.parse.Parser[laika.parse.hocon.ConfigBuilderValue]", "kind" : "def"}, {"label" : "unquotedString", "tail" : "(delimiters: NonEmptySet[Char]): Parser[StringBuilderValue]", "member" : "laika.parse.hocon.HoconParsers.unquotedString", "link" : "laika\/parse\/hocon\/HoconParsers$.html#unquotedString(delimiters:cats.data.NonEmptySet[Char]):laika.parse.Parser[laika.parse.hocon.StringBuilderValue]", "kind" : "def"}, {"label" : "multilineString", "tail" : ": Parser[ConfigBuilderValue]", "member" : "laika.parse.hocon.HoconParsers.multilineString", "link" : "laika\/parse\/hocon\/HoconParsers$.html#multilineString:laika.parse.Parser[laika.parse.hocon.ConfigBuilderValue]", "kind" : "val"}, {"label" : "quotedString", "tail" : ": Parser[StringBuilderValue]", "member" : "laika.parse.hocon.HoconParsers.quotedString", "link" : "laika\/parse\/hocon\/HoconParsers$.html#quotedString:laika.parse.Parser[laika.parse.hocon.StringBuilderValue]", "kind" : "val"}, {"label" : "numberValue", "tail" : ": Parser[ConfigBuilderValue]", "member" : "laika.parse.hocon.HoconParsers.numberValue", "link" : "laika\/parse\/hocon\/HoconParsers$.html#numberValue:laika.parse.Parser[laika.parse.hocon.ConfigBuilderValue]", "kind" : "val"}, {"label" : "falseValue", "tail" : ": Parser[ConfigBuilderValue]", "member" : "laika.parse.hocon.HoconParsers.falseValue", "link" : "laika\/parse\/hocon\/HoconParsers$.html#falseValue:laika.parse.Parser[laika.parse.hocon.ConfigBuilderValue]", "kind" : "val"}, {"label" : "trueValue", "tail" : ": Parser[ConfigBuilderValue]", "member" : "laika.parse.hocon.HoconParsers.trueValue", "link" : "laika\/parse\/hocon\/HoconParsers$.html#trueValue:laika.parse.Parser[laika.parse.hocon.ConfigBuilderValue]", "kind" : "val"}, {"label" : "nullValue", "tail" : ": Parser[ConfigBuilderValue]", "member" : "laika.parse.hocon.HoconParsers.nullValue", "link" : "laika\/parse\/hocon\/HoconParsers$.html#nullValue:laika.parse.Parser[laika.parse.hocon.ConfigBuilderValue]", "kind" : "val"}, {"label" : "wsOrNl", "tail" : ": Characters[String]", "member" : "laika.parse.hocon.HoconParsers.wsOrNl", "link" : "laika\/parse\/hocon\/HoconParsers$.html#wsOrNl:laika.parse.text.Characters[String]", "kind" : "val"}, {"label" : "lazily", "tail" : "(parser: ⇒ Parser[T]): Parser[T]", "member" : "laika.parse.hocon.HoconParsers.lazily", "link" : "laika\/parse\/hocon\/HoconParsers$.html#lazily[T](parser:=>laika.parse.Parser[T]):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "PathFragments", "tail" : "", "member" : "laika.parse.hocon.HoconParsers.PathFragments", "link" : "laika\/parse\/hocon\/HoconParsers$.html#PathFragments", "kind" : "object"}, {"label" : "PathFragments", "tail" : "", "member" : "laika.parse.hocon.HoconParsers.PathFragments", "link" : "laika\/parse\/hocon\/HoconParsers$.html#PathFragmentsextendsProductwithSerializable", "kind" : "case class"}, {"label" : "failWith", "tail" : "(fallbackParser: Parser[Int], msg: ⇒ String)(captureError: (Failure) ⇒ T): Parser[T]", "member" : "laika.parse.hocon.HoconParsers.failWith", "link" : "laika\/parse\/hocon\/HoconParsers$.html#failWith[T](fallbackParser:laika.parse.Parser[Int],msg:=>String)(captureError:laika.parse.Failure=>T):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "ClosingParserOps", "tail" : "", "member" : "laika.parse.hocon.HoconParsers.ClosingParserOps", "link" : "laika\/parse\/hocon\/HoconParsers$.html#ClosingParserOps[T]extendsAnyRef", "kind" : "implicit class"}, {"label" : "consumeAllInput", "tail" : ": Parser[Unit]", "member" : "laika.parse.hocon.HoconParsers.consumeAllInput", "link" : "laika\/parse\/hocon\/HoconParsers$.html#consumeAllInput:laika.parse.Parser[Unit]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/hocon\/HoconParsers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/hocon\/HoconParsers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/hocon\/HoconParsers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/hocon\/HoconParsers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/hocon\/HoconParsers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/hocon\/HoconParsers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/hocon\/HoconParsers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/HoconParsers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/HoconParsers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/HoconParsers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/hocon\/HoconParsers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/hocon\/HoconParsers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/hocon\/HoconParsers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/hocon\/HoconParsers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/hocon\/HoconParsers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/hocon\/HoconParsers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/hocon\/HoconParsers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/hocon\/HoconParsers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/hocon\/HoconParsers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.hocon.IncludeAny", "shortDescription" : "", "members_case class" : [{"member" : "laika.parse.hocon.IncludeAny#<init>", "error" : "unsupported entity"}, {"label" : "isRequired", "tail" : ": Boolean", "member" : "laika.parse.hocon.IncludeAny.isRequired", "link" : "laika\/parse\/hocon\/IncludeAny.html#isRequired:Boolean", "kind" : "val"}, {"label" : "resourceId", "tail" : ": StringBuilderValue", "member" : "laika.parse.hocon.IncludeAny.resourceId", "link" : "laika\/parse\/hocon\/IncludeAny.html#resourceId:laika.parse.hocon.StringBuilderValue", "kind" : "val"}, {"label" : "asRequired", "tail" : "(): IncludeResource", "member" : "laika.parse.hocon.IncludeResource.asRequired", "link" : "laika\/parse\/hocon\/IncludeAny.html#asRequired:laika.parse.hocon.IncludeResource", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/hocon\/IncludeAny.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/hocon\/IncludeAny.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/hocon\/IncludeAny.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/hocon\/IncludeAny.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/hocon\/IncludeAny.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/hocon\/IncludeAny.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/hocon\/IncludeAny.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/IncludeAny.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/IncludeAny.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/IncludeAny.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/hocon\/IncludeAny.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/hocon\/IncludeAny.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/hocon\/IncludeAny.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/hocon\/IncludeAny.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/hocon\/IncludeAny.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/hocon\/IncludeAny.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/parse\/hocon\/IncludeAny.html", "kind" : "case class"}, {"name" : "laika.parse.hocon.IncludeBuilderValue", "shortDescription" : "", "members_case class" : [{"member" : "laika.parse.hocon.IncludeBuilderValue#<init>", "error" : "unsupported entity"}, {"label" : "resource", "tail" : ": IncludeResource", "member" : "laika.parse.hocon.IncludeBuilderValue.resource", "link" : "laika\/parse\/hocon\/IncludeBuilderValue.html#resource:laika.parse.hocon.IncludeResource", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/hocon\/IncludeBuilderValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/hocon\/IncludeBuilderValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/hocon\/IncludeBuilderValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/hocon\/IncludeBuilderValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/hocon\/IncludeBuilderValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/hocon\/IncludeBuilderValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/hocon\/IncludeBuilderValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/IncludeBuilderValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/IncludeBuilderValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/IncludeBuilderValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/hocon\/IncludeBuilderValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/hocon\/IncludeBuilderValue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/hocon\/IncludeBuilderValue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/hocon\/IncludeBuilderValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/hocon\/IncludeBuilderValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/hocon\/IncludeBuilderValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/parse\/hocon\/IncludeBuilderValue.html", "kind" : "case class"}, {"name" : "laika.parse.hocon.IncludeClassPath", "shortDescription" : "", "members_case class" : [{"member" : "laika.parse.hocon.IncludeClassPath#<init>", "error" : "unsupported entity"}, {"label" : "isRequired", "tail" : ": Boolean", "member" : "laika.parse.hocon.IncludeClassPath.isRequired", "link" : "laika\/parse\/hocon\/IncludeClassPath.html#isRequired:Boolean", "kind" : "val"}, {"label" : "resourceId", "tail" : ": StringBuilderValue", "member" : "laika.parse.hocon.IncludeClassPath.resourceId", "link" : "laika\/parse\/hocon\/IncludeClassPath.html#resourceId:laika.parse.hocon.StringBuilderValue", "kind" : "val"}, {"label" : "asRequired", "tail" : "(): IncludeResource", "member" : "laika.parse.hocon.IncludeResource.asRequired", "link" : "laika\/parse\/hocon\/IncludeClassPath.html#asRequired:laika.parse.hocon.IncludeResource", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/hocon\/IncludeClassPath.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/hocon\/IncludeClassPath.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/hocon\/IncludeClassPath.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/hocon\/IncludeClassPath.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/hocon\/IncludeClassPath.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/hocon\/IncludeClassPath.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/hocon\/IncludeClassPath.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/IncludeClassPath.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/IncludeClassPath.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/IncludeClassPath.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/hocon\/IncludeClassPath.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/hocon\/IncludeClassPath.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/hocon\/IncludeClassPath.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/hocon\/IncludeClassPath.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/hocon\/IncludeClassPath.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/hocon\/IncludeClassPath.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/parse\/hocon\/IncludeClassPath.html", "kind" : "case class"}, {"name" : "laika.parse.hocon.IncludeFile", "shortDescription" : "", "members_case class" : [{"member" : "laika.parse.hocon.IncludeFile#<init>", "error" : "unsupported entity"}, {"label" : "isRequired", "tail" : ": Boolean", "member" : "laika.parse.hocon.IncludeFile.isRequired", "link" : "laika\/parse\/hocon\/IncludeFile.html#isRequired:Boolean", "kind" : "val"}, {"label" : "resourceId", "tail" : ": StringBuilderValue", "member" : "laika.parse.hocon.IncludeFile.resourceId", "link" : "laika\/parse\/hocon\/IncludeFile.html#resourceId:laika.parse.hocon.StringBuilderValue", "kind" : "val"}, {"label" : "asRequired", "tail" : "(): IncludeResource", "member" : "laika.parse.hocon.IncludeResource.asRequired", "link" : "laika\/parse\/hocon\/IncludeFile.html#asRequired:laika.parse.hocon.IncludeResource", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/hocon\/IncludeFile.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/hocon\/IncludeFile.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/hocon\/IncludeFile.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/hocon\/IncludeFile.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/hocon\/IncludeFile.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/hocon\/IncludeFile.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/hocon\/IncludeFile.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/IncludeFile.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/IncludeFile.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/IncludeFile.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/hocon\/IncludeFile.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/hocon\/IncludeFile.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/hocon\/IncludeFile.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/hocon\/IncludeFile.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/hocon\/IncludeFile.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/hocon\/IncludeFile.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/parse\/hocon\/IncludeFile.html", "kind" : "case class"}, {"name" : "laika.parse.hocon.IncludeResource", "members_trait" : [{"label" : "asRequired", "tail" : "(): IncludeResource", "member" : "laika.parse.hocon.IncludeResource.asRequired", "link" : "laika\/parse\/hocon\/IncludeResource.html#asRequired:laika.parse.hocon.IncludeResource", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/hocon\/IncludeResource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/hocon\/IncludeResource.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/hocon\/IncludeResource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/hocon\/IncludeResource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/hocon\/IncludeResource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/hocon\/IncludeResource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/hocon\/IncludeResource.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/IncludeResource.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/IncludeResource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/IncludeResource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/hocon\/IncludeResource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/hocon\/IncludeResource.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/hocon\/IncludeResource.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/hocon\/IncludeResource.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/hocon\/IncludeResource.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/hocon\/IncludeResource.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/hocon\/IncludeResource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/hocon\/IncludeResource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/hocon\/IncludeResource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "isRequired", "tail" : "(): Boolean", "member" : "laika.parse.hocon.IncludeResource.isRequired", "link" : "laika\/parse\/hocon\/IncludeResource.html#isRequired:Boolean", "kind" : "abstract def"}, {"label" : "resourceId", "tail" : "(): StringBuilderValue", "member" : "laika.parse.hocon.IncludeResource.resourceId", "link" : "laika\/parse\/hocon\/IncludeResource.html#resourceId:laika.parse.hocon.StringBuilderValue", "kind" : "abstract def"}], "shortDescription" : "Description of a resource to be included in the current configuration.", "trait" : "laika\/parse\/hocon\/IncludeResource.html", "kind" : "trait"}, {"name" : "laika.parse.hocon.IncludeUrl", "shortDescription" : "", "members_case class" : [{"member" : "laika.parse.hocon.IncludeUrl#<init>", "error" : "unsupported entity"}, {"label" : "isRequired", "tail" : ": Boolean", "member" : "laika.parse.hocon.IncludeUrl.isRequired", "link" : "laika\/parse\/hocon\/IncludeUrl.html#isRequired:Boolean", "kind" : "val"}, {"label" : "resourceId", "tail" : ": StringBuilderValue", "member" : "laika.parse.hocon.IncludeUrl.resourceId", "link" : "laika\/parse\/hocon\/IncludeUrl.html#resourceId:laika.parse.hocon.StringBuilderValue", "kind" : "val"}, {"label" : "asRequired", "tail" : "(): IncludeResource", "member" : "laika.parse.hocon.IncludeResource.asRequired", "link" : "laika\/parse\/hocon\/IncludeUrl.html#asRequired:laika.parse.hocon.IncludeResource", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/hocon\/IncludeUrl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/hocon\/IncludeUrl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/hocon\/IncludeUrl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/hocon\/IncludeUrl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/hocon\/IncludeUrl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/hocon\/IncludeUrl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/hocon\/IncludeUrl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/IncludeUrl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/IncludeUrl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/IncludeUrl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/hocon\/IncludeUrl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/hocon\/IncludeUrl.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/hocon\/IncludeUrl.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/hocon\/IncludeUrl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/hocon\/IncludeUrl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/hocon\/IncludeUrl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/parse\/hocon\/IncludeUrl.html", "kind" : "case class"}, {"name" : "laika.parse.hocon.InvalidBuilderValue", "shortDescription" : "", "members_case class" : [{"member" : "laika.parse.hocon.InvalidBuilderValue#<init>", "error" : "unsupported entity"}, {"label" : "failure", "tail" : ": Failure", "member" : "laika.parse.hocon.InvalidBuilderValue.failure", "link" : "laika\/parse\/hocon\/InvalidBuilderValue.html#failure:laika.parse.Failure", "kind" : "val"}, {"label" : "value", "tail" : ": ConfigBuilderValue", "member" : "laika.parse.hocon.InvalidBuilderValue.value", "link" : "laika\/parse\/hocon\/InvalidBuilderValue.html#value:laika.parse.hocon.ConfigBuilderValue", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/hocon\/InvalidBuilderValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/hocon\/InvalidBuilderValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/hocon\/InvalidBuilderValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/hocon\/InvalidBuilderValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/hocon\/InvalidBuilderValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/hocon\/InvalidBuilderValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/hocon\/InvalidBuilderValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/InvalidBuilderValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/InvalidBuilderValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/InvalidBuilderValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/hocon\/InvalidBuilderValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/hocon\/InvalidBuilderValue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/hocon\/InvalidBuilderValue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/hocon\/InvalidBuilderValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/hocon\/InvalidBuilderValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/hocon\/InvalidBuilderValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/parse\/hocon\/InvalidBuilderValue.html", "kind" : "case class"}, {"name" : "laika.parse.hocon.InvalidStringValue", "shortDescription" : "", "members_case class" : [{"member" : "laika.parse.hocon.InvalidStringValue#<init>", "error" : "unsupported entity"}, {"label" : "failure", "tail" : ": Failure", "member" : "laika.parse.hocon.InvalidStringValue.failure", "link" : "laika\/parse\/hocon\/InvalidStringValue.html#failure:laika.parse.Failure", "kind" : "val"}, {"label" : "value", "tail" : ": String", "member" : "laika.parse.hocon.InvalidStringValue.value", "link" : "laika\/parse\/hocon\/InvalidStringValue.html#value:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/hocon\/InvalidStringValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/hocon\/InvalidStringValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/hocon\/InvalidStringValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/hocon\/InvalidStringValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/hocon\/InvalidStringValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/hocon\/InvalidStringValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/hocon\/InvalidStringValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/InvalidStringValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/InvalidStringValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/InvalidStringValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/hocon\/InvalidStringValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/hocon\/InvalidStringValue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/hocon\/InvalidStringValue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/hocon\/InvalidStringValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/hocon\/InvalidStringValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/hocon\/InvalidStringValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/parse\/hocon\/InvalidStringValue.html", "kind" : "case class"}, {"name" : "laika.parse.hocon.MergedValue", "shortDescription" : "A merged value with \"last one wins\" semantics for the provided values (objects will be merged instead).", "members_case class" : [{"member" : "laika.parse.hocon.MergedValue#<init>", "error" : "unsupported entity"}, {"label" : "values", "tail" : ": Seq[ConfigBuilderValue]", "member" : "laika.parse.hocon.MergedValue.values", "link" : "laika\/parse\/hocon\/MergedValue.html#values:Seq[laika.parse.hocon.ConfigBuilderValue]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/hocon\/MergedValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/hocon\/MergedValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/hocon\/MergedValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/hocon\/MergedValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/hocon\/MergedValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/hocon\/MergedValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/hocon\/MergedValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/MergedValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/MergedValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/MergedValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/hocon\/MergedValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/hocon\/MergedValue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/hocon\/MergedValue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/hocon\/MergedValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/hocon\/MergedValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/hocon\/MergedValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/parse\/hocon\/MergedValue.html", "kind" : "case class"}, {"name" : "laika.parse.hocon.ObjectBuilderValue", "shortDescription" : "An object value with all its fields.", "members_case class" : [{"member" : "laika.parse.hocon.ObjectBuilderValue#<init>", "error" : "unsupported entity"}, {"label" : "values", "tail" : ": Seq[BuilderField]", "member" : "laika.parse.hocon.ObjectBuilderValue.values", "link" : "laika\/parse\/hocon\/ObjectBuilderValue.html#values:Seq[laika.parse.hocon.BuilderField]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/hocon\/ObjectBuilderValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/hocon\/ObjectBuilderValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/hocon\/ObjectBuilderValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/hocon\/ObjectBuilderValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/hocon\/ObjectBuilderValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/hocon\/ObjectBuilderValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/hocon\/ObjectBuilderValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/ObjectBuilderValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/ObjectBuilderValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/ObjectBuilderValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/hocon\/ObjectBuilderValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/hocon\/ObjectBuilderValue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/hocon\/ObjectBuilderValue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/hocon\/ObjectBuilderValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/hocon\/ObjectBuilderValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/hocon\/ObjectBuilderValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/parse\/hocon\/ObjectBuilderValue.html", "kind" : "case class"}, {"name" : "laika.parse.hocon.ResolvedBuilderValue", "shortDescription" : "A simple configuration value that does not need to be recursively resolved.", "members_case class" : [{"member" : "laika.parse.hocon.ResolvedBuilderValue#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": SimpleConfigValue", "member" : "laika.parse.hocon.ResolvedBuilderValue.value", "link" : "laika\/parse\/hocon\/ResolvedBuilderValue.html#value:laika.config.SimpleConfigValue", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/hocon\/ResolvedBuilderValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/hocon\/ResolvedBuilderValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/hocon\/ResolvedBuilderValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/hocon\/ResolvedBuilderValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/hocon\/ResolvedBuilderValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/hocon\/ResolvedBuilderValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/hocon\/ResolvedBuilderValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/ResolvedBuilderValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/ResolvedBuilderValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/ResolvedBuilderValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/hocon\/ResolvedBuilderValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/hocon\/ResolvedBuilderValue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/hocon\/ResolvedBuilderValue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/hocon\/ResolvedBuilderValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/hocon\/ResolvedBuilderValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/hocon\/ResolvedBuilderValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/parse\/hocon\/ResolvedBuilderValue.html", "kind" : "case class"}, {"name" : "laika.parse.hocon.SelfReference", "shortDescription" : "A marker for a self reference, a reference to an earlier definition with the same key.", "object" : "laika\/parse\/hocon\/SelfReference$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/hocon\/SelfReference$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/hocon\/SelfReference$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/hocon\/SelfReference$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/hocon\/SelfReference$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/hocon\/SelfReference$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/hocon\/SelfReference$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/hocon\/SelfReference$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/SelfReference$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/SelfReference$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/SelfReference$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/hocon\/SelfReference$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/hocon\/SelfReference$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/hocon\/SelfReference$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/hocon\/SelfReference$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/hocon\/SelfReference$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/hocon\/SelfReference$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/hocon\/SelfReference$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.hocon.StringBuilderValue", "members_trait" : [{"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/parse\/hocon\/StringBuilderValue.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/parse\/hocon\/StringBuilderValue.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/hocon\/StringBuilderValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/hocon\/StringBuilderValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/hocon\/StringBuilderValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/hocon\/StringBuilderValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/hocon\/StringBuilderValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/hocon\/StringBuilderValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/hocon\/StringBuilderValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/StringBuilderValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/StringBuilderValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/StringBuilderValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/hocon\/StringBuilderValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/hocon\/StringBuilderValue.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/hocon\/StringBuilderValue.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/hocon\/StringBuilderValue.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/hocon\/StringBuilderValue.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/hocon\/StringBuilderValue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/hocon\/StringBuilderValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/hocon\/StringBuilderValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/hocon\/StringBuilderValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "value", "tail" : "(): String", "member" : "laika.parse.hocon.StringBuilderValue.value", "link" : "laika\/parse\/hocon\/StringBuilderValue.html#value:String", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/parse\/hocon\/StringBuilderValue.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/parse\/hocon\/StringBuilderValue.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/parse\/hocon\/StringBuilderValue.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "laika\/parse\/hocon\/StringBuilderValue.html", "kind" : "trait"}, {"name" : "laika.parse.hocon.SubstitutionValue", "shortDescription" : "A substitution reference that may be marked as optional.", "object" : "laika\/parse\/hocon\/SubstitutionValue$.html", "members_object" : [{"label" : "apply", "tail" : "(ref: String, optional: Boolean): SubstitutionValue", "member" : "laika.parse.hocon.SubstitutionValue.apply", "link" : "laika\/parse\/hocon\/SubstitutionValue$.html#apply(ref:String,optional:Boolean):laika.parse.hocon.SubstitutionValue", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/hocon\/SubstitutionValue$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/hocon\/SubstitutionValue$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/hocon\/SubstitutionValue$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/hocon\/SubstitutionValue$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/hocon\/SubstitutionValue$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/hocon\/SubstitutionValue$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/hocon\/SubstitutionValue$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/SubstitutionValue$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/SubstitutionValue$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/SubstitutionValue$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/hocon\/SubstitutionValue$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/hocon\/SubstitutionValue$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/hocon\/SubstitutionValue$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/hocon\/SubstitutionValue$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/hocon\/SubstitutionValue$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/hocon\/SubstitutionValue$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/hocon\/SubstitutionValue$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/hocon\/SubstitutionValue$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/hocon\/SubstitutionValue$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "laika.parse.hocon.SubstitutionValue#<init>", "error" : "unsupported entity"}, {"label" : "optional", "tail" : ": Boolean", "member" : "laika.parse.hocon.SubstitutionValue.optional", "link" : "laika\/parse\/hocon\/SubstitutionValue.html#optional:Boolean", "kind" : "val"}, {"label" : "ref", "tail" : ": Key", "member" : "laika.parse.hocon.SubstitutionValue.ref", "link" : "laika\/parse\/hocon\/SubstitutionValue.html#ref:laika.config.Key", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/hocon\/SubstitutionValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/hocon\/SubstitutionValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/hocon\/SubstitutionValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/hocon\/SubstitutionValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/hocon\/SubstitutionValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/hocon\/SubstitutionValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/hocon\/SubstitutionValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/SubstitutionValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/SubstitutionValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/SubstitutionValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/hocon\/SubstitutionValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/hocon\/SubstitutionValue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/hocon\/SubstitutionValue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/hocon\/SubstitutionValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/hocon\/SubstitutionValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/hocon\/SubstitutionValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/parse\/hocon\/SubstitutionValue.html", "kind" : "case class"}, {"name" : "laika.parse.hocon.ValidStringValue", "shortDescription" : "", "members_case class" : [{"member" : "laika.parse.hocon.ValidStringValue#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": String", "member" : "laika.parse.hocon.ValidStringValue.value", "link" : "laika\/parse\/hocon\/ValidStringValue.html#value:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/hocon\/ValidStringValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/hocon\/ValidStringValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/hocon\/ValidStringValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/hocon\/ValidStringValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/hocon\/ValidStringValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/hocon\/ValidStringValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/hocon\/ValidStringValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/ValidStringValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/ValidStringValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/hocon\/ValidStringValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/hocon\/ValidStringValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/hocon\/ValidStringValue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/hocon\/ValidStringValue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/hocon\/ValidStringValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/hocon\/ValidStringValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/hocon\/ValidStringValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/parse\/hocon\/ValidStringValue.html", "kind" : "case class"}], "laika.helium.config" : [{"name" : "laika.helium.config.AnchorPlacement", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/helium\/config\/AnchorPlacement.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/helium\/config\/AnchorPlacement.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/helium\/config\/AnchorPlacement.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/helium\/config\/AnchorPlacement.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/helium\/config\/AnchorPlacement.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/helium\/config\/AnchorPlacement.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/helium\/config\/AnchorPlacement.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/AnchorPlacement.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/AnchorPlacement.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/AnchorPlacement.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/helium\/config\/AnchorPlacement.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/helium\/config\/AnchorPlacement.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/helium\/config\/AnchorPlacement.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/helium\/config\/AnchorPlacement.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/helium\/config\/AnchorPlacement.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/helium\/config\/AnchorPlacement.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/helium\/config\/AnchorPlacement.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/helium\/config\/AnchorPlacement.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/helium\/config\/AnchorPlacement.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Configures the anchor placement for section headers.", "object" : "laika\/helium\/config\/AnchorPlacement$.html", "members_object" : [{"label" : "Right", "tail" : "", "member" : "laika.helium.config.AnchorPlacement.Right", "link" : "laika\/helium\/config\/AnchorPlacement$.html#Right", "kind" : "object"}, {"label" : "Left", "tail" : "", "member" : "laika.helium.config.AnchorPlacement.Left", "link" : "laika\/helium\/config\/AnchorPlacement$.html#Left", "kind" : "object"}, {"label" : "None", "tail" : "", "member" : "laika.helium.config.AnchorPlacement.None", "link" : "laika\/helium\/config\/AnchorPlacement$.html#None", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/helium\/config\/AnchorPlacement$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/helium\/config\/AnchorPlacement$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/helium\/config\/AnchorPlacement$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/helium\/config\/AnchorPlacement$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/helium\/config\/AnchorPlacement$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/helium\/config\/AnchorPlacement$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/helium\/config\/AnchorPlacement$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/AnchorPlacement$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/AnchorPlacement$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/AnchorPlacement$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/helium\/config\/AnchorPlacement$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/helium\/config\/AnchorPlacement$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/helium\/config\/AnchorPlacement$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/helium\/config\/AnchorPlacement$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/helium\/config\/AnchorPlacement$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/helium\/config\/AnchorPlacement$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/helium\/config\/AnchorPlacement$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/helium\/config\/AnchorPlacement$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/helium\/config\/AnchorPlacement$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "laika\/helium\/config\/AnchorPlacement.html", "kind" : "trait"}, {"name" : "laika.helium.config.ButtonLink", "shortDescription" : "A link consisting of text and an optional icon rendered in a rounded rectangle.", "object" : "laika\/helium\/config\/ButtonLink$.html", "members_object" : [{"label" : "internal", "tail" : "(path: Path, text: String, icon: Option[Icon], options: Options): ButtonLink", "member" : "laika.helium.config.ButtonLink.internal", "link" : "laika\/helium\/config\/ButtonLink$.html#internal(path:laika.ast.Path,text:String,icon:Option[laika.ast.Icon],options:laika.ast.Options):laika.helium.config.ButtonLink", "kind" : "def"}, {"label" : "external", "tail" : "(url: String, text: String, icon: Option[Icon], options: Options): ButtonLink", "member" : "laika.helium.config.ButtonLink.external", "link" : "laika\/helium\/config\/ButtonLink$.html#external(url:String,text:String,icon:Option[laika.ast.Icon],options:laika.ast.Options):laika.helium.config.ButtonLink", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/helium\/config\/ButtonLink$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/helium\/config\/ButtonLink$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/helium\/config\/ButtonLink$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/helium\/config\/ButtonLink$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/helium\/config\/ButtonLink$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/helium\/config\/ButtonLink$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/helium\/config\/ButtonLink$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/ButtonLink$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/ButtonLink$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/ButtonLink$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/helium\/config\/ButtonLink$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/helium\/config\/ButtonLink$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/helium\/config\/ButtonLink$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/helium\/config\/ButtonLink$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/helium\/config\/ButtonLink$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/helium\/config\/ButtonLink$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/helium\/config\/ButtonLink$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/helium\/config\/ButtonLink$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/helium\/config\/ButtonLink$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(newOptions: Options): ButtonLink", "member" : "laika.helium.config.ButtonLink.withOptions", "link" : "laika\/helium\/config\/ButtonLink.html#withOptions(newOptions:laika.ast.Options):laika.helium.config.ButtonLink", "kind" : "def"}, {"label" : "createLink", "tail" : "(target: Target): Link", "member" : "laika.helium.config.ButtonLink.createLink", "link" : "laika\/helium\/config\/ButtonLink.html#createLink(target:laika.ast.Target):laika.ast.Link", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.helium.config.ButtonLink.Self", "link" : "laika\/helium\/config\/ButtonLink.html#Self=laika.helium.config.ButtonLink", "kind" : "type"}, {"label" : "options", "tail" : ": Options", "member" : "laika.helium.config.ButtonLink.options", "link" : "laika\/helium\/config\/ButtonLink.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "icon", "tail" : ": Option[Icon]", "member" : "laika.helium.config.ButtonLink.icon", "link" : "laika\/helium\/config\/ButtonLink.html#icon:Option[laika.ast.Icon]", "kind" : "val"}, {"label" : "text", "tail" : ": String", "member" : "laika.helium.config.ButtonLink.text", "link" : "laika\/helium\/config\/ButtonLink.html#text:String", "kind" : "val"}, {"label" : "target", "tail" : ": Target", "member" : "laika.helium.config.ButtonLink.target", "link" : "laika\/helium\/config\/ButtonLink.html#target:laika.ast.Target", "kind" : "val"}, {"label" : "unresolvedMessage", "tail" : "(): String", "member" : "laika.helium.config.ThemeLink.unresolvedMessage", "link" : "laika\/helium\/config\/ButtonLink.html#unresolvedMessage:String", "kind" : "def"}, {"label" : "resolve", "tail" : "(cursor: DocumentCursor): Span", "member" : "laika.helium.config.ThemeLink.resolve", "link" : "laika\/helium\/config\/ButtonLink.html#resolve(cursor:laika.ast.DocumentCursor):laika.ast.Span", "kind" : "def"}, {"label" : "source", "tail" : ": SourceFragment", "member" : "laika.helium.config.ThemeLink.source", "link" : "laika\/helium\/config\/ButtonLink.html#source:laika.parse.SourceFragment", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/helium\/config\/ButtonLink.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/helium\/config\/ButtonLink.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/helium\/config\/ButtonLink.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/helium\/config\/ButtonLink.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/helium\/config\/ButtonLink.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/helium\/config\/ButtonLink.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/helium\/config\/ButtonLink.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/helium\/config\/ButtonLink.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/helium\/config\/ButtonLink.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/helium\/config\/ButtonLink.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/helium\/config\/ButtonLink.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/helium\/config\/ButtonLink.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/helium\/config\/ButtonLink.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/helium\/config\/ButtonLink.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/helium\/config\/ButtonLink.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/helium\/config\/ButtonLink.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/ButtonLink.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/ButtonLink.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/ButtonLink.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/helium\/config\/ButtonLink.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/helium\/config\/ButtonLink.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/helium\/config\/ButtonLink.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/helium\/config\/ButtonLink.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/helium\/config\/ButtonLink.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/helium\/config\/ButtonLink.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/helium\/config\/ButtonLink.html", "kind" : "case class"}, {"name" : "laika.helium.config.ColorQuintet", "shortDescription" : "Specifies a set of five colors which is a grouping used in Laika's support for syntax highlighting.", "members_case class" : [{"member" : "laika.helium.config.ColorQuintet#<init>", "error" : "unsupported entity"}, {"label" : "c5", "tail" : ": Color", "member" : "laika.helium.config.ColorQuintet.c5", "link" : "laika\/helium\/config\/ColorQuintet.html#c5:laika.theme.config.Color", "kind" : "val"}, {"label" : "c4", "tail" : ": Color", "member" : "laika.helium.config.ColorQuintet.c4", "link" : "laika\/helium\/config\/ColorQuintet.html#c4:laika.theme.config.Color", "kind" : "val"}, {"label" : "c3", "tail" : ": Color", "member" : "laika.helium.config.ColorQuintet.c3", "link" : "laika\/helium\/config\/ColorQuintet.html#c3:laika.theme.config.Color", "kind" : "val"}, {"label" : "c2", "tail" : ": Color", "member" : "laika.helium.config.ColorQuintet.c2", "link" : "laika\/helium\/config\/ColorQuintet.html#c2:laika.theme.config.Color", "kind" : "val"}, {"label" : "c1", "tail" : ": Color", "member" : "laika.helium.config.ColorQuintet.c1", "link" : "laika\/helium\/config\/ColorQuintet.html#c1:laika.theme.config.Color", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/helium\/config\/ColorQuintet.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/helium\/config\/ColorQuintet.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/helium\/config\/ColorQuintet.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/helium\/config\/ColorQuintet.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/helium\/config\/ColorQuintet.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/helium\/config\/ColorQuintet.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/helium\/config\/ColorQuintet.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/ColorQuintet.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/ColorQuintet.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/ColorQuintet.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/helium\/config\/ColorQuintet.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/helium\/config\/ColorQuintet.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/helium\/config\/ColorQuintet.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/helium\/config\/ColorQuintet.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/helium\/config\/ColorQuintet.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/helium\/config\/ColorQuintet.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/helium\/config\/ColorQuintet.html", "kind" : "case class"}, {"name" : "laika.helium.config.Favicon", "shortDescription" : "Configuration for a single favicon which can be an internal resource or an external URL.", "object" : "laika\/helium\/config\/Favicon$.html", "members_object" : [{"label" : "internal", "tail" : "(path: Path, sizes: String): Favicon", "member" : "laika.helium.config.Favicon.internal", "link" : "laika\/helium\/config\/Favicon$.html#internal(path:laika.ast.Path,sizes:String):laika.helium.config.Favicon", "kind" : "def"}, {"label" : "external", "tail" : "(url: String, sizes: String, mediaType: String): Favicon", "member" : "laika.helium.config.Favicon.external", "link" : "laika\/helium\/config\/Favicon$.html#external(url:String,sizes:String,mediaType:String):laika.helium.config.Favicon", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/helium\/config\/Favicon$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/helium\/config\/Favicon$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/helium\/config\/Favicon$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/helium\/config\/Favicon$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/helium\/config\/Favicon$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/helium\/config\/Favicon$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/helium\/config\/Favicon$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/Favicon$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/Favicon$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/Favicon$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/helium\/config\/Favicon$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/helium\/config\/Favicon$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/helium\/config\/Favicon$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/helium\/config\/Favicon$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/helium\/config\/Favicon$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/helium\/config\/Favicon$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/helium\/config\/Favicon$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/helium\/config\/Favicon$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/helium\/config\/Favicon$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "mediaType", "tail" : ": Option[String]", "member" : "laika.helium.config.Favicon.mediaType", "link" : "laika\/helium\/config\/Favicon.html#mediaType:Option[String]", "kind" : "val"}, {"label" : "sizes", "tail" : ": Option[String]", "member" : "laika.helium.config.Favicon.sizes", "link" : "laika\/helium\/config\/Favicon.html#sizes:Option[String]", "kind" : "val"}, {"label" : "target", "tail" : ": Target", "member" : "laika.helium.config.Favicon.target", "link" : "laika\/helium\/config\/Favicon.html#target:laika.ast.Target", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/helium\/config\/Favicon.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/helium\/config\/Favicon.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/helium\/config\/Favicon.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/helium\/config\/Favicon.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/helium\/config\/Favicon.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/helium\/config\/Favicon.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/helium\/config\/Favicon.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/Favicon.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/Favicon.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/Favicon.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/helium\/config\/Favicon.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/helium\/config\/Favicon.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/helium\/config\/Favicon.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/helium\/config\/Favicon.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/helium\/config\/Favicon.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/helium\/config\/Favicon.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/helium\/config\/Favicon.html", "kind" : "case class"}, {"name" : "laika.helium.config.HeliumIcon", "shortDescription" : "Enumeration for using any of the icons provided by the Helium theme out of the box in the theme configuration.", "object" : "laika\/helium\/config\/HeliumIcon$.html", "members_object" : [{"label" : "github", "tail" : ": Icon", "member" : "laika.helium.config.HeliumIcon.github", "link" : "laika\/helium\/config\/HeliumIcon$.html#github:laika.ast.Icon", "kind" : "val"}, {"label" : "api", "tail" : ": Icon", "member" : "laika.helium.config.HeliumIcon.api", "link" : "laika\/helium\/config\/HeliumIcon$.html#api:laika.ast.Icon", "kind" : "val"}, {"label" : "twitter", "tail" : ": Icon", "member" : "laika.helium.config.HeliumIcon.twitter", "link" : "laika\/helium\/config\/HeliumIcon$.html#twitter:laika.ast.Icon", "kind" : "val"}, {"label" : "error", "tail" : ": Icon", "member" : "laika.helium.config.HeliumIcon.error", "link" : "laika\/helium\/config\/HeliumIcon$.html#error:laika.ast.Icon", "kind" : "val"}, {"label" : "warning", "tail" : ": Icon", "member" : "laika.helium.config.HeliumIcon.warning", "link" : "laika\/helium\/config\/HeliumIcon$.html#warning:laika.ast.Icon", "kind" : "val"}, {"label" : "info", "tail" : ": Icon", "member" : "laika.helium.config.HeliumIcon.info", "link" : "laika\/helium\/config\/HeliumIcon$.html#info:laika.ast.Icon", "kind" : "val"}, {"label" : "download", "tail" : ": Icon", "member" : "laika.helium.config.HeliumIcon.download", "link" : "laika\/helium\/config\/HeliumIcon$.html#download:laika.ast.Icon", "kind" : "val"}, {"label" : "demo", "tail" : ": Icon", "member" : "laika.helium.config.HeliumIcon.demo", "link" : "laika\/helium\/config\/HeliumIcon$.html#demo:laika.ast.Icon", "kind" : "val"}, {"label" : "edit", "tail" : ": Icon", "member" : "laika.helium.config.HeliumIcon.edit", "link" : "laika\/helium\/config\/HeliumIcon$.html#edit:laika.ast.Icon", "kind" : "val"}, {"label" : "settings", "tail" : ": Icon", "member" : "laika.helium.config.HeliumIcon.settings", "link" : "laika\/helium\/config\/HeliumIcon$.html#settings:laika.ast.Icon", "kind" : "val"}, {"label" : "chat", "tail" : ": Icon", "member" : "laika.helium.config.HeliumIcon.chat", "link" : "laika\/helium\/config\/HeliumIcon$.html#chat:laika.ast.Icon", "kind" : "val"}, {"label" : "check", "tail" : ": Icon", "member" : "laika.helium.config.HeliumIcon.check", "link" : "laika\/helium\/config\/HeliumIcon$.html#check:laika.ast.Icon", "kind" : "val"}, {"label" : "close", "tail" : ": Icon", "member" : "laika.helium.config.HeliumIcon.close", "link" : "laika\/helium\/config\/HeliumIcon$.html#close:laika.ast.Icon", "kind" : "val"}, {"label" : "link", "tail" : ": Icon", "member" : "laika.helium.config.HeliumIcon.link", "link" : "laika\/helium\/config\/HeliumIcon$.html#link:laika.ast.Icon", "kind" : "val"}, {"label" : "home", "tail" : ": Icon", "member" : "laika.helium.config.HeliumIcon.home", "link" : "laika\/helium\/config\/HeliumIcon$.html#home:laika.ast.Icon", "kind" : "val"}, {"label" : "navigationMenu", "tail" : ": Icon", "member" : "laika.helium.config.HeliumIcon.navigationMenu", "link" : "laika\/helium\/config\/HeliumIcon$.html#navigationMenu:laika.ast.Icon", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/helium\/config\/HeliumIcon$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/helium\/config\/HeliumIcon$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/helium\/config\/HeliumIcon$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/helium\/config\/HeliumIcon$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/helium\/config\/HeliumIcon$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/helium\/config\/HeliumIcon$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/helium\/config\/HeliumIcon$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/HeliumIcon$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/HeliumIcon$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/HeliumIcon$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/helium\/config\/HeliumIcon$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/helium\/config\/HeliumIcon$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/helium\/config\/HeliumIcon$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/helium\/config\/HeliumIcon$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/helium\/config\/HeliumIcon$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/helium\/config\/HeliumIcon$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/helium\/config\/HeliumIcon$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/helium\/config\/HeliumIcon$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/helium\/config\/HeliumIcon$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.helium.config.IconLink", "shortDescription" : "A link consisting of an icon and optional text.", "object" : "laika\/helium\/config\/IconLink$.html", "members_object" : [{"label" : "internal", "tail" : "(path: Path, icon: Icon, text: Option[String], options: Options): IconLink", "member" : "laika.helium.config.IconLink.internal", "link" : "laika\/helium\/config\/IconLink$.html#internal(path:laika.ast.Path,icon:laika.ast.Icon,text:Option[String],options:laika.ast.Options):laika.helium.config.IconLink", "kind" : "def"}, {"label" : "external", "tail" : "(url: String, icon: Icon, text: Option[String], options: Options): IconLink", "member" : "laika.helium.config.IconLink.external", "link" : "laika\/helium\/config\/IconLink$.html#external(url:String,icon:laika.ast.Icon,text:Option[String],options:laika.ast.Options):laika.helium.config.IconLink", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/helium\/config\/IconLink$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/helium\/config\/IconLink$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/helium\/config\/IconLink$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/helium\/config\/IconLink$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/helium\/config\/IconLink$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/helium\/config\/IconLink$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/helium\/config\/IconLink$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/IconLink$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/IconLink$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/IconLink$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/helium\/config\/IconLink$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/helium\/config\/IconLink$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/helium\/config\/IconLink$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/helium\/config\/IconLink$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/helium\/config\/IconLink$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/helium\/config\/IconLink$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/helium\/config\/IconLink$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/helium\/config\/IconLink$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/helium\/config\/IconLink$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(newOptions: Options): IconLink", "member" : "laika.helium.config.IconLink.withOptions", "link" : "laika\/helium\/config\/IconLink.html#withOptions(newOptions:laika.ast.Options):laika.helium.config.IconLink", "kind" : "def"}, {"label" : "createLink", "tail" : "(target: Target): Link", "member" : "laika.helium.config.IconLink.createLink", "link" : "laika\/helium\/config\/IconLink.html#createLink(target:laika.ast.Target):laika.ast.Link", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.helium.config.IconLink.Self", "link" : "laika\/helium\/config\/IconLink.html#Self=laika.helium.config.IconLink", "kind" : "type"}, {"label" : "options", "tail" : ": Options", "member" : "laika.helium.config.IconLink.options", "link" : "laika\/helium\/config\/IconLink.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "text", "tail" : ": Option[String]", "member" : "laika.helium.config.IconLink.text", "link" : "laika\/helium\/config\/IconLink.html#text:Option[String]", "kind" : "val"}, {"label" : "icon", "tail" : ": Icon", "member" : "laika.helium.config.IconLink.icon", "link" : "laika\/helium\/config\/IconLink.html#icon:laika.ast.Icon", "kind" : "val"}, {"label" : "target", "tail" : ": Target", "member" : "laika.helium.config.IconLink.target", "link" : "laika\/helium\/config\/IconLink.html#target:laika.ast.Target", "kind" : "val"}, {"label" : "unresolvedMessage", "tail" : "(): String", "member" : "laika.helium.config.ThemeLink.unresolvedMessage", "link" : "laika\/helium\/config\/IconLink.html#unresolvedMessage:String", "kind" : "def"}, {"label" : "resolve", "tail" : "(cursor: DocumentCursor): Span", "member" : "laika.helium.config.ThemeLink.resolve", "link" : "laika\/helium\/config\/IconLink.html#resolve(cursor:laika.ast.DocumentCursor):laika.ast.Span", "kind" : "def"}, {"label" : "source", "tail" : ": SourceFragment", "member" : "laika.helium.config.ThemeLink.source", "link" : "laika\/helium\/config\/IconLink.html#source:laika.parse.SourceFragment", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/helium\/config\/IconLink.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/helium\/config\/IconLink.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/helium\/config\/IconLink.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/helium\/config\/IconLink.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/helium\/config\/IconLink.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/helium\/config\/IconLink.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/helium\/config\/IconLink.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/helium\/config\/IconLink.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/helium\/config\/IconLink.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/helium\/config\/IconLink.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/helium\/config\/IconLink.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/helium\/config\/IconLink.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/helium\/config\/IconLink.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/helium\/config\/IconLink.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/helium\/config\/IconLink.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/helium\/config\/IconLink.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/IconLink.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/IconLink.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/IconLink.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/helium\/config\/IconLink.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/helium\/config\/IconLink.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/helium\/config\/IconLink.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/helium\/config\/IconLink.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/helium\/config\/IconLink.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/helium\/config\/IconLink.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/helium\/config\/IconLink.html", "kind" : "case class"}, {"name" : "laika.helium.config.Logo", "shortDescription" : "A logo type that can be used in various Helium configuration options.", "object" : "laika\/helium\/config\/Logo$.html", "members_object" : [{"label" : "internal", "tail" : "(path: Path, width: Option[Length], height: Option[Length], alt: Option[String], title: Option[String], options: Options): Logo", "member" : "laika.helium.config.Logo.internal", "link" : "laika\/helium\/config\/Logo$.html#internal(path:laika.ast.Path,width:Option[laika.ast.Length],height:Option[laika.ast.Length],alt:Option[String],title:Option[String],options:laika.ast.Options):laika.helium.config.Logo", "kind" : "def"}, {"label" : "external", "tail" : "(url: String, width: Option[Length], height: Option[Length], alt: Option[String], title: Option[String], options: Options): Logo", "member" : "laika.helium.config.Logo.external", "link" : "laika\/helium\/config\/Logo$.html#external(url:String,width:Option[laika.ast.Length],height:Option[laika.ast.Length],alt:Option[String],title:Option[String],options:laika.ast.Options):laika.helium.config.Logo", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/helium\/config\/Logo$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/helium\/config\/Logo$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/helium\/config\/Logo$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/helium\/config\/Logo$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/helium\/config\/Logo$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/helium\/config\/Logo$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/helium\/config\/Logo$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/Logo$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/Logo$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/Logo$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/helium\/config\/Logo$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/helium\/config\/Logo$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/helium\/config\/Logo$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/helium\/config\/Logo$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/helium\/config\/Logo$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/helium\/config\/Logo$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/helium\/config\/Logo$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/helium\/config\/Logo$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/helium\/config\/Logo$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(newOptions: Options): Logo", "member" : "laika.helium.config.Logo.withOptions", "link" : "laika\/helium\/config\/Logo.html#withOptions(newOptions:laika.ast.Options):laika.helium.config.Logo", "kind" : "def"}, {"label" : "createLink", "tail" : "(target: Target): Link", "member" : "laika.helium.config.Logo.createLink", "link" : "laika\/helium\/config\/Logo.html#createLink(target:laika.ast.Target):laika.ast.Link", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.helium.config.Logo.Self", "link" : "laika\/helium\/config\/Logo.html#Self=laika.helium.config.Logo", "kind" : "type"}, {"label" : "options", "tail" : ": Options", "member" : "laika.helium.config.Logo.options", "link" : "laika\/helium\/config\/Logo.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "title", "tail" : ": Option[String]", "member" : "laika.helium.config.Logo.title", "link" : "laika\/helium\/config\/Logo.html#title:Option[String]", "kind" : "val"}, {"label" : "alt", "tail" : ": Option[String]", "member" : "laika.helium.config.Logo.alt", "link" : "laika\/helium\/config\/Logo.html#alt:Option[String]", "kind" : "val"}, {"label" : "height", "tail" : ": Option[Length]", "member" : "laika.helium.config.Logo.height", "link" : "laika\/helium\/config\/Logo.html#height:Option[laika.ast.Length]", "kind" : "val"}, {"label" : "width", "tail" : ": Option[Length]", "member" : "laika.helium.config.Logo.width", "link" : "laika\/helium\/config\/Logo.html#width:Option[laika.ast.Length]", "kind" : "val"}, {"label" : "target", "tail" : ": Target", "member" : "laika.helium.config.Logo.target", "link" : "laika\/helium\/config\/Logo.html#target:laika.ast.Target", "kind" : "val"}, {"label" : "unresolvedMessage", "tail" : "(): String", "member" : "laika.helium.config.ThemeLink.unresolvedMessage", "link" : "laika\/helium\/config\/Logo.html#unresolvedMessage:String", "kind" : "def"}, {"label" : "resolve", "tail" : "(cursor: DocumentCursor): Span", "member" : "laika.helium.config.ThemeLink.resolve", "link" : "laika\/helium\/config\/Logo.html#resolve(cursor:laika.ast.DocumentCursor):laika.ast.Span", "kind" : "def"}, {"label" : "source", "tail" : ": SourceFragment", "member" : "laika.helium.config.ThemeLink.source", "link" : "laika\/helium\/config\/Logo.html#source:laika.parse.SourceFragment", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/helium\/config\/Logo.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/helium\/config\/Logo.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/helium\/config\/Logo.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/helium\/config\/Logo.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/helium\/config\/Logo.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/helium\/config\/Logo.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/helium\/config\/Logo.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/helium\/config\/Logo.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/helium\/config\/Logo.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/helium\/config\/Logo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/helium\/config\/Logo.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/helium\/config\/Logo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/helium\/config\/Logo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/helium\/config\/Logo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/helium\/config\/Logo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/helium\/config\/Logo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/Logo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/Logo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/Logo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/helium\/config\/Logo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/helium\/config\/Logo.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/helium\/config\/Logo.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/helium\/config\/Logo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/helium\/config\/Logo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/helium\/config\/Logo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/helium\/config\/Logo.html", "kind" : "case class"}, {"name" : "laika.helium.config.ReleaseInfo", "shortDescription" : "Represents release info to be displayed on the landing page.", "members_case class" : [{"member" : "laika.helium.config.ReleaseInfo#<init>", "error" : "unsupported entity"}, {"label" : "version", "tail" : ": String", "member" : "laika.helium.config.ReleaseInfo.version", "link" : "laika\/helium\/config\/ReleaseInfo.html#version:String", "kind" : "val"}, {"label" : "title", "tail" : ": String", "member" : "laika.helium.config.ReleaseInfo.title", "link" : "laika\/helium\/config\/ReleaseInfo.html#title:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/helium\/config\/ReleaseInfo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/helium\/config\/ReleaseInfo.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/helium\/config\/ReleaseInfo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/helium\/config\/ReleaseInfo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/helium\/config\/ReleaseInfo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/helium\/config\/ReleaseInfo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/helium\/config\/ReleaseInfo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/ReleaseInfo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/ReleaseInfo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/ReleaseInfo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/helium\/config\/ReleaseInfo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/helium\/config\/ReleaseInfo.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/helium\/config\/ReleaseInfo.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/helium\/config\/ReleaseInfo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/helium\/config\/ReleaseInfo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/helium\/config\/ReleaseInfo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/helium\/config\/ReleaseInfo.html", "kind" : "case class"}, {"name" : "laika.helium.config.Teaser", "shortDescription" : "Represents a single teaser block to be displayed on the landing page.", "members_case class" : [{"member" : "laika.helium.config.Teaser#<init>", "error" : "unsupported entity"}, {"label" : "description", "tail" : ": String", "member" : "laika.helium.config.Teaser.description", "link" : "laika\/helium\/config\/Teaser.html#description:String", "kind" : "val"}, {"label" : "title", "tail" : ": String", "member" : "laika.helium.config.Teaser.title", "link" : "laika\/helium\/config\/Teaser.html#title:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/helium\/config\/Teaser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/helium\/config\/Teaser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/helium\/config\/Teaser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/helium\/config\/Teaser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/helium\/config\/Teaser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/helium\/config\/Teaser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/helium\/config\/Teaser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/Teaser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/Teaser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/Teaser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/helium\/config\/Teaser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/helium\/config\/Teaser.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/helium\/config\/Teaser.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/helium\/config\/Teaser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/helium\/config\/Teaser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/helium\/config\/Teaser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/helium\/config\/Teaser.html", "kind" : "case class"}, {"name" : "laika.helium.config.TextLink", "shortDescription" : "A simple text link.", "object" : "laika\/helium\/config\/TextLink$.html", "members_object" : [{"label" : "internal", "tail" : "(path: Path, text: String, options: Options): TextLink", "member" : "laika.helium.config.TextLink.internal", "link" : "laika\/helium\/config\/TextLink$.html#internal(path:laika.ast.Path,text:String,options:laika.ast.Options):laika.helium.config.TextLink", "kind" : "def"}, {"label" : "external", "tail" : "(url: String, text: String, options: Options): TextLink", "member" : "laika.helium.config.TextLink.external", "link" : "laika\/helium\/config\/TextLink$.html#external(url:String,text:String,options:laika.ast.Options):laika.helium.config.TextLink", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/helium\/config\/TextLink$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/helium\/config\/TextLink$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/helium\/config\/TextLink$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/helium\/config\/TextLink$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/helium\/config\/TextLink$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/helium\/config\/TextLink$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/helium\/config\/TextLink$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/TextLink$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/TextLink$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/TextLink$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/helium\/config\/TextLink$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/helium\/config\/TextLink$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/helium\/config\/TextLink$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/helium\/config\/TextLink$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/helium\/config\/TextLink$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/helium\/config\/TextLink$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/helium\/config\/TextLink$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/helium\/config\/TextLink$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/helium\/config\/TextLink$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withOptions", "tail" : "(newOptions: Options): TextLink", "member" : "laika.helium.config.TextLink.withOptions", "link" : "laika\/helium\/config\/TextLink.html#withOptions(newOptions:laika.ast.Options):laika.helium.config.TextLink", "kind" : "def"}, {"label" : "createLink", "tail" : "(target: Target): Link", "member" : "laika.helium.config.TextLink.createLink", "link" : "laika\/helium\/config\/TextLink.html#createLink(target:laika.ast.Target):laika.ast.Link", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "laika.helium.config.TextLink.Self", "link" : "laika\/helium\/config\/TextLink.html#Self=laika.helium.config.TextLink", "kind" : "type"}, {"label" : "options", "tail" : ": Options", "member" : "laika.helium.config.TextLink.options", "link" : "laika\/helium\/config\/TextLink.html#options:laika.ast.Options", "kind" : "val"}, {"label" : "text", "tail" : ": String", "member" : "laika.helium.config.TextLink.text", "link" : "laika\/helium\/config\/TextLink.html#text:String", "kind" : "val"}, {"label" : "target", "tail" : ": Target", "member" : "laika.helium.config.TextLink.target", "link" : "laika\/helium\/config\/TextLink.html#target:laika.ast.Target", "kind" : "val"}, {"label" : "unresolvedMessage", "tail" : "(): String", "member" : "laika.helium.config.ThemeLink.unresolvedMessage", "link" : "laika\/helium\/config\/TextLink.html#unresolvedMessage:String", "kind" : "def"}, {"label" : "resolve", "tail" : "(cursor: DocumentCursor): Span", "member" : "laika.helium.config.ThemeLink.resolve", "link" : "laika\/helium\/config\/TextLink.html#resolve(cursor:laika.ast.DocumentCursor):laika.ast.Span", "kind" : "def"}, {"label" : "source", "tail" : ": SourceFragment", "member" : "laika.helium.config.ThemeLink.source", "link" : "laika\/helium\/config\/TextLink.html#source:laika.parse.SourceFragment", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/helium\/config\/TextLink.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/helium\/config\/TextLink.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/helium\/config\/TextLink.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/helium\/config\/TextLink.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/helium\/config\/TextLink.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/helium\/config\/TextLink.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/helium\/config\/TextLink.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/helium\/config\/TextLink.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/helium\/config\/TextLink.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/helium\/config\/TextLink.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/helium\/config\/TextLink.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/helium\/config\/TextLink.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/helium\/config\/TextLink.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/helium\/config\/TextLink.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/helium\/config\/TextLink.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/helium\/config\/TextLink.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/TextLink.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/TextLink.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/TextLink.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/helium\/config\/TextLink.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/helium\/config\/TextLink.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/helium\/config\/TextLink.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/helium\/config\/TextLink.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/helium\/config\/TextLink.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/helium\/config\/TextLink.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/helium\/config\/TextLink.html", "kind" : "case class"}, {"name" : "laika.helium.config.ThemeLink", "members_trait" : [{"label" : "unresolvedMessage", "tail" : "(): String", "member" : "laika.helium.config.ThemeLink.unresolvedMessage", "link" : "laika\/helium\/config\/ThemeLink.html#unresolvedMessage:String", "kind" : "def"}, {"label" : "resolve", "tail" : "(cursor: DocumentCursor): Span", "member" : "laika.helium.config.ThemeLink.resolve", "link" : "laika\/helium\/config\/ThemeLink.html#resolve(cursor:laika.ast.DocumentCursor):laika.ast.Span", "kind" : "def"}, {"label" : "source", "tail" : ": SourceFragment", "member" : "laika.helium.config.ThemeLink.source", "link" : "laika\/helium\/config\/ThemeLink.html#source:laika.parse.SourceFragment", "kind" : "val"}, {"label" : "hasId", "tail" : "(): Boolean", "member" : "laika.ast.Element.hasId", "link" : "laika\/helium\/config\/ThemeLink.html#hasId:Boolean", "kind" : "def"}, {"label" : "hasStyle", "tail" : "(name: String): Boolean", "member" : "laika.ast.Element.hasStyle", "link" : "laika\/helium\/config\/ThemeLink.html#hasStyle(name:String):Boolean", "kind" : "def"}, {"label" : "modifyOptions", "tail" : "(f: (Options) ⇒ Options): Self", "member" : "laika.ast.Customizable.modifyOptions", "link" : "laika\/helium\/config\/ThemeLink.html#modifyOptions(f:laika.ast.Options=>laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "mergeOptions", "tail" : "(opt: Options): Self", "member" : "laika.ast.Customizable.mergeOptions", "link" : "laika\/helium\/config\/ThemeLink.html#mergeOptions(opt:laika.ast.Options):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(styles: Iterable[String]): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/helium\/config\/ThemeLink.html#withStyles(styles:Iterable[String]):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyles", "tail" : "(style: String, styles: String*): Self", "member" : "laika.ast.Customizable.withStyles", "link" : "laika\/helium\/config\/ThemeLink.html#withStyles(style:String,styles:String*):Customizable.this.Self", "kind" : "def"}, {"label" : "withStyle", "tail" : "(name: String): Self", "member" : "laika.ast.Customizable.withStyle", "link" : "laika\/helium\/config\/ThemeLink.html#withStyle(name:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withId", "tail" : "(id: String): Self", "member" : "laika.ast.Customizable.withId", "link" : "laika\/helium\/config\/ThemeLink.html#withId(id:String):Customizable.this.Self", "kind" : "def"}, {"label" : "withoutId", "tail" : "(): Self", "member" : "laika.ast.Customizable.withoutId", "link" : "laika\/helium\/config\/ThemeLink.html#withoutId:Customizable.this.Self", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "laika\/helium\/config\/ThemeLink.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "laika\/helium\/config\/ThemeLink.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/helium\/config\/ThemeLink.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/helium\/config\/ThemeLink.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/helium\/config\/ThemeLink.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/helium\/config\/ThemeLink.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/helium\/config\/ThemeLink.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/helium\/config\/ThemeLink.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/helium\/config\/ThemeLink.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/ThemeLink.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/ThemeLink.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/helium\/config\/ThemeLink.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/helium\/config\/ThemeLink.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/helium\/config\/ThemeLink.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/helium\/config\/ThemeLink.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/helium\/config\/ThemeLink.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/helium\/config\/ThemeLink.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/helium\/config\/ThemeLink.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/helium\/config\/ThemeLink.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/helium\/config\/ThemeLink.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/helium\/config\/ThemeLink.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createLink", "tail" : "(target: Target): Link", "member" : "laika.helium.config.ThemeLink.createLink", "link" : "laika\/helium\/config\/ThemeLink.html#createLink(target:laika.ast.Target):laika.ast.Link", "kind" : "abstract def"}, {"label" : "target", "tail" : "(): Target", "member" : "laika.helium.config.ThemeLink.target", "link" : "laika\/helium\/config\/ThemeLink.html#target:laika.ast.Target", "kind" : "abstract def"}, {"member" : "laika.helium.config.ThemeLink.Self", "error" : "unsupported entity"}, {"label" : "withOptions", "tail" : "(options: Options): Self", "member" : "laika.ast.Customizable.withOptions", "link" : "laika\/helium\/config\/ThemeLink.html#withOptions(options:laika.ast.Options):Customizable.this.Self", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Options", "member" : "laika.ast.Customizable.options", "link" : "laika\/helium\/config\/ThemeLink.html#options:laika.ast.Options", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "laika\/helium\/config\/ThemeLink.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "laika\/helium\/config\/ThemeLink.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "laika\/helium\/config\/ThemeLink.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "A Helium link type available for navigation bars and the landing page.", "trait" : "laika\/helium\/config\/ThemeLink.html", "kind" : "trait"}], "laika.render.epub" : [{"name" : "laika.render.epub.ContainerWriter", "shortDescription" : "Creates the EPUB container based on a document tree and the HTML resultof a preceding render operation.", "members_class" : [{"label" : "write", "tail" : "(result: RenderedTreeRoot[F], output: BinaryOutput[F])(arg0: Sync[F], arg1: Runtime[F]): F[Unit]", "member" : "laika.render.epub.ContainerWriter.write", "link" : "laika\/render\/epub\/ContainerWriter.html#write[F[_]](result:laika.io.model.RenderedTreeRoot[F],output:laika.io.model.BinaryOutput[F])(implicitevidence$2:cats.effect.Sync[F],implicitevidence$3:laika.io.runtime.Runtime[F]):F[Unit]", "kind" : "def"}, {"label" : "collectInputs", "tail" : "(result: RenderedTreeRoot[F], config: BookConfig)(arg0: Sync[F]): Seq[BinaryInput[F]]", "member" : "laika.render.epub.ContainerWriter.collectInputs", "link" : "laika\/render\/epub\/ContainerWriter.html#collectInputs[F[_]](result:laika.io.model.RenderedTreeRoot[F],config:laika.format.EPUB.BookConfig)(implicitevidence$1:cats.effect.Sync[F]):Seq[laika.io.model.BinaryInput[F]]", "kind" : "def"}, {"member" : "laika.render.epub.ContainerWriter#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/epub\/ContainerWriter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/epub\/ContainerWriter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/epub\/ContainerWriter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/epub\/ContainerWriter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/epub\/ContainerWriter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/epub\/ContainerWriter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/epub\/ContainerWriter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/ContainerWriter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/ContainerWriter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/ContainerWriter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/epub\/ContainerWriter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/epub\/ContainerWriter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/render\/epub\/ContainerWriter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/epub\/ContainerWriter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/epub\/ContainerWriter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/epub\/ContainerWriter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/epub\/ContainerWriter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/epub\/ContainerWriter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/epub\/ContainerWriter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/render\/epub\/ContainerWriter.html", "kind" : "class"}, {"name" : "laika.render.epub.HtmlNavRenderer", "shortDescription" : "Renders the entire content of an EPUB HTML navigation file.", "members_class" : [{"label" : "render", "tail" : "(result: RenderedTreeRoot[F], title: String, depth: Option[Int]): String", "member" : "laika.render.epub.HtmlNavRenderer.render", "link" : "laika\/render\/epub\/HtmlNavRenderer.html#render[F[_]](result:laika.io.model.RenderedTreeRoot[F],title:String,depth:Option[Int]):String", "kind" : "def"}, {"label" : "fileContent", "tail" : "(title: String, styles: String, navItems: String, coverDoc: Option[String], titleDoc: Option[String]): String", "member" : "laika.render.epub.HtmlNavRenderer.fileContent", "link" : "laika\/render\/epub\/HtmlNavRenderer.html#fileContent(title:String,styles:String,navItems:String,coverDoc:Option[String],titleDoc:Option[String]):String", "kind" : "def"}, {"member" : "laika.render.epub.HtmlNavRenderer#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/epub\/HtmlNavRenderer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/epub\/HtmlNavRenderer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/epub\/HtmlNavRenderer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/epub\/HtmlNavRenderer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/epub\/HtmlNavRenderer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/epub\/HtmlNavRenderer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/epub\/HtmlNavRenderer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/HtmlNavRenderer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/HtmlNavRenderer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/HtmlNavRenderer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/epub\/HtmlNavRenderer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/epub\/HtmlNavRenderer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/render\/epub\/HtmlNavRenderer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/epub\/HtmlNavRenderer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/epub\/HtmlNavRenderer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/epub\/HtmlNavRenderer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/epub\/HtmlNavRenderer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/epub\/HtmlNavRenderer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/epub\/HtmlNavRenderer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/render\/epub\/HtmlNavRenderer.html", "kind" : "class"}, {"name" : "laika.render.epub.MimeTypes", "shortDescription" : "Lists the supported file types that get inserted into the EPUB containerin addition to the dynamically rendered HTML content.", "object" : "laika\/render\/epub\/MimeTypes$.html", "members_object" : [{"label" : "supportedTypes", "tail" : ": Map[String, String]", "member" : "laika.render.epub.MimeTypes.supportedTypes", "link" : "laika\/render\/epub\/MimeTypes$.html#supportedTypes:Map[String,String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/epub\/MimeTypes$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/epub\/MimeTypes$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/epub\/MimeTypes$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/epub\/MimeTypes$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/epub\/MimeTypes$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/epub\/MimeTypes$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/epub\/MimeTypes$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/MimeTypes$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/MimeTypes$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/MimeTypes$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/epub\/MimeTypes$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/epub\/MimeTypes$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/render\/epub\/MimeTypes$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/epub\/MimeTypes$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/epub\/MimeTypes$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/epub\/MimeTypes$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/epub\/MimeTypes$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/epub\/MimeTypes$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/epub\/MimeTypes$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.render.epub.NavigationBuilder", "shortDescription" : "", "object" : "laika\/render\/epub\/NavigationBuilder$.html", "members_object" : [{"label" : "forTree", "tail" : "(tree: RenderedTree, depth: Option[Int]): Seq[NavigationItem]", "member" : "laika.render.epub.NavigationBuilder.forTree", "link" : "laika\/render\/epub\/NavigationBuilder$.html#forTree(tree:laika.io.model.RenderedTree,depth:Option[Int]):Seq[laika.ast.NavigationItem]", "kind" : "def"}, {"label" : "fullPath", "tail" : "(path: Path, forceXhtml: Boolean): String", "member" : "laika.render.epub.NavigationBuilder.fullPath", "link" : "laika\/render\/epub\/NavigationBuilder$.html#fullPath(path:laika.ast.Path,forceXhtml:Boolean):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/epub\/NavigationBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/epub\/NavigationBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/epub\/NavigationBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/epub\/NavigationBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/epub\/NavigationBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/epub\/NavigationBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/epub\/NavigationBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/NavigationBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/NavigationBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/NavigationBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/epub\/NavigationBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/epub\/NavigationBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/render\/epub\/NavigationBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/epub\/NavigationBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/epub\/NavigationBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/epub\/NavigationBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/epub\/NavigationBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/epub\/NavigationBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/epub\/NavigationBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.render.epub.NCXRenderer", "shortDescription" : "Renders the entire content of an NCX navigation file.", "members_class" : [{"label" : "render", "tail" : "(result: RenderedTreeRoot[F], title: String, identifier: String, depth: Option[Int]): String", "member" : "laika.render.epub.NCXRenderer.render", "link" : "laika\/render\/epub\/NCXRenderer.html#render[F[_]](result:laika.io.model.RenderedTreeRoot[F],title:String,identifier:String,depth:Option[Int]):String", "kind" : "def"}, {"label" : "fileContent", "tail" : "(identifier: String, title: String, navPoints: String, depth: Int): String", "member" : "laika.render.epub.NCXRenderer.fileContent", "link" : "laika\/render\/epub\/NCXRenderer.html#fileContent(identifier:String,title:String,navPoints:String,depth:Int):String", "kind" : "def"}, {"member" : "laika.render.epub.NCXRenderer#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/epub\/NCXRenderer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/epub\/NCXRenderer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/epub\/NCXRenderer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/epub\/NCXRenderer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/epub\/NCXRenderer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/epub\/NCXRenderer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/epub\/NCXRenderer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/NCXRenderer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/NCXRenderer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/NCXRenderer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/epub\/NCXRenderer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/epub\/NCXRenderer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/render\/epub\/NCXRenderer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/epub\/NCXRenderer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/epub\/NCXRenderer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/epub\/NCXRenderer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/epub\/NCXRenderer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/epub\/NCXRenderer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/epub\/NCXRenderer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/render\/epub\/NCXRenderer.html", "kind" : "class"}, {"name" : "laika.render.epub.OPFRenderer", "shortDescription" : "Renders the content of an EPUB Package document (OPF).", "members_class" : [{"label" : "render", "tail" : "(result: RenderedTreeRoot[F], title: String, config: BookConfig): String", "member" : "laika.render.epub.OPFRenderer.render", "link" : "laika\/render\/epub\/OPFRenderer.html#render[F[_]](result:laika.io.model.RenderedTreeRoot[F],title:String,config:laika.format.EPUB.BookConfig):String", "kind" : "def"}, {"label" : "fileContent", "tail" : "(identifier: String, language: String, title: String, coverImage: Option[String], timestamp: String, docRefs: Seq[DocumentRef], authors: Seq[String]): String", "member" : "laika.render.epub.OPFRenderer.fileContent", "link" : "laika\/render\/epub\/OPFRenderer.html#fileContent(identifier:String,language:String,title:String,coverImage:Option[String],timestamp:String,docRefs:Seq[OPFRenderer.this.DocumentRef],authors:Seq[String]):String", "kind" : "def"}, {"member" : "laika.render.epub.OPFRenderer#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/epub\/OPFRenderer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/epub\/OPFRenderer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/epub\/OPFRenderer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/epub\/OPFRenderer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/epub\/OPFRenderer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/epub\/OPFRenderer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/epub\/OPFRenderer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/OPFRenderer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/OPFRenderer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/OPFRenderer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/epub\/OPFRenderer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/epub\/OPFRenderer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/render\/epub\/OPFRenderer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/epub\/OPFRenderer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/epub\/OPFRenderer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/epub\/OPFRenderer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/epub\/OPFRenderer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/epub\/OPFRenderer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/epub\/OPFRenderer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "laika\/render\/epub\/OPFRenderer.html", "kind" : "class"}, {"name" : "laika.render.epub.StaticContent", "shortDescription" : "Holds static content for EPUB metadata files that do not depend on the input.", "object" : "laika\/render\/epub\/StaticContent$.html", "members_object" : [{"label" : "iBooksOptions", "tail" : ": String", "member" : "laika.render.epub.StaticContent.iBooksOptions", "link" : "laika\/render\/epub\/StaticContent$.html#iBooksOptions:String", "kind" : "val"}, {"label" : "container", "tail" : ": String", "member" : "laika.render.epub.StaticContent.container", "link" : "laika\/render\/epub\/StaticContent$.html#container:String", "kind" : "val"}, {"label" : "mimeType", "tail" : ": String", "member" : "laika.render.epub.StaticContent.mimeType", "link" : "laika\/render\/epub\/StaticContent$.html#mimeType:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/epub\/StaticContent$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/epub\/StaticContent$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/epub\/StaticContent$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/epub\/StaticContent$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/epub\/StaticContent$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/epub\/StaticContent$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/epub\/StaticContent$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/StaticContent$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/StaticContent$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/StaticContent$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/epub\/StaticContent$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/epub\/StaticContent$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/render\/epub\/StaticContent$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/epub\/StaticContent$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/epub\/StaticContent$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/epub\/StaticContent$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/epub\/StaticContent$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/epub\/StaticContent$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/epub\/StaticContent$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.render.epub.StyleSupport", "shortDescription" : "Processes CSS inputs for EPUB containers.", "object" : "laika\/render\/epub\/StyleSupport$.html", "members_object" : [{"label" : "collectStylePaths", "tail" : "(root: RenderedTreeRoot[F]): Seq[Path]", "member" : "laika.render.epub.StyleSupport.collectStylePaths", "link" : "laika\/render\/epub\/StyleSupport$.html#collectStylePaths[F[_]](root:laika.io.model.RenderedTreeRoot[F]):Seq[laika.ast.Path]", "kind" : "def"}, {"label" : "fallbackStylePath", "tail" : ": Path", "member" : "laika.render.epub.StyleSupport.fallbackStylePath", "link" : "laika\/render\/epub\/StyleSupport$.html#fallbackStylePath:laika.ast.Path", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/epub\/StyleSupport$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/epub\/StyleSupport$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/epub\/StyleSupport$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/epub\/StyleSupport$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/epub\/StyleSupport$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/epub\/StyleSupport$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/epub\/StyleSupport$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/StyleSupport$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/StyleSupport$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/StyleSupport$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/epub\/StyleSupport$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/epub\/StyleSupport$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/render\/epub\/StyleSupport$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/epub\/StyleSupport$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/epub\/StyleSupport$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/epub\/StyleSupport$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/epub\/StyleSupport$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/epub\/StyleSupport$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/epub\/StyleSupport$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.render.epub.XHTMLRenderer", "shortDescription" : "Customizations of the default HTML renderer for AST elements where attributes specific to EPUB need to be rendered.", "object" : "laika\/render\/epub\/XHTMLRenderer$.html", "members_object" : [{"label" : "apply", "tail" : "(fmt: HTMLFormatter, element: Element): String", "member" : "laika.render.epub.XHTMLRenderer.apply", "link" : "laika\/render\/epub\/XHTMLRenderer$.html#apply(fmt:laika.render.HTMLFormatter,element:laika.ast.Element):String", "kind" : "def"}, {"label" : "renderChoices", "tail" : "(fmt: HTMLFormatter, name: String, choices: Seq[Choice], options: Options): String", "member" : "laika.render.epub.XHTMLRenderer.renderChoices", "link" : "laika\/render\/epub\/XHTMLRenderer$.html#renderChoices(fmt:laika.render.HTMLFormatter,name:String,choices:Seq[laika.ast.Choice],options:laika.ast.Options):String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function2.toString", "link" : "laika\/render\/epub\/XHTMLRenderer$.html#toString():String", "kind" : "def"}, {"label" : "tupled", "tail" : "(): ((HTMLFormatter, Element)) ⇒ String", "member" : "scala.Function2.tupled", "link" : "laika\/render\/epub\/XHTMLRenderer$.html#tupled:((T1,T2))=>R", "kind" : "def"}, {"label" : "curried", "tail" : "(): (HTMLFormatter) ⇒ (Element) ⇒ String", "member" : "scala.Function2.curried", "link" : "laika\/render\/epub\/XHTMLRenderer$.html#curried:T1=>(T2=>R)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/epub\/XHTMLRenderer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/epub\/XHTMLRenderer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/epub\/XHTMLRenderer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/epub\/XHTMLRenderer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/epub\/XHTMLRenderer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/epub\/XHTMLRenderer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/epub\/XHTMLRenderer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/XHTMLRenderer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/XHTMLRenderer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/XHTMLRenderer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/epub\/XHTMLRenderer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/epub\/XHTMLRenderer$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/epub\/XHTMLRenderer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/epub\/XHTMLRenderer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/epub\/XHTMLRenderer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/epub\/XHTMLRenderer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/epub\/XHTMLRenderer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/epub\/XHTMLRenderer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.render.epub.ZipWriter", "shortDescription" : "", "object" : "laika\/render\/epub\/ZipWriter$.html", "members_object" : [{"label" : "zipEPUB", "tail" : "(inputFs: Seq[BinaryInput[F]], output: BinaryOutput[F])(arg0: Sync[F], arg1: Runtime[F]): F[Unit]", "member" : "laika.render.epub.ZipWriter.zipEPUB", "link" : "laika\/render\/epub\/ZipWriter$.html#zipEPUB[F[_]](inputFs:Seq[laika.io.model.BinaryInput[F]],output:laika.io.model.BinaryOutput[F])(implicitevidence$1:cats.effect.Sync[F],implicitevidence$2:laika.io.runtime.Runtime[F]):F[Unit]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/render\/epub\/ZipWriter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/render\/epub\/ZipWriter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/render\/epub\/ZipWriter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/render\/epub\/ZipWriter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/render\/epub\/ZipWriter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/render\/epub\/ZipWriter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/render\/epub\/ZipWriter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/ZipWriter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/ZipWriter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/render\/epub\/ZipWriter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/render\/epub\/ZipWriter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/render\/epub\/ZipWriter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/render\/epub\/ZipWriter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/render\/epub\/ZipWriter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/render\/epub\/ZipWriter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/render\/epub\/ZipWriter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/render\/epub\/ZipWriter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/render\/epub\/ZipWriter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/render\/epub\/ZipWriter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "laika.parse.code.common" : [{"name" : "laika.parse.code.common.CharLiteral", "shortDescription" : "Configurable base parsers for character literals.", "object" : "laika\/parse\/code\/common\/CharLiteral$.html", "members_object" : [{"label" : "standard", "tail" : "(): CharParser", "member" : "laika.parse.code.common.CharLiteral.standard", "link" : "laika\/parse\/code\/common\/CharLiteral$.html#standard:laika.parse.code.common.CharLiteral.CharParser", "kind" : "def"}, {"label" : "CharParser", "tail" : "", "member" : "laika.parse.code.common.CharLiteral.CharParser", "link" : "laika\/parse\/code\/common\/CharLiteral$.html#CharParserextendsParser[Seq[laika.ast.CodeSpan]]withCodeParserBasewithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/common\/CharLiteral$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/common\/CharLiteral$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/common\/CharLiteral$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/common\/CharLiteral$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/common\/CharLiteral$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/common\/CharLiteral$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/common\/CharLiteral$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/CharLiteral$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/CharLiteral$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/CharLiteral$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/common\/CharLiteral$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/common\/CharLiteral$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/common\/CharLiteral$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/common\/CharLiteral$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/common\/CharLiteral$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/common\/CharLiteral$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/common\/CharLiteral$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/common\/CharLiteral$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/common\/CharLiteral$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.common.CodeParserBase", "members_trait" : [{"label" : "parsers", "tail" : "(): Seq[PrefixedParser[CategorizedCode]]", "member" : "laika.parse.code.common.CodeParserBase.parsers", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#parsers:Seq[laika.parse.text.PrefixedParser[laika.ast.CategorizedCode]]", "kind" : "def"}, {"label" : "startChars", "tail" : "(): NonEmptySet[Char]", "member" : "laika.parse.code.common.CodeParserBase.startChars", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#startChars:cats.data.NonEmptySet[Char]", "kind" : "def"}, {"label" : "++", "tail" : "(other: CodeSpanParser): CodeSpanParser", "member" : "laika.parse.code.CodeSpanParser.++", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#++(other:laika.parse.code.CodeSpanParser):laika.parse.code.CodeSpanParser", "kind" : "def"}, {"label" : "withSource", "tail" : "(): PrefixedParser[(Seq[CodeSpan], String)]", "member" : "laika.parse.text.PrefixedParser.withSource", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#withSource:laika.parse.text.PrefixedParser[(T,String)]", "kind" : "def"}, {"label" : "source", "tail" : "(): PrefixedParser[String]", "member" : "laika.parse.text.PrefixedParser.source", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#source:laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "cursor", "tail" : "(): PrefixedParser[SourceFragment]", "member" : "laika.parse.text.PrefixedParser.cursor", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#cursor:laika.parse.text.PrefixedParser[laika.parse.SourceFragment]", "kind" : "def"}, {"label" : "withCursor", "tail" : "(): PrefixedParser[(Seq[CodeSpan], SourceFragment)]", "member" : "laika.parse.text.PrefixedParser.withCursor", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#withCursor:laika.parse.text.PrefixedParser[(T,laika.parse.SourceFragment)]", "kind" : "def"}, {"label" : "|", "tail" : "(value: String)(ev: <:<[Seq[CodeSpan], String]): PrefixedParser[String]", "member" : "laika.parse.text.PrefixedParser.|", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#|(value:String)(implicitev:T<:<String):laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "|", "tail" : "(p: ⇒ PrefixedParser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.|", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#|[U>:T](p:=>laika.parse.text.PrefixedParser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "orElse", "tail" : "(p: ⇒ PrefixedParser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.orElse", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#orElse[U>:T](p:=>laika.parse.text.PrefixedParser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Seq[CodeSpan], U], error: (Seq[CodeSpan]) ⇒ String): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.collect", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#collect[U](f:PartialFunction[T,U],error:T=>String):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "evalMap", "tail" : "(f: (Seq[CodeSpan]) ⇒ Either[String, U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.evalMap", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#evalMap[U](f:T=>Either[String,U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "as", "tail" : "(v: ⇒ U): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.as", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#as[U](v:=>U):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "^^", "tail" : "(f: (Seq[CodeSpan]) ⇒ U): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.^^", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#^^[U](f:T=>U):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Seq[CodeSpan]) ⇒ U): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.map", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#map[U](f:T=>U):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : ">>", "tail" : "(fq: (Seq[CodeSpan]) ⇒ Parser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.>>", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#>>[U](fq:T=>laika.parse.Parser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Seq[CodeSpan]) ⇒ Parser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.flatMap", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#flatMap[U](f:T=>laika.parse.Parser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "<~", "tail" : "(value: String): PrefixedParser[Seq[CodeSpan]]", "member" : "laika.parse.text.PrefixedParser.<~", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#<~(value:String):laika.parse.text.PrefixedParser[T]", "kind" : "def"}, {"label" : "~>", "tail" : "(value: String): PrefixedParser[String]", "member" : "laika.parse.text.PrefixedParser.~>", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#~>(value:String):laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "~", "tail" : "(value: String): PrefixedParser[~[Seq[CodeSpan], String]]", "member" : "laika.parse.text.PrefixedParser.~", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#~(value:String):laika.parse.text.PrefixedParser[T~String]", "kind" : "def"}, {"label" : "<~", "tail" : "(p: Parser[U]): PrefixedParser[Seq[CodeSpan]]", "member" : "laika.parse.text.PrefixedParser.<~", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#<~[U](p:laika.parse.Parser[U]):laika.parse.text.PrefixedParser[T]", "kind" : "def"}, {"label" : "~>", "tail" : "(p: Parser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.~>", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#~>[U](p:laika.parse.Parser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "~", "tail" : "(p: Parser[U]): PrefixedParser[~[Seq[CodeSpan], U]]", "member" : "laika.parse.text.PrefixedParser.~", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#~[U](p:laika.parse.Parser[U]):laika.parse.text.PrefixedParser[T~U]", "kind" : "def"}, {"label" : "parse", "tail" : "(in: SourceCursor): Parsed[Seq[CodeSpan]]", "member" : "laika.parse.text.PrefixedParser.parse", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#parse(in:laika.parse.SourceCursor):laika.parse.Parsed[T]", "kind" : "def"}, {"label" : "withContext", "tail" : "(): Parser[(Seq[CodeSpan], SourceFragment)]", "member" : "laika.parse.Parser.withContext", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#withContext:laika.parse.Parser[(T,laika.parse.SourceFragment)]", "kind" : "def"}, {"label" : "withPosition", "tail" : "(): Parser[(Seq[CodeSpan], Position)]", "member" : "laika.parse.Parser.withPosition", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#withPosition:laika.parse.Parser[(T,laika.parse.Position)]", "kind" : "def"}, {"label" : "count", "tail" : "(): Parser[Int]", "member" : "laika.parse.Parser.count", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#count:laika.parse.Parser[Int]", "kind" : "def"}, {"label" : "withFailureMessage", "tail" : "(msg: String): Parser[Seq[CodeSpan]]", "member" : "laika.parse.Parser.withFailureMessage", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#withFailureMessage(msg:String):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(pf: PartialFunction[Failure, Parser[U]]): Parser[U]", "member" : "laika.parse.Parser.recoverWith", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#recoverWith[U>:T](pf:PartialFunction[laika.parse.Failure,laika.parse.Parser[U]]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "handleErrorWith", "tail" : "(f: (Failure) ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.handleErrorWith", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#handleErrorWith[U>:T](f:laika.parse.Failure=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "repWith", "tail" : "(next: (U) ⇒ Parser[U]): Parser[List[U]]", "member" : "laika.parse.Parser.repWith", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#repWith[U>:T](next:U=>laika.parse.Parser[U]):laika.parse.Parser[List[U]]", "kind" : "def"}, {"label" : "repUntil", "tail" : "(endCondition: Parser[U]): Parser[(List[Seq[CodeSpan]], Option[U])]", "member" : "laika.parse.Parser.repUntil", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#repUntil[U](endCondition:laika.parse.Parser[U]):laika.parse.Parser[(List[T],Option[U])]", "kind" : "def"}, {"label" : "?", "tail" : "(): Parser[Option[Seq[CodeSpan]]]", "member" : "laika.parse.Parser.?", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#?:laika.parse.Parser[Option[T]]", "kind" : "def"}, {"label" : "+", "tail" : "(): Repeat[Seq[CodeSpan]]", "member" : "laika.parse.Parser.+", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#+:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "*", "tail" : "(): Repeat[Seq[CodeSpan]]", "member" : "laika.parse.Parser.*", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#*:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(separator: String): Repeat[Seq[CodeSpan]]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#rep(separator:String):laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(separator: Parser[Unit]): Repeat[Seq[CodeSpan]]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#rep(separator:laika.parse.Parser[Unit]):laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(): Repeat[Seq[CodeSpan]]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#rep:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "void", "tail" : "(): Parser[Unit]", "member" : "laika.parse.Parser.void", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#void:laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "|", "tail" : "(p: ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.|", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#|[U>:T](p:=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "orElse", "tail" : "(p0: ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.orElse", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#orElse[U>:T](p0:=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "parse", "tail" : "(in: String): Parsed[Seq[CodeSpan]]", "member" : "laika.parse.Parser.parse", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#parse(in:String):laika.parse.Parsed[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/common\/CodeParserBase.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "underlying", "tail" : "(): PrefixedParser[Seq[CodeSpan]]", "member" : "laika.parse.code.common.CodeParserBase.underlying", "link" : "laika\/parse\/code\/common\/CodeParserBase.html#underlying:laika.parse.text.PrefixedParser[Seq[laika.ast.CodeSpan]]", "kind" : "abstract def"}], "shortDescription" : "Convenient base trait that allows for passing the implementinginstances anywhere either a PrefixedParser[Seq[CodeSpan]] ora CodeSpanParser is required for easier composition.", "trait" : "laika\/parse\/code\/common\/CodeParserBase.html", "kind" : "trait"}, {"name" : "laika.parse.code.common.Comment", "shortDescription" : "Configurable base parsers for comments in code blocks.", "object" : "laika\/parse\/code\/common\/Comment$.html", "members_object" : [{"label" : "multiLine", "tail" : "(start: String, end: String): CodeSpanParser", "member" : "laika.parse.code.common.Comment.multiLine", "link" : "laika\/parse\/code\/common\/Comment$.html#multiLine(start:String,end:String):laika.parse.code.CodeSpanParser", "kind" : "def"}, {"label" : "singleLine", "tail" : "(start: String): CodeSpanParser", "member" : "laika.parse.code.common.Comment.singleLine", "link" : "laika\/parse\/code\/common\/Comment$.html#singleLine(start:String):laika.parse.code.CodeSpanParser", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/common\/Comment$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/common\/Comment$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/common\/Comment$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/common\/Comment$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/common\/Comment$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/common\/Comment$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/common\/Comment$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/Comment$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/Comment$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/Comment$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/common\/Comment$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/common\/Comment$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/common\/Comment$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/common\/Comment$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/common\/Comment$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/common\/Comment$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/common\/Comment$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/common\/Comment$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/common\/Comment$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.common.EmbeddedCodeSpans", "shortDescription" : "Factories for creating a span parser that detects other syntax as part of the span.", "object" : "laika\/parse\/code\/common\/EmbeddedCodeSpans$.html", "members_object" : [{"label" : "parser", "tail" : "(textParser: DelimitedText, embedded: Seq[CodeSpanParser], defaultCategories: Set[CodeCategory]): Parser[Seq[CodeSpan]]", "member" : "laika.parse.code.common.EmbeddedCodeSpans.parser", "link" : "laika\/parse\/code\/common\/EmbeddedCodeSpans$.html#parser(textParser:laika.parse.text.DelimitedText,embedded:Seq[laika.parse.code.CodeSpanParser],defaultCategories:Set[laika.parse.code.CodeCategory]):laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "def"}, {"label" : "parser", "tail" : "(textParser: DelimitedText, embedded: SyntaxHighlighter): Parser[Seq[CodeSpan]]", "member" : "laika.parse.code.common.EmbeddedCodeSpans.parser", "link" : "laika\/parse\/code\/common\/EmbeddedCodeSpans$.html#parser(textParser:laika.parse.text.DelimitedText,embedded:laika.bundle.SyntaxHighlighter):laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/common\/EmbeddedCodeSpans$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/common\/EmbeddedCodeSpans$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/common\/EmbeddedCodeSpans$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/common\/EmbeddedCodeSpans$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/common\/EmbeddedCodeSpans$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/common\/EmbeddedCodeSpans$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/common\/EmbeddedCodeSpans$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/EmbeddedCodeSpans$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/EmbeddedCodeSpans$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/EmbeddedCodeSpans$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/common\/EmbeddedCodeSpans$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/common\/EmbeddedCodeSpans$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/common\/EmbeddedCodeSpans$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/common\/EmbeddedCodeSpans$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/common\/EmbeddedCodeSpans$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/common\/EmbeddedCodeSpans$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/common\/EmbeddedCodeSpans$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/common\/EmbeddedCodeSpans$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/common\/EmbeddedCodeSpans$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.common.Identifier", "shortDescription" : "Configurable base parsers for identifiers in code blocks.", "object" : "laika\/parse\/code\/common\/Identifier$.html", "members_object" : [{"label" : "alphaNum", "tail" : "(): IdParser", "member" : "laika.parse.code.common.Identifier.alphaNum", "link" : "laika\/parse\/code\/common\/Identifier$.html#alphaNum:laika.parse.code.common.Identifier.IdParser", "kind" : "def"}, {"label" : "IdParser", "tail" : "", "member" : "laika.parse.code.common.Identifier.IdParser", "link" : "laika\/parse\/code\/common\/Identifier$.html#IdParserextendsParser[laika.ast.CodeSpan]withPrefixedParser[laika.ast.CodeSpan]withCodeSpanParserwithProductwithSerializable", "kind" : "case class"}, {"label" : "upperCaseTypeName", "tail" : ": (String) ⇒ CodeCategory", "member" : "laika.parse.code.common.Identifier.upperCaseTypeName", "link" : "laika\/parse\/code\/common\/Identifier$.html#upperCaseTypeName:String=>laika.parse.code.CodeCategory", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/common\/Identifier$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/common\/Identifier$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/common\/Identifier$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/common\/Identifier$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/common\/Identifier$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/common\/Identifier$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/common\/Identifier$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/Identifier$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/Identifier$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/Identifier$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/common\/Identifier$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/common\/Identifier$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/common\/Identifier$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/common\/Identifier$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/common\/Identifier$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/common\/Identifier$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/common\/Identifier$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/common\/Identifier$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/common\/Identifier$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.common.Keywords", "shortDescription" : "Base parsers for keywords in code blocks.", "object" : "laika\/parse\/code\/common\/Keywords$.html", "members_object" : [{"label" : "apply", "tail" : "(category: CodeCategory)(keyword: String, keywords: String*): CodeSpanParser", "member" : "laika.parse.code.common.Keywords.apply", "link" : "laika\/parse\/code\/common\/Keywords$.html#apply(category:laika.parse.code.CodeCategory)(keyword:String,keywords:String*):laika.parse.code.CodeSpanParser", "kind" : "def"}, {"label" : "apply", "tail" : "(keyword: String, keywords: String*): CodeSpanParser", "member" : "laika.parse.code.common.Keywords.apply", "link" : "laika\/parse\/code\/common\/Keywords$.html#apply(keyword:String,keywords:String*):laika.parse.code.CodeSpanParser", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/common\/Keywords$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/common\/Keywords$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/common\/Keywords$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/common\/Keywords$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/common\/Keywords$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/common\/Keywords$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/common\/Keywords$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/Keywords$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/Keywords$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/Keywords$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/common\/Keywords$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/common\/Keywords$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/common\/Keywords$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/common\/Keywords$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/common\/Keywords$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/common\/Keywords$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/common\/Keywords$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/common\/Keywords$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/common\/Keywords$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.common.NumberLiteral", "shortDescription" : "Configurable base parsers for number literals.", "object" : "laika\/parse\/code\/common\/NumberLiteral$.html", "members_object" : [{"label" : "hexFloat", "tail" : ": NumericParser", "member" : "laika.parse.code.common.NumberLiteral.hexFloat", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#hexFloat:laika.parse.code.common.NumberLiteral.NumericParser", "kind" : "val"}, {"label" : "decimalFloat", "tail" : ": NumericParser", "member" : "laika.parse.code.common.NumberLiteral.decimalFloat", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#decimalFloat:laika.parse.code.common.NumberLiteral.NumericParser", "kind" : "val"}, {"label" : "decimalInt", "tail" : ": NumericParser", "member" : "laika.parse.code.common.NumberLiteral.decimalInt", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#decimalInt:laika.parse.code.common.NumberLiteral.NumericParser", "kind" : "val"}, {"label" : "hex", "tail" : ": NumericParser", "member" : "laika.parse.code.common.NumberLiteral.hex", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#hex:laika.parse.code.common.NumberLiteral.NumericParser", "kind" : "val"}, {"label" : "octal", "tail" : ": NumericParser", "member" : "laika.parse.code.common.NumberLiteral.octal", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#octal:laika.parse.code.common.NumberLiteral.NumericParser", "kind" : "val"}, {"label" : "binary", "tail" : ": NumericParser", "member" : "laika.parse.code.common.NumberLiteral.binary", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#binary:laika.parse.code.common.NumberLiteral.NumericParser", "kind" : "val"}, {"label" : "NumericParser", "tail" : "", "member" : "laika.parse.code.common.NumberLiteral.NumericParser", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#NumericParserextendsParser[Seq[laika.ast.CodeSpan]]withCodeParserBasewithProductwithSerializable", "kind" : "case class"}, {"label" : "DigitParsers", "tail" : "", "member" : "laika.parse.code.common.NumberLiteral.DigitParsers", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#DigitParsers", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/common\/NumberLiteral$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.common.NumericSuffix", "shortDescription" : "Common suffixes for number literal denoting the number type.", "object" : "laika\/parse\/code\/common\/NumericSuffix$.html", "members_object" : [{"label" : "imaginary", "tail" : ": Parser[String]", "member" : "laika.parse.code.common.NumericSuffix.imaginary", "link" : "laika\/parse\/code\/common\/NumericSuffix$.html#imaginary:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "bigInt", "tail" : ": Parser[String]", "member" : "laika.parse.code.common.NumericSuffix.bigInt", "link" : "laika\/parse\/code\/common\/NumericSuffix$.html#bigInt:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "long", "tail" : ": Parser[String]", "member" : "laika.parse.code.common.NumericSuffix.long", "link" : "laika\/parse\/code\/common\/NumericSuffix$.html#long:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "float", "tail" : ": Parser[String]", "member" : "laika.parse.code.common.NumericSuffix.float", "link" : "laika\/parse\/code\/common\/NumericSuffix$.html#float:laika.parse.Parser[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/common\/NumericSuffix$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/common\/NumericSuffix$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/common\/NumericSuffix$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/common\/NumericSuffix$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/common\/NumericSuffix$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/common\/NumericSuffix$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/common\/NumericSuffix$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/NumericSuffix$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/NumericSuffix$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/NumericSuffix$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/common\/NumericSuffix$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/common\/NumericSuffix$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/common\/NumericSuffix$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/common\/NumericSuffix$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/common\/NumericSuffix$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/common\/NumericSuffix$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/common\/NumericSuffix$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/common\/NumericSuffix$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/common\/NumericSuffix$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.common.RegexLiteral", "shortDescription" : "Base parsers for regular expression literals in code blocks.", "object" : "laika\/parse\/code\/common\/RegexLiteral$.html", "members_object" : [{"label" : "standard", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.common.RegexLiteral.standard", "link" : "laika\/parse\/code\/common\/RegexLiteral$.html#standard:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/common\/RegexLiteral$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/common\/RegexLiteral$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/common\/RegexLiteral$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/common\/RegexLiteral$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/common\/RegexLiteral$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/common\/RegexLiteral$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/common\/RegexLiteral$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/RegexLiteral$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/RegexLiteral$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/RegexLiteral$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/common\/RegexLiteral$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/common\/RegexLiteral$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/common\/RegexLiteral$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/common\/RegexLiteral$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/common\/RegexLiteral$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/common\/RegexLiteral$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/common\/RegexLiteral$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/common\/RegexLiteral$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/common\/RegexLiteral$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.common.StringLiteral", "shortDescription" : "Configurable base parsers for string literals.", "object" : "laika\/parse\/code\/common\/StringLiteral$.html", "members_object" : [{"label" : "multiLine", "tail" : "(startDelim: PrefixedParser[String], endDelim: PrefixedParser[String]): StringParser", "member" : "laika.parse.code.common.StringLiteral.multiLine", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#multiLine(startDelim:laika.parse.text.PrefixedParser[String],endDelim:laika.parse.text.PrefixedParser[String]):laika.parse.code.common.StringLiteral.StringParser", "kind" : "def"}, {"label" : "multiLine", "tail" : "(startDelim: String, endDelim: String): StringParser", "member" : "laika.parse.code.common.StringLiteral.multiLine", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#multiLine(startDelim:String,endDelim:String):laika.parse.code.common.StringLiteral.StringParser", "kind" : "def"}, {"label" : "multiLine", "tail" : "(between: String): StringParser", "member" : "laika.parse.code.common.StringLiteral.multiLine", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#multiLine(between:String):laika.parse.code.common.StringLiteral.StringParser", "kind" : "def"}, {"label" : "singleLine", "tail" : "(startDelim: PrefixedParser[String], endDelim: PrefixedParser[String]): StringParser", "member" : "laika.parse.code.common.StringLiteral.singleLine", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#singleLine(startDelim:laika.parse.text.PrefixedParser[String],endDelim:laika.parse.text.PrefixedParser[String]):laika.parse.code.common.StringLiteral.StringParser", "kind" : "def"}, {"label" : "singleLine", "tail" : "(startDelim: String, endDelim: String): StringParser", "member" : "laika.parse.code.common.StringLiteral.singleLine", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#singleLine(startDelim:String,endDelim:String):laika.parse.code.common.StringLiteral.StringParser", "kind" : "def"}, {"label" : "singleLine", "tail" : "(between: Char): StringParser", "member" : "laika.parse.code.common.StringLiteral.singleLine", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#singleLine(between:Char):laika.parse.code.common.StringLiteral.StringParser", "kind" : "def"}, {"label" : "StringParser", "tail" : "", "member" : "laika.parse.code.common.StringLiteral.StringParser", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#StringParserextendsParser[Seq[laika.ast.CodeSpan]]withCodeParserBasewithProductwithSerializable", "kind" : "case class"}, {"label" : "Substitution", "tail" : "", "member" : "laika.parse.code.common.StringLiteral.Substitution", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#Substitution", "kind" : "object"}, {"label" : "Escape", "tail" : "", "member" : "laika.parse.code.common.StringLiteral.Escape", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#Escape", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/common\/StringLiteral$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/common\/StringLiteral$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "laika.parse.code.common.TagBasedFormats", "members_trait" : [{"label" : "elementRest", "tail" : "(tagName: String, embedded: Seq[CodeSpanParser], tagNameCategory: CodeCategory): Parser[Seq[CodeSpan]]", "member" : "laika.parse.code.common.TagBasedFormats.elementRest", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#elementRest(tagName:String,embedded:Seq[laika.parse.code.CodeSpanParser],tagNameCategory:laika.parse.code.CodeCategory):laika.parse.Parser[Seq[laika.ast.CodeSpan]]", "kind" : "def"}, {"label" : "endTag", "tail" : ": TagParser", "member" : "laika.parse.code.common.TagBasedFormats.endTag", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#endTag:laika.parse.code.common.TagParser", "kind" : "val"}, {"label" : "startTag", "tail" : ": TagParser", "member" : "laika.parse.code.common.TagBasedFormats.startTag", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#startTag:laika.parse.code.common.TagParser", "kind" : "val"}, {"label" : "emptyTag", "tail" : ": TagParser", "member" : "laika.parse.code.common.TagBasedFormats.emptyTag", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#emptyTag:laika.parse.code.common.TagParser", "kind" : "val"}, {"label" : "stringWithEntities", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.common.TagBasedFormats.stringWithEntities", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#stringWithEntities:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "string", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.common.TagBasedFormats.string", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#string:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "ref", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.common.TagBasedFormats.ref", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#ref:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "name", "tail" : "(category: CodeCategory): CodeSpanParser", "member" : "laika.parse.code.common.TagBasedFormats.name", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#name(category:laika.parse.code.CodeCategory):laika.parse.code.CodeSpanParser", "kind" : "def"}, {"label" : "comment", "tail" : ": CodeSpanParser", "member" : "laika.parse.code.common.TagBasedFormats.comment", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#comment:laika.parse.code.CodeSpanParser", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/common\/TagBasedFormats.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Configurable base parsers for tag based formats like HTML or XML.", "trait" : "laika\/parse\/code\/common\/TagBasedFormats.html", "kind" : "trait"}, {"name" : "laika.parse.code.common.TagParser", "shortDescription" : "Configurable base parser for tags in formats like HTML or XML.", "object" : "laika\/parse\/code\/common\/TagParser$.html", "members_object" : [{"label" : "apply", "tail" : "(tagCategory: CodeCategory, start: String, end: String): TagParser", "member" : "laika.parse.code.common.TagParser.apply", "link" : "laika\/parse\/code\/common\/TagParser$.html#apply(tagCategory:laika.parse.code.CodeCategory,start:String,end:String):laika.parse.code.common.TagParser", "kind" : "def"}, {"label" : "apply", "tail" : "(tagCategory: CodeCategory, start: String, end: String, tagName: String): TagParser", "member" : "laika.parse.code.common.TagParser.apply", "link" : "laika\/parse\/code\/common\/TagParser$.html#apply(tagCategory:laika.parse.code.CodeCategory,start:String,end:String,tagName:String):laika.parse.code.common.TagParser", "kind" : "def"}, {"label" : "nameParser", "tail" : ": IdParser", "member" : "laika.parse.code.common.TagParser.nameParser", "link" : "laika\/parse\/code\/common\/TagParser$.html#nameParser:laika.parse.code.common.Identifier.IdParser", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/common\/TagParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/common\/TagParser$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/common\/TagParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/common\/TagParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/common\/TagParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/common\/TagParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/common\/TagParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/TagParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/TagParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/TagParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/common\/TagParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/common\/TagParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "laika\/parse\/code\/common\/TagParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/common\/TagParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "laika\/parse\/code\/common\/TagParser$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "laika\/parse\/code\/common\/TagParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/common\/TagParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/common\/TagParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/common\/TagParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "underlying", "tail" : "(): PrefixedParser[Seq[CodeSpan]]", "member" : "laika.parse.code.common.TagParser.underlying", "link" : "laika\/parse\/code\/common\/TagParser.html#underlying:laika.parse.text.PrefixedParser[Seq[laika.ast.CodeSpan]]", "kind" : "def"}, {"label" : "embed", "tail" : "(childSpans: CodeSpanParser*): TagParser", "member" : "laika.parse.code.common.TagParser.embed", "link" : "laika\/parse\/code\/common\/TagParser.html#embed(childSpans:laika.parse.code.CodeSpanParser*):laika.parse.code.common.TagParser", "kind" : "def"}, {"member" : "laika.parse.code.common.TagParser#<init>", "error" : "unsupported entity"}, {"label" : "embedded", "tail" : ": Seq[CodeSpanParser]", "member" : "laika.parse.code.common.TagParser.embedded", "link" : "laika\/parse\/code\/common\/TagParser.html#embedded:Seq[laika.parse.code.CodeSpanParser]", "kind" : "val"}, {"label" : "tagName", "tail" : ": PrefixedParser[String]", "member" : "laika.parse.code.common.TagParser.tagName", "link" : "laika\/parse\/code\/common\/TagParser.html#tagName:laika.parse.text.PrefixedParser[String]", "kind" : "val"}, {"label" : "end", "tail" : ": String", "member" : "laika.parse.code.common.TagParser.end", "link" : "laika\/parse\/code\/common\/TagParser.html#end:String", "kind" : "val"}, {"label" : "start", "tail" : ": String", "member" : "laika.parse.code.common.TagParser.start", "link" : "laika\/parse\/code\/common\/TagParser.html#start:String", "kind" : "val"}, {"label" : "tagCategory", "tail" : ": (String) ⇒ CodeCategory", "member" : "laika.parse.code.common.TagParser.tagCategory", "link" : "laika\/parse\/code\/common\/TagParser.html#tagCategory:String=>laika.parse.code.CodeCategory", "kind" : "val"}, {"label" : "parsers", "tail" : "(): Seq[PrefixedParser[CategorizedCode]]", "member" : "laika.parse.code.common.CodeParserBase.parsers", "link" : "laika\/parse\/code\/common\/TagParser.html#parsers:Seq[laika.parse.text.PrefixedParser[laika.ast.CategorizedCode]]", "kind" : "def"}, {"label" : "startChars", "tail" : "(): NonEmptySet[Char]", "member" : "laika.parse.code.common.CodeParserBase.startChars", "link" : "laika\/parse\/code\/common\/TagParser.html#startChars:cats.data.NonEmptySet[Char]", "kind" : "def"}, {"label" : "++", "tail" : "(other: CodeSpanParser): CodeSpanParser", "member" : "laika.parse.code.CodeSpanParser.++", "link" : "laika\/parse\/code\/common\/TagParser.html#++(other:laika.parse.code.CodeSpanParser):laika.parse.code.CodeSpanParser", "kind" : "def"}, {"label" : "withSource", "tail" : "(): PrefixedParser[(Seq[CodeSpan], String)]", "member" : "laika.parse.text.PrefixedParser.withSource", "link" : "laika\/parse\/code\/common\/TagParser.html#withSource:laika.parse.text.PrefixedParser[(T,String)]", "kind" : "def"}, {"label" : "source", "tail" : "(): PrefixedParser[String]", "member" : "laika.parse.text.PrefixedParser.source", "link" : "laika\/parse\/code\/common\/TagParser.html#source:laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "cursor", "tail" : "(): PrefixedParser[SourceFragment]", "member" : "laika.parse.text.PrefixedParser.cursor", "link" : "laika\/parse\/code\/common\/TagParser.html#cursor:laika.parse.text.PrefixedParser[laika.parse.SourceFragment]", "kind" : "def"}, {"label" : "withCursor", "tail" : "(): PrefixedParser[(Seq[CodeSpan], SourceFragment)]", "member" : "laika.parse.text.PrefixedParser.withCursor", "link" : "laika\/parse\/code\/common\/TagParser.html#withCursor:laika.parse.text.PrefixedParser[(T,laika.parse.SourceFragment)]", "kind" : "def"}, {"label" : "|", "tail" : "(value: String)(ev: <:<[Seq[CodeSpan], String]): PrefixedParser[String]", "member" : "laika.parse.text.PrefixedParser.|", "link" : "laika\/parse\/code\/common\/TagParser.html#|(value:String)(implicitev:T<:<String):laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "|", "tail" : "(p: ⇒ PrefixedParser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.|", "link" : "laika\/parse\/code\/common\/TagParser.html#|[U>:T](p:=>laika.parse.text.PrefixedParser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "orElse", "tail" : "(p: ⇒ PrefixedParser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.orElse", "link" : "laika\/parse\/code\/common\/TagParser.html#orElse[U>:T](p:=>laika.parse.text.PrefixedParser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[Seq[CodeSpan], U], error: (Seq[CodeSpan]) ⇒ String): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.collect", "link" : "laika\/parse\/code\/common\/TagParser.html#collect[U](f:PartialFunction[T,U],error:T=>String):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "evalMap", "tail" : "(f: (Seq[CodeSpan]) ⇒ Either[String, U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.evalMap", "link" : "laika\/parse\/code\/common\/TagParser.html#evalMap[U](f:T=>Either[String,U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "as", "tail" : "(v: ⇒ U): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.as", "link" : "laika\/parse\/code\/common\/TagParser.html#as[U](v:=>U):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "^^", "tail" : "(f: (Seq[CodeSpan]) ⇒ U): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.^^", "link" : "laika\/parse\/code\/common\/TagParser.html#^^[U](f:T=>U):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Seq[CodeSpan]) ⇒ U): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.map", "link" : "laika\/parse\/code\/common\/TagParser.html#map[U](f:T=>U):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : ">>", "tail" : "(fq: (Seq[CodeSpan]) ⇒ Parser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.>>", "link" : "laika\/parse\/code\/common\/TagParser.html#>>[U](fq:T=>laika.parse.Parser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Seq[CodeSpan]) ⇒ Parser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.flatMap", "link" : "laika\/parse\/code\/common\/TagParser.html#flatMap[U](f:T=>laika.parse.Parser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "<~", "tail" : "(value: String): PrefixedParser[Seq[CodeSpan]]", "member" : "laika.parse.text.PrefixedParser.<~", "link" : "laika\/parse\/code\/common\/TagParser.html#<~(value:String):laika.parse.text.PrefixedParser[T]", "kind" : "def"}, {"label" : "~>", "tail" : "(value: String): PrefixedParser[String]", "member" : "laika.parse.text.PrefixedParser.~>", "link" : "laika\/parse\/code\/common\/TagParser.html#~>(value:String):laika.parse.text.PrefixedParser[String]", "kind" : "def"}, {"label" : "~", "tail" : "(value: String): PrefixedParser[~[Seq[CodeSpan], String]]", "member" : "laika.parse.text.PrefixedParser.~", "link" : "laika\/parse\/code\/common\/TagParser.html#~(value:String):laika.parse.text.PrefixedParser[T~String]", "kind" : "def"}, {"label" : "<~", "tail" : "(p: Parser[U]): PrefixedParser[Seq[CodeSpan]]", "member" : "laika.parse.text.PrefixedParser.<~", "link" : "laika\/parse\/code\/common\/TagParser.html#<~[U](p:laika.parse.Parser[U]):laika.parse.text.PrefixedParser[T]", "kind" : "def"}, {"label" : "~>", "tail" : "(p: Parser[U]): PrefixedParser[U]", "member" : "laika.parse.text.PrefixedParser.~>", "link" : "laika\/parse\/code\/common\/TagParser.html#~>[U](p:laika.parse.Parser[U]):laika.parse.text.PrefixedParser[U]", "kind" : "def"}, {"label" : "~", "tail" : "(p: Parser[U]): PrefixedParser[~[Seq[CodeSpan], U]]", "member" : "laika.parse.text.PrefixedParser.~", "link" : "laika\/parse\/code\/common\/TagParser.html#~[U](p:laika.parse.Parser[U]):laika.parse.text.PrefixedParser[T~U]", "kind" : "def"}, {"label" : "parse", "tail" : "(in: SourceCursor): Parsed[Seq[CodeSpan]]", "member" : "laika.parse.text.PrefixedParser.parse", "link" : "laika\/parse\/code\/common\/TagParser.html#parse(in:laika.parse.SourceCursor):laika.parse.Parsed[T]", "kind" : "def"}, {"label" : "withContext", "tail" : "(): Parser[(Seq[CodeSpan], SourceFragment)]", "member" : "laika.parse.Parser.withContext", "link" : "laika\/parse\/code\/common\/TagParser.html#withContext:laika.parse.Parser[(T,laika.parse.SourceFragment)]", "kind" : "def"}, {"label" : "withPosition", "tail" : "(): Parser[(Seq[CodeSpan], Position)]", "member" : "laika.parse.Parser.withPosition", "link" : "laika\/parse\/code\/common\/TagParser.html#withPosition:laika.parse.Parser[(T,laika.parse.Position)]", "kind" : "def"}, {"label" : "count", "tail" : "(): Parser[Int]", "member" : "laika.parse.Parser.count", "link" : "laika\/parse\/code\/common\/TagParser.html#count:laika.parse.Parser[Int]", "kind" : "def"}, {"label" : "withFailureMessage", "tail" : "(msg: String): Parser[Seq[CodeSpan]]", "member" : "laika.parse.Parser.withFailureMessage", "link" : "laika\/parse\/code\/common\/TagParser.html#withFailureMessage(msg:String):laika.parse.Parser[T]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(pf: PartialFunction[Failure, Parser[U]]): Parser[U]", "member" : "laika.parse.Parser.recoverWith", "link" : "laika\/parse\/code\/common\/TagParser.html#recoverWith[U>:T](pf:PartialFunction[laika.parse.Failure,laika.parse.Parser[U]]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "handleErrorWith", "tail" : "(f: (Failure) ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.handleErrorWith", "link" : "laika\/parse\/code\/common\/TagParser.html#handleErrorWith[U>:T](f:laika.parse.Failure=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "repWith", "tail" : "(next: (U) ⇒ Parser[U]): Parser[List[U]]", "member" : "laika.parse.Parser.repWith", "link" : "laika\/parse\/code\/common\/TagParser.html#repWith[U>:T](next:U=>laika.parse.Parser[U]):laika.parse.Parser[List[U]]", "kind" : "def"}, {"label" : "repUntil", "tail" : "(endCondition: Parser[U]): Parser[(List[Seq[CodeSpan]], Option[U])]", "member" : "laika.parse.Parser.repUntil", "link" : "laika\/parse\/code\/common\/TagParser.html#repUntil[U](endCondition:laika.parse.Parser[U]):laika.parse.Parser[(List[T],Option[U])]", "kind" : "def"}, {"label" : "?", "tail" : "(): Parser[Option[Seq[CodeSpan]]]", "member" : "laika.parse.Parser.?", "link" : "laika\/parse\/code\/common\/TagParser.html#?:laika.parse.Parser[Option[T]]", "kind" : "def"}, {"label" : "+", "tail" : "(): Repeat[Seq[CodeSpan]]", "member" : "laika.parse.Parser.+", "link" : "laika\/parse\/code\/common\/TagParser.html#+:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "*", "tail" : "(): Repeat[Seq[CodeSpan]]", "member" : "laika.parse.Parser.*", "link" : "laika\/parse\/code\/common\/TagParser.html#*:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(separator: String): Repeat[Seq[CodeSpan]]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/code\/common\/TagParser.html#rep(separator:String):laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(separator: Parser[Unit]): Repeat[Seq[CodeSpan]]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/code\/common\/TagParser.html#rep(separator:laika.parse.Parser[Unit]):laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "rep", "tail" : "(): Repeat[Seq[CodeSpan]]", "member" : "laika.parse.Parser.rep", "link" : "laika\/parse\/code\/common\/TagParser.html#rep:laika.parse.combinator.Repeat[T]", "kind" : "def"}, {"label" : "void", "tail" : "(): Parser[Unit]", "member" : "laika.parse.Parser.void", "link" : "laika\/parse\/code\/common\/TagParser.html#void:laika.parse.Parser[Unit]", "kind" : "def"}, {"label" : "|", "tail" : "(p: ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.|", "link" : "laika\/parse\/code\/common\/TagParser.html#|[U>:T](p:=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "orElse", "tail" : "(p0: ⇒ Parser[U]): Parser[U]", "member" : "laika.parse.Parser.orElse", "link" : "laika\/parse\/code\/common\/TagParser.html#orElse[U>:T](p0:=>laika.parse.Parser[U]):laika.parse.Parser[U]", "kind" : "def"}, {"label" : "parse", "tail" : "(in: String): Parsed[Seq[CodeSpan]]", "member" : "laika.parse.Parser.parse", "link" : "laika\/parse\/code\/common\/TagParser.html#parse(in:String):laika.parse.Parsed[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "laika\/parse\/code\/common\/TagParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "laika\/parse\/code\/common\/TagParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "laika\/parse\/code\/common\/TagParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "laika\/parse\/code\/common\/TagParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "laika\/parse\/code\/common\/TagParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "laika\/parse\/code\/common\/TagParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "laika\/parse\/code\/common\/TagParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/TagParser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/TagParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "laika\/parse\/code\/common\/TagParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "laika\/parse\/code\/common\/TagParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "laika\/parse\/code\/common\/TagParser.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "laika\/parse\/code\/common\/TagParser.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "laika\/parse\/code\/common\/TagParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "laika\/parse\/code\/common\/TagParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "laika\/parse\/code\/common\/TagParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "laika\/parse\/code\/common\/TagParser.html", "kind" : "case class"}]};